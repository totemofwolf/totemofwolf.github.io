{
	"meta": {
		"exported_on": 1547279007016,
		"version": "008"
	},
	"data": {
		"posts": [
			{
				"id": "cjqtpipem0002skeoi3ytmumi",
				"title": "centos lvm usage",
				"slug": "centos-lvm-usage",
				"markdown": "\n- ref: https://blog.csdn.net/u012439646/article/details/73380197\n\n----\n\n## 使用lvm\n\n``` bash\n# fdisk -l\nDisk /dev/vdc: 107.4 GB, 107374182400 bytes, 209715200 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\n\n# pvcreate /dev/vdc\nPhysical volume \"/dev/vdc\" successfully created.\n# pvs\nPV VG Fmt Attr PSize PFree\n/dev/vdc lvm2 --- 100.00g 100.00g\n\n# vgcreate vg0 /dev/vdc\nVolume group \"vg0\" successfully created\n# vgs\nVG #PV #LV #SN Attr VSize VFree\nvg0 1 0 0 wz--n- <100.00g <100.00g\n\n# lvcreate -n lv0 -l 100%FREE vg0\nLogical volume \"lv0\" created.\n# lvs\nLV VG Attr LSize Pool Origin Data% Meta% Move Log Cpy%Sync Convert\nlv0 vg0 -wi-a----- <100.00g\n\n# fdisk -l\nDisk /dev/mapper/vg0-lv0: 107.4 GB, 107369988096 bytes, 209707008 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\n\n# mkfs.xfs /dev/mapper/vg0-lv0\nmeta-data=/dev/mapper/vg0-lv0 isize=512 agcount=4, agsize=6553344 blks\n= sectsz=512 attr=2, projid32bit=1\n= crc=1 finobt=0, sparse=0\ndata = bsize=4096 blocks=26213376, imaxpct=25\n= sunit=0 swidth=0 blks\nnaming =version 2 bsize=4096 ascii-ci=0 ftype=1\nlog =internal log bsize=4096 blocks=12799, version=2\n= sectsz=512 sunit=0 blks, lazy-count=1\nrealtime =none extsz=4096 blocks=0, rtextents=0\n\n# mount -t xfs /dev/mapper/vg0-lv0 /program1\n# mount\n/dev/mapper/vg0-lv0 on /program1 type xfs (rw,relatime,attr2,inode64,noquota)\n```\n\n## lvm动态扩容\n\n``` bash\n\n# df -h\nFilesystem Size Used Avail Use% Mounted on\n/dev/mapper/vg0-lv0 100G 80G 21G 80% /production\n\n- 格式化磁盘\n# fdisk /dev/vdc\nWelcome to fdisk (util-linux 2.23.2).\nChanges will remain in memory only, until you decide to write them.\nBe careful before using the write command.\nDevice does not contain a recognized partition table\nBuilding a new DOS disklabel with disk identifier 0x8198bb09.\nCommand (m for help): n\nPartition type:\np primary (0 primary, 0 extended, 4 free)\ne extended\nSelect (default p): p\nPartition number (1-4, default 1): 1\nFirst sector (2048-209715199, default 2048):\nUsing default value 2048\nLast sector, +sectors or +size{K,M,G} (2048-209715199, default 209715199):\nUsing default value 209715199\nPartition 1 of type Linux and of size 100 GiB is set\nCommand (m for help): wq\nThe partition table has been altered!\nCalling ioctl() to re-read partition table.\nSyncing disks.\n\n# fdisk -l\nDisk /dev/vdc: 107.4 GB, 107374182400 bytes, 209715200 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x8198bb09\nDevice Boot Start End Blocks Id System\n/dev/vdc1 2048 209715199 104856576 83 Linux\n\n# pvcreate /dev/vdc1\nPhysical volume \"/dev/vdc1\" successfully created.\n\n# vgdisplay\n--- Volume group ---\nVG Name vg0\nSystem ID\nFormat lvm2\nMetadata Areas 1\nMetadata Sequence No 2\nVG Access read/write\nVG Status resizable\nMAX LV 0\nCur LV 1\nOpen LV 1\nMax PV 0\nCur PV 1\nAct PV 1\nVG Size <100.00 GiB\nPE Size 4.00 MiB\nTotal PE 25599\nAlloc PE / Size 25550 / 99.80 GiB\nFree PE / Size 49 / 196.00 MiB\nVG UUID IN0nD4-p7Hs-WHS1-ABGF-yv6r-NzJa-WAbNbr\n\n# vgextend vg0 /dev/vdc1\nVolume group \"vg0\" successfully extended\n\n# vgdisplay\n--- Volume group ---\nVG Name vg0\nSystem ID\nFormat lvm2\nMetadata Areas 2\nMetadata Sequence No 3\nVG Access read/write\nVG Status resizable\nMAX LV 0\nCur LV 1\nOpen LV 1\nMax PV 0\nCur PV 2\nAct PV 2\nVG Size 199.99 GiB\nPE Size 4.00 MiB\nTotal PE 51198\nAlloc PE / Size 25550 / 99.80 GiB\nFree PE / Size 25648 / <100.19 GiB\nVG UUID IN0nD4-p7Hs-WHS1-ABGF-yv6r-NzJa-WAbNbr\n\n# lvdisplay\n--- Logical volume ---\nLV Path /dev/vg0/lv0\nLV Name lv0\nVG Name vg0\nLV UUID VPxQt7-Ryf0-scQb-u39k-AtH6-Un6i-F9nbro\nLV Write Access read/write\nLV Creation host, time wiki-jira-nexus-gitlab-29-202, 2018-05-25 16:55:10 +0800\nLV Status available\n# open 1\nLV Size 99.80 GiB\nCurrent LE 25550\nSegments 1\nAllocation inherit\nRead ahead sectors auto\n- currently set to 256\nBlock device 252:0\n\n\n# lvextend -l +100%FREE /dev/vg0/lv0\nSize of logical volume vg0/lv0 changed from 99.80 GiB (25550 extents) to 199.99 GiB (51198 extents).\nLogical volume vg0/lv0 successfully resized.\n# lvdisplay\n--- Logical volume ---\nLV Path /dev/vg0/lv0\nLV Name lv0\nVG Name vg0\nLV UUID VPxQt7-Ryf0-scQb-u39k-AtH6-Un6i-F9nbro\nLV Write Access read/write\nLV Creation host, time wiki-jira-nexus-gitlab-29-202, 2018-05-25 16:55:10 +0800\nLV Status available\n# open 1\nLV Size 199.99 GiB\nCurrent LE 51198\nSegments 2\nAllocation inherit\nRead ahead sectors auto\n- currently set to 256\nBlock device 252:0\n\n查看磁盘格式：\n# mount\n/dev/mapper/vg0-lv0 on /production type xfs\n\n- xfs扩容\n# xfs_growfs /dev/vg0/lv0\nmeta-data=/dev/mapper/vg0-lv0 isize=512 agcount=4, agsize=6540800 blks\n= sectsz=512 attr=2, projid32bit=1\n= crc=1 finobt=0 spinodes=0\ndata = bsize=4096 blocks=26163200, imaxpct=25\n= sunit=0 swidth=0 blks\nnaming =version 2 bsize=4096 ascii-ci=0 ftype=1\nlog =internal bsize=4096 blocks=12775, version=2\n= sectsz=512 sunit=0 blks, lazy-count=1\nrealtime =none extsz=4096 blocks=0, rtextents=0\ndata blocks changed from 26163200 to 52426752\n\n# df -h | grep /production\n/dev/mapper/vg0-lv0 200G 80G 121G 40% /production\n```\n",
				"html": "<ul>\n<li>ref: <a href=\"https://blog.csdn.net/u012439646/article/details/73380197\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/u012439646/article/details/73380197</a></li>\n</ul>\n<hr>\n<h2 id=\"使用lvm\"><a href=\"#使用lvm\" class=\"headerlink\" title=\"使用lvm\"></a>使用lvm</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># fdisk -l</span></span><br><span class=\"line\">Disk /dev/vdc: 107.4 GB, 107374182400 bytes, 209715200 sectors</span><br><span class=\"line\">Units = sectors of 1 * 512 = 512 bytes</span><br><span class=\"line\">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class=\"line\">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pvcreate /dev/vdc</span></span><br><span class=\"line\">Physical volume <span class=\"string\">\"/dev/vdc\"</span> successfully created.</span><br><span class=\"line\"><span class=\"comment\"># pvs</span></span><br><span class=\"line\">PV VG Fmt Attr PSize PFree</span><br><span class=\"line\">/dev/vdc lvm2 --- 100.00g 100.00g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vgcreate vg0 /dev/vdc</span></span><br><span class=\"line\">Volume group <span class=\"string\">\"vg0\"</span> successfully created</span><br><span class=\"line\"><span class=\"comment\"># vgs</span></span><br><span class=\"line\">VG <span class=\"comment\">#PV #LV #SN Attr VSize VFree</span></span><br><span class=\"line\">vg0 1 0 0 wz--n- &lt;100.00g &lt;100.00g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># lvcreate -n lv0 -l 100%FREE vg0</span></span><br><span class=\"line\">Logical volume <span class=\"string\">\"lv0\"</span> created.</span><br><span class=\"line\"><span class=\"comment\"># lvs</span></span><br><span class=\"line\">LV VG Attr LSize Pool Origin Data% Meta% Move Log Cpy%Sync Convert</span><br><span class=\"line\">lv0 vg0 -wi<span class=\"_\">-a</span>----- &lt;100.00g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># fdisk -l</span></span><br><span class=\"line\">Disk /dev/mapper/vg0-lv0: 107.4 GB, 107369988096 bytes, 209707008 sectors</span><br><span class=\"line\">Units = sectors of 1 * 512 = 512 bytes</span><br><span class=\"line\">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class=\"line\">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mkfs.xfs /dev/mapper/vg0-lv0</span></span><br><span class=\"line\">meta-data=/dev/mapper/vg0-lv0 isize=512 agcount=4, agsize=6553344 blks</span><br><span class=\"line\">= sectsz=512 attr=2, projid32bit=1</span><br><span class=\"line\">= crc=1 finobt=0, sparse=0</span><br><span class=\"line\">data = bsize=4096 blocks=26213376, imaxpct=25</span><br><span class=\"line\">= sunit=0 swidth=0 blks</span><br><span class=\"line\">naming =version 2 bsize=4096 ascii-ci=0 ftype=1</span><br><span class=\"line\"><span class=\"built_in\">log</span> =internal <span class=\"built_in\">log</span> bsize=4096 blocks=12799, version=2</span><br><span class=\"line\">= sectsz=512 sunit=0 blks, lazy-count=1</span><br><span class=\"line\">realtime =none extsz=4096 blocks=0, rtextents=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mount -t xfs /dev/mapper/vg0-lv0 /program1</span></span><br><span class=\"line\"><span class=\"comment\"># mount</span></span><br><span class=\"line\">/dev/mapper/vg0-lv0 on /program1 <span class=\"built_in\">type</span> xfs (rw,relatime,attr2,inode64,noquota)</span><br></pre></td></tr></table></figure>\n<h2 id=\"lvm动态扩容\"><a href=\"#lvm动态扩容\" class=\"headerlink\" title=\"lvm动态扩容\"></a>lvm动态扩容</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># df -h</span></span><br><span class=\"line\">Filesystem Size Used Avail Use% Mounted on</span><br><span class=\"line\">/dev/mapper/vg0-lv0 100G 80G 21G 80% /production</span><br><span class=\"line\"></span><br><span class=\"line\">- 格式化磁盘</span><br><span class=\"line\"><span class=\"comment\"># fdisk /dev/vdc</span></span><br><span class=\"line\">Welcome to fdisk (util-linux 2.23.2).</span><br><span class=\"line\">Changes will remain <span class=\"keyword\">in</span> memory only, until you decide to write them.</span><br><span class=\"line\">Be careful before using the write <span class=\"built_in\">command</span>.</span><br><span class=\"line\">Device does not contain a recognized partition table</span><br><span class=\"line\">Building a new DOS disklabel with disk identifier 0x8198bb09.</span><br><span class=\"line\">Command (m <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>): n</span><br><span class=\"line\">Partition <span class=\"built_in\">type</span>:</span><br><span class=\"line\">p primary (0 primary, 0 extended, 4 free)</span><br><span class=\"line\">e extended</span><br><span class=\"line\">Select (default p): p</span><br><span class=\"line\">Partition number (1-4, default 1): 1</span><br><span class=\"line\">First sector (2048-209715199, default 2048):</span><br><span class=\"line\">Using default value 2048</span><br><span class=\"line\">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-209715199, default 209715199):</span><br><span class=\"line\">Using default value 209715199</span><br><span class=\"line\">Partition 1 of <span class=\"built_in\">type</span> Linux and of size 100 GiB is <span class=\"built_in\">set</span></span><br><span class=\"line\">Command (m <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>): wq</span><br><span class=\"line\">The partition table has been altered!</span><br><span class=\"line\">Calling ioctl() to re-read partition table.</span><br><span class=\"line\">Syncing disks.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># fdisk -l</span></span><br><span class=\"line\">Disk /dev/vdc: 107.4 GB, 107374182400 bytes, 209715200 sectors</span><br><span class=\"line\">Units = sectors of 1 * 512 = 512 bytes</span><br><span class=\"line\">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class=\"line\">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class=\"line\">Disk label <span class=\"built_in\">type</span>: dos</span><br><span class=\"line\">Disk identifier: 0x8198bb09</span><br><span class=\"line\">Device Boot Start End Blocks Id System</span><br><span class=\"line\">/dev/vdc1 2048 209715199 104856576 83 Linux</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pvcreate /dev/vdc1</span></span><br><span class=\"line\">Physical volume <span class=\"string\">\"/dev/vdc1\"</span> successfully created.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vgdisplay</span></span><br><span class=\"line\">--- Volume group ---</span><br><span class=\"line\">VG Name vg0</span><br><span class=\"line\">System ID</span><br><span class=\"line\">Format lvm2</span><br><span class=\"line\">Metadata Areas 1</span><br><span class=\"line\">Metadata Sequence No 2</span><br><span class=\"line\">VG Access <span class=\"built_in\">read</span>/write</span><br><span class=\"line\">VG Status resizable</span><br><span class=\"line\">MAX LV 0</span><br><span class=\"line\">Cur LV 1</span><br><span class=\"line\">Open LV 1</span><br><span class=\"line\">Max PV 0</span><br><span class=\"line\">Cur PV 1</span><br><span class=\"line\">Act PV 1</span><br><span class=\"line\">VG Size &lt;100.00 GiB</span><br><span class=\"line\">PE Size 4.00 MiB</span><br><span class=\"line\">Total PE 25599</span><br><span class=\"line\">Alloc PE / Size 25550 / 99.80 GiB</span><br><span class=\"line\">Free PE / Size 49 / 196.00 MiB</span><br><span class=\"line\">VG UUID IN0nD4-p7Hs-WHS1-ABGF-yv6r-NzJa-WAbNbr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vgextend vg0 /dev/vdc1</span></span><br><span class=\"line\">Volume group <span class=\"string\">\"vg0\"</span> successfully extended</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vgdisplay</span></span><br><span class=\"line\">--- Volume group ---</span><br><span class=\"line\">VG Name vg0</span><br><span class=\"line\">System ID</span><br><span class=\"line\">Format lvm2</span><br><span class=\"line\">Metadata Areas 2</span><br><span class=\"line\">Metadata Sequence No 3</span><br><span class=\"line\">VG Access <span class=\"built_in\">read</span>/write</span><br><span class=\"line\">VG Status resizable</span><br><span class=\"line\">MAX LV 0</span><br><span class=\"line\">Cur LV 1</span><br><span class=\"line\">Open LV 1</span><br><span class=\"line\">Max PV 0</span><br><span class=\"line\">Cur PV 2</span><br><span class=\"line\">Act PV 2</span><br><span class=\"line\">VG Size 199.99 GiB</span><br><span class=\"line\">PE Size 4.00 MiB</span><br><span class=\"line\">Total PE 51198</span><br><span class=\"line\">Alloc PE / Size 25550 / 99.80 GiB</span><br><span class=\"line\">Free PE / Size 25648 / &lt;100.19 GiB</span><br><span class=\"line\">VG UUID IN0nD4-p7Hs-WHS1-ABGF-yv6r-NzJa-WAbNbr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># lvdisplay</span></span><br><span class=\"line\">--- Logical volume ---</span><br><span class=\"line\">LV Path /dev/vg0/lv0</span><br><span class=\"line\">LV Name lv0</span><br><span class=\"line\">VG Name vg0</span><br><span class=\"line\">LV UUID VPxQt7-Ryf0-scQb-u39k-AtH6-Un6i-F9nbro</span><br><span class=\"line\">LV Write Access <span class=\"built_in\">read</span>/write</span><br><span class=\"line\">LV Creation host, time wiki-jira-nexus-gitlab-29-202, 2018-05-25 16:55:10 +0800</span><br><span class=\"line\">LV Status available</span><br><span class=\"line\"><span class=\"comment\"># open 1</span></span><br><span class=\"line\">LV Size 99.80 GiB</span><br><span class=\"line\">Current LE 25550</span><br><span class=\"line\">Segments 1</span><br><span class=\"line\">Allocation inherit</span><br><span class=\"line\">Read ahead sectors auto</span><br><span class=\"line\">- currently <span class=\"built_in\">set</span> to 256</span><br><span class=\"line\">Block device 252:0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># lvextend -l +100%FREE /dev/vg0/lv0</span></span><br><span class=\"line\">Size of logical volume vg0/lv0 changed from 99.80 GiB (25550 extents) to 199.99 GiB (51198 extents).</span><br><span class=\"line\">Logical volume vg0/lv0 successfully resized.</span><br><span class=\"line\"><span class=\"comment\"># lvdisplay</span></span><br><span class=\"line\">--- Logical volume ---</span><br><span class=\"line\">LV Path /dev/vg0/lv0</span><br><span class=\"line\">LV Name lv0</span><br><span class=\"line\">VG Name vg0</span><br><span class=\"line\">LV UUID VPxQt7-Ryf0-scQb-u39k-AtH6-Un6i-F9nbro</span><br><span class=\"line\">LV Write Access <span class=\"built_in\">read</span>/write</span><br><span class=\"line\">LV Creation host, time wiki-jira-nexus-gitlab-29-202, 2018-05-25 16:55:10 +0800</span><br><span class=\"line\">LV Status available</span><br><span class=\"line\"><span class=\"comment\"># open 1</span></span><br><span class=\"line\">LV Size 199.99 GiB</span><br><span class=\"line\">Current LE 51198</span><br><span class=\"line\">Segments 2</span><br><span class=\"line\">Allocation inherit</span><br><span class=\"line\">Read ahead sectors auto</span><br><span class=\"line\">- currently <span class=\"built_in\">set</span> to 256</span><br><span class=\"line\">Block device 252:0</span><br><span class=\"line\"></span><br><span class=\"line\">查看磁盘格式：</span><br><span class=\"line\"><span class=\"comment\"># mount</span></span><br><span class=\"line\">/dev/mapper/vg0-lv0 on /production <span class=\"built_in\">type</span> xfs</span><br><span class=\"line\"></span><br><span class=\"line\">- xfs扩容</span><br><span class=\"line\"><span class=\"comment\"># xfs_growfs /dev/vg0/lv0</span></span><br><span class=\"line\">meta-data=/dev/mapper/vg0-lv0 isize=512 agcount=4, agsize=6540800 blks</span><br><span class=\"line\">= sectsz=512 attr=2, projid32bit=1</span><br><span class=\"line\">= crc=1 finobt=0 spinodes=0</span><br><span class=\"line\">data = bsize=4096 blocks=26163200, imaxpct=25</span><br><span class=\"line\">= sunit=0 swidth=0 blks</span><br><span class=\"line\">naming =version 2 bsize=4096 ascii-ci=0 ftype=1</span><br><span class=\"line\"><span class=\"built_in\">log</span> =internal bsize=4096 blocks=12775, version=2</span><br><span class=\"line\">= sectsz=512 sunit=0 blks, lazy-count=1</span><br><span class=\"line\">realtime =none extsz=4096 blocks=0, rtextents=0</span><br><span class=\"line\">data blocks changed from 26163200 to 52426752</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># df -h | grep /production</span></span><br><span class=\"line\">/dev/mapper/vg0-lv0 200G 80G 121G 40% /production</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 0,
				"status": "published",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1547308800000,
				"created_by": 2,
				"updated_at": 1547312340000,
				"updated_by": 2,
				"published_at": 1547308800000,
				"published_by": 2
			},
			{
				"id": "cjqtputip0003skeomsg7qtee",
				"title": "build ruby 2.2.x on centos7",
				"slug": "build-ruby-2-2-x-on-centos7",
				"markdown": "\n- ref: https://www.unixhot.com/article/111\n\n----\n\n## ruby 2.2.x rpm package\n\n``` bash\n$ mkdir -pv rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\n$ wget http://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.9.tar.gz -P rpmbuild/SOURCES\n$ wget https://raw.githubusercontent.com/tjinjin/automate-ruby-rpm/master/ruby22x.spec -P rpmbuild/SPECS\n$ rpmbuild -bb rpmbuild/SPECS/ruby22x.spec\n# yum -y localinstall rpmbuild/RPMS/x86_64/ruby-2.2.9-1.el7.centos.x86_64.rpm\n```\n",
				"html": "<ul>\n<li>ref: <a href=\"https://www.unixhot.com/article/111\" target=\"_blank\" rel=\"noopener\">https://www.unixhot.com/article/111</a></li>\n</ul>\n<hr>\n<h2 id=\"ruby-2-2-x-rpm-package\"><a href=\"#ruby-2-2-x-rpm-package\" class=\"headerlink\" title=\"ruby 2.2.x rpm package\"></a>ruby 2.2.x rpm package</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mkdir -pv rpmbuild/&#123;BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS&#125;</span><br><span class=\"line\">$ wget http://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.9.tar.gz -P rpmbuild/SOURCES</span><br><span class=\"line\">$ wget https://raw.githubusercontent.com/tjinjin/automate-ruby-rpm/master/ruby22x.spec -P rpmbuild/SPECS</span><br><span class=\"line\">$ rpmbuild -bb rpmbuild/SPECS/ruby22x.spec</span><br><span class=\"line\"><span class=\"comment\"># yum -y localinstall rpmbuild/RPMS/x86_64/ruby-2.2.9-1.el7.centos.x86_64.rpm</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 0,
				"status": "published",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1547308800000,
				"created_by": 2,
				"updated_at": 1547312578000,
				"updated_by": 2,
				"published_at": 1547308800000,
				"published_by": 2
			},
			{
				"id": "cjqtpzwov0004skeocu0pb8f0",
				"title": "redis cluster on centos7",
				"slug": "redis-cluster-on-centos7",
				"markdown": "\n- ref:\n\nhttps://www.jianshu.com/p/d562ce7c344b\n\nruby 2.2.x on centos7\n\nhttps://blog.csdn.net/liu0808/article/details/80098568\n\n----\n\n## 初始化\n\n``` bash\n- 启动\n$ for i in `ls`; do screen -dmS redis_$i /usr/local/bin/redis-server $i/redis.conf; done\n\n$ pwd\n/tmp/redis-4.0.12/src\n\n- 本机集群：\n$ ./redis-trib.rb create --replicas 1 127.0.0.1:6379 127.0.0.1:6380 127.0.0.1:6381 127.0.0.1:6382 127.0.0.1:6383 127.0.0.1:6384\n>>> Creating cluster\n>>> Performing hash slots allocation on 6 nodes...\nUsing 3 masters:\n127.0.0.1:6379\n127.0.0.1:6380\n127.0.0.1:6381\nAdding replica 127.0.0.1:6383 to 127.0.0.1:6379\nAdding replica 127.0.0.1:6384 to 127.0.0.1:6380\nAdding replica 127.0.0.1:6382 to 127.0.0.1:6381\n>>> Trying to optimize slaves allocation for anti-affinity\n[WARNING] Some slaves are in the same host as their master\nM: 09d82a93f51a0ece0082f7ea76cd9b24d6f187fa 127.0.0.1:6379\nslots:0-5460 (5461 slots) master\nM: 784850a914cb7c815633d948548df92742286e59 127.0.0.1:6380\nslots:5461-10922 (5462 slots) master\nM: b8fad58d5b99a12e26005fffab0ac4ec398ba6d7 127.0.0.1:6381\nslots:10923-16383 (5461 slots) master\nS: 505e30fd3e2bfc2169fbe716fae91a5074098aa1 127.0.0.1:6382\nreplicates b8fad58d5b99a12e26005fffab0ac4ec398ba6d7\nS: d7668819f6336df0486de69bae820901c7c745ec 127.0.0.1:6383\nreplicates 09d82a93f51a0ece0082f7ea76cd9b24d6f187fa\nS: fe028a59e6c053c30b7b6d0665f16f42bbb27f6c 127.0.0.1:6384\nreplicates 784850a914cb7c815633d948548df92742286e59\nCan I set the above configuration? (type 'yes' to accept): yes\n>>> Nodes configuration updated\n>>> Assign a different config epoch to each node\n>>> Sending CLUSTER MEET messages to join the cluster\nWaiting for the cluster to join.....\n>>> Performing Cluster Check (using node 127.0.0.1:6379)\nM: 09d82a93f51a0ece0082f7ea76cd9b24d6f187fa 127.0.0.1:6379\nslots:0-5460 (5461 slots) master\n1 additional replica(s)\nS: d7668819f6336df0486de69bae820901c7c745ec 127.0.0.1:6383\nslots: (0 slots) slave\nreplicates 09d82a93f51a0ece0082f7ea76cd9b24d6f187fa\nM: 784850a914cb7c815633d948548df92742286e59 127.0.0.1:6380\nslots:5461-10922 (5462 slots) master\n1 additional replica(s)\nM: b8fad58d5b99a12e26005fffab0ac4ec398ba6d7 127.0.0.1:6381\nslots:10923-16383 (5461 slots) master\n1 additional replica(s)\nS: 505e30fd3e2bfc2169fbe716fae91a5074098aa1 127.0.0.1:6382\nslots: (0 slots) slave\nreplicates b8fad58d5b99a12e26005fffab0ac4ec398ba6d7\nS: fe028a59e6c053c30b7b6d0665f16f42bbb27f6c 127.0.0.1:6384\nslots: (0 slots) slave\nreplicates 784850a914cb7c815633d948548df92742286e59\n[OK] All nodes agree about slots configuration.\n>>> Check for open slots...\n>>> Check slots coverage...\n[OK] All 16384 slots covered.\n\n## 连接测试\n$ redis-cli -c\n127.0.0.1:6379> set x y\n-> Redirected to slot [16287] located at 127.0.0.1:6381\nOK\n127.0.0.1:6381> get x\n\"y\"\n```\n",
				"html": "<ul>\n<li>ref:</li>\n</ul>\n<p><a href=\"https://www.jianshu.com/p/d562ce7c344b\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/d562ce7c344b</a></p>\n<p>ruby 2.2.x on centos7</p>\n<p><a href=\"https://blog.csdn.net/liu0808/article/details/80098568\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/liu0808/article/details/80098568</a></p>\n<hr>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">- 启动</span><br><span class=\"line\">$ <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> `ls`; <span class=\"keyword\">do</span> screen -dmS redis_<span class=\"variable\">$i</span> /usr/<span class=\"built_in\">local</span>/bin/redis-server <span class=\"variable\">$i</span>/redis.conf; <span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">pwd</span></span><br><span class=\"line\">/tmp/redis-4.0.12/src</span><br><span class=\"line\"></span><br><span class=\"line\">- 本机集群：</span><br><span class=\"line\">$ ./redis-trib.rb create --replicas 1 127.0.0.1:6379 127.0.0.1:6380 127.0.0.1:6381 127.0.0.1:6382 127.0.0.1:6383 127.0.0.1:6384</span><br><span class=\"line\">&gt;&gt;&gt; Creating cluster</span><br><span class=\"line\">&gt;&gt;&gt; Performing <span class=\"built_in\">hash</span> slots allocation on 6 nodes...</span><br><span class=\"line\">Using 3 masters:</span><br><span class=\"line\">127.0.0.1:6379</span><br><span class=\"line\">127.0.0.1:6380</span><br><span class=\"line\">127.0.0.1:6381</span><br><span class=\"line\">Adding replica 127.0.0.1:6383 to 127.0.0.1:6379</span><br><span class=\"line\">Adding replica 127.0.0.1:6384 to 127.0.0.1:6380</span><br><span class=\"line\">Adding replica 127.0.0.1:6382 to 127.0.0.1:6381</span><br><span class=\"line\">&gt;&gt;&gt; Trying to optimize slaves allocation <span class=\"keyword\">for</span> anti-affinity</span><br><span class=\"line\">[WARNING] Some slaves are <span class=\"keyword\">in</span> the same host as their master</span><br><span class=\"line\">M: 09d82a93f51a0ece0082f7ea76cd9b24d6f187fa 127.0.0.1:6379</span><br><span class=\"line\">slots:0-5460 (5461 slots) master</span><br><span class=\"line\">M: 784850a914cb7c815633d948548df92742286e59 127.0.0.1:6380</span><br><span class=\"line\">slots:5461-10922 (5462 slots) master</span><br><span class=\"line\">M: b8fad58d5b99a12e26005fffab0ac4ec398ba6d7 127.0.0.1:6381</span><br><span class=\"line\">slots:10923-16383 (5461 slots) master</span><br><span class=\"line\">S: 505e30fd3e2bfc2169fbe716fae91a5074098aa1 127.0.0.1:6382</span><br><span class=\"line\">replicates b8fad58d5b99a12e26005fffab0ac4ec398ba6d7</span><br><span class=\"line\">S: d7668819f6336df0486de69bae820901c7c745ec 127.0.0.1:6383</span><br><span class=\"line\">replicates 09d82a93f51a0ece0082f7ea76cd9b24d6f187fa</span><br><span class=\"line\">S: fe028a59e6c053c30b7b6d0665f16f42bbb27f6c 127.0.0.1:6384</span><br><span class=\"line\">replicates 784850a914cb7c815633d948548df92742286e59</span><br><span class=\"line\">Can I <span class=\"built_in\">set</span> the above configuration? (<span class=\"built_in\">type</span> <span class=\"string\">'yes'</span> to accept): yes</span><br><span class=\"line\">&gt;&gt;&gt; Nodes configuration updated</span><br><span class=\"line\">&gt;&gt;&gt; Assign a different config epoch to each node</span><br><span class=\"line\">&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span><br><span class=\"line\">Waiting <span class=\"keyword\">for</span> the cluster to join.....</span><br><span class=\"line\">&gt;&gt;&gt; Performing Cluster Check (using node 127.0.0.1:6379)</span><br><span class=\"line\">M: 09d82a93f51a0ece0082f7ea76cd9b24d6f187fa 127.0.0.1:6379</span><br><span class=\"line\">slots:0-5460 (5461 slots) master</span><br><span class=\"line\">1 additional replica(s)</span><br><span class=\"line\">S: d7668819f6336df0486de69bae820901c7c745ec 127.0.0.1:6383</span><br><span class=\"line\">slots: (0 slots) slave</span><br><span class=\"line\">replicates 09d82a93f51a0ece0082f7ea76cd9b24d6f187fa</span><br><span class=\"line\">M: 784850a914cb7c815633d948548df92742286e59 127.0.0.1:6380</span><br><span class=\"line\">slots:5461-10922 (5462 slots) master</span><br><span class=\"line\">1 additional replica(s)</span><br><span class=\"line\">M: b8fad58d5b99a12e26005fffab0ac4ec398ba6d7 127.0.0.1:6381</span><br><span class=\"line\">slots:10923-16383 (5461 slots) master</span><br><span class=\"line\">1 additional replica(s)</span><br><span class=\"line\">S: 505e30fd3e2bfc2169fbe716fae91a5074098aa1 127.0.0.1:6382</span><br><span class=\"line\">slots: (0 slots) slave</span><br><span class=\"line\">replicates b8fad58d5b99a12e26005fffab0ac4ec398ba6d7</span><br><span class=\"line\">S: fe028a59e6c053c30b7b6d0665f16f42bbb27f6c 127.0.0.1:6384</span><br><span class=\"line\">slots: (0 slots) slave</span><br><span class=\"line\">replicates 784850a914cb7c815633d948548df92742286e59</span><br><span class=\"line\">[OK] All nodes agree about slots configuration.</span><br><span class=\"line\">&gt;&gt;&gt; Check <span class=\"keyword\">for</span> open slots...</span><br><span class=\"line\">&gt;&gt;&gt; Check slots coverage...</span><br><span class=\"line\">[OK] All 16384 slots covered.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 连接测试</span></span><br><span class=\"line\">$ redis-cli -c</span><br><span class=\"line\">127.0.0.1:6379&gt; <span class=\"built_in\">set</span> x y</span><br><span class=\"line\">-&gt; Redirected to slot [16287] located at 127.0.0.1:6381</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6381&gt; get x</span><br><span class=\"line\"><span class=\"string\">\"y\"</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 0,
				"status": "published",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1547308800000,
				"created_by": 2,
				"updated_at": 1547312854000,
				"updated_by": 2,
				"published_at": 1547308800000,
				"published_by": 2
			},
			{
				"id": "cjqu8hps70005skeolozt06le",
				"title": "build shadowsocks-libev rpm pkgs on centos7",
				"slug": "build-shadowsocks-libev-rpm-pkgs-on-centos7",
				"markdown": "\n``` bash\n\n# shadowsocks-libev.src.rpm\ncd /usr/local/src/shadowsocks-libev/rpm/\n./genrpm.sh\n$ rpm -ivh SRPMS/shadowsocks-libev-3.2.3-1.10.gitbbc4206.src.rpm\nUpdating / installing...\n   1:shadowsocks-libev-3.2.3-1.10.gitb################################# [100%]\n\n# libsodium\ncd /usr/local/src/\ngit clone https://github.com/totemofwolf/rpmbuild4all.git\ncd rpmbuild4all/\nwget -c https://download.libsodium.org/libsodium/releases/libsodium-1.0.16.tar.gz -O ~/rpmbuild/SOURCES/libsodium-1.0.16.tar.gz\nrpmbuild -bb ./SPECS/libsodium.spec\nsudo rpm -ivh rpmbuild/RPMS/x86_64/libsodium-devel-1.0.16-1.el7.x86_64.rpm\n\n#\nrpmbuild -bb ~/rpmbuild/SPECS/shadowsocks-libev.spec\nsudo yum localinstall shadowsocks-libev-zsh-completion-3.2.3-1.10.gitbbc4206.el7.x86_64.rpm shadowsocks-libev-3.2.3-1.10.gitbbc4206.el7.x86_64.rpm -y\n\n```\n",
				"html": "<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># shadowsocks-libev.src.rpm</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src/shadowsocks-libev/rpm/</span><br><span class=\"line\">./genrpm.sh</span><br><span class=\"line\">$ rpm -ivh SRPMS/shadowsocks-libev-3.2.3-1.10.gitbbc4206.src.rpm</span><br><span class=\"line\">Updating / installing...</span><br><span class=\"line\">   1:shadowsocks-libev-3.2.3-1.10.gitb<span class=\"comment\">################################# [100%]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># libsodium</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src/</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/totemofwolf/rpmbuild4all.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> rpmbuild4all/</span><br><span class=\"line\">wget -c https://download.libsodium.org/libsodium/releases/libsodium-1.0.16.tar.gz -O ~/rpmbuild/SOURCES/libsodium-1.0.16.tar.gz</span><br><span class=\"line\">rpmbuild -bb ./SPECS/libsodium.spec</span><br><span class=\"line\">sudo rpm -ivh rpmbuild/RPMS/x86_64/libsodium-devel-1.0.16-1.el7.x86_64.rpm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">rpmbuild -bb ~/rpmbuild/SPECS/shadowsocks-libev.spec</span><br><span class=\"line\">sudo yum localinstall shadowsocks-libev-zsh-completion-3.2.3-1.10.gitbbc4206.el7.x86_64.rpm shadowsocks-libev-3.2.3-1.10.gitbbc4206.el7.x86_64.rpm -y</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 0,
				"status": "published",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1547308800000,
				"created_by": 2,
				"updated_at": 1547345408000,
				"updated_by": 2,
				"published_at": 1547308800000,
				"published_by": 2
			},
			{
				"id": "cjqu9sgz20006skeoah0bhqx5",
				"title": "nginx proxy_pass keepalive settings",
				"slug": "nginx-proxy-pass-keepalive-settings",
				"markdown": "\n----\n\n## 抓包\n\n``` bash\n# ngrep -d lo -W byline 'GET /' 'tcp and dst port 6000'\n```\n\n### 原始返回\n\n``` bash\nT 127.0.0.1:33310 -> 127.0.0.1:6000 [AP]\nGET / HTTP/1.1.\nHost: www.example.com.\nX-Real-IP: 1.2.3.4\nX-Forwarded-For: 1.2.3.4\n--> Connection: close.\nupgrade-insecure-requests: 1.\n\n# 默认发送header Connection: close.\n```\n\n## 打开upstream的keepalive\n\n``` bash\nupstream node_svr_learntadotcom {\nserver 127.0.0.1:6000;\n--> keepalive 32;\n}\n```\n\n### 返回内容没有变化\n\n``` bash\nT 127.0.0.1:33956 -> 127.0.0.1:6000 [AP]\nGET / HTTP/1.1.\nHost: www.example.com.\nX-Real-IP: 1.2.3.4\nX-Forwarded-For: 1.2.3.4\n--> Connection: close.\nupgrade-insecure-requests: 1.\n```\n\n## 打开location中的proxy_http_version\n\n``` bash\n{\nproxy_http_version 1.1;\n}\n```\n\n### 问题依旧\n\n``` bash\nT 127.0.0.1:34746 -> 127.0.0.1:6000 [AP]\nGET / HTTP/1.1.\nHost: www.example.com.\nX-Real-IP: 1.2.3.4\nX-Forwarded-For: 1.2.3.4\n--> Connection: close.\nupgrade-insecure-requests: 1.\n```\n\n## 打开location中的proxy_set_header\n\n``` bash\n{\nproxy_set_header Connection \"\";\n}\n```\n\n### 返回不再包含Connection: close，打开长连接成功\n\n``` bash\nT 127.0.0.1:35342 -> 127.0.0.1:6000 [AP]\nGET / HTTP/1.1.\nHost: www.example.com.\nX-Real-IP: 1.2.3.4\nX-Forwarded-For: 1.2.3.4\ncache-control: max-age=0.\nupgrade-insecure-requests: 1.\n```\n\n### 短时间内再次刷新\n\n``` bash\nT 127.0.0.1:35342 -> 127.0.0.1:6000 [AP]\nGET / HTTP/1.1.\nHost: www.example.com.\nX-Real-IP: 1.2.3.4.\nX-Forwarded-For: 1.2.3.4.\ncache-control: max-age=0.\nupgrade-insecure-requests: 1.\n\n# client端的端口依旧是35342\n```",
				"html": "<hr>\n<h2 id=\"抓包\"><a href=\"#抓包\" class=\"headerlink\" title=\"抓包\"></a>抓包</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ngrep -d lo -W byline 'GET /' 'tcp and dst port 6000'</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"原始返回\"><a href=\"#原始返回\" class=\"headerlink\" title=\"原始返回\"></a>原始返回</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">T 127.0.0.1:33310 -&gt; 127.0.0.1:6000 [AP]</span><br><span class=\"line\">GET / HTTP/1.1.</span><br><span class=\"line\">Host: www.example.com.</span><br><span class=\"line\">X-Real-IP: 1.2.3.4</span><br><span class=\"line\">X-Forwarded-For: 1.2.3.4</span><br><span class=\"line\">--&gt; Connection: close.</span><br><span class=\"line\">upgrade-insecure-requests: 1.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 默认发送header Connection: close.</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"打开upstream的keepalive\"><a href=\"#打开upstream的keepalive\" class=\"headerlink\" title=\"打开upstream的keepalive\"></a>打开upstream的keepalive</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">upstream node_svr_learntadotcom &#123;</span><br><span class=\"line\">server 127.0.0.1:6000;</span><br><span class=\"line\">--&gt; keepalive 32;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"返回内容没有变化\"><a href=\"#返回内容没有变化\" class=\"headerlink\" title=\"返回内容没有变化\"></a>返回内容没有变化</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">T 127.0.0.1:33956 -&gt; 127.0.0.1:6000 [AP]</span><br><span class=\"line\">GET / HTTP/1.1.</span><br><span class=\"line\">Host: www.example.com.</span><br><span class=\"line\">X-Real-IP: 1.2.3.4</span><br><span class=\"line\">X-Forwarded-For: 1.2.3.4</span><br><span class=\"line\">--&gt; Connection: close.</span><br><span class=\"line\">upgrade-insecure-requests: 1.</span><br></pre></td></tr></table></figure>\n<h2 id=\"打开location中的proxy-http-version\"><a href=\"#打开location中的proxy-http-version\" class=\"headerlink\" title=\"打开location中的proxy_http_version\"></a>打开location中的proxy_http_version</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">proxy_http_version 1.1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"问题依旧\"><a href=\"#问题依旧\" class=\"headerlink\" title=\"问题依旧\"></a>问题依旧</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">T 127.0.0.1:34746 -&gt; 127.0.0.1:6000 [AP]</span><br><span class=\"line\">GET / HTTP/1.1.</span><br><span class=\"line\">Host: www.example.com.</span><br><span class=\"line\">X-Real-IP: 1.2.3.4</span><br><span class=\"line\">X-Forwarded-For: 1.2.3.4</span><br><span class=\"line\">--&gt; Connection: close.</span><br><span class=\"line\">upgrade-insecure-requests: 1.</span><br></pre></td></tr></table></figure>\n<h2 id=\"打开location中的proxy-set-header\"><a href=\"#打开location中的proxy-set-header\" class=\"headerlink\" title=\"打开location中的proxy_set_header\"></a>打开location中的proxy_set_header</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">proxy_set_header Connection <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"返回不再包含Connection-close，打开长连接成功\"><a href=\"#返回不再包含Connection-close，打开长连接成功\" class=\"headerlink\" title=\"返回不再包含Connection: close，打开长连接成功\"></a>返回不再包含Connection: close，打开长连接成功</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">T 127.0.0.1:35342 -&gt; 127.0.0.1:6000 [AP]</span><br><span class=\"line\">GET / HTTP/1.1.</span><br><span class=\"line\">Host: www.example.com.</span><br><span class=\"line\">X-Real-IP: 1.2.3.4</span><br><span class=\"line\">X-Forwarded-For: 1.2.3.4</span><br><span class=\"line\">cache-control: max-age=0.</span><br><span class=\"line\">upgrade-insecure-requests: 1.</span><br></pre></td></tr></table></figure>\n<h3 id=\"短时间内再次刷新\"><a href=\"#短时间内再次刷新\" class=\"headerlink\" title=\"短时间内再次刷新\"></a>短时间内再次刷新</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">T 127.0.0.1:35342 -&gt; 127.0.0.1:6000 [AP]</span><br><span class=\"line\">GET / HTTP/1.1.</span><br><span class=\"line\">Host: www.example.com.</span><br><span class=\"line\">X-Real-IP: 1.2.3.4.</span><br><span class=\"line\">X-Forwarded-For: 1.2.3.4.</span><br><span class=\"line\">cache-control: max-age=0.</span><br><span class=\"line\">upgrade-insecure-requests: 1.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># client端的端口依旧是35342</span></span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 0,
				"status": "published",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1547308800000,
				"created_by": 2,
				"updated_at": 1547346642000,
				"updated_by": 2,
				"published_at": 1547308800000,
				"published_by": 2
			},
			{
				"id": "cjqt7pqgw0000skeosvxci6fg",
				"title": "Build openvpn",
				"slug": "Build-openvpn",
				"markdown": "\n# openvpn搭建\n\n\n## 应用场景\n\n- **外出人员访问内部资源：ERP，OA，文件共享，wiki。**\n- **运维访问IDC机房**\n\n## 协议说明\n>\n\tL2TP：PPTP的后续版本，两个端点之间的单一隧道，支持隧道验证，没有与生俱来的加密和保密支持，通常需要和IPSEC配合使用。\n\tSSL VPN：使用TLSv1、SSLv3，不是一个基于web的软件，不与ipsec及其他的VPN软件兼容，C/S架构，单独使用openVPN客户端。\n\t对于认证，OpenVPN提供了两种认证方法：基于用户名/密码的认证与SSL证书认证。适合外出移动或家庭办公用户考虑使用。\n\tIPSEC：适合于企业异地总分公司或多个IDC机房间不间断按需连接。ipsec VPN的开源实现openswan\n\n\n## 使用方案建议：\n\t1、不差钱，可以选择硬件产品\n\t2、互联网公司、开源、省钱\n\t3、个人：拨号选择openVPN；不希望使用拨号客户端，则选择pptp；多个企业间或IDC机房互联，选择ipsecVPN或者openVPN\n\n基于一个单一的IP端口，默认1194，默认使用udp协议通讯，建议使用TCP协议工作。\n\ntcpdump\nroute\n\n## 环境准备\n\n### 安装基础\n\n> YUM安装\n\n----------\n\n\n``` bash\n# yum install openssl openssl-devel openvpn openvpn-auth-ldap lzo -y\n\n========================================================================================================================\n Package                           Arch                   Version                            Repository            Size\n========================================================================================================================\nInstalling:\n lzo                               x86_64                 2.03-3.1.el6_5.1                   base                  55 k\n openvpn                           x86_64                 2.3.14-1.el6                       epel                 424 k\n openvpn-auth-ldap                 x86_64                 2.0.3-6.el6                        epel                  42 k\nInstalling for dependencies:\n libobjc                           x86_64                 4.4.7-17.el6                       base                  92 k\n pkcs11-helper                     x86_64                 1.11-3.el6                         epel                  54 k\n```\n\n----\n\n> 自编译安装\n\n- 安装依赖【推荐】\n``` bash\nyum install -y lzo lzo-devel openssl openssl-devel pam pam-devel rpm-build\nyum install -y pkcs11-helper pkcs11-helper-devel\n```\n\n- 下载安装压缩库【可选】\n\n``` bash\nwget http://www.oberhumer.com/opensource/lzo/download/lzo-2.06.tar.gz\ntar zxf lzo-2.06.tar.gz\ncd lzo-2.06\n./configure\nmake\nmake install clean\ncd ..\n```\n\n- 下载安装openvpn\n\n``` bash\nwget http://swupdate.openvpn.org/community/releases/openvpn-2.2.2.tar.gz\nrm -rf openvpn-2.2.2 && tar zxf openvpn-2.2.2.tar.gz\ncd openvpn-2.2.2\n./configure --with-lzo-headers=/usr/local/include --with-lzo-lib=/usr/local/lib\nmake -j4\nmake install\n```\n\n*Tips*\n> make: *** No targets specified and no makefile found.  Stop.\n``` bash\nyum reinstall openssl* -y\n```\n> 如果发现yum install安装也不行，需要执行`yum reinstall`\n\n*查看安装结果*\n``` bash\n# which openvpn\n/usr/local/sbin/openvpn\n```\n\n### 配置openvpn server，并建立CA证书\n``` bash\ncd /usr/local/src\ncd openvpn-2.2.2/easy-rsa/2.0\ncp -ap vars{,.orig}\nls -la vars*\n```\n\n```\n# vim vars\n>  # modify by lang\nexport KEY_COUNTRY=\"CN\"\nexport KEY_PROVINCE=\"BJ\"\nexport KEY_CITY=\"Beijing\"\nexport KEY_ORG=\"oldboy\"\nexport KEY_EMAIL=\"543683682@qq.com\"\nexport KEY_EMAIL=543683682@qq.com\nexport KEY_CN=91taogu\nexport KEY_NAME=91taogu\nexport KEY_OU=91taogu\nexport PKCS11_MODULE_PATH=changeme\nexport PKCS11_PIN=1234\n# modify by lang\n\n# source vars\n# ./clean-all\n# ./build-ca\n\nGenerating a 1024 bit RSA private key\n............++++++\n........................................++++++\nwriting new private key to 'ca.key'\n-----\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [CN]:\nState or Province Name (full name) [BJ]:\nLocality Name (eg, city) [Beijing]:\nOrganization Name (eg, company) [oldboy]:91taogu\nOrganizational Unit Name (eg, section) [91taogu]:\nCommon Name (eg, your name or your server's hostname) [91taogu]:\nName [91taogu]:\nEmail Address [543683682@qq.com]:\n```\n\n```\nll keys/\n> total 12\n-rw-r--r-- 1 root root 1330 Jul 18 21:01 ca.crt <-证书\n-rw------- 1 root root  920 Jul 18 21:01 ca.key <-RSA key\n-rw-r--r-- 1 root root    0 Jul 18 21:00 index.txt\n-rw-r--r-- 1 root root    3 Jul 18 21:00 serial\n```\n\n### 生成vpn服务器端证书和密钥文件\n- [x] ./build-key-server server\n``` bash\nGenerating a 1024 bit RSA private key\n....++++++\n..........++++++\nwriting new private key to 'server.key'\n-----\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [CN]:\nState or Province Name (full name) [BJ]:\nLocality Name (eg, city) [Beijing]:\nOrganization Name (eg, company) [oldboy]:91taogu\nOrganizational Unit Name (eg, section) [91taogu]:\nCommon Name (eg, your name or your server's hostname) [server]:\nName [91taogu]:\nEmail Address [543683682@qq.com]:\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:1234Qwer\nAn optional company name []:91taogu\nUsing configuration from /usr/local/src/openvpn-2.2.2/easy-rsa/2.0/openssl-1.0.0.cnf\nCheck that the request matches the signature\nSignature ok\nThe Subject's Distinguished Name is as follows\ncountryName           :PRINTABLE:'CN'\nstateOrProvinceName   :PRINTABLE:'BJ'\nlocalityName          :PRINTABLE:'Beijing'\norganizationName      :PRINTABLE:'91taogu'\norganizationalUnitName:PRINTABLE:'91taogu'\ncommonName            :PRINTABLE:'server'\nname                  :PRINTABLE:'91taogu'\nemailAddress          :IA5STRING:'543683682@qq.com'\nCertificate is to be certified until Jul 15 13:15:47 2025 GMT (3650 days)\nSign the certificate? [y/n]:y\n\n\n1 out of 1 certificate requests certified, commit? [y/n]y\nWrite out database with 1 new entries\nData Base Updated\n```\n\n- [x] 检测结果\n``` bash\nll keys/\ntotal 40\n-rw-r--r-- 1 root root 4029 Jul 18 21:15 01.pem\n-rw-r--r-- 1 root root 1330 Jul 18 21:01 ca.crt\n-rw------- 1 root root  920 Jul 18 21:01 ca.key\n-rw-r--r-- 1 root root  124 Jul 18 21:15 index.txt\n-rw-r--r-- 1 root root   21 Jul 18 21:15 index.txt.attr\n-rw-r--r-- 1 root root    0 Jul 18 21:00 index.txt.old\n-rw-r--r-- 1 root root    3 Jul 18 21:15 serial\n-rw-r--r-- 1 root root    3 Jul 18 21:00 serial.old\n-rw-r--r-- 1 root root 4029 Jul 18 21:15 server.crt\n-rw-r--r-- 1 root root  777 Jul 18 21:15 server.csr\n-rw------- 1 root root  916 Jul 18 21:15 server.key\n```\n\n### 生成vpn客户端证书和密钥文件方案\n- [x] 无密码\n``` bash\n# ./build-key test\nGenerating a 1024 bit RSA private key\n.........................................................++++++\n.......++++++\nwriting new private key to 'test.key'\n-----\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [CN]:\nState or Province Name (full name) [BJ]:\nLocality Name (eg, city) [Beijing]:\nOrganization Name (eg, company) [oldboy]:91taogu\nOrganizational Unit Name (eg, section) [91taogu]:\nCommon Name (eg, your name or your server's hostname) [test]:\nName [91taogu]:\nEmail Address [543683682@qq.com]:\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:1234Qwer\nAn optional company name []:\nUsing configuration from /usr/local/src/openvpn-2.2.2/easy-rsa/2.0/openssl-1.0.0.cnf\nCheck that the request matches the signature\nSignature ok\nThe Subject's Distinguished Name is as follows\ncountryName           :PRINTABLE:'CN'\nstateOrProvinceName   :PRINTABLE:'BJ'\nlocalityName          :PRINTABLE:'Beijing'\norganizationName      :PRINTABLE:'91taogu'\norganizationalUnitName:PRINTABLE:'91taogu'\ncommonName            :PRINTABLE:'test'\nname                  :PRINTABLE:'91taogu'\nemailAddress          :IA5STRING:'543683682@qq.com'\nCertificate is to be certified until Jul 15 13:23:41 2025 GMT (3650 days)\nSign the certificate? [y/n]:y\n\n\n1 out of 1 certificate requests certified, commit? [y/n]y\nWrite out database with 1 new entries\nData Base Updated\n```\n\n- [x] 带密码\n``` bash\n./build-key-pass ett\nGenerating a 1024 bit RSA private key\n....................................++++++\n.++++++\nwriting new private key to 'ett.key'\nEnter PEM pass phrase: <-1234Qwer\nVerifying - Enter PEM pass phrase:\n-----\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [CN]:\nState or Province Name (full name) [BJ]:\nLocality Name (eg, city) [Beijing]:\nOrganization Name (eg, company) [oldboy]:91taogu\nOrganizational Unit Name (eg, section) [91taogu]:\nCommon Name (eg, your name or your server's hostname) [ett]:\nName [91taogu]:\nEmail Address [543683682@qq.com]:\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:1234Qwer\nAn optional company name []:\nUsing configuration from /usr/local/src/openvpn-2.2.2/easy-rsa/2.0/openssl-1.0.0.cnf\nCheck that the request matches the signature\nSignature ok\nThe Subject's Distinguished Name is as follows\ncountryName           :PRINTABLE:'CN'\nstateOrProvinceName   :PRINTABLE:'BJ'\nlocalityName          :PRINTABLE:'Beijing'\norganizationName      :PRINTABLE:'91taogu'\norganizationalUnitName:PRINTABLE:'91taogu'\ncommonName            :PRINTABLE:'ett'\nname                  :PRINTABLE:'91taogu'\nemailAddress          :IA5STRING:'543683682@qq.com'\nCertificate is to be certified until Jul 15 13:26:38 2025 GMT (3650 days)\nSign the certificate? [y/n]:y\n\n\n1 out of 1 certificate requests certified, commit? [y/n]y\nWrite out database with 1 new entries\nData Base Updated\n```\n\n### 生成vpn密钥协议交换文件\n``` bash\n./build-dh\n```\n> 生成结果：\n``` \nll keys/dh1024.pem\n-rw-r--r-- 1 root root 245 Jul 18 21:29 keys/dh1024.pem\n```\n\n### 详解服务器及客户端的证书各文件用途\n> | 文件名 | 被依赖 | 目的 | 保密 |\nca.cert | server+all clts | RootCACert | NO\nca.key key | signing mach only | RootCAkey | YES\ndh{n}.pem | server only | DH parameters | NO\nserver.crt | server only | Svr Cert | NO\nserver.key | server only | Svr key | Yes\n\ntest.crt | test only | clt Cert | NO\ntest.key | test only | clt key | YES\nett.crt | ett only | ett Cert | NO\nett.key | ett only | ett key | YES\n\n\n#### 生成防止恶意攻击文件\n```\nopenvpn --genkey --secret keys/ta.key\nll keys/ta.key\n```\n\n#### 重要命令说明\n> * vars 用来创建环境变量，设置所有需要的变量脚本\n> * clean-all 清除文件及目录\n> * build-ca 脚本生成ca证书\n> * build-dh 脚本生成dh文件\n> * buid-key-server 生成服务器端密钥\n> * build-key 生成客户端密钥\n> * build-key-pass 带密码\n> * pkitool 脚本直接使用vars环境变量设置，直接生成证书（非交互）\n\n#### 详解openvpn服务端重要配置参数并实践\n``` bash\nmkdir -p /etc/openvpn\ncd /usr/local/src/openvpn-2.2.2/easy-rsa/2.0\ncp -ap keys /etc/openvpn\ncd /usr/local/src/openvpn-2.2.2/sample-config-files\ncp -afv client.conf server.conf /etc/openvpn/\n```\n\n``` bash\ntree /etc/openvpn/\n/etc/openvpn/\n├── 01.pem\n├── 02.pem\n├── 03.pem\n├── ca.crt\n├── ca.key\n├── client.conf\n├── dh1024.pem\n├── ett.crt\n├── ett.csr\n├── ett.key\n├── index.txt\n├── index.txt.attr\n├── index.txt.attr.old\n├── index.txt.old\n├── serial\n├── serial.old\n├── server.conf\n├── server.crt\n├── server.csr\n├── server.key\n├── ta.key\n├── test.crt\n├── test.csr\n└── test.key\n```\n\n``` bash\ncd /etc/openvpn/\ncp -ap server.conf{,.orig}\ngrep -vE \";|#|^$\" server.conf\n\nport 1194\nproto udp\ndev tun\nca ca.crt\ncert server.crt\ndh dh1024.pem\nserver 10.8.0.0 255.255.255.0\nifconfig-pool-persist ipp.txt\nkeepalive 10 120\ncomp-lzo\npersist-key\npersist-tun\nstatus openvpn-status.log\nverb 3\n```\n\n#### server.conf配置案例\n```\nlocal 10.0.0.28 openvpn监听的外网地址10.0.0.28:1194\n\nport 52115      监听的端口，默认是1194，为了安全起见修改为52115\n\nproto udp       并发多时，选择tcp\n\ndev tun         vpn server采用的路由模式，可以选tap或者tun\n\nca ca.cert      ca证书，此文件需要和server.conf在一个目录下，否则需要绝对路径调用\n\ncert server.cert\nkey server.key  <====重要\ndh dh1024.pem\n\nserver 10.8.0.0 255.255.255.0 这个是VPN server动态分配给VPN client的地址池，一般不需要更改，这个段不要和现网冲突\n\nifconfig-pool-persist ipp.txt\n\npush \"route 172.16.1.0 255.255.255.0\" 这是VPN server所在的内网网段，如果有多个网段可以写多个push，此命令实际作用是在VPN客户端本地生成。\n```\n\n> 如果想知道VPN到底在本地加了哪些路由，可以在拨号前笔记本记下所有路由的条目，然后使用软件比较变化即可。\n\n``` bash\nclient-to-client 允许拨号的多个client互相通讯\n\nduplicate-cn    允许多个客户端使用同一账号连接 <== 多人共享账号\n\nkeepalive 10 120 每10秒ping一次，若120s未收到包，即认为客户端断开\n\ncomp-lzo    开启压缩功能\n\npersist-key 当VPN超时后，重启VPN后，保持上一次使用的私钥，而不重新读取私钥\n\npersist=tun 通过keepalive检测VPN超时后，当重新启动VPN后，保持tun或者tap设备自动连接状态\n\nstatus openvpn-status.log openvpn日志状态信息\n\nlog /var/log/openvpn.log    日志文件\n\nverb 3      指定日志文件冗余\n```\n\n*Tips*\n> 先执行export LANG=\"ZH_GB18030\"，然后编辑配置文件server.conf，清空所有内容，拷贝上面内容，然后执行 *dos2unix server.conf*\n\n#### 实际服务器端VPN配置文件server.conf配置\n``` bash\nlocal 124.43.12.115\nport 52115\nproto tcp\ndev tun\n\nca /etc/openvpn/keys/ca.crt\ncert /etc/openvpn/keys/server.crt\nkey /etc/openvpn/keys/server.key\ndh /etc/openvpn/keys/dh1024.pem\n\nserver 10.8.0.0 255.255.255.0\npush \"route 10.0.0.0 255.255.255.0\"\nifconfig-pool-persist ipp.txt\nkeepalive 10 120\ncomp-lzo\npersist-key\npersist-tun\nstatus openvpn-status.log\nverb 3\n\nclient-to-client\nduplicate-cn\nlog /var/log/openvpn.log\n```\n\n> cp -ap server.conf{,.orig}\ngrep -vE \";|#|^$\" server.conf > tmp.log\nmv tmp.log server.conf\n\n#### 配置调试vpn并准备运行vpn服务\n\n> * 取消服务器防火墙对openvpn（默认1194，本例52115）的拦截。并允许服务进行转发\niptables -A INPUT -p tcp --dport 52115 -j ACCEPT\niptables -L -n\nvim /etc/sysconfig/iptables\n\n*先关闭IPtables*\n* selinux\n* 开启内核转发（路由）：\nip_forward = 1\n\n#### 启动服务器端VPN\n/usr/local/sbin/openvpn --config /etc/openvpn/server.conf &\n\n无意外服务开启后，会出现 tun0网卡；\n意外的日志：\n/var/log/openvpn.log\n> tail -f /var/log/openvpn.log\nSat Oct 24 18:06:41 2015 OpenVPN 2.2.2 x86_64-unknown-linux-gnu [SSL] [LZO2] [EPOLL] [eurephia] built on Jul 18 2015\nSat Oct 24 18:06:41 2015 NOTE: OpenVPN 2.1 requires '--script-security 2' or higher to call user-defined scripts or executables\nSat Oct 24 18:06:41 2015 Diffie-Hellman initialized with 1024 bit key\nSat Oct 24 18:06:41 2015 TLS-Auth MTU parms [ L:1542 D:138 EF:38 EB:0 ET:0 EL:0 ]\nSat Oct 24 18:06:41 2015 Socket Buffers: R=[8388608->131072] S=[8388608->131072]\nSat Oct 24 18:06:41 2015 TCP/UDP: Socket bind failed on local address 59.108.85.71:52115: Cannot assign requested address\nSat Oct 24 18:06:41 2015 Exiting\n\n> ip addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN \n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n2: em1: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN qlen 1000\n    link/ether b8:2a:72:da:82:a4 brd ff:ff:ff:ff:ff:ff\n3: em2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP qlen 1000\n    link/ether b8:2a:72:da:82:a5 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.20.11/24 brd 192.168.20.255 scope global em2\n4: em3: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN qlen 1000\n    link/ether b8:2a:72:da:82:a6 brd ff:ff:ff:ff:ff:ff\n5: em4: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN qlen 1000\n    link/ether b8:2a:72:da:82:a7 brd ff:ff:ff:ff:ff:ff\n6: tun0: <POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 100\n    link/[65534] \n    inet 10.8.0.1 peer 10.8.0.2/32 scope global tun0\n    \n* 开机加载\necho '/usr/local/sbin/openvpn --config /etc/openvpn/server.conf &' >> /etc/rc.local\n\n* 自带启动脚本：\n```\n/usr/local/sbin/openvpn --daemon --writepid /var/run/openvpn/server/pid --config server.conf --cd /etc/openvpn\n```\n\n#### 规范启动openvpn\n```\ncd /usr/local/src/openvpn-2.2.2/sample-scripts\ncp openvpn.init /etc/init.d/openvpn\nchmod 700 /etc/init.d/openvpn\nchkconfig --add openvpn\n```\n\n如果/etc/openvpn下conf文件过多，导致无法启动，请尝试修改/etc/init.d/openvpn：\n> service openvpn restart\nShutting down openvpn:                                     [  OK  ]\nStarting openvpn:                                          [FAILED]\n```\nls *.conf\n-->\nls server.conf\n```\n\nOR:\n```\ncd /etc/openvpn/\nmv client.conf server.conf.orig keys/\n```\n\n#### Windows下客户端：\n\n``` bash\n> 下载服务器端文件：\nca.crt test.crt test.key client.conf\n\n打包，复制到\n> OpenVPN/conf/\n\ndefault client.conf:\n> egrep -v \"^#|;|^$\" keys/client.conf \nclient\ndev tun\nproto udp   <\nremote 59.108.85.71 5911    < \nresolv-retry infinite\nnobind\npersist-key\npersist-tun\nca ca.crt\ncert test.crt\nkey test.key\nns-cert-type server\ncomp-lzo\nverb 3\n```\n\n企业生产环境client.conf配置：\n\n``` bash\nclient\ndev tun\nproto udp\n# 协议需要和服务器端一致\nremote 10.0.0.28 52115\n# 服务器外网IP\nresolv-retry infinite\nnobind\npersist-key\npersist-tun\nca ca.crt\n* \ncert oldboy.crt\nkey oldboy.key\n* \ncomp-lzo\nverb 3\n```\n\n拷贝上面内容成test.ovpn，放入config\n\n# tcpdump debug\n## 在VPN的内网机器添加返回路由或者干脆把vpnserver的IP当作内网服务器的网关。\n\n``` bash\nroute add default gw 172.16.1.28\nroute del default gw 172.16.1.28\nOR：\nroute add -net 10.8.0.0/24 gw 172.16.1.28\n```\n\n*问题：*\n> 当vpn客户端的GW不是vpn server内网地址的时候，所有的vpn客户端都要添加网络路由\n此配置重启会失效，需要配置静态路由。参考oldboy博客\n* 1、/etc/sysconfig/static-router\n* 2、/etc/sysconfig/network-script/route-eth0\n* 3、放在rc.local\n\n## 配置\n\n## 成功连接（客户端日志）：\n``` bash\n> Sat Oct 24 19:34:06 2015 C:\\WINDOWS\\system32\\route.exe ADD 192.168.20.0 MASK 255.255.255.0 10.8.0.5\nSat Oct 24 19:34:06 2015 ROUTE: CreateIpForwardEntry succeeded with dwForwardMetric1=30 and dwForwardType=4\nSat Oct 24 19:34:06 2015 Route addition via IPAPI succeeded [adaptive]\nSat Oct 24 19:34:06 2015 C:\\WINDOWS\\system32\\route.exe ADD 192.168.10.0 MASK 255.255.255.0 10.8.0.5\nSat Oct 24 19:34:06 2015 ROUTE: CreateIpForwardEntry succeeded with dwForwardMetric1=30 and dwForwardType=4\nSat Oct 24 19:34:06 2015 Route addition via IPAPI succeeded [adaptive]\nSat Oct 24 19:34:06 2015 C:\\WINDOWS\\system32\\route.exe ADD 10.8.0.0 MASK 255.255.255.0 10.8.0.5\nSat Oct 24 19:34:06 2015 ROUTE: CreateIpForwardEntry succeeded with dwForwardMetric1=30 and dwForwardType=4\nSat Oct 24 19:34:06 2015 Route addition via IPAPI succeeded [adaptive]\nSat Oct 24 19:34:06 2015 Initialization Sequence Completed\n```\n\n## 断开连接（客户端日志）：\n\n``` bash\n> Sat Oct 24 20:22:52 2015 TCP/UDP: Closing socket\n*Sat Oct 24 20:22:52 2015 C:\\WINDOWS\\system32\\route.exe DELETE 10.8.0.0 MASK 255.255.255.0 10.8.0.5*\nSat Oct 24 20:22:52 2015 Route deletion via IPAPI succeeded [adaptive]\nSat Oct 24 20:22:52 2015 C:\\WINDOWS\\system32\\route.exe DELETE 192.168.10.0 MASK 255.255.255.0 10.8.0.5\nSat Oct 24 20:22:52 2015 Route deletion via IPAPI succeeded [adaptive]\nSat Oct 24 20:22:52 2015 C:\\WINDOWS\\system32\\route.exe DELETE 192.168.20.0 MASK 255.255.255.0 10.8.0.5\nSat Oct 24 20:22:52 2015 Route deletion via IPAPI succeeded [adaptive]\nSat Oct 24 20:22:52 2015 Closing TUN/TAP interface\nSat Oct 24 20:22:52 2015 SIGTERM[hard,] received, process exiting\n```\n\n# 设置NAT方式的VPN\n``` bash\n10.8.0.6变成内网192.168.20.11\n\n192.168.20.11 ==> 192.168.20.12\n```\n\n## 对应的防火墙规则为：\n``` bash\niptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth1 -j SNAT --to-source 172.16.1.28\n\nOR\n[IP 地址伪装]\niptables -t nat -I POSTROUTING -s 10.8.0.0/24 -o eth1 -j MASQUERADE\n```\n> 通过eth1,转接 10.8的地址为172.16.1.28\n\n办公网络添加实例：\n> iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o em2 -j SNAT --to-source 192.168.20.11\n最后一项配置会修改客户端的默认路由为OpenVPN服务器。这样，通常还必须加入NAT转换：\niptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o em2 -j MASQUERADE\n\n## 默认防火墙规则\n``` bash\nChain FORWARD\ntarget  prot    opt source  des     \nREJECT  all     --  0.0.0.0 0.0.0.0 reject-with icmp-host-prohibited\n\n> 取消这条Forward规则：\ncat /etc/sysconfig/iptables\n或者添加（从虚拟网卡进来就转发）：\niptables -A FORWARD -i tunt -j ACCEPT\n```\n\n### openvpn 内置规则\n\n``` bash\n/usr/local/src/openvpn-2.2.2/sample-config-files/firewall.sh\n```\n\n## 适用场景：\n1. 适合app client的网关不是vpn server的场景。如果app client的网关为vpn server则不用nat转发。\n\n## 路由和nat模式区别：\n1. nat适合app client的网关不是vpn server的场景。\n2. 如果app client不是app server，又不用nat方式，还可以手动添加路由。（缺点是每个app client客户端都需要配置路由）\n推荐：NAT，因为企业的多数场景，内部服务器的网关通常不是vpn server\n\n## 企业vpn服务器维护\n\n``` bash\ncd openvpn-2.2.2/\ncd easy-rsa/2.0/\nsource vars\n然后再运行\n./build-key client_name或\n./build-key-pass client_name\nll easy-rsa/2.0/keys/\n```\n\n# 企业发送证书给同事案例\n\n```\n> 附件清单如下：\nxiaowang-key.zip        --- 里面是证书和配置文件\nopenvpn-2.2.2-install.exe  --- windows7 及以上系统请用这个客户端\n如果win7的系统发现无法使用，请百度“openvpn windows7客户端”\n请大家表领错证书哈。\n首先，安装，默认路径，安装过程简单，多了红色电脑，不用管。\n安装后，解压证书压缩包，里面共6文件，将里面的6文件覆盖到OpenVPN\\config里面\n覆盖后，双击右下角的红色电脑，弹出窗口，不用管，自动拨号。成功绿色，隐藏。\n```\n\n## 穿墙\n\n``` bash\n# 和普通的配置相比，server.conf需要增加：\npush \"redirect-gateway def1 bypass-dhcp bypass-dns\"\npush \"dhcp-option DNS\"\npush \"dhcp-option DNS\"\n```\n\n> 完整配置如下：\n\n``` bash\nlocal xxxx\nport xxxx\nproto udp\ndev tun\nca ca.crt\ncert server.crt\nkey server.key\ndh dh1024.pem\nserver 10.8.0.0 255.255.255.0\npush \"route 10.0.0.0 255.255.255.0\"\npush \"redirect-gateway def1 bypass-dhcp bypass-dns\"\npush \"dhcp-option DNS\"\npush \"dhcp-option DNS\"\n\nifconfig-pool-persist ipp.txt\nclient-to-client\nduplicate-cn\nkeepalive 10 120\ncomp-lzo\npersist-key\npersist-tun\nstatus /var/log/openvpn/openvpn-status.log\nlog /var/log/openvpn/openvpn.log\nverb 3\n```\n\n# 吊销证书\n## 单个\n``` bash\ncd 2.0/\nsource vars\n如果吊销有问题，请注释openssl.cnf后6行。\n./revoke-full client_name\n被吊销的用户（前面有R）：\ncat keys/index.txt\ncp keys/crl.pem /etc/openvpn/keys/\ncat >> server.conf << EOF\ncrl-verify /etc/openvpn/keys/crl.pem\nEOF\n```\n\n## 多个\n``` bash\n同单个，都是加载删除列表。\n```\n\n# Linux安装vpn客户端\n``` bash\n1. 安装lzo模块\n2. 安装openvpn\nmkdir -p /etc/openvpn\n上传证书包\ncd /etc/openvpn\nmv test.ovpn client.conf\n```\n\n## 排错\n> 如果报'--script-security 2'warning，则：\n``` bash\ncat >> client_name.ovpn << EOF\n--script-security 2\nEOF\n```\n> 如果碰到'Cant load cert '，修改linux.conf为c.conf\n\n## [验证]\n> ping内网的机器\n\n# Linux openvpn client使用场景\n1. 多办公室或者多个企业网络互联\n2. 办公室的Linux（如svn）同步数据到机房某个内网的机器\n3. 跨机房的数据备份（备份服务器没有外网IP）\n4. 摘掉所有不是必须使用外网IP的服务器（nagios，web）\n\n# 多机房利用vpn互联架构\n## 逻辑：\n> 每个机房的机器使用openvpn server的内网ip地址作为网关。\nLclient:    Lserver:vpnclient   rserver:vpnserver rclient\neth0:       eth0:10.0.0.29      eth0:10.0.0.28  eth0:172.16.1.17\n192.168.1.17 eth1:192.168.1.29  eth1:172.16.1.28    GW:172.16.1.28\nGW:         GW:10.0.0.254       GW:10.0.0.254\n192.168.1.29\n\n*需求*:\n1. Lclient 可以ping通172.16.1.17\n2. rclient 可以ping通192.168.1.17\n\n## 实际案例：\n> 1. 不做网关的玩法：###\nclient-conf-dir /usr/local/vpn/ccd\nroute       192.168.1.0 255.255.255.0\n    ### 让局域网内的机器通过做网关的vpn client与vpn server局域网内部的机器通信。\n1.1. ### 在/usr/local/vpn/ccd下建立\nweb177# more xp\niroute 192.168.1.0  255.255.255.0\n1.2.配置vpn客户端，同时把路由功能打开。ip_forward=1\n1.3. vpn server的局域网服务器，增加一条到vpn client的路由。\nroute add 10.8.0.0/24 192.168.2.177\n增加一条到vpn client后端服务器的路由：\nroute add 192.168.1.0/24 192.168.2.177\n\n关键字：openvpn多机房互联。\n\n## 多机房利用openvpn应用场景：\n> 1. 企业之间互联\n2. 多机房互联：\n    a. 数据同步、备份\n    b. 异地数据读取、写入\n通过VPN传数据，本地读、远程写。\n\n> 蓝汛：每入职一个运维，开一个跳板机普通帐号，这个帐号可以访问任何机器（调用机器列表）。\n赶集网：两层代理，每个机房一个代理，每台机器10个已经设定好权限的帐号\n\n# route、tcpdump总结\n\n# 远程vpn架构，多机房互联\n\n# LDAP 插件结合预热\n## 插件：\n> openvpn-auth-ldap\n\n1. 编译安装\n2. yum 安装\n\n# 8种openvpn验证方式\n## 本地证书密钥认证\n``` bash\ncd /etc/openvpn\ncat server.conf\n    auth-user-pass-verify /etc/openvpn/checkpsw.sh via-env\n    client-cert-not-required\n    username-as-common-name\n```\n获取：checkpsw.sh\n> \n\n## 本地文件认证\n\n## 通过mysql数据库认证\n\n## LDAP认证\n### openvpn-auth-ldap\n### 利用第一个文件认证的思路，去LDAP查询，还可以和本地文件比较，将授权和认证分开。\n\n## 结合radius认证\n\n## 结合AD \n\n## 结合U盾等设备认证\n\n# VPN不做网关情况的企业多机房VPN互联\n``` bash\nroute add -net 192.168.1.0/24 gw 172.16.1.28\n```\n> 表示：去192.168.1.0网段，使用172.16.1.28做网关\n\n``` bash\nroute add default gw 172.16.1.39\n```\n> 表示：访问0.0.0.0的网段，使用172.16.1.39做默认网关\n\n### 本地文件验证\n\n```\ncat >> server.conf\nauth-user-pass-verify /etc/openvpn/checkpsw.sh via-env\nclient-cert-not-required\nusername-as-common-name\nEOF\n```\n\n# 开发脚本实现openvpn通过ldap验证\n\n```\n*user-auth.conf 用户授权文件(类似于svn)*\n*user.conf 测试用ldap用户、密码*\n*check_credit.py 验证脚本文件*\n```\n\n## 如果本地文件验证出现error : TLS-8172 error\ncat >> /etc/openldap/ldap.conf <<(Cent 6.x)\nTLS_REQCERT allow\nEOF\n\ncat >> /etc/ldap.conf <<(Cent 5.x)\nTLS_REQCERT allow\nEOF\n\n## ldap实战\ncat >> /etc/openldap/ server.conf <<\n> //# for python script ldap-auth\nscript-security 2\nauth-user-pass-verify \"/usr/bin/python /etc/openvpn/check_credit.py\" via-file\nclient-cert-not-required\nusername-as-common-name\ntmp-dir /dev/shm\nauth-nocache\n\n> via-env方式是openvpn将客户端提供的用户名、密码字符串设置成调用脚本的环境变量；via-file方式将ldap的用户名密码写入临时文件头两行，返回后删除。如果脚本坚持用户名密码，返回0成功，1失败。\n\n### 客户端配置\n\n``` bash\ncat >> client.ovpn <<\n//# cert cl.cert\n//# key xiaowang.key\nauth-user-pass\nauth-nocache\nEOF\n\n### server端配置\ncat >> check_credit.py <<\nlog_filename=''\nauth_filename=''\nEOF\n```\n\n### 普通生产版本client.opvn\n\n``` bash\n> client\nproto udp\ndev tun\nremote auto.91taogu.com 5911\nresolv-retry infinite\nnobind\n\\# user nobody\n\\# group nobody\npersist-key\npersist-tun\nca ca.crt\ncomp-lzo\nverb 3\nauth-user-pass\nauth-nocache\nreneg-sec 360000\n```\n\n### ldap验证生产版本client.ovpn\n\n``` nasj\n> client\ndev tun\n\\# proto tcp\nproto udp\nremote vpn.91taogu.com 5911\nresolv-retry 60\n\\# resolv-retry infinite\nnobind\npersist-key\npersist-tun\nca ca.crt\n\\# cert xx.crt\n\\# key xx.key\nns-cert-type server\ncomp-lzo\nverb 3\nauth-user-pass\nauth-nocache\n```\n\n[1]: http://www.oberhumer.com/opensource/lzo/download/lzo-2.09.tar.gz",
				"html": "<h1 id=\"openvpn搭建\"><a href=\"#openvpn搭建\" class=\"headerlink\" title=\"openvpn搭建\"></a>openvpn搭建</h1><h2 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h2><ul>\n<li><strong>外出人员访问内部资源：ERP，OA，文件共享，wiki。</strong></li>\n<li><strong>运维访问IDC机房</strong></li>\n</ul>\n<h2 id=\"协议说明\"><a href=\"#协议说明\" class=\"headerlink\" title=\"协议说明\"></a>协议说明</h2><blockquote>\n</blockquote>\n<pre><code>L2TP：PPTP的后续版本，两个端点之间的单一隧道，支持隧道验证，没有与生俱来的加密和保密支持，通常需要和IPSEC配合使用。\nSSL VPN：使用TLSv1、SSLv3，不是一个基于web的软件，不与ipsec及其他的VPN软件兼容，C/S架构，单独使用openVPN客户端。\n对于认证，OpenVPN提供了两种认证方法：基于用户名/密码的认证与SSL证书认证。适合外出移动或家庭办公用户考虑使用。\nIPSEC：适合于企业异地总分公司或多个IDC机房间不间断按需连接。ipsec VPN的开源实现openswan\n</code></pre><h2 id=\"使用方案建议：\"><a href=\"#使用方案建议：\" class=\"headerlink\" title=\"使用方案建议：\"></a>使用方案建议：</h2><pre><code>1、不差钱，可以选择硬件产品\n2、互联网公司、开源、省钱\n3、个人：拨号选择openVPN；不希望使用拨号客户端，则选择pptp；多个企业间或IDC机房互联，选择ipsecVPN或者openVPN\n</code></pre><p>基于一个单一的IP端口，默认1194，默认使用udp协议通讯，建议使用TCP协议工作。</p>\n<p>tcpdump<br>route</p>\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><h3 id=\"安装基础\"><a href=\"#安装基础\" class=\"headerlink\" title=\"安装基础\"></a>安装基础</h3><blockquote>\n<p>YUM安装</p>\n</blockquote>\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># yum install openssl openssl-devel openvpn openvpn-auth-ldap lzo -y</span></span><br><span class=\"line\"></span><br><span class=\"line\">========================================================================================================================</span><br><span class=\"line\"> Package                           Arch                   Version                            Repository            Size</span><br><span class=\"line\">========================================================================================================================</span><br><span class=\"line\">Installing:</span><br><span class=\"line\"> lzo                               x86_64                 2.03-3.1.el6_5.1                   base                  55 k</span><br><span class=\"line\"> openvpn                           x86_64                 2.3.14-1.el6                       epel                 424 k</span><br><span class=\"line\"> openvpn-auth-ldap                 x86_64                 2.0.3-6.el6                        epel                  42 k</span><br><span class=\"line\">Installing <span class=\"keyword\">for</span> dependencies:</span><br><span class=\"line\"> libobjc                           x86_64                 4.4.7-17.el6                       base                  92 k</span><br><span class=\"line\"> pkcs11-helper                     x86_64                 1.11-3.el6                         epel                  54 k</span><br></pre></td></tr></table></figure>\n<hr>\n<blockquote>\n<p>自编译安装</p>\n</blockquote>\n<ul>\n<li><p>安装依赖【推荐】</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum install -y lzo lzo-devel openssl openssl-devel pam pam-devel rpm-build</span><br><span class=\"line\">yum install -y pkcs11-helper pkcs11-helper-devel</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载安装压缩库【可选】</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget http://www.oberhumer.com/opensource/lzo/download/lzo-2.06.tar.gz</span><br><span class=\"line\">tar zxf lzo-2.06.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> lzo-2.06</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install clean</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ..</span><br></pre></td></tr></table></figure>\n<ul>\n<li>下载安装openvpn</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget http://swupdate.openvpn.org/community/releases/openvpn-2.2.2.tar.gz</span><br><span class=\"line\">rm -rf openvpn-2.2.2 &amp;&amp; tar zxf openvpn-2.2.2.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> openvpn-2.2.2</span><br><span class=\"line\">./configure --with-lzo-headers=/usr/<span class=\"built_in\">local</span>/include --with-lzo-lib=/usr/<span class=\"built_in\">local</span>/lib</span><br><span class=\"line\">make -j4</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<p><em>Tips</em></p>\n<blockquote>\n<p>make: *** No targets specified and no makefile found.  Stop.<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum reinstall openssl* -y</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>如果发现yum install安装也不行，需要执行<code>yum reinstall</code></p>\n</blockquote>\n<p><em>查看安装结果</em><br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># which openvpn</span></span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/sbin/openvpn</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"配置openvpn-server，并建立CA证书\"><a href=\"#配置openvpn-server，并建立CA证书\" class=\"headerlink\" title=\"配置openvpn server，并建立CA证书\"></a>配置openvpn server，并建立CA证书</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src</span><br><span class=\"line\"><span class=\"built_in\">cd</span> openvpn-2.2.2/easy-rsa/2.0</span><br><span class=\"line\">cp -ap vars&#123;,.orig&#125;</span><br><span class=\"line\">ls -la vars*</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># vim vars</span><br><span class=\"line\">&gt;  # modify by lang</span><br><span class=\"line\">export KEY_COUNTRY=&quot;CN&quot;</span><br><span class=\"line\">export KEY_PROVINCE=&quot;BJ&quot;</span><br><span class=\"line\">export KEY_CITY=&quot;Beijing&quot;</span><br><span class=\"line\">export KEY_ORG=&quot;oldboy&quot;</span><br><span class=\"line\">export KEY_EMAIL=&quot;543683682@qq.com&quot;</span><br><span class=\"line\">export KEY_EMAIL=543683682@qq.com</span><br><span class=\"line\">export KEY_CN=91taogu</span><br><span class=\"line\">export KEY_NAME=91taogu</span><br><span class=\"line\">export KEY_OU=91taogu</span><br><span class=\"line\">export PKCS11_MODULE_PATH=changeme</span><br><span class=\"line\">export PKCS11_PIN=1234</span><br><span class=\"line\"># modify by lang</span><br><span class=\"line\"></span><br><span class=\"line\"># source vars</span><br><span class=\"line\"># ./clean-all</span><br><span class=\"line\"># ./build-ca</span><br><span class=\"line\"></span><br><span class=\"line\">Generating a 1024 bit RSA private key</span><br><span class=\"line\">............++++++</span><br><span class=\"line\">........................................++++++</span><br><span class=\"line\">writing new private key to &apos;ca.key&apos;</span><br><span class=\"line\">-----</span><br><span class=\"line\">You are about to be asked to enter information that will be incorporated</span><br><span class=\"line\">into your certificate request.</span><br><span class=\"line\">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class=\"line\">There are quite a few fields but you can leave some blank</span><br><span class=\"line\">For some fields there will be a default value,</span><br><span class=\"line\">If you enter &apos;.&apos;, the field will be left blank.</span><br><span class=\"line\">-----</span><br><span class=\"line\">Country Name (2 letter code) [CN]:</span><br><span class=\"line\">State or Province Name (full name) [BJ]:</span><br><span class=\"line\">Locality Name (eg, city) [Beijing]:</span><br><span class=\"line\">Organization Name (eg, company) [oldboy]:91taogu</span><br><span class=\"line\">Organizational Unit Name (eg, section) [91taogu]:</span><br><span class=\"line\">Common Name (eg, your name or your server&apos;s hostname) [91taogu]:</span><br><span class=\"line\">Name [91taogu]:</span><br><span class=\"line\">Email Address [543683682@qq.com]:</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ll keys/</span><br><span class=\"line\">&gt; total 12</span><br><span class=\"line\">-rw-r--r-- 1 root root 1330 Jul 18 21:01 ca.crt &lt;-证书</span><br><span class=\"line\">-rw------- 1 root root  920 Jul 18 21:01 ca.key &lt;-RSA key</span><br><span class=\"line\">-rw-r--r-- 1 root root    0 Jul 18 21:00 index.txt</span><br><span class=\"line\">-rw-r--r-- 1 root root    3 Jul 18 21:00 serial</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成vpn服务器端证书和密钥文件\"><a href=\"#生成vpn服务器端证书和密钥文件\" class=\"headerlink\" title=\"生成vpn服务器端证书和密钥文件\"></a>生成vpn服务器端证书和密钥文件</h3><ul>\n<li><p>[x] ./build-key-server server</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Generating a 1024 bit RSA private key</span><br><span class=\"line\">....++++++</span><br><span class=\"line\">..........++++++</span><br><span class=\"line\">writing new private key to <span class=\"string\">'server.key'</span></span><br><span class=\"line\">-----</span><br><span class=\"line\">You are about to be asked to enter information that will be incorporated</span><br><span class=\"line\">into your certificate request.</span><br><span class=\"line\">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class=\"line\">There are quite a few fields but you can leave some blank</span><br><span class=\"line\">For some fields there will be a default value,</span><br><span class=\"line\">If you enter <span class=\"string\">'.'</span>, the field will be left blank.</span><br><span class=\"line\">-----</span><br><span class=\"line\">Country Name (2 letter code) [CN]:</span><br><span class=\"line\">State or Province Name (full name) [BJ]:</span><br><span class=\"line\">Locality Name (eg, city) [Beijing]:</span><br><span class=\"line\">Organization Name (eg, company) [oldboy]:91taogu</span><br><span class=\"line\">Organizational Unit Name (eg, section) [91taogu]:</span><br><span class=\"line\">Common Name (eg, your name or your server<span class=\"string\">'s hostname) [server]:</span></span><br><span class=\"line\"><span class=\"string\">Name [91taogu]:</span></span><br><span class=\"line\"><span class=\"string\">Email Address [543683682@qq.com]:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Please enter the following '</span>extra<span class=\"string\">' attributes</span></span><br><span class=\"line\"><span class=\"string\">to be sent with your certificate request</span></span><br><span class=\"line\"><span class=\"string\">A challenge password []:1234Qwer</span></span><br><span class=\"line\"><span class=\"string\">An optional company name []:91taogu</span></span><br><span class=\"line\"><span class=\"string\">Using configuration from /usr/local/src/openvpn-2.2.2/easy-rsa/2.0/openssl-1.0.0.cnf</span></span><br><span class=\"line\"><span class=\"string\">Check that the request matches the signature</span></span><br><span class=\"line\"><span class=\"string\">Signature ok</span></span><br><span class=\"line\"><span class=\"string\">The Subject'</span>s Distinguished Name is as follows</span><br><span class=\"line\">countryName           :PRINTABLE:<span class=\"string\">'CN'</span></span><br><span class=\"line\">stateOrProvinceName   :PRINTABLE:<span class=\"string\">'BJ'</span></span><br><span class=\"line\">localityName          :PRINTABLE:<span class=\"string\">'Beijing'</span></span><br><span class=\"line\">organizationName      :PRINTABLE:<span class=\"string\">'91taogu'</span></span><br><span class=\"line\">organizationalUnitName:PRINTABLE:<span class=\"string\">'91taogu'</span></span><br><span class=\"line\">commonName            :PRINTABLE:<span class=\"string\">'server'</span></span><br><span class=\"line\">name                  :PRINTABLE:<span class=\"string\">'91taogu'</span></span><br><span class=\"line\">emailAddress          :IA5STRING:<span class=\"string\">'543683682@qq.com'</span></span><br><span class=\"line\">Certificate is to be certified until Jul 15 13:15:47 2025 GMT (3650 days)</span><br><span class=\"line\">Sign the certificate? [y/n]:y</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1 out of 1 certificate requests certified, commit? [y/n]y</span><br><span class=\"line\">Write out database with 1 new entries</span><br><span class=\"line\">Data Base Updated</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>[x] 检测结果</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ll keys/</span><br><span class=\"line\">total 40</span><br><span class=\"line\">-rw-r--r-- 1 root root 4029 Jul 18 21:15 01.pem</span><br><span class=\"line\">-rw-r--r-- 1 root root 1330 Jul 18 21:01 ca.crt</span><br><span class=\"line\">-rw------- 1 root root  920 Jul 18 21:01 ca.key</span><br><span class=\"line\">-rw-r--r-- 1 root root  124 Jul 18 21:15 index.txt</span><br><span class=\"line\">-rw-r--r-- 1 root root   21 Jul 18 21:15 index.txt.attr</span><br><span class=\"line\">-rw-r--r-- 1 root root    0 Jul 18 21:00 index.txt.old</span><br><span class=\"line\">-rw-r--r-- 1 root root    3 Jul 18 21:15 serial</span><br><span class=\"line\">-rw-r--r-- 1 root root    3 Jul 18 21:00 serial.old</span><br><span class=\"line\">-rw-r--r-- 1 root root 4029 Jul 18 21:15 server.crt</span><br><span class=\"line\">-rw-r--r-- 1 root root  777 Jul 18 21:15 server.csr</span><br><span class=\"line\">-rw------- 1 root root  916 Jul 18 21:15 server.key</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"生成vpn客户端证书和密钥文件方案\"><a href=\"#生成vpn客户端证书和密钥文件方案\" class=\"headerlink\" title=\"生成vpn客户端证书和密钥文件方案\"></a>生成vpn客户端证书和密钥文件方案</h3><ul>\n<li><p>[x] 无密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ./build-key test</span></span><br><span class=\"line\">Generating a 1024 bit RSA private key</span><br><span class=\"line\">.........................................................++++++</span><br><span class=\"line\">.......++++++</span><br><span class=\"line\">writing new private key to <span class=\"string\">'test.key'</span></span><br><span class=\"line\">-----</span><br><span class=\"line\">You are about to be asked to enter information that will be incorporated</span><br><span class=\"line\">into your certificate request.</span><br><span class=\"line\">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class=\"line\">There are quite a few fields but you can leave some blank</span><br><span class=\"line\">For some fields there will be a default value,</span><br><span class=\"line\">If you enter <span class=\"string\">'.'</span>, the field will be left blank.</span><br><span class=\"line\">-----</span><br><span class=\"line\">Country Name (2 letter code) [CN]:</span><br><span class=\"line\">State or Province Name (full name) [BJ]:</span><br><span class=\"line\">Locality Name (eg, city) [Beijing]:</span><br><span class=\"line\">Organization Name (eg, company) [oldboy]:91taogu</span><br><span class=\"line\">Organizational Unit Name (eg, section) [91taogu]:</span><br><span class=\"line\">Common Name (eg, your name or your server<span class=\"string\">'s hostname) [test]:</span></span><br><span class=\"line\"><span class=\"string\">Name [91taogu]:</span></span><br><span class=\"line\"><span class=\"string\">Email Address [543683682@qq.com]:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Please enter the following '</span>extra<span class=\"string\">' attributes</span></span><br><span class=\"line\"><span class=\"string\">to be sent with your certificate request</span></span><br><span class=\"line\"><span class=\"string\">A challenge password []:1234Qwer</span></span><br><span class=\"line\"><span class=\"string\">An optional company name []:</span></span><br><span class=\"line\"><span class=\"string\">Using configuration from /usr/local/src/openvpn-2.2.2/easy-rsa/2.0/openssl-1.0.0.cnf</span></span><br><span class=\"line\"><span class=\"string\">Check that the request matches the signature</span></span><br><span class=\"line\"><span class=\"string\">Signature ok</span></span><br><span class=\"line\"><span class=\"string\">The Subject'</span>s Distinguished Name is as follows</span><br><span class=\"line\">countryName           :PRINTABLE:<span class=\"string\">'CN'</span></span><br><span class=\"line\">stateOrProvinceName   :PRINTABLE:<span class=\"string\">'BJ'</span></span><br><span class=\"line\">localityName          :PRINTABLE:<span class=\"string\">'Beijing'</span></span><br><span class=\"line\">organizationName      :PRINTABLE:<span class=\"string\">'91taogu'</span></span><br><span class=\"line\">organizationalUnitName:PRINTABLE:<span class=\"string\">'91taogu'</span></span><br><span class=\"line\">commonName            :PRINTABLE:<span class=\"string\">'test'</span></span><br><span class=\"line\">name                  :PRINTABLE:<span class=\"string\">'91taogu'</span></span><br><span class=\"line\">emailAddress          :IA5STRING:<span class=\"string\">'543683682@qq.com'</span></span><br><span class=\"line\">Certificate is to be certified until Jul 15 13:23:41 2025 GMT (3650 days)</span><br><span class=\"line\">Sign the certificate? [y/n]:y</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1 out of 1 certificate requests certified, commit? [y/n]y</span><br><span class=\"line\">Write out database with 1 new entries</span><br><span class=\"line\">Data Base Updated</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>[x] 带密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">./build-key-pass ett</span><br><span class=\"line\">Generating a 1024 bit RSA private key</span><br><span class=\"line\">....................................++++++</span><br><span class=\"line\">.++++++</span><br><span class=\"line\">writing new private key to <span class=\"string\">'ett.key'</span></span><br><span class=\"line\">Enter PEM pass phrase: &lt;-1234Qwer</span><br><span class=\"line\">Verifying - Enter PEM pass phrase:</span><br><span class=\"line\">-----</span><br><span class=\"line\">You are about to be asked to enter information that will be incorporated</span><br><span class=\"line\">into your certificate request.</span><br><span class=\"line\">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class=\"line\">There are quite a few fields but you can leave some blank</span><br><span class=\"line\">For some fields there will be a default value,</span><br><span class=\"line\">If you enter <span class=\"string\">'.'</span>, the field will be left blank.</span><br><span class=\"line\">-----</span><br><span class=\"line\">Country Name (2 letter code) [CN]:</span><br><span class=\"line\">State or Province Name (full name) [BJ]:</span><br><span class=\"line\">Locality Name (eg, city) [Beijing]:</span><br><span class=\"line\">Organization Name (eg, company) [oldboy]:91taogu</span><br><span class=\"line\">Organizational Unit Name (eg, section) [91taogu]:</span><br><span class=\"line\">Common Name (eg, your name or your server<span class=\"string\">'s hostname) [ett]:</span></span><br><span class=\"line\"><span class=\"string\">Name [91taogu]:</span></span><br><span class=\"line\"><span class=\"string\">Email Address [543683682@qq.com]:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Please enter the following '</span>extra<span class=\"string\">' attributes</span></span><br><span class=\"line\"><span class=\"string\">to be sent with your certificate request</span></span><br><span class=\"line\"><span class=\"string\">A challenge password []:1234Qwer</span></span><br><span class=\"line\"><span class=\"string\">An optional company name []:</span></span><br><span class=\"line\"><span class=\"string\">Using configuration from /usr/local/src/openvpn-2.2.2/easy-rsa/2.0/openssl-1.0.0.cnf</span></span><br><span class=\"line\"><span class=\"string\">Check that the request matches the signature</span></span><br><span class=\"line\"><span class=\"string\">Signature ok</span></span><br><span class=\"line\"><span class=\"string\">The Subject'</span>s Distinguished Name is as follows</span><br><span class=\"line\">countryName           :PRINTABLE:<span class=\"string\">'CN'</span></span><br><span class=\"line\">stateOrProvinceName   :PRINTABLE:<span class=\"string\">'BJ'</span></span><br><span class=\"line\">localityName          :PRINTABLE:<span class=\"string\">'Beijing'</span></span><br><span class=\"line\">organizationName      :PRINTABLE:<span class=\"string\">'91taogu'</span></span><br><span class=\"line\">organizationalUnitName:PRINTABLE:<span class=\"string\">'91taogu'</span></span><br><span class=\"line\">commonName            :PRINTABLE:<span class=\"string\">'ett'</span></span><br><span class=\"line\">name                  :PRINTABLE:<span class=\"string\">'91taogu'</span></span><br><span class=\"line\">emailAddress          :IA5STRING:<span class=\"string\">'543683682@qq.com'</span></span><br><span class=\"line\">Certificate is to be certified until Jul 15 13:26:38 2025 GMT (3650 days)</span><br><span class=\"line\">Sign the certificate? [y/n]:y</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1 out of 1 certificate requests certified, commit? [y/n]y</span><br><span class=\"line\">Write out database with 1 new entries</span><br><span class=\"line\">Data Base Updated</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"生成vpn密钥协议交换文件\"><a href=\"#生成vpn密钥协议交换文件\" class=\"headerlink\" title=\"生成vpn密钥协议交换文件\"></a>生成vpn密钥协议交换文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">./build-dh</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>生成结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ll keys/dh1024.pem</span><br><span class=\"line\">-rw-r--r-- 1 root root 245 Jul 18 21:29 keys/dh1024.pem</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"详解服务器及客户端的证书各文件用途\"><a href=\"#详解服务器及客户端的证书各文件用途\" class=\"headerlink\" title=\"详解服务器及客户端的证书各文件用途\"></a>详解服务器及客户端的证书各文件用途</h3><blockquote>\n<p>| 文件名 | 被依赖 | 目的 | 保密 |<br>ca.cert | server+all clts | RootCACert | NO<br>ca.key key | signing mach only | RootCAkey | YES<br>dh{n}.pem | server only | DH parameters | NO<br>server.crt | server only | Svr Cert | NO<br>server.key | server only | Svr key | Yes</p>\n</blockquote>\n<p>test.crt | test only | clt Cert | NO<br>test.key | test only | clt key | YES<br>ett.crt | ett only | ett Cert | NO<br>ett.key | ett only | ett key | YES</p>\n<h4 id=\"生成防止恶意攻击文件\"><a href=\"#生成防止恶意攻击文件\" class=\"headerlink\" title=\"生成防止恶意攻击文件\"></a>生成防止恶意攻击文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">openvpn --genkey --secret keys/ta.key</span><br><span class=\"line\">ll keys/ta.key</span><br></pre></td></tr></table></figure>\n<h4 id=\"重要命令说明\"><a href=\"#重要命令说明\" class=\"headerlink\" title=\"重要命令说明\"></a>重要命令说明</h4><blockquote>\n<ul>\n<li>vars 用来创建环境变量，设置所有需要的变量脚本</li>\n<li>clean-all 清除文件及目录</li>\n<li>build-ca 脚本生成ca证书</li>\n<li>build-dh 脚本生成dh文件</li>\n<li>buid-key-server 生成服务器端密钥</li>\n<li>build-key 生成客户端密钥</li>\n<li>build-key-pass 带密码</li>\n<li>pkitool 脚本直接使用vars环境变量设置，直接生成证书（非交互）</li>\n</ul>\n</blockquote>\n<h4 id=\"详解openvpn服务端重要配置参数并实践\"><a href=\"#详解openvpn服务端重要配置参数并实践\" class=\"headerlink\" title=\"详解openvpn服务端重要配置参数并实践\"></a>详解openvpn服务端重要配置参数并实践</h4><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mkdir -p /etc/openvpn</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src/openvpn-2.2.2/easy-rsa/2.0</span><br><span class=\"line\">cp -ap keys /etc/openvpn</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src/openvpn-2.2.2/sample-config-files</span><br><span class=\"line\">cp -afv client.conf server.conf /etc/openvpn/</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">tree /etc/openvpn/</span><br><span class=\"line\">/etc/openvpn/</span><br><span class=\"line\">├── 01.pem</span><br><span class=\"line\">├── 02.pem</span><br><span class=\"line\">├── 03.pem</span><br><span class=\"line\">├── ca.crt</span><br><span class=\"line\">├── ca.key</span><br><span class=\"line\">├── client.conf</span><br><span class=\"line\">├── dh1024.pem</span><br><span class=\"line\">├── ett.crt</span><br><span class=\"line\">├── ett.csr</span><br><span class=\"line\">├── ett.key</span><br><span class=\"line\">├── index.txt</span><br><span class=\"line\">├── index.txt.attr</span><br><span class=\"line\">├── index.txt.attr.old</span><br><span class=\"line\">├── index.txt.old</span><br><span class=\"line\">├── serial</span><br><span class=\"line\">├── serial.old</span><br><span class=\"line\">├── server.conf</span><br><span class=\"line\">├── server.crt</span><br><span class=\"line\">├── server.csr</span><br><span class=\"line\">├── server.key</span><br><span class=\"line\">├── ta.key</span><br><span class=\"line\">├── test.crt</span><br><span class=\"line\">├── test.csr</span><br><span class=\"line\">└── test.key</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/openvpn/</span><br><span class=\"line\">cp -ap server.conf&#123;,.orig&#125;</span><br><span class=\"line\">grep -vE <span class=\"string\">\";|#|^$\"</span> server.conf</span><br><span class=\"line\"></span><br><span class=\"line\">port 1194</span><br><span class=\"line\">proto udp</span><br><span class=\"line\">dev tun</span><br><span class=\"line\">ca ca.crt</span><br><span class=\"line\">cert server.crt</span><br><span class=\"line\">dh dh1024.pem</span><br><span class=\"line\">server 10.8.0.0 255.255.255.0</span><br><span class=\"line\">ifconfig-pool-persist ipp.txt</span><br><span class=\"line\">keepalive 10 120</span><br><span class=\"line\">comp-lzo</span><br><span class=\"line\">persist-key</span><br><span class=\"line\">persist-tun</span><br><span class=\"line\">status openvpn-status.log</span><br><span class=\"line\">verb 3</span><br></pre></td></tr></table></figure>\n<h4 id=\"server-conf配置案例\"><a href=\"#server-conf配置案例\" class=\"headerlink\" title=\"server.conf配置案例\"></a>server.conf配置案例</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">local 10.0.0.28 openvpn监听的外网地址10.0.0.28:1194</span><br><span class=\"line\"></span><br><span class=\"line\">port 52115      监听的端口，默认是1194，为了安全起见修改为52115</span><br><span class=\"line\"></span><br><span class=\"line\">proto udp       并发多时，选择tcp</span><br><span class=\"line\"></span><br><span class=\"line\">dev tun         vpn server采用的路由模式，可以选tap或者tun</span><br><span class=\"line\"></span><br><span class=\"line\">ca ca.cert      ca证书，此文件需要和server.conf在一个目录下，否则需要绝对路径调用</span><br><span class=\"line\"></span><br><span class=\"line\">cert server.cert</span><br><span class=\"line\">key server.key  &lt;====重要</span><br><span class=\"line\">dh dh1024.pem</span><br><span class=\"line\"></span><br><span class=\"line\">server 10.8.0.0 255.255.255.0 这个是VPN server动态分配给VPN client的地址池，一般不需要更改，这个段不要和现网冲突</span><br><span class=\"line\"></span><br><span class=\"line\">ifconfig-pool-persist ipp.txt</span><br><span class=\"line\"></span><br><span class=\"line\">push &quot;route 172.16.1.0 255.255.255.0&quot; 这是VPN server所在的内网网段，如果有多个网段可以写多个push，此命令实际作用是在VPN客户端本地生成。</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果想知道VPN到底在本地加了哪些路由，可以在拨号前笔记本记下所有路由的条目，然后使用软件比较变化即可。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">client-to-client 允许拨号的多个client互相通讯</span><br><span class=\"line\"></span><br><span class=\"line\">duplicate-cn    允许多个客户端使用同一账号连接 &lt;== 多人共享账号</span><br><span class=\"line\"></span><br><span class=\"line\">keepalive 10 120 每10秒ping一次，若120s未收到包，即认为客户端断开</span><br><span class=\"line\"></span><br><span class=\"line\">comp-lzo    开启压缩功能</span><br><span class=\"line\"></span><br><span class=\"line\">persist-key 当VPN超时后，重启VPN后，保持上一次使用的私钥，而不重新读取私钥</span><br><span class=\"line\"></span><br><span class=\"line\">persist=tun 通过keepalive检测VPN超时后，当重新启动VPN后，保持tun或者tap设备自动连接状态</span><br><span class=\"line\"></span><br><span class=\"line\">status openvpn-status.log openvpn日志状态信息</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">log</span> /var/<span class=\"built_in\">log</span>/openvpn.log    日志文件</span><br><span class=\"line\"></span><br><span class=\"line\">verb 3      指定日志文件冗余</span><br></pre></td></tr></table></figure>\n<p><em>Tips</em></p>\n<blockquote>\n<p>先执行export LANG=”ZH_GB18030”，然后编辑配置文件server.conf，清空所有内容，拷贝上面内容，然后执行 <em>dos2unix server.conf</em></p>\n</blockquote>\n<h4 id=\"实际服务器端VPN配置文件server-conf配置\"><a href=\"#实际服务器端VPN配置文件server-conf配置\" class=\"headerlink\" title=\"实际服务器端VPN配置文件server.conf配置\"></a>实际服务器端VPN配置文件server.conf配置</h4><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">local</span> 124.43.12.115</span><br><span class=\"line\">port 52115</span><br><span class=\"line\">proto tcp</span><br><span class=\"line\">dev tun</span><br><span class=\"line\"></span><br><span class=\"line\">ca /etc/openvpn/keys/ca.crt</span><br><span class=\"line\">cert /etc/openvpn/keys/server.crt</span><br><span class=\"line\">key /etc/openvpn/keys/server.key</span><br><span class=\"line\">dh /etc/openvpn/keys/dh1024.pem</span><br><span class=\"line\"></span><br><span class=\"line\">server 10.8.0.0 255.255.255.0</span><br><span class=\"line\">push <span class=\"string\">\"route 10.0.0.0 255.255.255.0\"</span></span><br><span class=\"line\">ifconfig-pool-persist ipp.txt</span><br><span class=\"line\">keepalive 10 120</span><br><span class=\"line\">comp-lzo</span><br><span class=\"line\">persist-key</span><br><span class=\"line\">persist-tun</span><br><span class=\"line\">status openvpn-status.log</span><br><span class=\"line\">verb 3</span><br><span class=\"line\"></span><br><span class=\"line\">client-to-client</span><br><span class=\"line\">duplicate-cn</span><br><span class=\"line\"><span class=\"built_in\">log</span> /var/<span class=\"built_in\">log</span>/openvpn.log</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>cp -ap server.conf{,.orig}<br>grep -vE “;|#|^$” server.conf &gt; tmp.log<br>mv tmp.log server.conf</p>\n</blockquote>\n<h4 id=\"配置调试vpn并准备运行vpn服务\"><a href=\"#配置调试vpn并准备运行vpn服务\" class=\"headerlink\" title=\"配置调试vpn并准备运行vpn服务\"></a>配置调试vpn并准备运行vpn服务</h4><blockquote>\n<ul>\n<li>取消服务器防火墙对openvpn（默认1194，本例52115）的拦截。并允许服务进行转发<br>iptables -A INPUT -p tcp –dport 52115 -j ACCEPT<br>iptables -L -n<br>vim /etc/sysconfig/iptables</li>\n</ul>\n</blockquote>\n<p><em>先关闭IPtables</em></p>\n<ul>\n<li>selinux</li>\n<li>开启内核转发（路由）：<br>ip_forward = 1</li>\n</ul>\n<h4 id=\"启动服务器端VPN\"><a href=\"#启动服务器端VPN\" class=\"headerlink\" title=\"启动服务器端VPN\"></a>启动服务器端VPN</h4><p>/usr/local/sbin/openvpn –config /etc/openvpn/server.conf &amp;</p>\n<p>无意外服务开启后，会出现 tun0网卡；<br>意外的日志：<br>/var/log/openvpn.log</p>\n<blockquote>\n<p>tail -f /var/log/openvpn.log<br>Sat Oct 24 18:06:41 2015 OpenVPN 2.2.2 x86_64-unknown-linux-gnu [SSL] [LZO2] [EPOLL] [eurephia] built on Jul 18 2015<br>Sat Oct 24 18:06:41 2015 NOTE: OpenVPN 2.1 requires ‘–script-security 2’ or higher to call user-defined scripts or executables<br>Sat Oct 24 18:06:41 2015 Diffie-Hellman initialized with 1024 bit key<br>Sat Oct 24 18:06:41 2015 TLS-Auth MTU parms [ L:1542 D:138 EF:38 EB:0 ET:0 EL:0 ]<br>Sat Oct 24 18:06:41 2015 Socket Buffers: R=[8388608-&gt;131072] S=[8388608-&gt;131072]<br>Sat Oct 24 18:06:41 2015 TCP/UDP: Socket bind failed on local address 59.108.85.71:52115: Cannot assign requested address<br>Sat Oct 24 18:06:41 2015 Exiting</p>\n</blockquote>\n<blockquote>\n<p>ip addr<br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN<br>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>2: em1: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN qlen 1000<br>    link/ether b8:2a:72:da:82:a4 brd ff:ff:ff:ff:ff:ff<br>3: em2: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP qlen 1000<br>    link/ether b8:2a:72:da:82:a5 brd ff:ff:ff:ff:ff:ff<br>    inet 192.168.20.11/24 brd 192.168.20.255 scope global em2<br>4: em3: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN qlen 1000<br>    link/ether b8:2a:72:da:82:a6 brd ff:ff:ff:ff:ff:ff<br>5: em4: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN qlen 1000<br>    link/ether b8:2a:72:da:82:a7 brd ff:ff:ff:ff:ff:ff<br>6: tun0: &lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 100<br>    link/[65534]<br>    inet 10.8.0.1 peer 10.8.0.2/32 scope global tun0</p>\n</blockquote>\n<ul>\n<li><p>开机加载<br>echo ‘/usr/local/sbin/openvpn –config /etc/openvpn/server.conf &amp;’ &gt;&gt; /etc/rc.local</p>\n</li>\n<li><p>自带启动脚本：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">/usr/local/sbin/openvpn --daemon --writepid /var/run/openvpn/server/pid --config server.conf --cd /etc/openvpn</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"规范启动openvpn\"><a href=\"#规范启动openvpn\" class=\"headerlink\" title=\"规范启动openvpn\"></a>规范启动openvpn</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd /usr/local/src/openvpn-2.2.2/sample-scripts</span><br><span class=\"line\">cp openvpn.init /etc/init.d/openvpn</span><br><span class=\"line\">chmod 700 /etc/init.d/openvpn</span><br><span class=\"line\">chkconfig --add openvpn</span><br></pre></td></tr></table></figure>\n<p>如果/etc/openvpn下conf文件过多，导致无法启动，请尝试修改/etc/init.d/openvpn：</p>\n<blockquote>\n<p>service openvpn restart<br>Shutting down openvpn:                                     [  OK  ]<br>Starting openvpn:                                          [FAILED]<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ls *.conf</span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">ls server.conf</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>OR:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd /etc/openvpn/</span><br><span class=\"line\">mv client.conf server.conf.orig keys/</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Windows下客户端：\"><a href=\"#Windows下客户端：\" class=\"headerlink\" title=\"Windows下客户端：\"></a>Windows下客户端：</h4><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&gt; 下载服务器端文件：</span><br><span class=\"line\">ca.crt test.crt test.key client.conf</span><br><span class=\"line\"></span><br><span class=\"line\">打包，复制到</span><br><span class=\"line\">&gt; OpenVPN/conf/</span><br><span class=\"line\"></span><br><span class=\"line\">default client.conf:</span><br><span class=\"line\">&gt; egrep -v <span class=\"string\">\"^#|;|^$\"</span> keys/client.conf </span><br><span class=\"line\">client</span><br><span class=\"line\">dev tun</span><br><span class=\"line\">proto udp   &lt;</span><br><span class=\"line\">remote 59.108.85.71 5911    &lt; </span><br><span class=\"line\">resolv-retry infinite</span><br><span class=\"line\">nobind</span><br><span class=\"line\">persist-key</span><br><span class=\"line\">persist-tun</span><br><span class=\"line\">ca ca.crt</span><br><span class=\"line\">cert test.crt</span><br><span class=\"line\">key test.key</span><br><span class=\"line\">ns-cert-type server</span><br><span class=\"line\">comp-lzo</span><br><span class=\"line\">verb 3</span><br></pre></td></tr></table></figure>\n<p>企业生产环境client.conf配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">client</span><br><span class=\"line\">dev tun</span><br><span class=\"line\">proto udp</span><br><span class=\"line\"><span class=\"comment\"># 协议需要和服务器端一致</span></span><br><span class=\"line\">remote 10.0.0.28 52115</span><br><span class=\"line\"><span class=\"comment\"># 服务器外网IP</span></span><br><span class=\"line\">resolv-retry infinite</span><br><span class=\"line\">nobind</span><br><span class=\"line\">persist-key</span><br><span class=\"line\">persist-tun</span><br><span class=\"line\">ca ca.crt</span><br><span class=\"line\">* </span><br><span class=\"line\">cert oldboy.crt</span><br><span class=\"line\">key oldboy.key</span><br><span class=\"line\">* </span><br><span class=\"line\">comp-lzo</span><br><span class=\"line\">verb 3</span><br></pre></td></tr></table></figure>\n<p>拷贝上面内容成test.ovpn，放入config</p>\n<h1 id=\"tcpdump-debug\"><a href=\"#tcpdump-debug\" class=\"headerlink\" title=\"tcpdump debug\"></a>tcpdump debug</h1><h2 id=\"在VPN的内网机器添加返回路由或者干脆把vpnserver的IP当作内网服务器的网关。\"><a href=\"#在VPN的内网机器添加返回路由或者干脆把vpnserver的IP当作内网服务器的网关。\" class=\"headerlink\" title=\"在VPN的内网机器添加返回路由或者干脆把vpnserver的IP当作内网服务器的网关。\"></a>在VPN的内网机器添加返回路由或者干脆把vpnserver的IP当作内网服务器的网关。</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">route add default gw 172.16.1.28</span><br><span class=\"line\">route del default gw 172.16.1.28</span><br><span class=\"line\">OR：</span><br><span class=\"line\">route add -net 10.8.0.0/24 gw 172.16.1.28</span><br></pre></td></tr></table></figure>\n<p><em>问题：</em></p>\n<blockquote>\n<p>当vpn客户端的GW不是vpn server内网地址的时候，所有的vpn客户端都要添加网络路由<br>此配置重启会失效，需要配置静态路由。参考oldboy博客</p>\n<ul>\n<li>1、/etc/sysconfig/static-router</li>\n<li>2、/etc/sysconfig/network-script/route-eth0</li>\n<li>3、放在rc.local</li>\n</ul>\n</blockquote>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h2 id=\"成功连接（客户端日志）：\"><a href=\"#成功连接（客户端日志）：\" class=\"headerlink\" title=\"成功连接（客户端日志）：\"></a>成功连接（客户端日志）：</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&gt; Sat Oct 24 19:34:06 2015 C:\\WINDOWS\\system32\\route.exe ADD 192.168.20.0 MASK 255.255.255.0 10.8.0.5</span><br><span class=\"line\">Sat Oct 24 19:34:06 2015 ROUTE: CreateIpForwardEntry succeeded with dwForwardMetric1=30 and dwForwardType=4</span><br><span class=\"line\">Sat Oct 24 19:34:06 2015 Route addition via IPAPI succeeded [adaptive]</span><br><span class=\"line\">Sat Oct 24 19:34:06 2015 C:\\WINDOWS\\system32\\route.exe ADD 192.168.10.0 MASK 255.255.255.0 10.8.0.5</span><br><span class=\"line\">Sat Oct 24 19:34:06 2015 ROUTE: CreateIpForwardEntry succeeded with dwForwardMetric1=30 and dwForwardType=4</span><br><span class=\"line\">Sat Oct 24 19:34:06 2015 Route addition via IPAPI succeeded [adaptive]</span><br><span class=\"line\">Sat Oct 24 19:34:06 2015 C:\\WINDOWS\\system32\\route.exe ADD 10.8.0.0 MASK 255.255.255.0 10.8.0.5</span><br><span class=\"line\">Sat Oct 24 19:34:06 2015 ROUTE: CreateIpForwardEntry succeeded with dwForwardMetric1=30 and dwForwardType=4</span><br><span class=\"line\">Sat Oct 24 19:34:06 2015 Route addition via IPAPI succeeded [adaptive]</span><br><span class=\"line\">Sat Oct 24 19:34:06 2015 Initialization Sequence Completed</span><br></pre></td></tr></table></figure>\n<h2 id=\"断开连接（客户端日志）：\"><a href=\"#断开连接（客户端日志）：\" class=\"headerlink\" title=\"断开连接（客户端日志）：\"></a>断开连接（客户端日志）：</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&gt; Sat Oct 24 20:22:52 2015 TCP/UDP: Closing socket</span><br><span class=\"line\">*Sat Oct 24 20:22:52 2015 C:\\WINDOWS\\system32\\route.exe DELETE 10.8.0.0 MASK 255.255.255.0 10.8.0.5*</span><br><span class=\"line\">Sat Oct 24 20:22:52 2015 Route deletion via IPAPI succeeded [adaptive]</span><br><span class=\"line\">Sat Oct 24 20:22:52 2015 C:\\WINDOWS\\system32\\route.exe DELETE 192.168.10.0 MASK 255.255.255.0 10.8.0.5</span><br><span class=\"line\">Sat Oct 24 20:22:52 2015 Route deletion via IPAPI succeeded [adaptive]</span><br><span class=\"line\">Sat Oct 24 20:22:52 2015 C:\\WINDOWS\\system32\\route.exe DELETE 192.168.20.0 MASK 255.255.255.0 10.8.0.5</span><br><span class=\"line\">Sat Oct 24 20:22:52 2015 Route deletion via IPAPI succeeded [adaptive]</span><br><span class=\"line\">Sat Oct 24 20:22:52 2015 Closing TUN/TAP interface</span><br><span class=\"line\">Sat Oct 24 20:22:52 2015 SIGTERM[hard,] received, process exiting</span><br></pre></td></tr></table></figure>\n<h1 id=\"设置NAT方式的VPN\"><a href=\"#设置NAT方式的VPN\" class=\"headerlink\" title=\"设置NAT方式的VPN\"></a>设置NAT方式的VPN</h1><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">10.8.0.6变成内网192.168.20.11</span><br><span class=\"line\"></span><br><span class=\"line\">192.168.20.11 ==&gt; 192.168.20.12</span><br></pre></td></tr></table></figure>\n<h2 id=\"对应的防火墙规则为：\"><a href=\"#对应的防火墙规则为：\" class=\"headerlink\" title=\"对应的防火墙规则为：\"></a>对应的防火墙规则为：</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth1 -j SNAT --to-source 172.16.1.28</span><br><span class=\"line\"></span><br><span class=\"line\">OR</span><br><span class=\"line\">[IP 地址伪装]</span><br><span class=\"line\">iptables -t nat -I POSTROUTING -s 10.8.0.0/24 -o eth1 -j MASQUERADE</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>通过eth1,转接 10.8的地址为172.16.1.28</p>\n</blockquote>\n<p>办公网络添加实例：</p>\n<blockquote>\n<p>iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o em2 -j SNAT –to-source 192.168.20.11<br>最后一项配置会修改客户端的默认路由为OpenVPN服务器。这样，通常还必须加入NAT转换：<br>iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o em2 -j MASQUERADE</p>\n</blockquote>\n<h2 id=\"默认防火墙规则\"><a href=\"#默认防火墙规则\" class=\"headerlink\" title=\"默认防火墙规则\"></a>默认防火墙规则</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Chain FORWARD</span><br><span class=\"line\">target  prot    opt <span class=\"built_in\">source</span>  des     </span><br><span class=\"line\">REJECT  all     --  0.0.0.0 0.0.0.0 reject-with icmp-host-prohibited</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; 取消这条Forward规则：</span><br><span class=\"line\">cat /etc/sysconfig/iptables</span><br><span class=\"line\">或者添加（从虚拟网卡进来就转发）：</span><br><span class=\"line\">iptables -A FORWARD -i tunt -j ACCEPT</span><br></pre></td></tr></table></figure>\n<h3 id=\"openvpn-内置规则\"><a href=\"#openvpn-内置规则\" class=\"headerlink\" title=\"openvpn 内置规则\"></a>openvpn 内置规则</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">/usr/<span class=\"built_in\">local</span>/src/openvpn-2.2.2/sample-config-files/firewall.sh</span><br></pre></td></tr></table></figure>\n<h2 id=\"适用场景：\"><a href=\"#适用场景：\" class=\"headerlink\" title=\"适用场景：\"></a>适用场景：</h2><ol>\n<li>适合app client的网关不是vpn server的场景。如果app client的网关为vpn server则不用nat转发。</li>\n</ol>\n<h2 id=\"路由和nat模式区别：\"><a href=\"#路由和nat模式区别：\" class=\"headerlink\" title=\"路由和nat模式区别：\"></a>路由和nat模式区别：</h2><ol>\n<li>nat适合app client的网关不是vpn server的场景。</li>\n<li>如果app client不是app server，又不用nat方式，还可以手动添加路由。（缺点是每个app client客户端都需要配置路由）<br>推荐：NAT，因为企业的多数场景，内部服务器的网关通常不是vpn server</li>\n</ol>\n<h2 id=\"企业vpn服务器维护\"><a href=\"#企业vpn服务器维护\" class=\"headerlink\" title=\"企业vpn服务器维护\"></a>企业vpn服务器维护</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> openvpn-2.2.2/</span><br><span class=\"line\"><span class=\"built_in\">cd</span> easy-rsa/2.0/</span><br><span class=\"line\"><span class=\"built_in\">source</span> vars</span><br><span class=\"line\">然后再运行</span><br><span class=\"line\">./build-key client_name或</span><br><span class=\"line\">./build-key-pass client_name</span><br><span class=\"line\">ll easy-rsa/2.0/keys/</span><br></pre></td></tr></table></figure>\n<h1 id=\"企业发送证书给同事案例\"><a href=\"#企业发送证书给同事案例\" class=\"headerlink\" title=\"企业发送证书给同事案例\"></a>企业发送证书给同事案例</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&gt; 附件清单如下：</span><br><span class=\"line\">xiaowang-key.zip        --- 里面是证书和配置文件</span><br><span class=\"line\">openvpn-2.2.2-install.exe  --- windows7 及以上系统请用这个客户端</span><br><span class=\"line\">如果win7的系统发现无法使用，请百度“openvpn windows7客户端”</span><br><span class=\"line\">请大家表领错证书哈。</span><br><span class=\"line\">首先，安装，默认路径，安装过程简单，多了红色电脑，不用管。</span><br><span class=\"line\">安装后，解压证书压缩包，里面共6文件，将里面的6文件覆盖到OpenVPN\\config里面</span><br><span class=\"line\">覆盖后，双击右下角的红色电脑，弹出窗口，不用管，自动拨号。成功绿色，隐藏。</span><br></pre></td></tr></table></figure>\n<h2 id=\"穿墙\"><a href=\"#穿墙\" class=\"headerlink\" title=\"穿墙\"></a>穿墙</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 和普通的配置相比，server.conf需要增加：</span></span><br><span class=\"line\">push <span class=\"string\">\"redirect-gateway def1 bypass-dhcp bypass-dns\"</span></span><br><span class=\"line\">push <span class=\"string\">\"dhcp-option DNS\"</span></span><br><span class=\"line\">push <span class=\"string\">\"dhcp-option DNS\"</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>完整配置如下：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">local</span> xxxx</span><br><span class=\"line\">port xxxx</span><br><span class=\"line\">proto udp</span><br><span class=\"line\">dev tun</span><br><span class=\"line\">ca ca.crt</span><br><span class=\"line\">cert server.crt</span><br><span class=\"line\">key server.key</span><br><span class=\"line\">dh dh1024.pem</span><br><span class=\"line\">server 10.8.0.0 255.255.255.0</span><br><span class=\"line\">push <span class=\"string\">\"route 10.0.0.0 255.255.255.0\"</span></span><br><span class=\"line\">push <span class=\"string\">\"redirect-gateway def1 bypass-dhcp bypass-dns\"</span></span><br><span class=\"line\">push <span class=\"string\">\"dhcp-option DNS\"</span></span><br><span class=\"line\">push <span class=\"string\">\"dhcp-option DNS\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">ifconfig-pool-persist ipp.txt</span><br><span class=\"line\">client-to-client</span><br><span class=\"line\">duplicate-cn</span><br><span class=\"line\">keepalive 10 120</span><br><span class=\"line\">comp-lzo</span><br><span class=\"line\">persist-key</span><br><span class=\"line\">persist-tun</span><br><span class=\"line\">status /var/<span class=\"built_in\">log</span>/openvpn/openvpn-status.log</span><br><span class=\"line\"><span class=\"built_in\">log</span> /var/<span class=\"built_in\">log</span>/openvpn/openvpn.log</span><br><span class=\"line\">verb 3</span><br></pre></td></tr></table></figure>\n<h1 id=\"吊销证书\"><a href=\"#吊销证书\" class=\"headerlink\" title=\"吊销证书\"></a>吊销证书</h1><h2 id=\"单个\"><a href=\"#单个\" class=\"headerlink\" title=\"单个\"></a>单个</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> 2.0/</span><br><span class=\"line\"><span class=\"built_in\">source</span> vars</span><br><span class=\"line\">如果吊销有问题，请注释openssl.cnf后6行。</span><br><span class=\"line\">./revoke-full client_name</span><br><span class=\"line\">被吊销的用户（前面有R）：</span><br><span class=\"line\">cat keys/index.txt</span><br><span class=\"line\">cp keys/crl.pem /etc/openvpn/keys/</span><br><span class=\"line\">cat &gt;&gt; server.conf &lt;&lt; EOF</span><br><span class=\"line\">crl-verify /etc/openvpn/keys/crl.pem</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<h2 id=\"多个\"><a href=\"#多个\" class=\"headerlink\" title=\"多个\"></a>多个</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">同单个，都是加载删除列表。</span><br></pre></td></tr></table></figure>\n<h1 id=\"Linux安装vpn客户端\"><a href=\"#Linux安装vpn客户端\" class=\"headerlink\" title=\"Linux安装vpn客户端\"></a>Linux安装vpn客户端</h1><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">1. 安装lzo模块</span><br><span class=\"line\">2. 安装openvpn</span><br><span class=\"line\">mkdir -p /etc/openvpn</span><br><span class=\"line\">上传证书包</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /etc/openvpn</span><br><span class=\"line\">mv test.ovpn client.conf</span><br></pre></td></tr></table></figure>\n<h2 id=\"排错\"><a href=\"#排错\" class=\"headerlink\" title=\"排错\"></a>排错</h2><blockquote>\n<p>如果报’–script-security 2’warning，则：<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat &gt;&gt; client_name.ovpn &lt;&lt; EOF</span><br><span class=\"line\">--script-security 2</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>如果碰到’Cant load cert ‘，修改linux.conf为c.conf</p>\n</blockquote>\n<h2 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"[验证]\"></a>[验证]</h2><blockquote>\n<p>ping内网的机器</p>\n</blockquote>\n<h1 id=\"Linux-openvpn-client使用场景\"><a href=\"#Linux-openvpn-client使用场景\" class=\"headerlink\" title=\"Linux openvpn client使用场景\"></a>Linux openvpn client使用场景</h1><ol>\n<li>多办公室或者多个企业网络互联</li>\n<li>办公室的Linux（如svn）同步数据到机房某个内网的机器</li>\n<li>跨机房的数据备份（备份服务器没有外网IP）</li>\n<li>摘掉所有不是必须使用外网IP的服务器（nagios，web）</li>\n</ol>\n<h1 id=\"多机房利用vpn互联架构\"><a href=\"#多机房利用vpn互联架构\" class=\"headerlink\" title=\"多机房利用vpn互联架构\"></a>多机房利用vpn互联架构</h1><h2 id=\"逻辑：\"><a href=\"#逻辑：\" class=\"headerlink\" title=\"逻辑：\"></a>逻辑：</h2><blockquote>\n<p>每个机房的机器使用openvpn server的内网ip地址作为网关。<br>Lclient:    Lserver:vpnclient   rserver:vpnserver rclient<br>eth0:       eth0:10.0.0.29      eth0:10.0.0.28  eth0:172.16.1.17<br>192.168.1.17 eth1:192.168.1.29  eth1:172.16.1.28    GW:172.16.1.28<br>GW:         GW:10.0.0.254       GW:10.0.0.254<br>192.168.1.29</p>\n</blockquote>\n<p><em>需求</em>:</p>\n<ol>\n<li>Lclient 可以ping通172.16.1.17</li>\n<li>rclient 可以ping通192.168.1.17</li>\n</ol>\n<h2 id=\"实际案例：\"><a href=\"#实际案例：\" class=\"headerlink\" title=\"实际案例：\"></a>实际案例：</h2><blockquote>\n<ol>\n<li>不做网关的玩法：###<br>client-conf-dir /usr/local/vpn/ccd<br>route       192.168.1.0 255.255.255.0</li>\n</ol>\n</blockquote>\n<pre><code>### 让局域网内的机器通过做网关的vpn client与vpn server局域网内部的机器通信。\n</code></pre><p>1.1. ### 在/usr/local/vpn/ccd下建立<br>web177# more xp<br>iroute 192.168.1.0  255.255.255.0<br>1.2.配置vpn客户端，同时把路由功能打开。ip_forward=1<br>1.3. vpn server的局域网服务器，增加一条到vpn client的路由。<br>route add 10.8.0.0/24 192.168.2.177<br>增加一条到vpn client后端服务器的路由：<br>route add 192.168.1.0/24 192.168.2.177</p>\n<p>关键字：openvpn多机房互联。</p>\n<h2 id=\"多机房利用openvpn应用场景：\"><a href=\"#多机房利用openvpn应用场景：\" class=\"headerlink\" title=\"多机房利用openvpn应用场景：\"></a>多机房利用openvpn应用场景：</h2><blockquote>\n<ol>\n<li>企业之间互联</li>\n<li>多机房互联：<br> a. 数据同步、备份<br> b. 异地数据读取、写入<br>通过VPN传数据，本地读、远程写。</li>\n</ol>\n</blockquote>\n<blockquote>\n<p>蓝汛：每入职一个运维，开一个跳板机普通帐号，这个帐号可以访问任何机器（调用机器列表）。<br>赶集网：两层代理，每个机房一个代理，每台机器10个已经设定好权限的帐号</p>\n</blockquote>\n<h1 id=\"route、tcpdump总结\"><a href=\"#route、tcpdump总结\" class=\"headerlink\" title=\"route、tcpdump总结\"></a>route、tcpdump总结</h1><h1 id=\"远程vpn架构，多机房互联\"><a href=\"#远程vpn架构，多机房互联\" class=\"headerlink\" title=\"远程vpn架构，多机房互联\"></a>远程vpn架构，多机房互联</h1><h1 id=\"LDAP-插件结合预热\"><a href=\"#LDAP-插件结合预热\" class=\"headerlink\" title=\"LDAP 插件结合预热\"></a>LDAP 插件结合预热</h1><h2 id=\"插件：\"><a href=\"#插件：\" class=\"headerlink\" title=\"插件：\"></a>插件：</h2><blockquote>\n<p>openvpn-auth-ldap</p>\n</blockquote>\n<ol>\n<li>编译安装</li>\n<li>yum 安装</li>\n</ol>\n<h1 id=\"8种openvpn验证方式\"><a href=\"#8种openvpn验证方式\" class=\"headerlink\" title=\"8种openvpn验证方式\"></a>8种openvpn验证方式</h1><h2 id=\"本地证书密钥认证\"><a href=\"#本地证书密钥认证\" class=\"headerlink\" title=\"本地证书密钥认证\"></a>本地证书密钥认证</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/openvpn</span><br><span class=\"line\">cat server.conf</span><br><span class=\"line\">    auth-user-pass-verify /etc/openvpn/checkpsw.sh via-env</span><br><span class=\"line\">    client-cert-not-required</span><br><span class=\"line\">    username-as-common-name</span><br></pre></td></tr></table></figure>\n<p>获取：checkpsw.sh</p>\n<blockquote>\n</blockquote>\n<h2 id=\"本地文件认证\"><a href=\"#本地文件认证\" class=\"headerlink\" title=\"本地文件认证\"></a>本地文件认证</h2><h2 id=\"通过mysql数据库认证\"><a href=\"#通过mysql数据库认证\" class=\"headerlink\" title=\"通过mysql数据库认证\"></a>通过mysql数据库认证</h2><h2 id=\"LDAP认证\"><a href=\"#LDAP认证\" class=\"headerlink\" title=\"LDAP认证\"></a>LDAP认证</h2><h3 id=\"openvpn-auth-ldap\"><a href=\"#openvpn-auth-ldap\" class=\"headerlink\" title=\"openvpn-auth-ldap\"></a>openvpn-auth-ldap</h3><h3 id=\"利用第一个文件认证的思路，去LDAP查询，还可以和本地文件比较，将授权和认证分开。\"><a href=\"#利用第一个文件认证的思路，去LDAP查询，还可以和本地文件比较，将授权和认证分开。\" class=\"headerlink\" title=\"利用第一个文件认证的思路，去LDAP查询，还可以和本地文件比较，将授权和认证分开。\"></a>利用第一个文件认证的思路，去LDAP查询，还可以和本地文件比较，将授权和认证分开。</h3><h2 id=\"结合radius认证\"><a href=\"#结合radius认证\" class=\"headerlink\" title=\"结合radius认证\"></a>结合radius认证</h2><h2 id=\"结合AD\"><a href=\"#结合AD\" class=\"headerlink\" title=\"结合AD\"></a>结合AD</h2><h2 id=\"结合U盾等设备认证\"><a href=\"#结合U盾等设备认证\" class=\"headerlink\" title=\"结合U盾等设备认证\"></a>结合U盾等设备认证</h2><h1 id=\"VPN不做网关情况的企业多机房VPN互联\"><a href=\"#VPN不做网关情况的企业多机房VPN互联\" class=\"headerlink\" title=\"VPN不做网关情况的企业多机房VPN互联\"></a>VPN不做网关情况的企业多机房VPN互联</h1><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">route add -net 192.168.1.0/24 gw 172.16.1.28</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>表示：去192.168.1.0网段，使用172.16.1.28做网关</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">route add default gw 172.16.1.39</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>表示：访问0.0.0.0的网段，使用172.16.1.39做默认网关</p>\n</blockquote>\n<h3 id=\"本地文件验证\"><a href=\"#本地文件验证\" class=\"headerlink\" title=\"本地文件验证\"></a>本地文件验证</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat &gt;&gt; server.conf</span><br><span class=\"line\">auth-user-pass-verify /etc/openvpn/checkpsw.sh via-env</span><br><span class=\"line\">client-cert-not-required</span><br><span class=\"line\">username-as-common-name</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<h1 id=\"开发脚本实现openvpn通过ldap验证\"><a href=\"#开发脚本实现openvpn通过ldap验证\" class=\"headerlink\" title=\"开发脚本实现openvpn通过ldap验证\"></a>开发脚本实现openvpn通过ldap验证</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">*user-auth.conf 用户授权文件(类似于svn)*</span><br><span class=\"line\">*user.conf 测试用ldap用户、密码*</span><br><span class=\"line\">*check_credit.py 验证脚本文件*</span><br></pre></td></tr></table></figure>\n<h2 id=\"如果本地文件验证出现error-TLS-8172-error\"><a href=\"#如果本地文件验证出现error-TLS-8172-error\" class=\"headerlink\" title=\"如果本地文件验证出现error : TLS-8172 error\"></a>如果本地文件验证出现error : TLS-8172 error</h2><p>cat &gt;&gt; /etc/openldap/ldap.conf &lt;&lt;(Cent 6.x)<br>TLS_REQCERT allow<br>EOF</p>\n<p>cat &gt;&gt; /etc/ldap.conf &lt;&lt;(Cent 5.x)<br>TLS_REQCERT allow<br>EOF</p>\n<h2 id=\"ldap实战\"><a href=\"#ldap实战\" class=\"headerlink\" title=\"ldap实战\"></a>ldap实战</h2><p>cat &gt;&gt; /etc/openldap/ server.conf &lt;&lt;</p>\n<blockquote>\n<p>//# for python script ldap-auth<br>script-security 2<br>auth-user-pass-verify “/usr/bin/python /etc/openvpn/check_credit.py” via-file<br>client-cert-not-required<br>username-as-common-name<br>tmp-dir /dev/shm<br>auth-nocache</p>\n</blockquote>\n<blockquote>\n<p>via-env方式是openvpn将客户端提供的用户名、密码字符串设置成调用脚本的环境变量；via-file方式将ldap的用户名密码写入临时文件头两行，返回后删除。如果脚本坚持用户名密码，返回0成功，1失败。</p>\n</blockquote>\n<h3 id=\"客户端配置\"><a href=\"#客户端配置\" class=\"headerlink\" title=\"客户端配置\"></a>客户端配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat &gt;&gt; client.ovpn &lt;&lt;</span><br><span class=\"line\">//<span class=\"comment\"># cert cl.cert</span></span><br><span class=\"line\">//<span class=\"comment\"># key xiaowang.key</span></span><br><span class=\"line\">auth-user-pass</span><br><span class=\"line\">auth-nocache</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### server端配置</span></span><br><span class=\"line\">cat &gt;&gt; check_credit.py &lt;&lt;</span><br><span class=\"line\">log_filename=<span class=\"string\">''</span></span><br><span class=\"line\">auth_filename=<span class=\"string\">''</span></span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<h3 id=\"普通生产版本client-opvn\"><a href=\"#普通生产版本client-opvn\" class=\"headerlink\" title=\"普通生产版本client.opvn\"></a>普通生产版本client.opvn</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&gt; client</span><br><span class=\"line\">proto udp</span><br><span class=\"line\">dev tun</span><br><span class=\"line\">remote auto.91taogu.com 5911</span><br><span class=\"line\">resolv-retry infinite</span><br><span class=\"line\">nobind</span><br><span class=\"line\">\\<span class=\"comment\"># user nobody</span></span><br><span class=\"line\">\\<span class=\"comment\"># group nobody</span></span><br><span class=\"line\">persist-key</span><br><span class=\"line\">persist-tun</span><br><span class=\"line\">ca ca.crt</span><br><span class=\"line\">comp-lzo</span><br><span class=\"line\">verb 3</span><br><span class=\"line\">auth-user-pass</span><br><span class=\"line\">auth-nocache</span><br><span class=\"line\">reneg-sec 360000</span><br></pre></td></tr></table></figure>\n<h3 id=\"ldap验证生产版本client-ovpn\"><a href=\"#ldap验证生产版本client-ovpn\" class=\"headerlink\" title=\"ldap验证生产版本client.ovpn\"></a>ldap验证生产版本client.ovpn</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&gt; client</span><br><span class=\"line\">dev tun</span><br><span class=\"line\">\\# proto tcp</span><br><span class=\"line\">proto udp</span><br><span class=\"line\">remote vpn.91taogu.com 5911</span><br><span class=\"line\">resolv-retry 60</span><br><span class=\"line\">\\# resolv-retry infinite</span><br><span class=\"line\">nobind</span><br><span class=\"line\">persist-key</span><br><span class=\"line\">persist-tun</span><br><span class=\"line\">ca ca.crt</span><br><span class=\"line\">\\# cert xx.crt</span><br><span class=\"line\">\\# key xx.key</span><br><span class=\"line\">ns-cert-type server</span><br><span class=\"line\">comp-lzo</span><br><span class=\"line\">verb 3</span><br><span class=\"line\">auth-user-pass</span><br><span class=\"line\">auth-nocache</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 0,
				"status": "published",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1547222400000,
				"created_by": 2,
				"updated_at": 1547283348000,
				"updated_by": 2,
				"published_at": 1547222400000,
				"published_by": 2
			},
			{
				"id": "cjqt8ws3s0001skeo6p5l984z",
				"title": "dns and smart dns",
				"slug": "dns-and-smart-dns",
				"markdown": "\n# DNS与智能DNS服务\n\n# 2. client端设定\n\n## 配置文件\n> /etc/hosts \n早期hostname对应IP的文件\n\n> /etc/resolv.conf\n主机dns配置\n\n> /etc/nsswitch.conf\ndns查询优先级\n``` grep hosts /etc/nsswitch.conf \n```\n\n## 查询命令\n### host\n\n### nslookup\n\n> A记录：IP地址\n\n> PTR：反解\n\n> MX：邮件交换器\n\n> NS：DNS服务器\n\n> TXT：文本信息\n\n> SOA：用于DNS Zone的“起始授权机构”\n\n### dig\n>\ndig xxx.com @DNS-server\n> 正解：\ndig [-t mx ns txt soa] xxxx.com\n\n``` bash\n[root@ldap ~]# dig 91taogu.com\n; <<>> DiG 9.8.2rc1-RedHat-9.8.2-0.37.rc1.el6_7.7 <<>> 91taogu.com\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 21781\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\n\n;; QUESTION SECTION:\n;91taogu.com.\t\t\tIN\tA\n\n;; ANSWER SECTION:\n91taogu.com.\t\t497\tIN\tA\t123.56.149.61\n\n;; Query time: 97 msec\n;; SERVER: 119.29.29.29#53(119.29.29.29)\n;; WHEN: Wed Apr 27 14:30:27 2016\n;; MSG SIZE  rcvd: 45\n```\n\n> 反解：\ndig -x ip\n\n``` bash\n[root@ldap ~]# dig -x 123.56.149.61\n\n; <<>> DiG 9.8.2rc1-RedHat-9.8.2-0.37.rc1.el6_7.7 <<>> -x 123.56.149.61\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NXDOMAIN, id: 37936\n;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 0\n\n;; QUESTION SECTION:\n;61.149.56.123.in-addr.arpa.\tIN\tPTR\n\n;; AUTHORITY SECTION:\n56.123.in-addr.arpa.\t508\tIN\tSOA\thidden-master.aliyun.com. hostmaster.aliyun-inc.com. 2013090588 7200 900 2592000 600\n\n;; Query time: 7 msec\n;; SERVER: 119.29.29.29#53(119.29.29.29)\n;; WHEN: Wed Apr 27 14:30:32 2016\n;; MSG SIZE  rcvd: 126\n```\n\n### whois\n> \n查询域名所有人\n\n\n# 3. BIND\n## 3.0 安装\n\n``` \nyum install bind bind-utils openssl-devel\n```\n\n- 或者：\n\n``` bash\nyum install openssl-devel openssl -y\nwget http://ftp.isc.org/isc/bind9/9.9.8/bind-9.9.8.tar.gz\ntar zxf bind-9.9.8.tar.gz\ncd bind-9.9.8\n./configure --prefix=/usr/local/named --enable-threads --datadir=/usr/share --enable-largefile --with-make-clean\nmake -j4\nmake install && echo $?\ngroupadd named\nuseradd named -g named -d /usr/local/named -s /sbin/nologin\nmkdir -pv /usr/local/named/\nchown -R named.named /usr/local/named\nmkdir -pv /var/named\nchown -R named.named /var/named\nchown 700 /usr/local/named/etc\nln -sf /etc/rndc.conf /usr/local/named/etc/rndc.conf\nln -sf /etc/named.conf /usr/local/named/etc/named.conf\n# 如果rndc reload报错\"ldap named[27224]: the working directory is not writable\"\n请执行：\nchown named.root named\n#Startup\n/usr/local/named/sbin/named -c /usr/local/named/etc/named.conf -u named\n```\n\n## 3.1 named.root生成\ncd /var/named/\ndig > named.root\n_or_\nwget http://ftp.internic.net/domain/named.root\n\n\\## 生成rndc.conf（用于重载zonefile），并写入到named.conf（主配置文件）文件\n\n- rndc-confgen > /etc/rndc.conf\n如果执行过程慢（由于rndc-confgen调用/dev/urandom，而/dev/urandom通过/proc/interrupts产生随机数不足，导致该命令一直等待）\n可以指定随机数文件\nrndc-confgen -r /dev/urandom > /etc/rndc.conf\n\n- 写入named.conf\n```tail -10 /etc/rndc.conf | head -9 | sed 's/\\# //g' > /etc/named.conf```\n\n- 报错：\n> May  3 00:52:54 cn-peking-dev-build named[19750]: the working directory is not writable\nMay  3 00:52:54 cn-peking-dev-build named[19750]: managed-keys-zone: loading from master file **managed-keys.bind** failed: **permission denied**\nMay  3 00:52:54 cn-peking-dev-build named[19750]: managed-keys.bind.jnl: open: permission denied\nMay  3 00:52:54 cn-peking-dev-build named[19750]: managed-keys-zone: journal rollforward failed: unexpected error\n解法：\ncd /var/named\ntouch managed-keys.bind\n\n## 3.2 BIND路径与chroot\n> 所需文件:\n\n- /etc/named.conf\n- /var/named : 放zonefile\n- 权限named\n- zonefile : 主机名记录与IP对应\n- /var/run/named : named pid文件\n\n## 3.3 Cache-only和forwarding DNS\n\n - Cache-only：仅有：\".\"这个zonefile的简单dns，没有自己的dns服务器，只有缓存查询功能。\n - Forwarding：指定上层dns服务器作为forwarding\n - 如何设定：\n  > 追加named.conf：\n    options {\n        listen-on port 53 { any; }; # 系统默认对所有接口进行监听\n        directory        \"/var/named\";\n        allow-query     { any; }; # 查询请求\n        recursion yes;\n        forward only; # 可以让dns服务器仅进行forwar，即使有.这个zonefile的设定也不会使用.的资料，只会将查询权交给上层dns\n        forwarders { 114.114.114.114;119.29.29.29; };\n    };\n\n- rndc port 953远程控制\n> rndc reload\n \n- 抓包：\n> tcpdump -K dst port 53\n\n# 4. DNS详解\n> 几点注意：\n\n- DNS服务器需要在域名注册商处注册才能成为合法的DNS服务器\n- 配置文件以及目录位置\n- named主要配置文件：named.conf\n- 正反解都需要自己的zone文件，文件名由named.conf指定\n- 当dns查询时，若本身没有解析，则向root(.)或者forwarders服务器查询\n- debug：查看日志文件/var/log/messages\n\n    IN: 关键词搜索\n    RR type与RR data：\n    主机名  IN  A   IPv4\n    域名    IN  NS  nameserver\n    域名    IN  SOA 七参数\n    域名    IN  MX 数字 邮件服务器\n    主机别名    IN  CNAME   实际主机名\n    域名    IN  TXT 文本信息，以spf、_dmarc文本格式出现\n\n## 4.1.1 A、AAAA\n\n## 4.1.2 NS\n管理此域名的服务器主机名字\n\n## 4.1.3 SOA\ndig -t soa xxx.com\n管理此域名的服务器管理信息，七个重要参数\n多个DNS主机需要Master、slave，传递zonefile\n\n- Master DNS服务器主机名\n- 管理员的email（由于@在zonefile中有特殊含义，这里用.代替）\n- Serial：序列号YYMMDD00 改一次末尾数+1（Slave据此更新zonefile）\n- 刷新频率(refresh)：slave要求master更新（新版的bind中加入了notify功能，在需要的zone中加入此设定，master在更新完成某个zonefile后会主动发讯息给slave）\n- 失败重试（Retry）：如果slave因为某种原因无法从master更新数据，此时间为slave尝试重新连接master\n- 失效时间（Expire）：如果尝试一直失败，持续到达这个设定值，则不再重新连接，等待管理员处理\n- 缓存时间（TTL）： 没有在zonefile中写RR的TTL缓存时间，则以这个为准\n\n    Refresh >= Retry * 2\n    Refresh + Retry < Expire\n    Expire >= Retry * 10\n    Expire >= 7Days\n- 可以参考正规公司的值\n- aliyun vip dns>>: vip1.alidns.com. hostmaster.hichina.com. 2015120715 3600 1200 3600 360\n\n## 4.1.4 MX \n查询域名的邮件交换服务器主机名，数字代表优先次序，值越低表明有越高的邮件处理优先权\n\n## 4.1.5 TXT\n用来记录保存域名的附加文本信息，按照一定的格式书写，常见是spf格式，SPF用于登记某个域名拥有的用来外发邮件的所有IP地址。\nv=spf1 表示txt使用的是spf格式版本1\ninclude: ip4:\n~all 表示除了前面所指定的，其他IP统统不认可\n\n## 4.2 RR 反解\nPTR就是反解，查询IP对应的主机名，后面对应的是主机名，尽量使用FQDN，也就是末尾加上(.)。\n比如173.12.11.0/24，反解需要写成11.12.173.in-addr.arpa.这样的zone名称才行。\n\n## 4.3 DNS 规划\nns1.xxx Master(NS,A)\nns2.xxx Slave(NS,A)\n\n- 取消forwarders功能，禁止zonefile传输，\n> options {\n    directory \"/var/named\";\n    pid-file \"named.pid\";\n    forwarders { 114.114.114.114; };\n    allow-query { any };\n    allow-transfer { none };\n};\nzone \".\" IN {\n    type hint;  # root\n    file \"named.root\"; # 已经下载\n}\nzone \"etiantian.org\" IN {\n    type master;\n    file \"etiantian.org.zone\";\n    allow-update { none; };\n    allow-transfer { 192.168.120.209; }; # slave\n    nitify yes;\n    also-notify { 192.168.120.209; };\n};\nzone \"120.168.192.in-addr.arpa\" IN { #需要在运营商那里修改\n    type master;\n    file \"192.168.120.zone\";\n    allow-transfer { 192.168.120.209; };\n};\n\n## 4.4正解的设定\n注意：\n- 数据要从首行开始，前面不可以有空格\n- @代表zone的意思，在etiantian.org.zone中，@代表etiantian.org\n- 在192.168.120.zone中，@代表120.168.192.in-addr.arpa.\n- . 代表FQDN而不是仅有的hostname，在etiantian.org.zone中写www.etiantian.org则代表FQDN为 www.etiantian.org.@ ==> www.etiantian.org.etiantian.org因此需要写成www.etiantian.org.或者www\n\n> etiantian.org.zone\n$ttl 38400\netiantian.org.  IN  SOA ns1.etiantian.org. webmaster.etiantian.org.     (\n    2016042400\n    10800\n    3600\n    604800\n    38400 )\n            IN  NS  ns1.etiantian.org.\n;            IN  NS  ns2.etiantian.org.\nns1         IN  A   192.168.120.208\n;ns2         IN  A   192.168.120.209\n;@           IN  MX  192.168.120.209 #错误写法\n            IN  MX 10   mail\nmail        IN  A   192.168.120.209\n\n关于 .\n- 加了. 表示这是一个FQDN，即hostname + domain name，没加的话只表示domain name。\n\n## 4.5反解的设定\n反解和正解一样都需要TTL,SOA,NS，但是相对于正解，反解仅有PTR\n> 192.168.120.zone\n$TTL 600\n@   IN  SOA ns1.etiantian.org. oldboy.etiantian.org. (\n    2016042400\n    1D\n    1H\n    1W\n    3H\n    )\n@   IN  NS  ns1.etiantian.org.\n208 IN  PTR ns1.etiantian.org.\n208 IN  PTR www.etiantian.org.\n\n- touch /var/named/touched_zone\n- named-checkconf /etc/named.conf\n- named-checkzone etiantian.org /var/named/etiantian.org.zone\n- named-checkzone 120.168.192.in-addr.arpa /var/named/192.168.120.zone\n\n## 4.6添加新的解析：\n- 针对要修改的zone，添加RR记录\n- 更改zonefile的serial，SOA的第三个参数\n- 重载named配置\n\n# 5 Slave DNS\n- 为了提供不间断dns服务，至少两部dns服务器供查询\n- 分散在不同的网段或者不同的机房\n- 一部master、其他为slave\n- slave本身无zonefile，其zonefile从master dns同步过来\n- 要传输的zonefile在named.conf中设定\n\n## 5.1.1 Master设定\n> vim named.conf\nzone \"etiantian.org\" IN {\n    type master;\n    file \"etiantian.org.zone\";\n    **allow-transfer { 192.168.120.209; };**\n};\nzone \"120.168.192.in-addr.arpa\" IN {\n    type master;\n    file \"192.168.120.zone\";\n    **allow-transfer { 192.168.120.209; };**\n};\n\n## 5.1.2 在master的zonefile中添加A、NS、PTR记录（ns2）\n> vim etiantian.org.zone 192.168.120.zone\n    IN  NS  ns2.etiantian.org.\nns2 IN  A   192.168.120.209\n<<<<>>>>>>\n209 IN  PTR ns2.etiantian.org.\n\n## 5.2 Slave设定\n> vim named.conf\nzone \"etiantian.org\" IN {\n    type slave;\n    file \"etiantian.org.zone\";\n    master { 192.168.120.208; };\n};\nzone \"120.168.192.in-addr.arpa\" IN {\n    type slave;\n    file \"192.168.120.zone\";\n    master { 192.168.120.208; };\n};\n\n## 5.3 在Master添加A记录\n> vim etiantian.org.zone\np   IN  A 192.168.120.208\na.p   IN  A 192.168.120.208\nb.p   IN  A 192.168.120.208\nc.p   IN  A 192.168.120.208\n\n> 更新RR记录，需要serial+1；更新zonefile需要rndc reload；修改named.conf需要重启named\n\n# 6 DNS View\n> 视图\n根据用户来源不同而返回不同的查询结果，这个常用在cdn中，也是解决区域间带宽小和延迟大问题的解法。\n\n- 语法：\n在named.conf文件中，view配置如下：\n> view \"internal\" {\n};\ninternal是区域名称，可自定义，需要唯一。\n区分区域通过match-clients关键字实现：\n> view \"xxx\" {\n    match-clients { 10.0.0.0/25; };\n};\n实现xxx视图只响应10.0.0.0/25段的请求；关键字**any**\n由于可能需要定义非常多的网段，BIND引入了**acl**关键字定义变量替换\n> acl \"cnc\" { 192.168.1/24;192.168.2/24; };\nview \"internal\" {\n    match-clients { \"cnc\"; };\n};\n\n- 常见：\n> \noptions {\n};\nacl \"\" {};\nview \"\" {\n    match-clients { \"\" };\n    zone \"\" {\n    };\n};\nview \"\" {\n    match-clients { \"\" };\n    recursion no;\n    zone \"\" {\n    };\n};\n\n- 视图请求从上自下，如果请求的区域在上一个视图中，就不会向下一个视图请求，即使在下一个视图中放入了这个区域。\n\n- 从服务器IP配置。**因为在主服务器中划分了视图，不同来源区域被分配到不同的视图中处理，如果从服务器只有一个ip地址，从服务器就只能同步主服务器中单个视图中的zonefile。所以从服务器需要与主服务器视图数量相匹配的IP地址数量**\n\n- 默认情况下从服务器使用本地第一张网卡绑定的IP地址发送同步请求，如果不做调整，从服务器视图中仅同步第一张网卡的ip地址的主服务器视图信息。这时候我们需要在从服务器的视图中设置**transfer-source**关键字。\n> transfer-source\n***transfer-source (ip4_addr | *) [port ip_port]; ]***\n\n如下是一个slave服务器视图named.conf文件：\n> options {\n};\nalc \"\" {  };\nview \"\" {\n    match-clients { \"\"; };\n    **transfer-source 192.168.120.208;**\n    zone \"\" {\n    };\n};\n\n## 6.1 DNS View规划\n- named.conf ： 主配置文件\n> include \"dx.cfg\";\ninclude \"wt.cfg\";\n\n- /var/named/dx/etiantian.org.zone\n- /var/named/wt/etiantian.org.zone\n- /var/named/others/etiantian.org.zone\n\n- /var/named/dx.cfg\n- /var/named/wt.cfg\n\n## 6.2 cfg文件\n> vim dx.cfg\nacl dx { ; };\n> vim wt.cfg\nacl wt { ; };\n\n## 6.3 Master zone配置文件\n> vim wt/etiantian.org.zone\n$ttl 38400\netiantian.org.  IN  SOA ns1.etiantian.org. webmaster.etiantian.org. (\n    2016042400\n    10800\n    3600\n    604800\n    38400)\n    IN  NS  ns1.etiantian.org.\n    IN  NS  ns2.etiantian.org.\nns1 IN  A   192.168.120.208\nns2 IN  A   192.168.120.209\n    IN  MX  10  mail\nwww IN  A   192.168.120.20\nblog    IN  CNAME   www\nmail    IN  A   192.168.120.0\n\n## 6.4 验证\n- windows : nslookup www.etiantian.org 192.168.120.208\n- Linux : dig www.etiantian.org @192.168.120.208\n\n## 6.5 Slave\n三个view，需要三个ip去同步各个zonefile\n> vim named.conf\noptions {\n};\ninclude \"dx.cfg\";\ninclude \"wt.cfg\";\nview \"wtzone\" {\n    match-clients { wt; 10.0.0.8; !10.0.0.9; !10.0.0.10; };\n    **transfer-source 10.0.0.8; # Master >> allow-transfer { 10.0.0.8; };\n    allow-notify { 10.0.0.8; };** # Master >> also-notify { 10.0.0.8; };\n    recursion yes;\nzone \".\" IN {\n    type hint;\n    file \"named.root\";\n};\nzone \"etiantian.org\" IN {\n    type slave;\n    file \"wt/etiantian.org.zone\";\n    masters {  10.0.0.7; };         ## <<<<<<<<<< Master\n};\n};\nview \"dxzone\" {\n    match-clients { wt; !10.0.0.8; 10.0.0.9; !10.0.0.10; };\n    **transfer-source 10.0.0.9;   # Master >> allow-transfer { 10.0.0.9; };\n    allow-notify { 10.0.0.9; }; # Master >> also-notify { 10.0.0.9; };**\n    recursion yes;\nzone \".\" IN {\n    type hint;\n    file \"named.root\";\n};\nzone \"etiantian.org\" IN {\n    type slave;\n    file \"dx/etiantian.org.zone\";\n    masters {  10.0.0.7; };         ## <<<<<<<<<< Master\n};\n};\nview \"otherszone\" {\n    match-clients { any; !10.0.0.8; !10.0.0.9; 10.0.0.10; };\n    **transfer-source 10.0.0.10; # Master >> allow-transfer { 10.0.0.10; };\n    allow-notify { 10.0.0.10; }; # Master >> also-notify { 10.0.0.10; };**\n    recursion yes;\nzone \"etiantian.org\" IN {\n    type slave;\n    file \"others/etiantian.org.zone\";\n    masters {  10.0.0.7; };         ## <<<<<<<<<< Master\n};    \n};\n\n> 配置ip地址\n\n``` cp -ap ifconfig-eth1 ifconfig-eth1:0```\n``` cp -ap ifconfig-eth1 ifconfig-eth1:1```\n\n```\nDEVICE=eth1:0\nBOOTPROTO=none\nONBOOT=yes\nIPV6INIT=no\nIPADDR=10.0.0.9\n```\n- ifconfig eth0:0 10.0.0.9 netmask 24\n- ifconfig eth0:1 10.0.0.10 netmask 24\n",
				"html": "<h1 id=\"DNS与智能DNS服务\"><a href=\"#DNS与智能DNS服务\" class=\"headerlink\" title=\"DNS与智能DNS服务\"></a>DNS与智能DNS服务</h1><h1 id=\"2-client端设定\"><a href=\"#2-client端设定\" class=\"headerlink\" title=\"2. client端设定\"></a>2. client端设定</h1><h2 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h2><blockquote>\n<p>/etc/hosts<br>早期hostname对应IP的文件</p>\n</blockquote>\n<blockquote>\n<p>/etc/resolv.conf<br>主机dns配置</p>\n</blockquote>\n<blockquote>\n<p>/etc/nsswitch.conf<br>dns查询优先级<br><figure class=\"highlight plain\"><figcaption><span>hosts</span><a href=\"/etc/nsswitch.conf\">link</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\"></span><br><span class=\"line\">## 查询命令</span><br><span class=\"line\">### host</span><br><span class=\"line\"></span><br><span class=\"line\">### nslookup</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; A记录：IP地址</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; PTR：反解</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; MX：邮件交换器</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; NS：DNS服务器</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; TXT：文本信息</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; SOA：用于DNS Zone的“起始授权机构”</span><br><span class=\"line\"></span><br><span class=\"line\">### dig</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">dig xxx.com @DNS-server</span><br><span class=\"line\">&gt; 正解：</span><br><span class=\"line\">dig [-t mx ns txt soa] xxxx.com</span><br><span class=\"line\"></span><br><span class=\"line\">``` bash</span><br><span class=\"line\">[root@ldap ~]# dig 91taogu.com</span><br><span class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.37.rc1.el6_7.7 &lt;&lt;&gt;&gt; 91taogu.com</span><br><span class=\"line\">;; global options: +cmd</span><br><span class=\"line\">;; Got answer:</span><br><span class=\"line\">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 21781</span><br><span class=\"line\">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0</span><br><span class=\"line\"></span><br><span class=\"line\">;; QUESTION SECTION:</span><br><span class=\"line\">;91taogu.com.\t\t\tIN\tA</span><br><span class=\"line\"></span><br><span class=\"line\">;; ANSWER SECTION:</span><br><span class=\"line\">91taogu.com.\t\t497\tIN\tA\t123.56.149.61</span><br><span class=\"line\"></span><br><span class=\"line\">;; Query time: 97 msec</span><br><span class=\"line\">;; SERVER: 119.29.29.29#53(119.29.29.29)</span><br><span class=\"line\">;; WHEN: Wed Apr 27 14:30:27 2016</span><br><span class=\"line\">;; MSG SIZE  rcvd: 45</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>反解：<br>dig -x ip</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@ldap ~]<span class=\"comment\"># dig -x 123.56.149.61</span></span><br><span class=\"line\"></span><br><span class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.37.rc1.el6_7.7 &lt;&lt;&gt;&gt; -x 123.56.149.61</span><br><span class=\"line\">;; global options: +cmd</span><br><span class=\"line\">;; Got answer:</span><br><span class=\"line\">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NXDOMAIN, id: 37936</span><br><span class=\"line\">;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 0</span><br><span class=\"line\"></span><br><span class=\"line\">;; QUESTION SECTION:</span><br><span class=\"line\">;61.149.56.123.in-addr.arpa.\tIN\tPTR</span><br><span class=\"line\"></span><br><span class=\"line\">;; AUTHORITY SECTION:</span><br><span class=\"line\">56.123.in-addr.arpa.\t508\tIN\tSOA\thidden-master.aliyun.com. hostmaster.aliyun-inc.com. 2013090588 7200 900 2592000 600</span><br><span class=\"line\"></span><br><span class=\"line\">;; Query time: 7 msec</span><br><span class=\"line\">;; SERVER: 119.29.29.29<span class=\"comment\">#53(119.29.29.29)</span></span><br><span class=\"line\">;; WHEN: Wed Apr 27 14:30:32 2016</span><br><span class=\"line\">;; MSG SIZE  rcvd: 126</span><br></pre></td></tr></table></figure>\n<h3 id=\"whois\"><a href=\"#whois\" class=\"headerlink\" title=\"whois\"></a>whois</h3><blockquote>\n</blockquote>\n<p>查询域名所有人</p>\n<h1 id=\"3-BIND\"><a href=\"#3-BIND\" class=\"headerlink\" title=\"3. BIND\"></a>3. BIND</h1><h2 id=\"3-0-安装\"><a href=\"#3-0-安装\" class=\"headerlink\" title=\"3.0 安装\"></a>3.0 安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum install bind bind-utils openssl-devel</span><br></pre></td></tr></table></figure>\n<ul>\n<li>或者：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum install openssl-devel openssl -y</span><br><span class=\"line\">wget http://ftp.isc.org/isc/bind9/9.9.8/<span class=\"built_in\">bind</span>-9.9.8.tar.gz</span><br><span class=\"line\">tar zxf <span class=\"built_in\">bind</span>-9.9.8.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"built_in\">bind</span>-9.9.8</span><br><span class=\"line\">./configure --prefix=/usr/<span class=\"built_in\">local</span>/named --<span class=\"built_in\">enable</span>-threads --datadir=/usr/share --<span class=\"built_in\">enable</span>-largefile --with-make-clean</span><br><span class=\"line\">make -j4</span><br><span class=\"line\">make install &amp;&amp; <span class=\"built_in\">echo</span> $?</span><br><span class=\"line\">groupadd named</span><br><span class=\"line\">useradd named -g named -d /usr/<span class=\"built_in\">local</span>/named -s /sbin/nologin</span><br><span class=\"line\">mkdir -pv /usr/<span class=\"built_in\">local</span>/named/</span><br><span class=\"line\">chown -R named.named /usr/<span class=\"built_in\">local</span>/named</span><br><span class=\"line\">mkdir -pv /var/named</span><br><span class=\"line\">chown -R named.named /var/named</span><br><span class=\"line\">chown 700 /usr/<span class=\"built_in\">local</span>/named/etc</span><br><span class=\"line\">ln -sf /etc/rndc.conf /usr/<span class=\"built_in\">local</span>/named/etc/rndc.conf</span><br><span class=\"line\">ln -sf /etc/named.conf /usr/<span class=\"built_in\">local</span>/named/etc/named.conf</span><br><span class=\"line\"><span class=\"comment\"># 如果rndc reload报错\"ldap named[27224]: the working directory is not writable\"</span></span><br><span class=\"line\">请执行：</span><br><span class=\"line\">chown named.root named</span><br><span class=\"line\"><span class=\"comment\">#Startup</span></span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/named/sbin/named -c /usr/<span class=\"built_in\">local</span>/named/etc/named.conf -u named</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-1-named-root生成\"><a href=\"#3-1-named-root生成\" class=\"headerlink\" title=\"3.1 named.root生成\"></a>3.1 named.root生成</h2><p>cd /var/named/<br>dig &gt; named.root<br>_or_<br>wget <a href=\"http://ftp.internic.net/domain/named.root\" target=\"_blank\" rel=\"noopener\">http://ftp.internic.net/domain/named.root</a></p>\n<p>## 生成rndc.conf（用于重载zonefile），并写入到named.conf（主配置文件）文件</p>\n<ul>\n<li><p>rndc-confgen &gt; /etc/rndc.conf<br>如果执行过程慢（由于rndc-confgen调用/dev/urandom，而/dev/urandom通过/proc/interrupts产生随机数不足，导致该命令一直等待）<br>可以指定随机数文件<br>rndc-confgen -r /dev/urandom &gt; /etc/rndc.conf</p>\n</li>\n<li><p>写入named.conf</p>\n<figure class=\"highlight plain\"><figcaption><span>-10</span><a href=\"/etc/rndc.conf\">| head -9 | sed 's/\\# //g' > /etc/named.conf```</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 报错：</span><br><span class=\"line\">&gt; May  3 00:52:54 cn-peking-dev-build named[19750]: the working directory is not writable</span><br><span class=\"line\">May  3 00:52:54 cn-peking-dev-build named[19750]: managed-keys-zone: loading from master file **managed-keys.bind** failed: **permission denied**</span><br><span class=\"line\">May  3 00:52:54 cn-peking-dev-build named[19750]: managed-keys.bind.jnl: open: permission denied</span><br><span class=\"line\">May  3 00:52:54 cn-peking-dev-build named[19750]: managed-keys-zone: journal rollforward failed: unexpected error</span><br><span class=\"line\">解法：</span><br><span class=\"line\">cd /var/named</span><br><span class=\"line\">touch managed-keys.bind</span><br><span class=\"line\"></span><br><span class=\"line\">## 3.2 BIND路径与chroot</span><br><span class=\"line\">&gt; 所需文件:</span><br><span class=\"line\"></span><br><span class=\"line\">- /etc/named.conf</span><br><span class=\"line\">- /var/named : 放zonefile</span><br><span class=\"line\">- 权限named</span><br><span class=\"line\">- zonefile : 主机名记录与IP对应</span><br><span class=\"line\">- /var/run/named : named pid文件</span><br><span class=\"line\"></span><br><span class=\"line\">## 3.3 Cache-only和forwarding DNS</span><br><span class=\"line\"></span><br><span class=\"line\"> - Cache-only：仅有：&quot;.&quot;这个zonefile的简单dns，没有自己的dns服务器，只有缓存查询功能。</span><br><span class=\"line\"> - Forwarding：指定上层dns服务器作为forwarding</span><br><span class=\"line\"> - 如何设定：</span><br><span class=\"line\">  &gt; 追加named.conf：</span><br><span class=\"line\">    options &#123;</span><br><span class=\"line\">        listen-on port 53 &#123; any; &#125;; # 系统默认对所有接口进行监听</span><br><span class=\"line\">        directory        &quot;/var/named&quot;;</span><br><span class=\"line\">        allow-query     &#123; any; &#125;; # 查询请求</span><br><span class=\"line\">        recursion yes;</span><br><span class=\"line\">        forward only; # 可以让dns服务器仅进行forwar，即使有.这个zonefile的设定也不会使用.的资料，只会将查询权交给上层dns</span><br><span class=\"line\">        forwarders &#123; 114.114.114.114;119.29.29.29; &#125;;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">- rndc port 953远程控制</span><br><span class=\"line\">&gt; rndc reload</span><br><span class=\"line\"> </span><br><span class=\"line\">- 抓包：</span><br><span class=\"line\">&gt; tcpdump -K dst port 53</span><br><span class=\"line\"></span><br><span class=\"line\"># 4. DNS详解</span><br><span class=\"line\">&gt; 几点注意：</span><br><span class=\"line\"></span><br><span class=\"line\">- DNS服务器需要在域名注册商处注册才能成为合法的DNS服务器</span><br><span class=\"line\">- 配置文件以及目录位置</span><br><span class=\"line\">- named主要配置文件：named.conf</span><br><span class=\"line\">- 正反解都需要自己的zone文件，文件名由named.conf指定</span><br><span class=\"line\">- 当dns查询时，若本身没有解析，则向root(.)或者forwarders服务器查询</span><br><span class=\"line\">- debug：查看日志文件/var/log/messages</span><br><span class=\"line\"></span><br><span class=\"line\">    IN: 关键词搜索</span><br><span class=\"line\">    RR type与RR data：</span><br><span class=\"line\">    主机名  IN  A   IPv4</span><br><span class=\"line\">    域名    IN  NS  nameserver</span><br><span class=\"line\">    域名    IN  SOA 七参数</span><br><span class=\"line\">    域名    IN  MX 数字 邮件服务器</span><br><span class=\"line\">    主机别名    IN  CNAME   实际主机名</span><br><span class=\"line\">    域名    IN  TXT 文本信息，以spf、_dmarc文本格式出现</span><br><span class=\"line\"></span><br><span class=\"line\">## 4.1.1 A、AAAA</span><br><span class=\"line\"></span><br><span class=\"line\">## 4.1.2 NS</span><br><span class=\"line\">管理此域名的服务器主机名字</span><br><span class=\"line\"></span><br><span class=\"line\">## 4.1.3 SOA</span><br><span class=\"line\">dig -t soa xxx.com</span><br><span class=\"line\">管理此域名的服务器管理信息，七个重要参数</span><br><span class=\"line\">多个DNS主机需要Master、slave，传递zonefile</span><br><span class=\"line\"></span><br><span class=\"line\">- Master DNS服务器主机名</span><br><span class=\"line\">- 管理员的email（由于@在zonefile中有特殊含义，这里用.代替）</span><br><span class=\"line\">- Serial：序列号YYMMDD00 改一次末尾数+1（Slave据此更新zonefile）</span><br><span class=\"line\">- 刷新频率(refresh)：slave要求master更新（新版的bind中加入了notify功能，在需要的zone中加入此设定，master在更新完成某个zonefile后会主动发讯息给slave）</span><br><span class=\"line\">- 失败重试（Retry）：如果slave因为某种原因无法从master更新数据，此时间为slave尝试重新连接master</span><br><span class=\"line\">- 失效时间（Expire）：如果尝试一直失败，持续到达这个设定值，则不再重新连接，等待管理员处理</span><br><span class=\"line\">- 缓存时间（TTL）： 没有在zonefile中写RR的TTL缓存时间，则以这个为准</span><br><span class=\"line\"></span><br><span class=\"line\">    Refresh &gt;= Retry * 2</span><br><span class=\"line\">    Refresh + Retry &lt; Expire</span><br><span class=\"line\">    Expire &gt;= Retry * 10</span><br><span class=\"line\">    Expire &gt;= 7Days</span><br><span class=\"line\">- 可以参考正规公司的值</span><br><span class=\"line\">- aliyun vip dns&gt;&gt;: vip1.alidns.com. hostmaster.hichina.com. 2015120715 3600 1200 3600 360</span><br><span class=\"line\"></span><br><span class=\"line\">## 4.1.4 MX </span><br><span class=\"line\">查询域名的邮件交换服务器主机名，数字代表优先次序，值越低表明有越高的邮件处理优先权</span><br><span class=\"line\"></span><br><span class=\"line\">## 4.1.5 TXT</span><br><span class=\"line\">用来记录保存域名的附加文本信息，按照一定的格式书写，常见是spf格式，SPF用于登记某个域名拥有的用来外发邮件的所有IP地址。</span><br><span class=\"line\">v=spf1 表示txt使用的是spf格式版本1</span><br><span class=\"line\">include: ip4:</span><br><span class=\"line\">~all 表示除了前面所指定的，其他IP统统不认可</span><br><span class=\"line\"></span><br><span class=\"line\">## 4.2 RR 反解</span><br><span class=\"line\">PTR就是反解，查询IP对应的主机名，后面对应的是主机名，尽量使用FQDN，也就是末尾加上(.)。</span><br><span class=\"line\">比如173.12.11.0/24，反解需要写成11.12.173.in-addr.arpa.这样的zone名称才行。</span><br><span class=\"line\"></span><br><span class=\"line\">## 4.3 DNS 规划</span><br><span class=\"line\">ns1.xxx Master(NS,A)</span><br><span class=\"line\">ns2.xxx Slave(NS,A)</span><br><span class=\"line\"></span><br><span class=\"line\">- 取消forwarders功能，禁止zonefile传输，</span><br><span class=\"line\">&gt; options &#123;</span><br><span class=\"line\">    directory &quot;/var/named&quot;;</span><br><span class=\"line\">    pid-file &quot;named.pid&quot;;</span><br><span class=\"line\">    forwarders &#123; 114.114.114.114; &#125;;</span><br><span class=\"line\">    allow-query &#123; any &#125;;</span><br><span class=\"line\">    allow-transfer &#123; none &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">zone &quot;.&quot; IN &#123;</span><br><span class=\"line\">    type hint;  # root</span><br><span class=\"line\">    file &quot;named.root&quot;; # 已经下载</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">zone &quot;etiantian.org&quot; IN &#123;</span><br><span class=\"line\">    type master;</span><br><span class=\"line\">    file &quot;etiantian.org.zone&quot;;</span><br><span class=\"line\">    allow-update &#123; none; &#125;;</span><br><span class=\"line\">    allow-transfer &#123; 192.168.120.209; &#125;; # slave</span><br><span class=\"line\">    nitify yes;</span><br><span class=\"line\">    also-notify &#123; 192.168.120.209; &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">zone &quot;120.168.192.in-addr.arpa&quot; IN &#123; #需要在运营商那里修改</span><br><span class=\"line\">    type master;</span><br><span class=\"line\">    file &quot;192.168.120.zone&quot;;</span><br><span class=\"line\">    allow-transfer &#123; 192.168.120.209; &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">## 4.4正解的设定</span><br><span class=\"line\">注意：</span><br><span class=\"line\">- 数据要从首行开始，前面不可以有空格</span><br><span class=\"line\">- @代表zone的意思，在etiantian.org.zone中，@代表etiantian.org</span><br><span class=\"line\">- 在192.168.120.zone中，@代表120.168.192.in-addr.arpa.</span><br><span class=\"line\">- . 代表FQDN而不是仅有的hostname，在etiantian.org.zone中写www.etiantian.org则代表FQDN为 www.etiantian.org.@ ==&gt; www.etiantian.org.etiantian.org因此需要写成www.etiantian.org.或者www</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; etiantian.org.zone</span><br><span class=\"line\">$ttl 38400</span><br><span class=\"line\">etiantian.org.  IN  SOA ns1.etiantian.org. webmaster.etiantian.org.     (</span><br><span class=\"line\">    2016042400</span><br><span class=\"line\">    10800</span><br><span class=\"line\">    3600</span><br><span class=\"line\">    604800</span><br><span class=\"line\">    38400 )</span><br><span class=\"line\">            IN  NS  ns1.etiantian.org.</span><br><span class=\"line\">;            IN  NS  ns2.etiantian.org.</span><br><span class=\"line\">ns1         IN  A   192.168.120.208</span><br><span class=\"line\">;ns2         IN  A   192.168.120.209</span><br><span class=\"line\">;@           IN  MX  192.168.120.209 #错误写法</span><br><span class=\"line\">            IN  MX 10   mail</span><br><span class=\"line\">mail        IN  A   192.168.120.209</span><br><span class=\"line\"></span><br><span class=\"line\">关于 .</span><br><span class=\"line\">- 加了. 表示这是一个FQDN，即hostname + domain name，没加的话只表示domain name。</span><br><span class=\"line\"></span><br><span class=\"line\">## 4.5反解的设定</span><br><span class=\"line\">反解和正解一样都需要TTL,SOA,NS，但是相对于正解，反解仅有PTR</span><br><span class=\"line\">&gt; 192.168.120.zone</span><br><span class=\"line\">$TTL 600</span><br><span class=\"line\">@   IN  SOA ns1.etiantian.org. oldboy.etiantian.org. (</span><br><span class=\"line\">    2016042400</span><br><span class=\"line\">    1D</span><br><span class=\"line\">    1H</span><br><span class=\"line\">    1W</span><br><span class=\"line\">    3H</span><br><span class=\"line\">    )</span><br><span class=\"line\">@   IN  NS  ns1.etiantian.org.</span><br><span class=\"line\">208 IN  PTR ns1.etiantian.org.</span><br><span class=\"line\">208 IN  PTR www.etiantian.org.</span><br><span class=\"line\"></span><br><span class=\"line\">- touch /var/named/touched_zone</span><br><span class=\"line\">- named-checkconf /etc/named.conf</span><br><span class=\"line\">- named-checkzone etiantian.org /var/named/etiantian.org.zone</span><br><span class=\"line\">- named-checkzone 120.168.192.in-addr.arpa /var/named/192.168.120.zone</span><br><span class=\"line\"></span><br><span class=\"line\">## 4.6添加新的解析：</span><br><span class=\"line\">- 针对要修改的zone，添加RR记录</span><br><span class=\"line\">- 更改zonefile的serial，SOA的第三个参数</span><br><span class=\"line\">- 重载named配置</span><br><span class=\"line\"></span><br><span class=\"line\"># 5 Slave DNS</span><br><span class=\"line\">- 为了提供不间断dns服务，至少两部dns服务器供查询</span><br><span class=\"line\">- 分散在不同的网段或者不同的机房</span><br><span class=\"line\">- 一部master、其他为slave</span><br><span class=\"line\">- slave本身无zonefile，其zonefile从master dns同步过来</span><br><span class=\"line\">- 要传输的zonefile在named.conf中设定</span><br><span class=\"line\"></span><br><span class=\"line\">## 5.1.1 Master设定</span><br><span class=\"line\">&gt; vim named.conf</span><br><span class=\"line\">zone &quot;etiantian.org&quot; IN &#123;</span><br><span class=\"line\">    type master;</span><br><span class=\"line\">    file &quot;etiantian.org.zone&quot;;</span><br><span class=\"line\">    **allow-transfer &#123; 192.168.120.209; &#125;;**</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">zone &quot;120.168.192.in-addr.arpa&quot; IN &#123;</span><br><span class=\"line\">    type master;</span><br><span class=\"line\">    file &quot;192.168.120.zone&quot;;</span><br><span class=\"line\">    **allow-transfer &#123; 192.168.120.209; &#125;;**</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">## 5.1.2 在master的zonefile中添加A、NS、PTR记录（ns2）</span><br><span class=\"line\">&gt; vim etiantian.org.zone 192.168.120.zone</span><br><span class=\"line\">    IN  NS  ns2.etiantian.org.</span><br><span class=\"line\">ns2 IN  A   192.168.120.209</span><br><span class=\"line\">&lt;&lt;&lt;&lt;&gt;&gt;&gt;&gt;&gt;&gt;</span><br><span class=\"line\">209 IN  PTR ns2.etiantian.org.</span><br><span class=\"line\"></span><br><span class=\"line\">## 5.2 Slave设定</span><br><span class=\"line\">&gt; vim named.conf</span><br><span class=\"line\">zone &quot;etiantian.org&quot; IN &#123;</span><br><span class=\"line\">    type slave;</span><br><span class=\"line\">    file &quot;etiantian.org.zone&quot;;</span><br><span class=\"line\">    master &#123; 192.168.120.208; &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">zone &quot;120.168.192.in-addr.arpa&quot; IN &#123;</span><br><span class=\"line\">    type slave;</span><br><span class=\"line\">    file &quot;192.168.120.zone&quot;;</span><br><span class=\"line\">    master &#123; 192.168.120.208; &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">## 5.3 在Master添加A记录</span><br><span class=\"line\">&gt; vim etiantian.org.zone</span><br><span class=\"line\">p   IN  A 192.168.120.208</span><br><span class=\"line\">a.p   IN  A 192.168.120.208</span><br><span class=\"line\">b.p   IN  A 192.168.120.208</span><br><span class=\"line\">c.p   IN  A 192.168.120.208</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; 更新RR记录，需要serial+1；更新zonefile需要rndc reload；修改named.conf需要重启named</span><br><span class=\"line\"></span><br><span class=\"line\"># 6 DNS View</span><br><span class=\"line\">&gt; 视图</span><br><span class=\"line\">根据用户来源不同而返回不同的查询结果，这个常用在cdn中，也是解决区域间带宽小和延迟大问题的解法。</span><br><span class=\"line\"></span><br><span class=\"line\">- 语法：</span><br><span class=\"line\">在named.conf文件中，view配置如下：</span><br><span class=\"line\">&gt; view &quot;internal&quot; &#123;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">internal是区域名称，可自定义，需要唯一。</span><br><span class=\"line\">区分区域通过match-clients关键字实现：</span><br><span class=\"line\">&gt; view &quot;xxx&quot; &#123;</span><br><span class=\"line\">    match-clients &#123; 10.0.0.0/25; &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">实现xxx视图只响应10.0.0.0/25段的请求；关键字**any**</span><br><span class=\"line\">由于可能需要定义非常多的网段，BIND引入了**acl**关键字定义变量替换</span><br><span class=\"line\">&gt; acl &quot;cnc&quot; &#123; 192.168.1/24;192.168.2/24; &#125;;</span><br><span class=\"line\">view &quot;internal&quot; &#123;</span><br><span class=\"line\">    match-clients &#123; &quot;cnc&quot;; &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">- 常见：</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">options &#123;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">acl &quot;&quot; &#123;&#125;;</span><br><span class=\"line\">view &quot;&quot; &#123;</span><br><span class=\"line\">    match-clients &#123; &quot;&quot; &#125;;</span><br><span class=\"line\">    zone &quot;&quot; &#123;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">view &quot;&quot; &#123;</span><br><span class=\"line\">    match-clients &#123; &quot;&quot; &#125;;</span><br><span class=\"line\">    recursion no;</span><br><span class=\"line\">    zone &quot;&quot; &#123;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">- 视图请求从上自下，如果请求的区域在上一个视图中，就不会向下一个视图请求，即使在下一个视图中放入了这个区域。</span><br><span class=\"line\"></span><br><span class=\"line\">- 从服务器IP配置。**因为在主服务器中划分了视图，不同来源区域被分配到不同的视图中处理，如果从服务器只有一个ip地址，从服务器就只能同步主服务器中单个视图中的zonefile。所以从服务器需要与主服务器视图数量相匹配的IP地址数量**</span><br><span class=\"line\"></span><br><span class=\"line\">- 默认情况下从服务器使用本地第一张网卡绑定的IP地址发送同步请求，如果不做调整，从服务器视图中仅同步第一张网卡的ip地址的主服务器视图信息。这时候我们需要在从服务器的视图中设置**transfer-source**关键字。</span><br><span class=\"line\">&gt; transfer-source</span><br><span class=\"line\">***transfer-source (ip4_addr | *) [port ip_port]; ]***</span><br><span class=\"line\"></span><br><span class=\"line\">如下是一个slave服务器视图named.conf文件：</span><br><span class=\"line\">&gt; options &#123;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">alc &quot;&quot; &#123;  &#125;;</span><br><span class=\"line\">view &quot;&quot; &#123;</span><br><span class=\"line\">    match-clients &#123; &quot;&quot;; &#125;;</span><br><span class=\"line\">    **transfer-source 192.168.120.208;**</span><br><span class=\"line\">    zone &quot;&quot; &#123;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">## 6.1 DNS View规划</span><br><span class=\"line\">- named.conf ： 主配置文件</span><br><span class=\"line\">&gt; include &quot;dx.cfg&quot;;</span><br><span class=\"line\">include &quot;wt.cfg&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">- /var/named/dx/etiantian.org.zone</span><br><span class=\"line\">- /var/named/wt/etiantian.org.zone</span><br><span class=\"line\">- /var/named/others/etiantian.org.zone</span><br><span class=\"line\"></span><br><span class=\"line\">- /var/named/dx.cfg</span><br><span class=\"line\">- /var/named/wt.cfg</span><br><span class=\"line\"></span><br><span class=\"line\">## 6.2 cfg文件</span><br><span class=\"line\">&gt; vim dx.cfg</span><br><span class=\"line\">acl dx &#123; ; &#125;;</span><br><span class=\"line\">&gt; vim wt.cfg</span><br><span class=\"line\">acl wt &#123; ; &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">## 6.3 Master zone配置文件</span><br><span class=\"line\">&gt; vim wt/etiantian.org.zone</span><br><span class=\"line\">$ttl 38400</span><br><span class=\"line\">etiantian.org.  IN  SOA ns1.etiantian.org. webmaster.etiantian.org. (</span><br><span class=\"line\">    2016042400</span><br><span class=\"line\">    10800</span><br><span class=\"line\">    3600</span><br><span class=\"line\">    604800</span><br><span class=\"line\">    38400)</span><br><span class=\"line\">    IN  NS  ns1.etiantian.org.</span><br><span class=\"line\">    IN  NS  ns2.etiantian.org.</span><br><span class=\"line\">ns1 IN  A   192.168.120.208</span><br><span class=\"line\">ns2 IN  A   192.168.120.209</span><br><span class=\"line\">    IN  MX  10  mail</span><br><span class=\"line\">www IN  A   192.168.120.20</span><br><span class=\"line\">blog    IN  CNAME   www</span><br><span class=\"line\">mail    IN  A   192.168.120.0</span><br><span class=\"line\"></span><br><span class=\"line\">## 6.4 验证</span><br><span class=\"line\">- windows : nslookup www.etiantian.org 192.168.120.208</span><br><span class=\"line\">- Linux : dig www.etiantian.org @192.168.120.208</span><br><span class=\"line\"></span><br><span class=\"line\">## 6.5 Slave</span><br><span class=\"line\">三个view，需要三个ip去同步各个zonefile</span><br><span class=\"line\">&gt; vim named.conf</span><br><span class=\"line\">options &#123;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">include &quot;dx.cfg&quot;;</span><br><span class=\"line\">include &quot;wt.cfg&quot;;</span><br><span class=\"line\">view &quot;wtzone&quot; &#123;</span><br><span class=\"line\">    match-clients &#123; wt; 10.0.0.8; !10.0.0.9; !10.0.0.10; &#125;;</span><br><span class=\"line\">    **transfer-source 10.0.0.8; # Master &gt;&gt; allow-transfer &#123; 10.0.0.8; &#125;;</span><br><span class=\"line\">    allow-notify &#123; 10.0.0.8; &#125;;** # Master &gt;&gt; also-notify &#123; 10.0.0.8; &#125;;</span><br><span class=\"line\">    recursion yes;</span><br><span class=\"line\">zone &quot;.&quot; IN &#123;</span><br><span class=\"line\">    type hint;</span><br><span class=\"line\">    file &quot;named.root&quot;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">zone &quot;etiantian.org&quot; IN &#123;</span><br><span class=\"line\">    type slave;</span><br><span class=\"line\">    file &quot;wt/etiantian.org.zone&quot;;</span><br><span class=\"line\">    masters &#123;  10.0.0.7; &#125;;         ## &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Master</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">view &quot;dxzone&quot; &#123;</span><br><span class=\"line\">    match-clients &#123; wt; !10.0.0.8; 10.0.0.9; !10.0.0.10; &#125;;</span><br><span class=\"line\">    **transfer-source 10.0.0.9;   # Master &gt;&gt; allow-transfer &#123; 10.0.0.9; &#125;;</span><br><span class=\"line\">    allow-notify &#123; 10.0.0.9; &#125;; # Master &gt;&gt; also-notify &#123; 10.0.0.9; &#125;;**</span><br><span class=\"line\">    recursion yes;</span><br><span class=\"line\">zone &quot;.&quot; IN &#123;</span><br><span class=\"line\">    type hint;</span><br><span class=\"line\">    file &quot;named.root&quot;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">zone &quot;etiantian.org&quot; IN &#123;</span><br><span class=\"line\">    type slave;</span><br><span class=\"line\">    file &quot;dx/etiantian.org.zone&quot;;</span><br><span class=\"line\">    masters &#123;  10.0.0.7; &#125;;         ## &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Master</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">view &quot;otherszone&quot; &#123;</span><br><span class=\"line\">    match-clients &#123; any; !10.0.0.8; !10.0.0.9; 10.0.0.10; &#125;;</span><br><span class=\"line\">    **transfer-source 10.0.0.10; # Master &gt;&gt; allow-transfer &#123; 10.0.0.10; &#125;;</span><br><span class=\"line\">    allow-notify &#123; 10.0.0.10; &#125;; # Master &gt;&gt; also-notify &#123; 10.0.0.10; &#125;;**</span><br><span class=\"line\">    recursion yes;</span><br><span class=\"line\">zone &quot;etiantian.org&quot; IN &#123;</span><br><span class=\"line\">    type slave;</span><br><span class=\"line\">    file &quot;others/etiantian.org.zone&quot;;</span><br><span class=\"line\">    masters &#123;  10.0.0.7; &#125;;         ## &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Master</span><br><span class=\"line\">&#125;;    </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; 配置ip地址</span><br><span class=\"line\"></span><br><span class=\"line\">``` cp -ap ifconfig-eth1 ifconfig-eth1:0</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"highlight plain\"><figcaption><span>-ap ifconfig-eth1 ifconfig-eth1:1```</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>DEVICE=eth1:0<br>BOOTPROTO=none<br>ONBOOT=yes<br>IPV6INIT=no<br>IPADDR=10.0.0.9<br><code>`</code></p>\n<ul>\n<li>ifconfig eth0:0 10.0.0.9 netmask 24</li>\n<li>ifconfig eth0:1 10.0.0.10 netmask 24</li>\n</ul>\n",
				"image": null,
				"featured": 0,
				"page": 0,
				"status": "published",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1547222400000,
				"created_by": 2,
				"updated_at": 1547284119000,
				"updated_by": 2,
				"published_at": 1547222400000,
				"published_by": 2
			},
			{
				"id": "cjqt5y66n0001koeov0vulmsj",
				"title": "Integrate tengine with libressl to support chacha20-ietf-poly1305",
				"slug": "Integrate-tengine-with-libressl-to-support-chacha20-ietf-poly1305",
				"markdown": "\n----\n\n## 更换背景\n\n``` bash\n# Mac 基础套件ssh, php以及alpine Linux已经切换openssl到libressl\n➜  ~ ssh -V\nOpenSSH_7.8p1, LibreSSL 2.6.2\n\n➜  ~ php -i\nphpinfo()\nPHP Version => 7.1.16\n\nroot:xnu-4570.71.17~1/RELEASE_X86_64 x86_64\nBuild Date => Apr  1 2018 13:47:29\nConfigure Command => '....\n--with-openssl=/BuildRoot/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.Internal.sdk/usr/local/libressl\n...'\n```\n\n## 环境说明\n\n``` bash\n$ cat /etc/redhat-release\nCentOS Linux release 7.6.1810 (Core)\n\n$ uname -a\nLinux izj6c0ahnyudgp7qwa7ah8z 4.14.90 #1 SMP Mon Dec 24 04:50:20 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n```\n\n## 编译libressl\n\n``` bash\ncd /usr/local/src/\nwget -c https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-2.6.5.tar.gz\n# centos 7 gcc需要额外设置编译参数-fPIC\ncd /usr/local/src/libressl/\nexport CFLAGS=\"$CFLAGS -fPIC -g -O2\" && ./config --prefix=/usr/local/src/libressl/.openssl no-shared\nmake -j4 && make install-strip distclean\nunset CFLAGS\n```\n\n\n## 编译tengine，使用libressl\n****\n``` bash\ncd /usr/local/src/tengine/\nmake clean\n\n./configure \\\n--prefix=/usr/share/nginx \\\n--conf-path=/etc/nginx/nginx.conf \\\n--error-log-path=/var/log/nginx/error.log \\\n--http-client-body-temp-path=/var/cache/nginx/client_temp \\\n--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n--http-log-path=/var/log/nginx/access.log \\\n--http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n--http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n--lock-path=/var/run/lock/nginx.lock \\\n--pid-path=/var/run/nginx.pid \\\n--sbin-path=/usr/sbin/nginx \\\n--dso-tool-path=/usr/sbin/dso_tool \\\n--group=nginx \\\n--user=nginx \\\n--with-file-aio \\\n--with-http_addition_module=shared \\\n--with-http_auth_request_module \\\n--with-http_concat_module=shared \\\n--with-http_dav_module \\\n--with-http_degradation_module \\\n--with-http_dyups_module \\\n--with-http_flv_module=shared \\\n--with-http_geoip_module=shared \\\n--with-http_gunzip_module \\\n--with-http_gzip_static_module \\\n--with-http_memcached_module=shared \\\n--with-http_random_index_module=shared \\\n--with-http_realip_module \\\n--with-http_reqstat_module=shared \\\n--with-http_secure_link_module=shared \\\n--with-http_slice_module=shared \\\n--with-http_sub_module=shared \\\n--with-http_sysguard_module=shared \\\n--with-http_v2_module \\\n--with-ipv6 \\\n--with-jemalloc \\\n--with-http_xslt_module=shared \\\n--with-pcre \\\n--with-pcre-jit \\\n--with-openssl=/usr/local/src/libressl \\\n--with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=native -fPIC'\n\n# 更新libressl header文件时间戳防止再次编译\ntouch /usr/local/src/libressl/.openssl/include/openssl/ssl.h\n\n# 编译安装\nmake -j3 && sudo make install clean && sudo mkdir -pv /var/cache/nginx/client_temp\n```\n\n## 启动脚本\n\n``` bash\n[root@nat-gw-jms-254-2 ~]# cat > /usr/lib/systemd/system/nginx.service\n[Unit]\nDescription=The nginx HTTP and reverse proxy server\nAfter=network.target remote-fs.target nss-lookup.target\n\n[Service]\nType=forking\nPIDFile=/run/nginx.pid\n# Nginx will fail to start if /run/nginx.pid already exists but has the wrong\n# SELinux context. This might happen when running `nginx -t` from the cmdline.\n# https://bugzilla.redhat.com/show_bug.cgi?id=1268621\nExecStartPre=/usr/bin/rm -f /run/nginx.pid\nExecStartPre=/usr/sbin/nginx -t\nExecStart=/usr/sbin/nginx\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGQUIT\nTimeoutStopSec=5\nKillMode=process\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n\n```\n\n## 额外设置\n\n``` bash\nchkconfig nginx on\n```\n",
				"html": "<hr>\n<h2 id=\"更换背景\"><a href=\"#更换背景\" class=\"headerlink\" title=\"更换背景\"></a>更换背景</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Mac 基础套件ssh, php以及alpine Linux已经切换openssl到libressl</span></span><br><span class=\"line\">➜  ~ ssh -V</span><br><span class=\"line\">OpenSSH_7.8p1, LibreSSL 2.6.2</span><br><span class=\"line\"></span><br><span class=\"line\">➜  ~ php -i</span><br><span class=\"line\">phpinfo()</span><br><span class=\"line\">PHP Version =&gt; 7.1.16</span><br><span class=\"line\"></span><br><span class=\"line\">root:xnu-4570.71.17~1/RELEASE_X86_64 x86_64</span><br><span class=\"line\">Build Date =&gt; Apr  1 2018 13:47:29</span><br><span class=\"line\">Configure Command =&gt; <span class=\"string\">'....</span></span><br><span class=\"line\"><span class=\"string\">--with-openssl=/BuildRoot/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.Internal.sdk/usr/local/libressl</span></span><br><span class=\"line\"><span class=\"string\">...'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"环境说明\"><a href=\"#环境说明\" class=\"headerlink\" title=\"环境说明\"></a>环境说明</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ cat /etc/redhat-release</span><br><span class=\"line\">CentOS Linux release 7.6.1810 (Core)</span><br><span class=\"line\"></span><br><span class=\"line\">$ uname -a</span><br><span class=\"line\">Linux izj6c0ahnyudgp7qwa7ah8z 4.14.90 <span class=\"comment\">#1 SMP Mon Dec 24 04:50:20 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"编译libressl\"><a href=\"#编译libressl\" class=\"headerlink\" title=\"编译libressl\"></a>编译libressl</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src/</span><br><span class=\"line\">wget -c https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-2.6.5.tar.gz</span><br><span class=\"line\"><span class=\"comment\"># centos 7 gcc需要额外设置编译参数-fPIC</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src/libressl/</span><br><span class=\"line\"><span class=\"built_in\">export</span> CFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -fPIC -g -O2\"</span> &amp;&amp; ./config --prefix=/usr/<span class=\"built_in\">local</span>/src/libressl/.openssl no-shared</span><br><span class=\"line\">make -j4 &amp;&amp; make install-strip distclean</span><br><span class=\"line\"><span class=\"built_in\">unset</span> CFLAGS</span><br></pre></td></tr></table></figure>\n<h2 id=\"编译tengine，使用libressl\"><a href=\"#编译tengine，使用libressl\" class=\"headerlink\" title=\"编译tengine，使用libressl\"></a>编译tengine，使用libressl</h2><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src/tengine/</span><br><span class=\"line\">make clean</span><br><span class=\"line\"></span><br><span class=\"line\">./configure \\</span><br><span class=\"line\">--prefix=/usr/share/nginx \\</span><br><span class=\"line\">--conf-path=/etc/nginx/nginx.conf \\</span><br><span class=\"line\">--error-log-path=/var/<span class=\"built_in\">log</span>/nginx/error.log \\</span><br><span class=\"line\">--http-client-body-temp-path=/var/cache/nginx/client_temp \\</span><br><span class=\"line\">--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\</span><br><span class=\"line\">--http-log-path=/var/<span class=\"built_in\">log</span>/nginx/access.log \\</span><br><span class=\"line\">--http-proxy-temp-path=/var/cache/nginx/proxy_temp \\</span><br><span class=\"line\">--http-scgi-temp-path=/var/cache/nginx/scgi_temp \\</span><br><span class=\"line\">--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\</span><br><span class=\"line\">--lock-path=/var/run/lock/nginx.lock \\</span><br><span class=\"line\">--pid-path=/var/run/nginx.pid \\</span><br><span class=\"line\">--sbin-path=/usr/sbin/nginx \\</span><br><span class=\"line\">--dso-tool-path=/usr/sbin/dso_tool \\</span><br><span class=\"line\">--group=nginx \\</span><br><span class=\"line\">--user=nginx \\</span><br><span class=\"line\">--with-file-aio \\</span><br><span class=\"line\">--with-http_addition_module=shared \\</span><br><span class=\"line\">--with-http_auth_request_module \\</span><br><span class=\"line\">--with-http_concat_module=shared \\</span><br><span class=\"line\">--with-http_dav_module \\</span><br><span class=\"line\">--with-http_degradation_module \\</span><br><span class=\"line\">--with-http_dyups_module \\</span><br><span class=\"line\">--with-http_flv_module=shared \\</span><br><span class=\"line\">--with-http_geoip_module=shared \\</span><br><span class=\"line\">--with-http_gunzip_module \\</span><br><span class=\"line\">--with-http_gzip_static_module \\</span><br><span class=\"line\">--with-http_memcached_module=shared \\</span><br><span class=\"line\">--with-http_random_index_module=shared \\</span><br><span class=\"line\">--with-http_realip_module \\</span><br><span class=\"line\">--with-http_reqstat_module=shared \\</span><br><span class=\"line\">--with-http_secure_link_module=shared \\</span><br><span class=\"line\">--with-http_slice_module=shared \\</span><br><span class=\"line\">--with-http_sub_module=shared \\</span><br><span class=\"line\">--with-http_sysguard_module=shared \\</span><br><span class=\"line\">--with-http_v2_module \\</span><br><span class=\"line\">--with-ipv6 \\</span><br><span class=\"line\">--with-jemalloc \\</span><br><span class=\"line\">--with-http_xslt_module=shared \\</span><br><span class=\"line\">--with-pcre \\</span><br><span class=\"line\">--with-pcre-jit \\</span><br><span class=\"line\">--with-openssl=/usr/<span class=\"built_in\">local</span>/src/libressl \\</span><br><span class=\"line\">--with-cc-opt=<span class=\"string\">'-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=native -fPIC'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新libressl header文件时间戳防止再次编译</span></span><br><span class=\"line\">touch /usr/<span class=\"built_in\">local</span>/src/libressl/.openssl/include/openssl/ssl.h</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编译安装</span></span><br><span class=\"line\">make -j3 &amp;&amp; sudo make install clean &amp;&amp; sudo mkdir -pv /var/cache/nginx/client_temp</span><br></pre></td></tr></table></figure>\n<h2 id=\"启动脚本\"><a href=\"#启动脚本\" class=\"headerlink\" title=\"启动脚本\"></a>启动脚本</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nat-gw-jms-254-2 ~]<span class=\"comment\"># cat &gt; /usr/lib/systemd/system/nginx.service</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=The nginx HTTP and reverse proxy server</span><br><span class=\"line\">After=network.target remote-fs.target nss-lookup.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">PIDFile=/run/nginx.pid</span><br><span class=\"line\"><span class=\"comment\"># Nginx will fail to start if /run/nginx.pid already exists but has the wrong</span></span><br><span class=\"line\"><span class=\"comment\"># SELinux context. This might happen when running `nginx -t` from the cmdline.</span></span><br><span class=\"line\"><span class=\"comment\"># https://bugzilla.redhat.com/show_bug.cgi?id=1268621</span></span><br><span class=\"line\">ExecStartPre=/usr/bin/rm -f /run/nginx.pid</span><br><span class=\"line\">ExecStartPre=/usr/sbin/nginx -t</span><br><span class=\"line\">ExecStart=/usr/sbin/nginx</span><br><span class=\"line\">ExecReload=/bin/<span class=\"built_in\">kill</span> -s HUP <span class=\"variable\">$MAINPID</span></span><br><span class=\"line\">KillSignal=SIGQUIT</span><br><span class=\"line\">TimeoutStopSec=5</span><br><span class=\"line\">KillMode=process</span><br><span class=\"line\">PrivateTmp=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n<h2 id=\"额外设置\"><a href=\"#额外设置\" class=\"headerlink\" title=\"额外设置\"></a>额外设置</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">chkconfig nginx on</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 0,
				"status": "published",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546963200000,
				"created_by": 2,
				"updated_at": 1547277560000,
				"updated_by": 2,
				"published_at": 1546963200000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ad006qkoeo67g25j3m",
				"title": "主题",
				"markdown": "`hexo.theme` 除了继承 [Box](box.html) 外，还具有存储模板的功能。\n\n## 获取模板\n\n``` js\nhexo.theme.getView(path);\n```\n\n## 设置模板\n\n``` js\nhexo.theme.setView(path, data);\n```\n\n## 移除模板\n\n``` js\nhexo.theme.removeView(path);\n```\n\n## 模板\n\n模板本身有两个方法可供使用：`render` 和 `renderSync`。两者功能一样，只是前者为非同步函数，而后者为同步函數，因此仅以 `render` 演示调用方法。\n\n``` js\nvar view = hexo.theme.getView('layout.swig');\n\nview.render({foo: 1, bar: 2}).then(function(result){\n  // ...\n});\n```\n\n您可以以向 `render` 方法传入对象作为参数，`render` 方法会先使用对应的渲染引擎进行解析，并加载 [辅助函数](helper.html)。渲染完成后，会检测布局（layout）是否存在，当 `layout` 设为 `false` 或不存在时，就会直接返回渲染结果。",
				"html": "<p><code>hexo.theme</code> 除了继承 <a href=\"box.html\">Box</a> 外，还具有存储模板的功能。</p>\n<h2 id=\"获取模板\"><a href=\"#获取模板\" class=\"headerlink\" title=\"获取模板\"></a>获取模板</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.getView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置模板\"><a href=\"#设置模板\" class=\"headerlink\" title=\"设置模板\"></a>设置模板</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.setView(path, data);</span><br></pre></td></tr></table></figure>\n<h2 id=\"移除模板\"><a href=\"#移除模板\" class=\"headerlink\" title=\"移除模板\"></a>移除模板</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.removeView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h2><p>模板本身有两个方法可供使用：<code>render</code> 和 <code>renderSync</code>。两者功能一样，只是前者为非同步函数，而后者为同步函數，因此仅以 <code>render</code> 演示调用方法。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> view = hexo.theme.getView(<span class=\"string\">'layout.swig'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">view.render(&#123;<span class=\"attr\">foo</span>: <span class=\"number\">1</span>, <span class=\"attr\">bar</span>: <span class=\"number\">2</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>您可以以向 <code>render</code> 方法传入对象作为参数，<code>render</code> 方法会先使用对应的渲染引擎进行解析，并加载 <a href=\"helper.html\">辅助函数</a>。渲染完成后，会检测布局（layout）是否存在，当 <code>layout</code> 设为 <code>false</code> 或不存在时，就会直接返回渲染结果。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6b5007ykoeoq2b64tzf",
				"title": "寫作",
				"markdown": "\n{% youtube A_a-qFhDgKs %}\n\n接下來，我們要在網誌中建立第一篇新文章，您可以直接從現有的範例文章「Hello World」改寫，但我們更建議您學習 `new` 指令。\n\n``` bash\n$ hexo new [layout] <title>\n```\n\n您可以在指令中指定文章的佈局（layout），預設為 `post`，您可以透過修改 `_config.yml` 中的 `default_layout` 設定來指定預設佈局。\n\n### 佈局（Layout）\n\nHexo 有三種預設佈局：`post`、`page` 和 `draft`，它們分別對應不同的路徑，而您所自定的其他佈局和 `post` 相同，都儲存至 `source/_posts` 資料夾。\n\n佈局 | 路徑\n--- | ---\n`post` | `source/_posts`\n`page` | `source`\n`draft` | `source/_drafts`\n\n### 檔案名稱\n\nHexo 預設以標題做為檔案名稱，但您可編輯 `new_post_name` 設定來變更預設的檔案名稱，舉例來說，設為 `:year-:month-:day-:title.md` 可讓您更方便的透過日期來管理文章。\n\n變數 | 描述\n--- | ---\n`:title` | 標題\n`:year` | 建立年份（4 位數）\n`:month` | 建立月份（2 位數）\n`:i_month` | 建立月份（去掉開頭的零）\n`:day` | 建立日期（2 位數）\n`:i_day` | 建立日期（去掉開頭的零）\n\n### 草稿\n\n剛剛提到了 Hexo 的一種特殊佈局：`draft`，這種佈局在建立時會被儲存於 `source/_drafts` 資料夾，您可透過 `publish` 指令將草稿移動到 `source/_posts` 資料夾，這項指令的使用方式與 `new` 十分類似，您也可在指令中指定 `layout` 來指定佈局。\n\n``` bash\n$ hexo publish [layout] <title>\n```\n\n草稿預設不會顯示於頁面中，您可在執行時加上 `--draft` 選項，或是把 `render_drafts` 設定改為 `true` 來預覽草稿。\n\n### 鷹架（Scaffold）\n\n在建立文章時，Hexo 會根據 `scaffolds` 資料夾內相對應的檔案來建立檔案，例如：\n\n``` bash\n$ hexo new photo \"My Gallery\"\n```\n\n在執行這行指令時，Hexo 會嘗試在 `scaffolds` 資料夾中找尋 `photo.md`，並根據其內容建立文章，以下是您可在鷹架中使用的變數：\n\n變數 | 描述\n--- | ---\n`layout` | 佈局\n`title` | 標題\n`date` | 檔案建立日期\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/A_a-qFhDgKs\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>接下來，我們要在網誌中建立第一篇新文章，您可以直接從現有的範例文章「Hello World」改寫，但我們更建議您學習 <code>new</code> 指令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>您可以在指令中指定文章的佈局（layout），預設為 <code>post</code>，您可以透過修改 <code>_config.yml</code> 中的 <code>default_layout</code> 設定來指定預設佈局。</p>\n<h3 id=\"佈局（Layout）\"><a href=\"#佈局（Layout）\" class=\"headerlink\" title=\"佈局（Layout）\"></a>佈局（Layout）</h3><p>Hexo 有三種預設佈局：<code>post</code>、<code>page</code> 和 <code>draft</code>，它們分別對應不同的路徑，而您所自定的其他佈局和 <code>post</code> 相同，都儲存至 <code>source/_posts</code> 資料夾。</p>\n<table>\n<thead>\n<tr>\n<th>佈局</th>\n<th>路徑</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post</code></td>\n<td><code>source/_posts</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>draft</code></td>\n<td><code>source/_drafts</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"檔案名稱\"><a href=\"#檔案名稱\" class=\"headerlink\" title=\"檔案名稱\"></a>檔案名稱</h3><p>Hexo 預設以標題做為檔案名稱，但您可編輯 <code>new_post_name</code> 設定來變更預設的檔案名稱，舉例來說，設為 <code>:year-:month-:day-:title.md</code> 可讓您更方便的透過日期來管理文章。</p>\n<table>\n<thead>\n<tr>\n<th>變數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:title</code></td>\n<td>標題</td>\n</tr>\n<tr>\n<td><code>:year</code></td>\n<td>建立年份（4 位數）</td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>建立月份（2 位數）</td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>建立月份（去掉開頭的零）</td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>建立日期（2 位數）</td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>建立日期（去掉開頭的零）</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"草稿\"><a href=\"#草稿\" class=\"headerlink\" title=\"草稿\"></a>草稿</h3><p>剛剛提到了 Hexo 的一種特殊佈局：<code>draft</code>，這種佈局在建立時會被儲存於 <code>source/_drafts</code> 資料夾，您可透過 <code>publish</code> 指令將草稿移動到 <code>source/_posts</code> 資料夾，這項指令的使用方式與 <code>new</code> 十分類似，您也可在指令中指定 <code>layout</code> 來指定佈局。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>草稿預設不會顯示於頁面中，您可在執行時加上 <code>--draft</code> 選項，或是把 <code>render_drafts</code> 設定改為 <code>true</code> 來預覽草稿。</p>\n<h3 id=\"鷹架（Scaffold）\"><a href=\"#鷹架（Scaffold）\" class=\"headerlink\" title=\"鷹架（Scaffold）\"></a>鷹架（Scaffold）</h3><p>在建立文章時，Hexo 會根據 <code>scaffolds</code> 資料夾內相對應的檔案來建立檔案，例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new photo <span class=\"string\">\"My Gallery\"</span></span><br></pre></td></tr></table></figure>\n<p>在執行這行指令時，Hexo 會嘗試在 <code>scaffolds</code> 資料夾中找尋 <code>photo.md</code>，並根據其內容建立文章，以下是您可在鷹架中使用的變數：</p>\n<table>\n<thead>\n<tr>\n<th>變數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>佈局</td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>標題</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>檔案建立日期</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67g001dkoeoy5iq0j0m",
				"title": "",
				"markdown": "ul#intro-feature-list\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-bolt\n      h3.intro-feature-title 超級快速\n      p.intro-feature-desc Node.js 帶給您超級快的檔案產生速度，上百個檔案只需幾秒就能建立完成。\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-pencil\n      h3.intro-feature-title Markdown 支援\n      p.intro-feature-desc Hexo 支援所有 GitHub Flavored Markdown 的功能，您甚至能在 Hexo 使用大部份的 Octopress 外掛。\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cloud-upload\n      h3.intro-feature-title 一鍵部署\n      p.intro-feature-desc 您只需要一個指令就能把網站部署到 GitHub Pages, Heroku 或其他網站。\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cog\n      h3.intro-feature-title 豐富的外掛\n      p.intro-feature-desc Hexo 有強大的外掛系統，您可安裝外掛讓 Hexo 支援 Jade, CoffeeScript。",
				"html": "<ul id=\"intro-feature-list\"><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-bolt\"></i></div><h3 class=\"intro-feature-title\">超級快速</h3><p class=\"intro-feature-desc\">Node.js 帶給您超級快的檔案產生速度，上百個檔案只需幾秒就能建立完成。</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-pencil\"></i></div><h3 class=\"intro-feature-title\">Markdown 支援</h3><p class=\"intro-feature-desc\">Hexo 支援所有 GitHub Flavored Markdown 的功能，您甚至能在 Hexo 使用大部份的 Octopress 外掛。</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cloud-upload\"></i></div><h3 class=\"intro-feature-title\">一鍵部署</h3><p class=\"intro-feature-desc\">您只需要一個指令就能把網站部署到 GitHub Pages, Heroku 或其他網站。</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cog\"></i></div><h3 class=\"intro-feature-title\">豐富的外掛</h3><p class=\"intro-feature-desc\">Hexo 有強大的外掛系統，您可安裝外掛讓 Hexo 支援 Jade, CoffeeScript。</p></div></li></ul>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a0005okoeo8cv92841",
				"title": "资源文件夹",
				"markdown": "资源（Asset）代表 `source` 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 `source/images` 文件夹中。然后通过类似于 `![](/images/image.jpg)` 的方法访问它们。\n\n## 文章资源文件夹\n对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 `config.yml` 文件中的 `post_asset_folder` 选项设为 `true` 来打开。\n\n``` yaml _config.yml\npost_asset_folder: true\n```\n\n当资源文件管理功能打开后，Hexo将会在你每一次通过 `hexo new [layout] <title>` 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。\n\n## 相对路径引用的标签插件\n\n通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n比如说：当你打开文章资源文件夹功能后，你把一个 `example.jpg` 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 `![](/example.jpg)` ，它将 *不会* 出现在首页上。（但是它会在文章中按你期待的方式工作）\n\n正确的引用图片方式是使用下列的标签插件而不是 markdown ：\n\n```\n{% asset_img example.jpg This is an example image %}\n```\n\n通过这种方式，图片将会同时出现在文章和主页以及归档页中。",
				"html": "<p>资源（Asset）代表 <code>source</code> 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 <code>source/images</code> 文件夹中。然后通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们。</p>\n<h2 id=\"文章资源文件夹\"><a href=\"#文章资源文件夹\" class=\"headerlink\" title=\"文章资源文件夹\"></a>文章资源文件夹</h2><p>对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 <code>config.yml</code> 文件中的 <code>post_asset_folder</code> 选项设为 <code>true</code> 来打开。</p>\n<figure class=\"highlight yaml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p>\n<h2 id=\"相对路径引用的标签插件\"><a href=\"#相对路径引用的标签插件\" class=\"headerlink\" title=\"相对路径引用的标签插件\"></a>相对路径引用的标签插件</h2><p>通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<p>比如说：当你打开文章资源文件夹功能后，你把一个 <code>example.jpg</code> 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 <code>![](/example.jpg)</code> ，它将 <em>不会</em> 出现在首页上。（但是它会在文章中按你期待的方式工作）</p>\n<p>正确的引用图片方式是使用下列的标签插件而不是 markdown ：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure>\n<p>通过这种方式，图片将会同时出现在文章和主页以及归档页中。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a0005pkoeonz5e3ydr",
				"title": "配置",
				"markdown": "您可以在 `_config.yml` 中修改大部分的配置。\n\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39808252&cid=69927899&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n## 网站\n\n参数 | 描述\n--- | ---\n`title` | 网站标题\n`subtitle` | 网站副标题\n`description` | 网站描述\n`author` | 您的名字\n`language` | 网站使用的语言\n`timezone` | 网站时区。Hexo 默认使用您电脑的时区。[时区列表](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)。比如说：`America/New_York`, `Japan`, 和 `UTC` 。\n\n其中，`description`主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。`author`参数用于主题显示文章的作者。\n\n## 网址\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`url` | 网址 |\n`root` | 网站根目录 |\n`permalink` | 文章的 [永久链接](permalinks.html) 格式 | `:year/:month/:day/:title/`\n`permalink_defaults` | 永久链接中各部分的默认值 |\n\n{% note info 网站存放在子目录 %}\n如果您的网站存放在子目录中，例如 `http://yoursite.com/blog`，则请将您的 `url` 设为 `http://yoursite.com/blog` 并把 `root` 设为 `/blog/`。\n{% endnote %}\n\n## 目录\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`source_dir` | 资源文件夹，这个文件夹用来存放内容。 | `source`\n`public_dir` | 公共文件夹，这个文件夹用于存放生成的站点文件。 | `public`\n`tag_dir` | 标签文件夹 | `tags`\n`archive_dir` | 归档文件夹 | `archives`\n`category_dir` | 分类文件夹 | `categories`\n`code_dir` | Include code 文件夹 | `downloads/code`\n`i18n_dir` | 国际化（i18n）文件夹 | `:lang`\n`skip_render` | 跳过指定文件的渲染，您可使用 [glob 表达式](https://github.com/isaacs/node-glob)来匹配路径。 |\n\n{% note info 提示 %}\n如果您刚刚开始接触Hexo，通常没有必要修改这一部分的值。\n{% endnote %}\n\n## 文章\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`new_post_name` | 新文章的文件名称 | :title.md\n`default_layout` | 预设布局 | post\n`auto_spacing` | 在中文和英文之间加入空格 | false\n`titlecase` | 把标题转换为 title case | false\n`external_link` | 在新标签中打开链接 | true\n`filename_case` | 把文件名称转换为 (1) 小写或 (2) 大写 | 0\n`render_drafts` | 显示草稿 | false\n`post_asset_folder` | 启动 [Asset 文件夹](asset-folders.html) | false\n`relative_link` | 把链接改为与根目录的相对位址 | false\n`future` | 显示未来的文章 | true\n`highlight` | 代码块的设置 |\n\n{% note info 相对地址 %}\n默认情况下，Hexo生成的超链接都是绝对地址。例如，如果您的网站域名为`example.com`,您有一篇文章名为`hello`，那么绝对链接可能像这样：`http://example.com/hello.html`，它是**绝对**于域名的。相对链接像这样：`/hello.html`，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。\n{% endnote %}\n\n## 分类 & 标签\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`default_category` | 默认分类 | `uncategorized`\n`category_map` | 分类别名 |\n`tag_map` | 标签别名 |\n\n## 日期 / 时间格式\n\nHexo 使用 [Moment.js](http://momentjs.com/) 来解析和显示时间。\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`date_format` | 日期格式 | `YYYY-MM-DD`\n`time_format` | 时间格式 | `H:mm:ss`\n\n## 分页\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`per_page` | 每页显示的文章量 (0 = 关闭分页功能) | `10`\n`pagination_dir` | 分页目录 | `page`\n\n## 扩展\n\n参数 | 描述\n--- | ---\n`theme` | 当前主题名称。值为`false`时禁用主题\n`deploy` | 部署部分的设置\n\n\n",
				"html": "<p>您可以在 <code>_config.yml</code> 中修改大部分的配置。</p>\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39808252&cid=69927899&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n<h2 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h2><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>网站标题</td>\n</tr>\n<tr>\n<td><code>subtitle</code></td>\n<td>网站副标题</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>网站描述</td>\n</tr>\n<tr>\n<td><code>author</code></td>\n<td>您的名字</td>\n</tr>\n<tr>\n<td><code>language</code></td>\n<td>网站使用的语言</td>\n</tr>\n<tr>\n<td><code>timezone</code></td>\n<td>网站时区。Hexo 默认使用您电脑的时区。<a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" target=\"_blank\" rel=\"noopener\">时区列表</a>。比如说：<code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。</td>\n</tr>\n</tbody>\n</table>\n<p>其中，<code>description</code>主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p>\n<h2 id=\"网址\"><a href=\"#网址\" class=\"headerlink\" title=\"网址\"></a>网址</h2><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>url</code></td>\n<td>网址</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>网站根目录</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>文章的 <a href=\"permalinks.html\">永久链接</a> 格式</td>\n<td><code>:year/:month/:day/:title/</code></td>\n</tr>\n<tr>\n<td><code>permalink_defaults</code></td>\n<td>永久链接中各部分的默认值</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note info\"><strong class=\"note-title\">网站存放在子目录</strong><p>如果您的网站存放在子目录中，例如 <code>http://yoursite.com/blog</code>，则请将您的 <code>url</code> 设为 <code>http://yoursite.com/blog</code> 并把 <code>root</code> 设为 <code>/blog/</code>。</p>\n</blockquote>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source_dir</code></td>\n<td>资源文件夹，这个文件夹用来存放内容。</td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>public_dir</code></td>\n<td>公共文件夹，这个文件夹用于存放生成的站点文件。</td>\n<td><code>public</code></td>\n</tr>\n<tr>\n<td><code>tag_dir</code></td>\n<td>标签文件夹</td>\n<td><code>tags</code></td>\n</tr>\n<tr>\n<td><code>archive_dir</code></td>\n<td>归档文件夹</td>\n<td><code>archives</code></td>\n</tr>\n<tr>\n<td><code>category_dir</code></td>\n<td>分类文件夹</td>\n<td><code>categories</code></td>\n</tr>\n<tr>\n<td><code>code_dir</code></td>\n<td>Include code 文件夹</td>\n<td><code>downloads/code</code></td>\n</tr>\n<tr>\n<td><code>i18n_dir</code></td>\n<td>国际化（i18n）文件夹</td>\n<td><code>:lang</code></td>\n</tr>\n<tr>\n<td><code>skip_render</code></td>\n<td>跳过指定文件的渲染，您可使用 <a href=\"https://github.com/isaacs/node-glob\" target=\"_blank\" rel=\"noopener\">glob 表达式</a>来匹配路径。</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note info\"><strong class=\"note-title\">提示</strong><p>如果您刚刚开始接触Hexo，通常没有必要修改这一部分的值。</p>\n</blockquote>\n<h2 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h2><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>new_post_name</code></td>\n<td>新文章的文件名称</td>\n<td>:title.md</td>\n</tr>\n<tr>\n<td><code>default_layout</code></td>\n<td>预设布局</td>\n<td>post</td>\n</tr>\n<tr>\n<td><code>auto_spacing</code></td>\n<td>在中文和英文之间加入空格</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>titlecase</code></td>\n<td>把标题转换为 title case</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>external_link</code></td>\n<td>在新标签中打开链接</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>filename_case</code></td>\n<td>把文件名称转换为 (1) 小写或 (2) 大写</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>render_drafts</code></td>\n<td>显示草稿</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>post_asset_folder</code></td>\n<td>启动 <a href=\"asset-folders.html\">Asset 文件夹</a></td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>relative_link</code></td>\n<td>把链接改为与根目录的相对位址</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>future</code></td>\n<td>显示未来的文章</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>highlight</code></td>\n<td>代码块的设置</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note info\"><strong class=\"note-title\">相对地址</strong><p>默认情况下，Hexo生成的超链接都是绝对地址。例如，如果您的网站域名为<code>example.com</code>,您有一篇文章名为<code>hello</code>，那么绝对链接可能像这样：<code>http://example.com/hello.html</code>，它是<strong>绝对</strong>于域名的。相对链接像这样：<code>/hello.html</code>，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。</p>\n</blockquote>\n<h2 id=\"分类-amp-标签\"><a href=\"#分类-amp-标签\" class=\"headerlink\" title=\"分类 &amp; 标签\"></a>分类 &amp; 标签</h2><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>default_category</code></td>\n<td>默认分类</td>\n<td><code>uncategorized</code></td>\n</tr>\n<tr>\n<td><code>category_map</code></td>\n<td>分类别名</td>\n<td></td>\n</tr>\n<tr>\n<td><code>tag_map</code></td>\n<td>标签别名</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"日期-时间格式\"><a href=\"#日期-时间格式\" class=\"headerlink\" title=\"日期 / 时间格式\"></a>日期 / 时间格式</h2><p>Hexo 使用 <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 来解析和显示时间。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>date_format</code></td>\n<td>日期格式</td>\n<td><code>YYYY-MM-DD</code></td>\n</tr>\n<tr>\n<td><code>time_format</code></td>\n<td>时间格式</td>\n<td><code>H:mm:ss</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"分页\"><a href=\"#分页\" class=\"headerlink\" title=\"分页\"></a>分页</h2><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>per_page</code></td>\n<td>每页显示的文章量 (0 = 关闭分页功能)</td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td><code>pagination_dir</code></td>\n<td>分页目录</td>\n<td><code>page</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>theme</code></td>\n<td>当前主题名称。值为<code>false</code>时禁用主题</td>\n</tr>\n<tr>\n<td><code>deploy</code></td>\n<td>部署部分的设置</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a1005qkoeow4xj0l2m",
				"title": "指令",
				"markdown": "\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39808309&cid=69927923&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n## init\n\n``` bash\n$ hexo init [folder]\n```\n\n新建一个网站。如果没有设置 `folder` ，Hexo 默认在目前的文件夹建立网站。\n\n## new\n\n``` bash\n$ hexo new [layout] <title>\n```\n\n新建一篇文章。如果没有设置 `layout` 的话，默认使用 [_config.yml](configuration.html) 中的 `default_layout` 参数代替。如果标题包含空格的话，请使用引号括起来。\n\n## generate\n\n``` bash\n$ hexo generate\n```\n\n生成静态文件。\n\n选项 | 描述\n--- | ---\n`-d`, `--deploy` | 文件生成后立即部署网站\n`-w`, `--watch` | 监视文件变动\n\n该命令可以简写为\n```bash\n$ hexo g\n```\n\n## publish\n\n``` bash\n$ hexo publish [layout] <filename>\n```\n\n发表草稿。\n\n## server\n\n``` bash\n$ hexo server\n```\n\n启动服务器。默认情况下，访问网址为： `http://localhost:4000/`。\n\n选项 | 描述\n--- | ---\n`-p`, `--port` | 重设端口\n`-s`, `--static` | 只使用静态文件\n`-l`, `--log` | 启动日记记录，使用覆盖记录格式\n\n## deploy\n\n``` bash\n$ hexo deploy\n```\n\n部署网站。\n\n参数 | 描述\n--- | ---\n`-g`, `--generate` | 部署之前预先生成静态文件\n\n该命令可以简写为：\n```bash\n$ hexo d\n```\n\n## render\n\n``` bash\n$ hexo render <file1> [file2] ...\n```\n\n渲染文件。\n\n参数 | 描述\n--- | ---\n`-o`, `--output` | 设置输出路径\n\n## migrate\n\n``` bash\n$ hexo migrate <type>\n```\n\n从其他博客系统 [迁移内容](migration.html)。\n\n## clean\n\n``` bash\n$ hexo clean\n```\n\n清除缓存文件 (`db.json`) 和已生成的静态文件 (`public`)。\n\n在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。\n\n## list\n\n``` bash\n$ hexo list <type>\n```\n\n列出网站资料。\n\n## version\n\n``` bash\n$ hexo version\n```\n\n显示 Hexo 版本。\n\n## 选项\n\n### 安全模式\n\n``` bash\n$ hexo --safe\n```\n\n在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。\n\n### 调试模式\n\n``` bash\n$ hexo --debug\n```\n\n在终端中显示调试信息并记录到 `debug.log`。当您碰到问题时，可以尝试用调试模式重新执行一次，并 [提交调试信息到 GitHub](https://github.com/hexojs/hexo/issues/new)。\n\n### 简洁模式\n\n``` bash\n$ hexo --silent\n```\n\n隐藏终端信息。\n\n### 自定义配置文件的路径\n\n``` bash\n$ hexo --config custom.yml\n```\n\n自定义配置文件的路径，执行后将不再使用 `_config.yml`。\n\n### 显示草稿\n\n``` bash\n$ hexo --draft\n```\n\n显示 `source/_drafts` 文件夹中的草稿文章。\n\n### 自定义 CWD\n\n``` bash\n$ hexo --cwd /path/to/cwd\n```\n\n自定义当前工作目录（Current working directory）的路径。\n\n",
				"html": "<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39808309&cid=69927923&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n<h2 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init [folder]</span><br></pre></td></tr></table></figure>\n<p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p>\n<h2 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href=\"configuration.html\">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<h2 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>生成静态文件。</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-d</code>, <code>--deploy</code></td>\n<td>文件生成后立即部署网站</td>\n</tr>\n<tr>\n<td><code>-w</code>, <code>--watch</code></td>\n<td>监视文件变动</td>\n</tr>\n</tbody>\n</table>\n<p>该命令可以简写为<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"publish\"><a href=\"#publish\" class=\"headerlink\" title=\"publish\"></a>publish</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<p>发表草稿。</p>\n<h2 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-p</code>, <code>--port</code></td>\n<td>重设端口</td>\n</tr>\n<tr>\n<td><code>-s</code>, <code>--static</code></td>\n<td>只使用静态文件</td>\n</tr>\n<tr>\n<td><code>-l</code>, <code>--log</code></td>\n<td>启动日记记录，使用覆盖记录格式</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>部署网站。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-g</code>, <code>--generate</code></td>\n<td>部署之前预先生成静态文件</td>\n</tr>\n</tbody>\n</table>\n<p>该命令可以简写为：<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>\n<p>渲染文件。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-o</code>, <code>--output</code></td>\n<td>设置输出路径</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"migrate\"><a href=\"#migrate\" class=\"headerlink\" title=\"migrate\"></a>migrate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>从其他博客系统 <a href=\"migration.html\">迁移内容</a>。</p>\n<h2 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p>\n<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n<h2 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo list &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>列出网站资料。</p>\n<h2 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n<p>显示 Hexo 版本。</p>\n<h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h2><h3 id=\"安全模式\"><a href=\"#安全模式\" class=\"headerlink\" title=\"安全模式\"></a>安全模式</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --safe</span><br></pre></td></tr></table></figure>\n<p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p>\n<h3 id=\"调试模式\"><a href=\"#调试模式\" class=\"headerlink\" title=\"调试模式\"></a>调试模式</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --debug</span><br></pre></td></tr></table></figure>\n<p>在终端中显示调试信息并记录到 <code>debug.log</code>。当您碰到问题时，可以尝试用调试模式重新执行一次，并 <a href=\"https://github.com/hexojs/hexo/issues/new\" target=\"_blank\" rel=\"noopener\">提交调试信息到 GitHub</a>。</p>\n<h3 id=\"简洁模式\"><a href=\"#简洁模式\" class=\"headerlink\" title=\"简洁模式\"></a>简洁模式</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --silent</span><br></pre></td></tr></table></figure>\n<p>隐藏终端信息。</p>\n<h3 id=\"自定义配置文件的路径\"><a href=\"#自定义配置文件的路径\" class=\"headerlink\" title=\"自定义配置文件的路径\"></a>自定义配置文件的路径</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure>\n<p>自定义配置文件的路径，执行后将不再使用 <code>_config.yml</code>。</p>\n<h3 id=\"显示草稿\"><a href=\"#显示草稿\" class=\"headerlink\" title=\"显示草稿\"></a>显示草稿</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --draft</span><br></pre></td></tr></table></figure>\n<p>显示 <code>source/_drafts</code> 文件夹中的草稿文章。</p>\n<h3 id=\"自定义-CWD\"><a href=\"#自定义-CWD\" class=\"headerlink\" title=\"自定义 CWD\"></a>自定义 CWD</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure>\n<p>自定义当前工作目录（Current working directory）的路径。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a1005rkoeone7q0fi4",
				"title": "贡献",
				"markdown": "## 开发\n\n我们非常欢迎您加入 Hexo 的开发，这份文件将帮助您了解开发流程。\n\n### 开始之前\n\n请遵守以下准则：\n\n- 遵守 [Google JavaScript 代码风格](https://google.github.io/styleguide/jsguide.html)。\n- 使用 2 个空格缩排。\n- 不要把逗号放在最前面。\n\n### 工作流程\n\n1. Fork [hexojs/hexo]\n2. 把库（repository）复制到电脑上，并安装所依赖的插件。\n\n    {% code %}\n    $ git clone https://github.com/<username>/hexo.git\n    $ cd hexo\n    $ npm install\n    $ git submodule update --init\n    {% endcode %}\n\n3. 新增一个功能分支。\n\n    {% code %}\n    $ git checkout -b new_feature\n    {% endcode %}\n\n4. 开始开发。\n5. 推送（push）分支。\n\n    {% code %}\n    $ git push origin new_feature\n    {% endcode %}\n\n6. 建立一个新的合并申请（pull request）并描述变动。\n\n### 注意事项\n\n- 不要修改 `package.json` 的版本号。\n- 只有在测试通过的情况下您的合并申请才会被批准，在提交前别忘了进行测试。\n\n    {% code %}\n    $ npm test\n    {% endcode %}\n\n## 更新文档\n\nHexo 文档开放源代码，您可以在 [hexojs/site] 找到源代码。\n\n### 工作流程\n\n1. Fork [hexojs/site]\n2. 把库（repository）复制到电脑上，并安装所依赖的插件。\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. 开始编辑文件，您可以通过服务器预览变动。\n\n    {% code %}\n    $ hexo server\n    {% endcode %}\n\n4. 推送（push）分支。\n5. 建立一个新的合并申请（pull request）并描述变动。\n\n### 翻译\n\n1. 在 `source` 资料夹中建立一个新的语言资料夹（全小写）。\n2. 把 `source` 资料夹中相关的文件（Markdown 和模板文件）复制到新的语言资料夹中。\n3. 在 `source/_data/language.yml` 中新增语言。\n4. 将 `en.yml` 复制到 `themes/navy/languages`中并命名为语言名称（全小写）。\n\n## 反馈问题\n\n当您在使用 Hexo 时遇到问题，您可以尝试在 [问题解答](troubleshooting.html) 中寻找解答，或是在 [GitHub](https://github.com/hexojs/hexo/issues) 或 [Google Group](https://groups.google.com/group/hexo) 上提问。如果你没有找答案，请在 Github 报告它。\n\n1. 在 [调试模式](commands.html#调试模式) 中重现问题。\n2. 运行 `hexo version` 并检查版本信息。\n3. 把调试信息和版本信息都贴到 GitHub。\n\n[hexojs/hexo]: https://github.com/hexojs/hexo\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<h2 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h2><p>我们非常欢迎您加入 Hexo 的开发，这份文件将帮助您了解开发流程。</p>\n<h3 id=\"开始之前\"><a href=\"#开始之前\" class=\"headerlink\" title=\"开始之前\"></a>开始之前</h3><p>请遵守以下准则：</p>\n<ul>\n<li>遵守 <a href=\"https://google.github.io/styleguide/jsguide.html\" target=\"_blank\" rel=\"noopener\">Google JavaScript 代码风格</a>。</li>\n<li>使用 2 个空格缩排。</li>\n<li>不要把逗号放在最前面。</li>\n</ul>\n<h3 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">hexojs/hexo</a></li>\n<li><p>把库（repository）复制到电脑上，并安装所依赖的插件。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/hexo.git</span><br><span class=\"line\">$ cd hexo</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">$ git submodule update --init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>新增一个功能分支。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout -b new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>开始开发。</p>\n</li>\n<li><p>推送（push）分支。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push origin new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>建立一个新的合并申请（pull request）并描述变动。</p>\n</li>\n</ol>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ul>\n<li>不要修改 <code>package.json</code> 的版本号。</li>\n<li><p>只有在测试通过的情况下您的合并申请才会被批准，在提交前别忘了进行测试。</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm test</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"更新文档\"><a href=\"#更新文档\" class=\"headerlink\" title=\"更新文档\"></a>更新文档</h2><p>Hexo 文档开放源代码，您可以在 <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a> 找到源代码。</p>\n<h3 id=\"工作流程-1\"><a href=\"#工作流程-1\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>把库（repository）复制到电脑上，并安装所依赖的插件。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>开始编辑文件，您可以通过服务器预览变动。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>推送（push）分支。</p>\n</li>\n<li>建立一个新的合并申请（pull request）并描述变动。</li>\n</ol>\n<h3 id=\"翻译\"><a href=\"#翻译\" class=\"headerlink\" title=\"翻译\"></a>翻译</h3><ol>\n<li>在 <code>source</code> 资料夹中建立一个新的语言资料夹（全小写）。</li>\n<li>把 <code>source</code> 资料夹中相关的文件（Markdown 和模板文件）复制到新的语言资料夹中。</li>\n<li>在 <code>source/_data/language.yml</code> 中新增语言。</li>\n<li>将 <code>en.yml</code> 复制到 <code>themes/navy/languages</code>中并命名为语言名称（全小写）。</li>\n</ol>\n<h2 id=\"反馈问题\"><a href=\"#反馈问题\" class=\"headerlink\" title=\"反馈问题\"></a>反馈问题</h2><p>当您在使用 Hexo 时遇到问题，您可以尝试在 <a href=\"troubleshooting.html\">问题解答</a> 中寻找解答，或是在 <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> 或 <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a> 上提问。如果你没有找答案，请在 Github 报告它。</p>\n<ol>\n<li>在 <a href=\"commands.html#调试模式\">调试模式</a> 中重现问题。</li>\n<li>运行 <code>hexo version</code> 并检查版本信息。</li>\n<li>把调试信息和版本信息都贴到 GitHub。</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a1005skoeoyp1ugjli",
				"title": "数据文件",
				"markdown": "有时您可能需要在主题中使用某些资料，而这些资料并不在文章内，并且是需要重复使用的，那么您可以考虑使用 Hexo 3.0 新增的「数据文件」功能。此功能会载入 `source/_data` 内的 YAML 或 JSON 文件，如此一来您便能在网站中复用这些文件了。\n\n举例来说，在 `source/_data` 文件夹中新建 `menu.yml` 文件：\n\n``` yaml\nHome: /\nGallery: /gallery/\nArchives: /archives/\n```\n\n您就能在模板中使用这些资料：\n\n```\n<% for (var link in site.data.menu) { %>\n  <a href=\"<%= site.data.menu[link] %>\"> <%= link %> </a>\n<% } %>\n```\n\n渲染结果如下 :\n\n```\n<a href=\"/\"> Home </a>\n<a href=\"/gallery/\"> Gallery </a>\n<a href=\"/archives/\"> Archives </a>\n```",
				"html": "<p>有时您可能需要在主题中使用某些资料，而这些资料并不在文章内，并且是需要重复使用的，那么您可以考虑使用 Hexo 3.0 新增的「数据文件」功能。此功能会载入 <code>source/_data</code> 内的 YAML 或 JSON 文件，如此一来您便能在网站中复用这些文件了。</p>\n<p>举例来说，在 <code>source/_data</code> 文件夹中新建 <code>menu.yml</code> 文件：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Home:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">Gallery:</span> <span class=\"string\">/gallery/</span></span><br><span class=\"line\"><span class=\"attr\">Archives:</span> <span class=\"string\">/archives/</span></span><br></pre></td></tr></table></figure>\n<p>您就能在模板中使用这些资料：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;% for (var link in site.data.menu) &#123; %&gt;</span><br><span class=\"line\">  &lt;a href=&quot;&lt;%= site.data.menu[link] %&gt;&quot;&gt; &lt;%= link %&gt; &lt;/a&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>渲染结果如下 :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;/&quot;&gt; Home &lt;/a&gt;</span><br><span class=\"line\">&lt;a href=&quot;/gallery/&quot;&gt; Gallery &lt;/a&gt;</span><br><span class=\"line\">&lt;a href=&quot;/archives/&quot;&gt; Archives &lt;/a&gt;</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a1005tkoeok6zji95j",
				"title": "部署",
				"markdown": "\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39529741&cid=69445520&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\nHexo 提供了快速方便的一键部署功能，让您只需一条命令就能将网站部署到服务器上。\n\n``` bash\n$ hexo deploy\n```\n\n在开始之前，您必须先在 `_config.yml` 中修改参数，一个正确的部署配置中至少要有 `type` 参数，例如：\n\n``` yaml\ndeploy:\n  type: git\n```\n\n您可同时使用多个 deployer，Hexo 会依照顺序执行每个 deployer。\n\n``` yaml\ndeploy:\n- type: git\n  repo:\n- type: heroku\n  repo:\n```\n\n{% note warn 缩进 %}\nYAML依靠缩进来确定元素间的从属关系。因此，请确保每个deployer的缩进长度相同，并且使用空格缩进。\n{% endnote %}\n\n## Git\n\n安装 [hexo-deployer-git]。\n\n``` bash\n$ npm install hexo-deployer-git --save\n```\n\n修改配置。\n\n``` yaml\ndeploy:\n  type: git\n  repo: <repository url> #https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io\n  branch: [branch] #published\n  message: [message]\n```\n\n参数 | 描述\n--- | ---\n`repo` | 库（Repository）地址\n`branch` | 分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。\n`message` | 自定义提交信息 (默认为 `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n生成站点文件并推送至远程库。执行`hexo clean && hexo deploy`命令。前者清除站点文件，后者重新生成站点文件并将之推送到指定的库分支。（如果您的Hexo是局部安装，则需要执行`./node_modules/.bin/hexo clean && ./node_modules/.bin/hexo deploy`。）\n\n登入 Github/BitBucket/Gitlab，请在库设置（Repository Settings）中将默认分支设置为`_config.yml`配置中的分支名称。稍等片刻，您的站点就会显示在您的Github Pages中。\n\n### 这一切是如何发生的？\n\n当初次新建一个库的时候，库将自动包含一个**master**分支。请在这个分支下进行写作和各种配置来完善您的网页。当执行`hexo deploy`时，Hexo会创建或更新另外一个用于部署的分支，这个分支就是`_config.yml`配置文件中指定的分支。Hexo会将生成的站点文件推送至该分支下，并且**完全覆盖**该分支下的已有内容。因此，部署分支应当不同于写作分支。（一个推荐的方式是把master作为写作分支，另外使用public分支作为部署分支。）值得注意的是，`hexo deploy`并不会对本地或远程的写作分支进行任何操作，因此依旧需要手动推送写作分支的所有改动以实现版本控制。此外，如果您的Github Pages需要使用CNAME文件**自定义域名**，请将CNAME文件置于写作分支的`source_dir`目录下，只有这样`hexo deploy`才能将CNAME文件一并推送至部署分支。\n\n## Heroku\n\n安装 [hexo-deployer-heroku]。\n\n``` bash\n$ npm install hexo-deployer-heroku --save\n```\n\n修改配置。\n\n``` yaml\ndeploy:\n  type: heroku\n  repo: <repository url>\n  message: [message]\n```\n\n参数 | 描述\n--- | ---\n`repo` | Heroku 库（Repository）地址\n`message` | 自定提交信息 (默认为 `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## Netlify\n\n[Netlify](https://www.netlify.com/) 是一个提供网络托管的综合平台。它集持续集成（CI）CDN 自定义域名 HTTPS 持续部署（CD）等诸多功能于一身。您可以通过以下两种方式将Hexo站点部署到Netlify。\n\n首先，也是最通用的方式，就是使用Netlify提供的网页端用户界面。前往[新建一个网站页面](https://app.netlify.com/start)，选择需要关联的 Github/BitBucket/Gitlab 库，然后遵循网站提示。\n\n另一种方式是使用Netlify提供的命令行客户端工具 [Node based CLI](https://www.netlify.com/docs/cli/) 管理和部署您的站点。\n\n此外，您还可以在项目的README中增加一个 [部署至Netlify按钮](https://www.netlify.com/docs/deploy-button/)，这样其他用户在fork或clone了您的项目之后可以方便快捷地一键部署。\n\n## Rsync\n\n安装 [hexo-deployer-rsync]。\n\n``` bash\n$ npm install hexo-deployer-rsync --save\n```\n\n修改配置。\n\n``` yaml\ndeploy:\n  type: rsync\n  host: <host>\n  user: <user>\n  root: <root>\n  port: [port]\n  delete: [true|false]\n  verbose: [true|false]\n  ignore_errors: [true|false]\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`host` | 远程主机的地址 |\n`user` | 使用者名称 |\n`root` | 远程主机的根目录 |\n`port` | 端口 | 22\n`delete` | 删除远程主机上的旧文件 | true\n`verbose` | 显示调试信息 | true\n`ignore_errors` | 忽略错误 | false\n\n{% note info rsync部署模块的工作方式 %}\n需要注意的是，要求您提供的实际上是一个能通过SSH登陆远程主机的Linux用户。Hexo会自动处理关于rsync使用的一切操作。因此，您需要在远程主机上为您的Hexo站点建立一个用户，并允许其通过SSH登陆。不过，这里的`port`，的确是指rsync监听的端口，请确保防火墙打开了该端口。\n{% endnote %}\n\n## OpenShift\n\n安装 [hexo-deployer-openshift]。\n\n``` bash\n$ npm install hexo-deployer-openshift --save\n```\n\n修改配置。\n\n``` yaml\ndeploy:\n  type: openshift\n  repo: <repository url>\n  message: [message]\n```\n\n参数 | 描述\n--- | ---\n`repo` | OpenShift 库（Repository）地址\n`message` | 自定提交信息 (默认为 `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## FTPSync\n\n安装 [hexo-deployer-ftpsync]。\n\n``` bash\n$ npm install hexo-deployer-ftpsync --save\n```\n\n修改配置。\n\n``` yaml\ndeploy:\n  type: ftpsync\n  host: <host>\n  user: <user>\n  pass: <password>\n  remote: [remote]\n  port: [port]\n  ignore: [ignore]\n  connections: [connections]\n  verbose: [true|false]\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`host` | 远程主机的地址 |\n`user` | 使用者名称 |\n`pass` | 密码 |\n`remote` | 远程主机的根目录 | `/`\n`port` | 端口 | 21\n`ignore` | 忽略的文件或目录 |\n`connections` | 使用的连接数 | 1\n`verbose` | 显示调试信息 | false\n\n{% note warn FTP部署可能出现的问题 %}\n您可能需要预先通过其他方式将所有文件上传到远程主机中。否则初次使用ftpsync插件就可能出现报错。另外，由于FTP协议的特征，它每传送一个文件就需要一次握手，相对速度较慢。\n{% endnote %}\n\n## SFTP\n\n安装 [hexo-deployer-sftp]。\n\n``` bash\n$ npm install hexo-deployer-sftp --save\n```\n\n修改配置。\n\n``` yaml\ndeploy:\n  type: sftp\n  host: <host>\n  user: <user>\n  pass: <password>\n  remotePath: [remote path]\n  port: [port]\n  privateKey: [path/to/privateKey]\n  passphrase: [passphrase]\n  agent: [path/to/agent/socket]\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`host` | 远程主机的地址 |\n`user` | 使用者名称 |\n`pass` | 密码 |\n`remotePath` | 远程主机的根目录 | `/`\n`port` | 端口 | 22\n`privateKey` | ssh私钥的目录地址 |\n`passphrase` | （可省略）ssh私钥的密码短语 | \n`agent` | ssh套接字的目录地址 | `$SSH_AUTH_SOCK`\n\n## 其他方法\n\nHexo 生成的所有文件都放在 `public` 文件夹中，您可以将它们复制到您喜欢的地方。\n\n[hexo-deployer-git]: https://github.com/hexojs/hexo-deployer-git\n[hexo-deployer-heroku]: https://github.com/hexojs/hexo-deployer-heroku\n[hexo-deployer-rsync]: https://github.com/hexojs/hexo-deployer-rsync\n[hexo-deployer-openshift]: https://github.com/hexojs/hexo-deployer-openshift\n[hexo-deployer-ftpsync]: https://github.com/hexojs/hexo-deployer-ftpsync\n[hexo-deployer-sftp]: https://github.com/lucascaro/hexo-deployer-sftp\n",
				"html": "<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39529741&cid=69445520&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n<p>Hexo 提供了快速方便的一键部署功能，让您只需一条命令就能将网站部署到服务器上。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>在开始之前，您必须先在 <code>_config.yml</code> 中修改参数，一个正确的部署配置中至少要有 <code>type</code> 参数，例如：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br></pre></td></tr></table></figure>\n<p>您可同时使用多个 deployer，Hexo 会依照顺序执行每个 deployer。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br></pre></td></tr></table></figure>\n<blockquote class=\"note warn\"><strong class=\"note-title\">缩进</strong><p>YAML依靠缩进来确定元素间的从属关系。因此，请确保每个deployer的缩进长度相同，并且使用空格缩进。</p>\n</blockquote>\n<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><p>安装 <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>修改配置。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span> <span class=\"comment\">#https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">[branch]</span> <span class=\"comment\">#published</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>库（Repository）地址</td>\n</tr>\n<tr>\n<td><code>branch</code></td>\n<td>分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>自定义提交信息 (默认为 <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<p>生成站点文件并推送至远程库。执行<code>hexo clean &amp;&amp; hexo deploy</code>命令。前者清除站点文件，后者重新生成站点文件并将之推送到指定的库分支。（如果您的Hexo是局部安装，则需要执行<code>./node_modules/.bin/hexo clean &amp;&amp; ./node_modules/.bin/hexo deploy</code>。）</p>\n<p>登入 Github/BitBucket/Gitlab，请在库设置（Repository Settings）中将默认分支设置为<code>_config.yml</code>配置中的分支名称。稍等片刻，您的站点就会显示在您的Github Pages中。</p>\n<h3 id=\"这一切是如何发生的？\"><a href=\"#这一切是如何发生的？\" class=\"headerlink\" title=\"这一切是如何发生的？\"></a>这一切是如何发生的？</h3><p>当初次新建一个库的时候，库将自动包含一个<strong>master</strong>分支。请在这个分支下进行写作和各种配置来完善您的网页。当执行<code>hexo deploy</code>时，Hexo会创建或更新另外一个用于部署的分支，这个分支就是<code>_config.yml</code>配置文件中指定的分支。Hexo会将生成的站点文件推送至该分支下，并且<strong>完全覆盖</strong>该分支下的已有内容。因此，部署分支应当不同于写作分支。（一个推荐的方式是把master作为写作分支，另外使用public分支作为部署分支。）值得注意的是，<code>hexo deploy</code>并不会对本地或远程的写作分支进行任何操作，因此依旧需要手动推送写作分支的所有改动以实现版本控制。此外，如果您的Github Pages需要使用CNAME文件<strong>自定义域名</strong>，请将CNAME文件置于写作分支的<code>source_dir</code>目录下，只有这样<code>hexo deploy</code>才能将CNAME文件一并推送至部署分支。</p>\n<h2 id=\"Heroku\"><a href=\"#Heroku\" class=\"headerlink\" title=\"Heroku\"></a>Heroku</h2><p>安装 <a href=\"https://github.com/hexojs/hexo-deployer-heroku\" target=\"_blank\" rel=\"noopener\">hexo-deployer-heroku</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-heroku --save</span><br></pre></td></tr></table></figure>\n<p>修改配置。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>Heroku 库（Repository）地址</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>自定提交信息 (默认为 <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Netlify\"><a href=\"#Netlify\" class=\"headerlink\" title=\"Netlify\"></a>Netlify</h2><p><a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"noopener\">Netlify</a> 是一个提供网络托管的综合平台。它集持续集成（CI）CDN 自定义域名 HTTPS 持续部署（CD）等诸多功能于一身。您可以通过以下两种方式将Hexo站点部署到Netlify。</p>\n<p>首先，也是最通用的方式，就是使用Netlify提供的网页端用户界面。前往<a href=\"https://app.netlify.com/start\" target=\"_blank\" rel=\"noopener\">新建一个网站页面</a>，选择需要关联的 Github/BitBucket/Gitlab 库，然后遵循网站提示。</p>\n<p>另一种方式是使用Netlify提供的命令行客户端工具 <a href=\"https://www.netlify.com/docs/cli/\" target=\"_blank\" rel=\"noopener\">Node based CLI</a> 管理和部署您的站点。</p>\n<p>此外，您还可以在项目的README中增加一个 <a href=\"https://www.netlify.com/docs/deploy-button/\" target=\"_blank\" rel=\"noopener\">部署至Netlify按钮</a>，这样其他用户在fork或clone了您的项目之后可以方便快捷地一键部署。</p>\n<h2 id=\"Rsync\"><a href=\"#Rsync\" class=\"headerlink\" title=\"Rsync\"></a>Rsync</h2><p>安装 <a href=\"https://github.com/hexojs/hexo-deployer-rsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-rsync</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-rsync --save</span><br></pre></td></tr></table></figure>\n<p>修改配置。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">rsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  root:</span> <span class=\"string\">&lt;root&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  delete:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore_errors:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>远程主机的地址</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>使用者名称</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>远程主机的根目录</td>\n<td></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>端口</td>\n<td>22</td>\n</tr>\n<tr>\n<td><code>delete</code></td>\n<td>删除远程主机上的旧文件</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>显示调试信息</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>ignore_errors</code></td>\n<td>忽略错误</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note info\"><strong class=\"note-title\">rsync部署模块的工作方式</strong><p>需要注意的是，要求您提供的实际上是一个能通过SSH登陆远程主机的Linux用户。Hexo会自动处理关于rsync使用的一切操作。因此，您需要在远程主机上为您的Hexo站点建立一个用户，并允许其通过SSH登陆。不过，这里的<code>port</code>，的确是指rsync监听的端口，请确保防火墙打开了该端口。</p>\n</blockquote>\n<h2 id=\"OpenShift\"><a href=\"#OpenShift\" class=\"headerlink\" title=\"OpenShift\"></a>OpenShift</h2><p>安装 <a href=\"https://github.com/hexojs/hexo-deployer-openshift\" target=\"_blank\" rel=\"noopener\">hexo-deployer-openshift</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-openshift --save</span><br></pre></td></tr></table></figure>\n<p>修改配置。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">openshift</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>OpenShift 库（Repository）地址</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>自定提交信息 (默认为 <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"FTPSync\"><a href=\"#FTPSync\" class=\"headerlink\" title=\"FTPSync\"></a>FTPSync</h2><p>安装 <a href=\"https://github.com/hexojs/hexo-deployer-ftpsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-ftpsync</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-ftpsync --save</span><br></pre></td></tr></table></figure>\n<p>修改配置。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">ftpsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  pass:</span> <span class=\"string\">&lt;password&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  remote:</span> <span class=\"string\">[remote]</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore:</span> <span class=\"string\">[ignore]</span></span><br><span class=\"line\"><span class=\"attr\">  connections:</span> <span class=\"string\">[connections]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>远程主机的地址</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>使用者名称</td>\n<td></td>\n</tr>\n<tr>\n<td><code>pass</code></td>\n<td>密码</td>\n<td></td>\n</tr>\n<tr>\n<td><code>remote</code></td>\n<td>远程主机的根目录</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>端口</td>\n<td>21</td>\n</tr>\n<tr>\n<td><code>ignore</code></td>\n<td>忽略的文件或目录</td>\n<td></td>\n</tr>\n<tr>\n<td><code>connections</code></td>\n<td>使用的连接数</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>显示调试信息</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note warn\"><strong class=\"note-title\">FTP部署可能出现的问题</strong><p>您可能需要预先通过其他方式将所有文件上传到远程主机中。否则初次使用ftpsync插件就可能出现报错。另外，由于FTP协议的特征，它每传送一个文件就需要一次握手，相对速度较慢。</p>\n</blockquote>\n<h2 id=\"SFTP\"><a href=\"#SFTP\" class=\"headerlink\" title=\"SFTP\"></a>SFTP</h2><p>安装 <a href=\"https://github.com/lucascaro/hexo-deployer-sftp\" target=\"_blank\" rel=\"noopener\">hexo-deployer-sftp</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-sftp --save</span><br></pre></td></tr></table></figure>\n<p>修改配置。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">sftp</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  pass:</span> <span class=\"string\">&lt;password&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  remotePath:</span> <span class=\"string\">[remote</span> <span class=\"string\">path]</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  privateKey:</span> <span class=\"string\">[path/to/privateKey]</span></span><br><span class=\"line\"><span class=\"attr\">  passphrase:</span> <span class=\"string\">[passphrase]</span></span><br><span class=\"line\"><span class=\"attr\">  agent:</span> <span class=\"string\">[path/to/agent/socket]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>远程主机的地址</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>使用者名称</td>\n<td></td>\n</tr>\n<tr>\n<td><code>pass</code></td>\n<td>密码</td>\n<td></td>\n</tr>\n<tr>\n<td><code>remotePath</code></td>\n<td>远程主机的根目录</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>端口</td>\n<td>22</td>\n</tr>\n<tr>\n<td><code>privateKey</code></td>\n<td>ssh私钥的目录地址</td>\n<td></td>\n</tr>\n<tr>\n<td><code>passphrase</code></td>\n<td>（可省略）ssh私钥的密码短语</td>\n<td></td>\n</tr>\n<tr>\n<td><code>agent</code></td>\n<td>ssh套接字的目录地址</td>\n<td><code>$SSH_AUTH_SOCK</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"其他方法\"><a href=\"#其他方法\" class=\"headerlink\" title=\"其他方法\"></a>其他方法</h2><p>Hexo 生成的所有文件都放在 <code>public</code> 文件夹中，您可以将它们复制到您喜欢的地方。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a2005ukoeoatre0xl5",
				"title": "Front-matter",
				"markdown": "\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39808211&cid=69927868&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\nFront-matter 是文件最上方以 `---` 分隔的区域，用于指定个别文件的变量，举例来说：\n\n``` yaml\ntitle: Hello World\ndate: 2013/7/13 20:46:25\n---\n```\n\n以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`layout` | 布局 | \n`title` | 标题 |\n`date` | 建立日期 | 文件建立日期\n`updated` | 更新日期 | 文件更新日期\n`comments` | 开启文章的评论功能 | true\n`tags` | 标签（不适用于分页） |\n`categories` | 分类（不适用于分页）|\n`permalink` | 覆盖文章网址 |\n\n## 分类和标签\n\n只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 `Foo, Bar` 不等于 `Bar, Foo`；而标签没有顺序和层次。\n\n``` yaml\ncategories:\n- Diary\ntags:\n- PS3\n- Games\n```\n\n{% note warn 分类方法的分歧 %}\n如果您有过使用WordPress的经验，就很容易误解Hexo的分类方式。WordPress支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是Hexo不支持指定多个同级分类。下面的指定方法：\ncategories:\n\\- Diary\n\\- Life\n会使分类`Life`成为`Diary`的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。\n{% endnote %}\n\n## JSON Front-matter\n\n除了 YAML 外，你也可以使用 JSON 来编写 Front-matter，只要将 `---` 代换成 `;;;` 即可。\n\n``` json\n\"title\": \"Hello World\",\n\"date\": \"2013/7/13 20:46:25\"\n;;;\n```\n\n",
				"html": "<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39808211&cid=69927868&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n<p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"string\">/7/13</span> <span class=\"number\">20</span><span class=\"string\">:46:25</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n<p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>布局</td>\n<td></td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>标题</td>\n<td></td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>建立日期</td>\n<td>文件建立日期</td>\n</tr>\n<tr>\n<td><code>updated</code></td>\n<td>更新日期</td>\n<td>文件更新日期</td>\n</tr>\n<tr>\n<td><code>comments</code></td>\n<td>开启文章的评论功能</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>标签（不适用于分页）</td>\n<td></td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>分类（不适用于分页）</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>覆盖文章网址</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"分类和标签\"><a href=\"#分类和标签\" class=\"headerlink\" title=\"分类和标签\"></a>分类和标签</h2><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Diary</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">PS3</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Games</span></span><br></pre></td></tr></table></figure>\n<blockquote class=\"note warn\"><strong class=\"note-title\">分类方法的分歧</strong><p>如果您有过使用WordPress的经验，就很容易误解Hexo的分类方式。WordPress支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是Hexo不支持指定多个同级分类。下面的指定方法：<br>categories:<br>- Diary<br>- Life<br>会使分类<code>Life</code>成为<code>Diary</code>的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p>\n</blockquote>\n<h2 id=\"JSON-Front-matter\"><a href=\"#JSON-Front-matter\" class=\"headerlink\" title=\"JSON Front-matter\"></a>JSON Front-matter</h2><p>除了 YAML 外，你也可以使用 JSON 来编写 Front-matter，只要将 <code>---</code> 代换成 <code>;;;</code> 即可。</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"title\": \"Hello World\",</span><br><span class=\"line\">\"date\": \"2013/7/13 20:46:25\"</span><br><span class=\"line\">;;;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a2005vkoeohf10zm79",
				"title": "生成文件",
				"markdown": "使用 Hexo 生成静态文件快速而且简单。\n\n``` bash\n$ hexo generate\n```\n\n### 监视文件变动\n\nHexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。\n\n``` bash\n$ hexo generate --watch\n```\n\n### 完成后部署\n\n您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。\n\n``` bash\n$ hexo generate --deploy\n$ hexo deploy --generate\n```\n{% note info 简写 %}\n上面两个命令可以简写为\n$ hexo g -d\n$ hexo d -g\n{% endnote %}\n\n\n\n",
				"html": "<p>使用 Hexo 生成静态文件快速而且简单。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<h3 id=\"监视文件变动\"><a href=\"#监视文件变动\" class=\"headerlink\" title=\"监视文件变动\"></a>监视文件变动</h3><p>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --watch</span><br></pre></td></tr></table></figure>\n<h3 id=\"完成后部署\"><a href=\"#完成后部署\" class=\"headerlink\" title=\"完成后部署\"></a>完成后部署</h3><p>您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --deploy</span><br><span class=\"line\">$ hexo deploy --generate</span><br></pre></td></tr></table></figure>\n<blockquote class=\"note info\"><strong class=\"note-title\">简写</strong><p>上面两个命令可以简写为<br>$ hexo g -d<br>$ hexo d -g</p>\n</blockquote>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a2005wkoeoxduyjnr2",
				"title": "文档",
				"markdown": "\n欢迎使用 Hexo，本文档将帮助您快速上手。如果您在使用过程中遇到问题，请查看 [问题解答](troubleshooting.html) 中的解答，或者在 [GitHub](https://github.com/hexojs/hexo/issues)、[Google Group](https://groups.google.com/group/hexo) 上提问。\n\n## 什么是 Hexo？\n\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 [Markdown](http://daringfireball.net/projects/markdown/)（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39807850&cid=69927212&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>1\n\n## 安装\n\n安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请[提交问题](https://github.com/hexojs/hexo/issues)，我会尽力解决您的问题。\n\n### 安装前提\n\n安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：\n\n- [Node.js](http://nodejs.org/)\n- [Git](http://git-scm.com/)\n\n如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。\n\n``` bash\n$ npm install -g hexo-cli\n```\n\n如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。\n\n{% note warn Mac 用户 %}\n您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 **Preferences -> Download -> Command Line Tools -> Install** 安装命令行工具。\n{% endnote %}\n\n### 安装 Git\n\n- Windows：下载并安装 [git](https://git-scm.com/download/win).\n- Mac：使用 [Homebrew](http://mxcl.github.com/homebrew/), [MacPorts](http://www.macports.org/) ：`brew install git`;或下载 [安装程序](http://sourceforge.net/projects/git-osx-installer/) 安装。\n- Linux (Ubuntu, Debian)：`sudo apt-get install git-core`\n- Linux (Fedora, Red Hat, CentOS)：`sudo yum install git-core`\n\n{% note warn Windows 用户 %}\n由于众所周知的原因，从上面的链接下载git for windows最好挂上一个代理，否则下载速度十分缓慢。也可以参考[这个页面](https://github.com/waylau/git-for-win)，收录了存储于百度云的下载地址。\n{% endnote %}\n\n### 安装 Node.js\n\n安装 Node.js 的最佳方式是使用 [nvm](https://github.com/creationix/nvm)。\n\ncURL:\n\n``` bash\n$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh\n```\n\nWget:\n\n``` bash\n$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh\n```\n\n安装完成后，重启终端并执行下列命令即可安装 Node.js。\n\n``` bash\n$ nvm install stable\n```\n\n或者您也可以下载 [安装程序](http://nodejs.org/) 来安装。\n{% note info Windows 用户 %}\n对于windows用户来说，建议使用安装程序进行安装。安装时，请勾选**Add to PATH**选项。\n另外，您也可以使用**Git Bash**，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。由于Hexo的很多操作都涉及到命令行，您可以考虑始终使用**Git Bash**来进行操作。\n{% endnote %}\n### 安装 Hexo\n\n所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n``` bash\n$ npm install -g hexo-cli\n```\n\n\n",
				"html": "<p>欢迎使用 Hexo，本文档将帮助您快速上手。如果您在使用过程中遇到问题，请查看 <a href=\"troubleshooting.html\">问题解答</a> 中的解答，或者在 <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>、<a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a> 上提问。</p>\n<h2 id=\"什么是-Hexo？\"><a href=\"#什么是-Hexo？\" class=\"headerlink\" title=\"什么是 Hexo？\"></a>什么是 Hexo？</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n<p><div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39807850&cid=69927212&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>1</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请<a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">提交问题</a>，我会尽力解决您的问题。</p>\n<h3 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h3><p>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：</p>\n<ul>\n<li><a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node.js</a></li>\n<li><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></li>\n</ul>\n<p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p>\n<blockquote class=\"note warn\"><strong class=\"note-title\">Mac 用户</strong><p>您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p>\n</blockquote>\n<h3 id=\"安装-Git\"><a href=\"#安装-Git\" class=\"headerlink\" title=\"安装 Git\"></a>安装 Git</h3><ul>\n<li>Windows：下载并安装 <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a>.</li>\n<li>Mac：使用 <a href=\"http://mxcl.github.com/homebrew/\" target=\"_blank\" rel=\"noopener\">Homebrew</a>, <a href=\"http://www.macports.org/\" target=\"_blank\" rel=\"noopener\">MacPorts</a> ：<code>brew install git</code>;或下载 <a href=\"http://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"noopener\">安装程序</a> 安装。</li>\n<li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li>\n<li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li>\n</ul>\n<blockquote class=\"note warn\"><strong class=\"note-title\">Windows 用户</strong><p>由于众所周知的原因，从上面的链接下载git for windows最好挂上一个代理，否则下载速度十分缓慢。也可以参考<a href=\"https://github.com/waylau/git-for-win\" target=\"_blank\" rel=\"noopener\">这个页面</a>，收录了存储于百度云的下载地址。</p>\n</blockquote>\n<h3 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a>安装 Node.js</h3><p>安装 Node.js 的最佳方式是使用 <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">nvm</a>。</p>\n<p>cURL:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br></pre></td></tr></table></figure>\n<p>Wget:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br></pre></td></tr></table></figure>\n<p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ nvm install stable</span><br></pre></td></tr></table></figure>\n<p>或者您也可以下载 <a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">安装程序</a> 来安装。<br><blockquote class=\"note info\"><strong class=\"note-title\">Windows 用户</strong><p>对于windows用户来说，建议使用安装程序进行安装。安装时，请勾选<strong>Add to PATH</strong>选项。<br>另外，您也可以使用<strong>Git Bash</strong>，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。由于Hexo的很多操作都涉及到命令行，您可以考虑始终使用<strong>Git Bash</strong>来进行操作。</p>\n</blockquote></p>\n<h3 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a2005xkoeoshpka86d",
				"title": "迁移",
				"markdown": "## RSS\n\n首先，安装 `hexo-migrator-rss` 插件。\n\n``` bash\n$ npm install hexo-migrator-rss --save\n```\n\n插件安装完成后，执行下列命令，从 RSS 迁移所有文章。`source` 可以是文件路径或网址。\n\n``` bash\n$ hexo migrate rss <source>\n```\n\n## Jekyll\n\n把 `_posts` 文件夹内的所有文件复制到 `source/_posts` 文件夹，并在 `_config.yml` 中修改 `new_post_name` 参数。\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## Octopress\n\n把 Octopress `source/_posts` 文件夹内的所有文件转移到 Hexo 的 `source/_posts` 文件夹，并修改 `_config.yml` 中的 `new_post_name` 参数。\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## WordPress\n\n首先，安装 `hexo-migrator-wordpress` 插件。\n\n``` bash\n$ npm install hexo-migrator-wordpress --save\n```\n\n在 WordPress 仪表盘中导出数据(\"Tools\" → \"Export\" → \"WordPress\")（详情参考[WP支持页面](http://en.support.wordpress.com/export/)）。\n\n插件安装完成后，执行下列命令来迁移所有文章。`source` 可以是 WordPress 导出的文件路径或网址。\n\n``` bash\n$ hexo migrate wordpress <source>\n```\n{% note warn 注意 %}\n这个插件并不能完美地实现WordPress->Hexo的数据转换，尤其是在处理WordPress的分类方面存在问题（见[Front-matter中的分类与标签](https://hexo.io/zh-cn/docs/front-matter.html)）。因此，建议您在迁移完成后，手工审阅所有生成的markdown文件，检查其中是否有错误。对于文章数量较大的WordPress站点，这项工作可能要花很长的时间。\n{% endnote %}\n## Joomla\n\n首先，安装 `hexo-migrator-joomla` 插件。\n\n```bash\n$ npm install hexo-migrator-joomla --save\n```\n\n使用 [J2XML](http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D) 组件导出 Joomla 文章。\n插件安装完成后，执行下列命令来迁移所有文章。`source` 可以是 Joomla 导出的文件路径或网址。\n\n\n```bash\n$ hexo migrate joomla <source>\n```\n\n",
				"html": "<h2 id=\"RSS\"><a href=\"#RSS\" class=\"headerlink\" title=\"RSS\"></a>RSS</h2><p>首先，安装 <code>hexo-migrator-rss</code> 插件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-rss --save</span><br></pre></td></tr></table></figure>\n<p>插件安装完成后，执行下列命令，从 RSS 迁移所有文章。<code>source</code> 可以是文件路径或网址。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate rss &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Jekyll\"><a href=\"#Jekyll\" class=\"headerlink\" title=\"Jekyll\"></a>Jekyll</h2><p>把 <code>_posts</code> 文件夹内的所有文件复制到 <code>source/_posts</code> 文件夹，并在 <code>_config.yml</code> 中修改 <code>new_post_name</code> 参数。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Octopress\"><a href=\"#Octopress\" class=\"headerlink\" title=\"Octopress\"></a>Octopress</h2><p>把 Octopress <code>source/_posts</code> 文件夹内的所有文件转移到 Hexo 的 <code>source/_posts</code> 文件夹，并修改 <code>_config.yml</code> 中的 <code>new_post_name</code> 参数。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"WordPress\"><a href=\"#WordPress\" class=\"headerlink\" title=\"WordPress\"></a>WordPress</h2><p>首先，安装 <code>hexo-migrator-wordpress</code> 插件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-wordpress --save</span><br></pre></td></tr></table></figure>\n<p>在 WordPress 仪表盘中导出数据(“Tools” → “Export” → “WordPress”)（详情参考<a href=\"http://en.support.wordpress.com/export/\" target=\"_blank\" rel=\"noopener\">WP支持页面</a>）。</p>\n<p>插件安装完成后，执行下列命令来迁移所有文章。<code>source</code> 可以是 WordPress 导出的文件路径或网址。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate wordpress &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<blockquote class=\"note warn\"><strong class=\"note-title\">注意</strong><p>这个插件并不能完美地实现WordPress-&gt;Hexo的数据转换，尤其是在处理WordPress的分类方面存在问题（见<a href=\"https://hexo.io/zh-cn/docs/front-matter.html\">Front-matter中的分类与标签</a>）。因此，建议您在迁移完成后，手工审阅所有生成的markdown文件，检查其中是否有错误。对于文章数量较大的WordPress站点，这项工作可能要花很长的时间。</p>\n</blockquote>\n<h2 id=\"Joomla\"><a href=\"#Joomla\" class=\"headerlink\" title=\"Joomla\"></a>Joomla</h2><p>首先，安装 <code>hexo-migrator-joomla</code> 插件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-joomla --save</span><br></pre></td></tr></table></figure>\n<p>使用 <a href=\"http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D\" target=\"_blank\" rel=\"noopener\">J2XML</a> 组件导出 Joomla 文章。<br>插件安装完成后，执行下列命令来迁移所有文章。<code>source</code> 可以是 Joomla 导出的文件路径或网址。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate joomla &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a3005ykoeo52ljrmal",
				"title": "国际化（i18n）",
				"markdown": "若要让您的网站以不同语言呈现，您可使用国际化（internationalization）功能。请先在 `_config.yml` 中调整 `language` 设定，这代表的是预设语言，您也可设定多个语言来调整预设语言的顺位。\n\n``` yaml\nlanguage: zh-tw\n\nlanguage: \n- zh-tw\n- en\n```\n\n### 语言文件\n\n语言文件可以使用 YAML 或 JSON 编写，并放在主题文件夹中的 `languages` 文件夹。您可以在语言文件中使用 [printf 格式](https://github.com/alexei/sprintf.js)。\n\n### 模板\n\n在模板中，透过 `__` 或 `_p` 辅助函数，即可取得翻译后的字符串，前者用于一般使用；而后者用于复数字符串。例如：\n\n``` yaml en.yml\nindex:\n  title: Home\n  add: Add\n  video:\n    zero: No videos\n    one: One video\n    other: %d videos\n```\n\n``` js\n<%= __('index.title') %>\n// Home\n\n<%= _p('index.video', 3) %>\n// 3 videos\n```\n\n### 路径\n\n您可在 front-matter 中指定该页面的语言，也可在 `_config.yml` 中修改 `i18n_dir` 设定，让 Hexo 自动侦测。\n\n``` yaml\ni18n_dir: :lang\n```\n\n`i18n_dir` 的预设值是 `:lang`，也就是说 Hexo 会捕获网址中的第一段以检测语言，举例来说：\n\n``` plain\n/index.html => en\n/archives/index.html => en\n/zh-tw/index.html => zh-tw\n```\n\n捕获到的字符串唯有在语言文件存在的情况下，才会被当作是语言，因此例二 `/archives/index.html` 中的 `archives` 就不被当成是语言。",
				"html": "<p>若要让您的网站以不同语言呈现，您可使用国际化（internationalization）功能。请先在 <code>_config.yml</code> 中调整 <code>language</code> 设定，这代表的是预设语言，您也可设定多个语言来调整预设语言的顺位。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-tw</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">language:</span> </span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">zh-tw</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"语言文件\"><a href=\"#语言文件\" class=\"headerlink\" title=\"语言文件\"></a>语言文件</h3><p>语言文件可以使用 YAML 或 JSON 编写，并放在主题文件夹中的 <code>languages</code> 文件夹。您可以在语言文件中使用 <a href=\"https://github.com/alexei/sprintf.js\" target=\"_blank\" rel=\"noopener\">printf 格式</a>。</p>\n<h3 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h3><p>在模板中，透过 <code>__</code> 或 <code>_p</code> 辅助函数，即可取得翻译后的字符串，前者用于一般使用；而后者用于复数字符串。例如：</p>\n<figure class=\"highlight yaml\"><figcaption><span>en.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">index:</span></span><br><span class=\"line\"><span class=\"attr\">  title:</span> <span class=\"string\">Home</span></span><br><span class=\"line\"><span class=\"attr\">  add:</span> <span class=\"string\">Add</span></span><br><span class=\"line\"><span class=\"attr\">  video:</span></span><br><span class=\"line\"><span class=\"attr\">    zero:</span> <span class=\"literal\">No</span> <span class=\"string\">videos</span></span><br><span class=\"line\"><span class=\"attr\">    one:</span> <span class=\"string\">One</span> <span class=\"string\">video</span></span><br><span class=\"line\"><span class=\"attr\">    other:</span> <span class=\"string\">%d</span> <span class=\"string\">videos</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%= __(<span class=\"string\">'index.title'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Home</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%= _p(<span class=\"string\">'index.video'</span>, <span class=\"number\">3</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 3 videos</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"路径\"><a href=\"#路径\" class=\"headerlink\" title=\"路径\"></a>路径</h3><p>您可在 front-matter 中指定该页面的语言，也可在 <code>_config.yml</code> 中修改 <code>i18n_dir</code> 设定，让 Hexo 自动侦测。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">i18n_dir:</span> <span class=\"string\">:lang</span></span><br></pre></td></tr></table></figure>\n<p><code>i18n_dir</code> 的预设值是 <code>:lang</code>，也就是说 Hexo 会捕获网址中的第一段以检测语言，举例来说：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">/index.html =&gt; en</span><br><span class=\"line\">/archives/index.html =&gt; en</span><br><span class=\"line\">/zh-tw/index.html =&gt; zh-tw</span><br></pre></td></tr></table></figure>\n<p>捕获到的字符串唯有在语言文件存在的情况下，才会被当作是语言，因此例二 <code>/archives/index.html</code> 中的 <code>archives</code> 就不被当成是语言。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a3005zkoeo6dthrwg9",
				"title": "永久链接（Permalinks）",
				"markdown": "您可以在 `_config.yml` 配置中调整网站的永久链接或者在每篇文章的 Front-matter 中指定。\n\n### 变量\n\n除了下列变量外，您还可使用 Front-matter 中的所有属性。\n\n变量 | 描述\n--- | ---\n`:year` | 文章的发表年份（4 位数）\n`:month` | 文章的发表月份（2 位数）\n`:i_month` | 文章的发表月份（去掉开头的零）\n`:day` | 文章的发表日期 (2 位数)\n`:i_day` | 文章的发表日期（去掉开头的零）\n`:title` | 文件名称\n`:post_title` | 文章标题\n`:id` | 文章 ID\n`:category` | 分类。如果文章没有分类，则是 `default_category` 配置信息。\n\n您可在 `permalink_defaults` 参数下调整永久链接中各变量的默认值：\n\n``` yaml\npermalink_defaults:\n  lang: en\n```\n\n### 示例\n\n假设 `source/_posts` 文件夹中有个 `hello-world.md`，包含以下内容：\n\n``` yaml\ntitle: Hello World\ndate: 2013-07-14 17:01:34\ncategories:\n- foo\n- bar\n```\n\n参数 | 结果\n--- | ---\n`:year/:month/:day/:title/` | 2013/07/14/hello-world\n`:year-:month-:day-:title.html` | 2013-07-14-hello-world.html\n`:category/:title` | foo/bar/hello-world\n\n### 多语种支持\n\n若要建立一个多语种的网站，您可修改 `new_post_name` 和 `permalink` 参数，如下：\n\n``` yaml\nnew_post_name: :lang/:title.md\npermalink: :lang/:title/\n```\n\n当您建立新文章时，文章会被储存到：\n\n``` bash\n$ hexo new \"Hello World\" --lang tw\n# => source/_posts/tw/Hello-World.md\n```\n\n而网址会是：\n\n``` plain\nhttp://localhost:4000/tw/hello-world/\n```\n",
				"html": "<p>您可以在 <code>_config.yml</code> 配置中调整网站的永久链接或者在每篇文章的 Front-matter 中指定。</p>\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p>除了下列变量外，您还可使用 Front-matter 中的所有属性。</p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year</code></td>\n<td>文章的发表年份（4 位数）</td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>文章的发表月份（2 位数）</td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>文章的发表月份（去掉开头的零）</td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>文章的发表日期 (2 位数)</td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>文章的发表日期（去掉开头的零）</td>\n</tr>\n<tr>\n<td><code>:title</code></td>\n<td>文件名称</td>\n</tr>\n<tr>\n<td><code>:post_title</code></td>\n<td>文章标题</td>\n</tr>\n<tr>\n<td><code>:id</code></td>\n<td>文章 ID</td>\n</tr>\n<tr>\n<td><code>:category</code></td>\n<td>分类。如果文章没有分类，则是 <code>default_category</code> 配置信息。</td>\n</tr>\n</tbody>\n</table>\n<p>您可在 <code>permalink_defaults</code> 参数下调整永久链接中各变量的默认值：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">permalink_defaults:</span></span><br><span class=\"line\"><span class=\"attr\">  lang:</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p>假设 <code>source/_posts</code> 文件夹中有个 <code>hello-world.md</code>，包含以下内容：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"bullet\">-07</span><span class=\"bullet\">-14</span> <span class=\"number\">17</span><span class=\"string\">:01:34</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">foo</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">bar</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year/:month/:day/:title/</code></td>\n<td>2013/07/14/hello-world</td>\n</tr>\n<tr>\n<td><code>:year-:month-:day-:title.html</code></td>\n<td>2013-07-14-hello-world.html</td>\n</tr>\n<tr>\n<td><code>:category/:title</code></td>\n<td>foo/bar/hello-world</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"多语种支持\"><a href=\"#多语种支持\" class=\"headerlink\" title=\"多语种支持\"></a>多语种支持</h3><p>若要建立一个多语种的网站，您可修改 <code>new_post_name</code> 和 <code>permalink</code> 参数，如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:lang/:title.md</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:lang/:title/</span></span><br></pre></td></tr></table></figure>\n<p>当您建立新文章时，文章会被储存到：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"Hello World\"</span> --lang tw</span><br><span class=\"line\"><span class=\"comment\"># =&gt; source/_posts/tw/Hello-World.md</span></span><br></pre></td></tr></table></figure>\n<p>而网址会是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://localhost:4000/tw/hello-world/</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a30060koeoy1a65euf",
				"title": "服务器",
				"markdown": "## [hexo-server]\n\nHexo 3.0 把服务器独立成了个别模块，您必须先安装 [hexo-server] 才能使用。\n\n``` bash\n$ npm install hexo-server --save\n```\n\n安装完成后，输入以下命令以启动服务器，您的网站会在 `http://localhost:4000` 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。\n\n``` bash\n$ hexo server\n```\n\n如果您想要更改端口，或是在执行时遇到了 `EADDRINUSE` 错误，可以在执行时使用 `-p` 选项指定其他端口，如下：\n\n``` bash\n$ hexo server -p 5000\n```\n\n### 静态模式\n\n在静态模式下，服务器只处理 `public` 文件夹内的文件，而不会处理文件变动，在执行时，您应该先自行执行 `hexo generate`，此模式通常用于生产环境（production mode）下。\n\n``` bash\n$ hexo server -s\n```\n\n### 自定义 IP\n\n服务器默认运行在 `0.0.0.0`，您可以覆盖默认的 IP 设置，如下：\n\n``` bash\n$ hexo server -i 192.168.1.1\n```\n指定这个参数后，您就只能通过该IP才能访问站点。例如，对于一台使用无线网络的笔记本电脑，除了指向本机的`127.0.0.1`外，通常还有一个`192.168.*.*`的局域网IP，如果像上面那样使用`-i`参数，就不能用`127.0.0.1`来访问站点了。对于有公网IP的主机，如果您指定一个局域网IP作为`-i`参数的值，那么就无法通过公网来访问站点。\n\n## Pow\n\n[Pow](http://pow.cx/) 是一个 Mac 系统上的零配置 Rack 服务器，它也可以作为一个简单易用的静态文件服务器来使用。\n\n### 安装\n\n``` bash\n$ curl get.pow.cx | sh\n```\n\n### 设置\n\n在 `~/.pow` 文件夹建立链接（symlink）。\n\n``` bash\n$ cd ~/.pow\n$ ln -s /path/to/myapp\n```\n\n您的网站将会在 `http://myapp.dev` 下运行，网址根据链接名称而定。\n\n[hexo-server]: https://github.com/hexojs/hexo-server\n[Connect]: https://github.com/senchalabs/connect\n[morgan]: https://github.com/expressjs/morgan\n[Forever]: https://github.com/nodejitsu/forever\n[PM2]: https://github.com/Unitech/pm2\n\n",
				"html": "<h2 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo-server\"></a><a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a></h2><p>Hexo 3.0 把服务器独立成了个别模块，您必须先安装 <a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a> 才能使用。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure>\n<p>安装完成后，输入以下命令以启动服务器，您的网站会在 <code>http://localhost:4000</code> 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>如果您想要更改端口，或是在执行时遇到了 <code>EADDRINUSE</code> 错误，可以在执行时使用 <code>-p</code> 选项指定其他端口，如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h3 id=\"静态模式\"><a href=\"#静态模式\" class=\"headerlink\" title=\"静态模式\"></a>静态模式</h3><p>在静态模式下，服务器只处理 <code>public</code> 文件夹内的文件，而不会处理文件变动，在执行时，您应该先自行执行 <code>hexo generate</code>，此模式通常用于生产环境（production mode）下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -s</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义-IP\"><a href=\"#自定义-IP\" class=\"headerlink\" title=\"自定义 IP\"></a>自定义 IP</h3><p>服务器默认运行在 <code>0.0.0.0</code>，您可以覆盖默认的 IP 设置，如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -i 192.168.1.1</span><br></pre></td></tr></table></figure>\n<p>指定这个参数后，您就只能通过该IP才能访问站点。例如，对于一台使用无线网络的笔记本电脑，除了指向本机的<code>127.0.0.1</code>外，通常还有一个<code>192.168.*.*</code>的局域网IP，如果像上面那样使用<code>-i</code>参数，就不能用<code>127.0.0.1</code>来访问站点了。对于有公网IP的主机，如果您指定一个局域网IP作为<code>-i</code>参数的值，那么就无法通过公网来访问站点。</p>\n<h2 id=\"Pow\"><a href=\"#Pow\" class=\"headerlink\" title=\"Pow\"></a>Pow</h2><p><a href=\"http://pow.cx/\" target=\"_blank\" rel=\"noopener\">Pow</a> 是一个 Mac 系统上的零配置 Rack 服务器，它也可以作为一个简单易用的静态文件服务器来使用。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl get.pow.cx | sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h3><p>在 <code>~/.pow</code> 文件夹建立链接（symlink）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/.pow</span><br><span class=\"line\">$ ln -s /path/to/myapp</span><br></pre></td></tr></table></figure>\n<p>您的网站将会在 <code>http://myapp.dev</code> 下运行，网址根据链接名称而定。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a30061koeo3ing5n7x",
				"title": "建站",
				"markdown": "\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39808009&cid=69927588&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n新建完成后，指定文件夹的目录如下：\n\n``` plain\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\n网站的 [配置](configuration.html) 信息，您可以在此配置大部分的参数。\n\n### package.json\n\n应用程序的信息。[EJS](http://embeddedjs.com/), [Stylus](http://learnboost.github.io/stylus/) 和 [Markdown](http://daringfireball.net/projects/markdown/) renderer 已默认安装，您可以自由移除。\n\n``` json package.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### scaffolds\n\n[模版](writing.html) 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。\n\nHexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。\n\n### source\n\n资源文件夹是存放用户资源的地方。除 `_posts` 文件夹之外，开头命名为 `_` (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 `public` 文件夹，而其他文件会被拷贝过去。\n\n### themes\n\n[主题](themes.html) 文件夹。Hexo 会根据主题来生成静态页面。\n\n\n",
				"html": "<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39808009&cid=69927588&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n\n<p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>网站的 <a href=\"configuration.html\">配置</a> 信息，您可以在此配置大部分的参数。</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>应用程序的信息。<a href=\"http://embeddedjs.com/\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"http://learnboost.github.io/stylus/\" target=\"_blank\" rel=\"noopener\">Stylus</a> 和 <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a> renderer 已默认安装，您可以自由移除。</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-site\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"private\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"hexo\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-archive\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-category\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-index\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-tag\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-ejs\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-stylus\"</span>: <span class=\"string\">\"^0.2.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-marked\"</span>: <span class=\"string\">\"^0.2.4\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-server\"</span>: <span class=\"string\">\"^0.1.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p><a href=\"writing.html\">模版</a> 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>\n<p>Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p><a href=\"themes.html\">主题</a> 文件夹。Hexo 会根据主题来生成静态页面。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a30062koeoz0ypky0t",
				"title": "插件",
				"markdown": "Hexo 有强大的插件系统，使您能轻松扩展功能而不用修改核心模块的源码。在 Hexo 中有两种形式的插件：\n\n### 脚本（Scripts）\n\n如果您的代码很简单，建议您编写脚本，您只需要把 JavaScript 文件放到 `scripts` 文件夹，在启动时就会自动载入。\n\n### 插件（Packages）\n\n如果您的代码较复杂，或是您想要发布到 NPM 上，建议您编写插件。首先，在 `node_modules` 文件夹中建立文件夹，文件夹名称开头必须为 `hexo-`，如此一来 Hexo 才会在启动时载入否则 Hexo 将会忽略它。\n\n文件夹内至少要包含 2 个文件：一个是主程序，另一个是 `package.json`，描述插件的用途和所依赖的插件。\n\n``` plain\n.\n├── index.js\n└── package.json\n```\n\n`package.json` 中至少要包含 `name`, `version`, `main` 属性，例如：\n\n``` json package.json\n{\n  \"name\": \"hexo-my-plugin\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index\"\n}\n```\n\n### 工具\n\n您可以使用 Hexo 提供的官方工具插件来加速开发：\n\n- [hexo-fs]：文件 IO\n- [hexo-util]：工具程式\n- [hexo-i18n]：本地化（i18n）\n- [hexo-pagination]：生成分页资料\n\n### 发布\n\n当您完成插件后，可以考虑将它发布到 [插件列表](/plugins)，让更多人能够使用您的插件。发布插件的步骤和 [更新文件](contributing.html#更新文件) 非常类似。\n\n1. Fork [hexojs/site]\n2. 把库（repository）复制到电脑上，并安装所依赖的插件。\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. 编辑 `source/_data/plugins.yml`，在档案中新增您的插件，例如：\n\n    {% code %}\n    - name: hexo-server\n      description: Server module for Hexo.\n      link: https://github.com/hexojs/hexo-server\n      tags:\n        - official\n        - server\n        - console\n    {% endcode %}\n\n4. 推送（push）分支。\n5. 建立一个新的合并申请（pull request）并描述改动。\n\n[hexo-fs]: https://github.com/hexojs/hexo-fs\n[hexo-util]: https://github.com/hexojs/hexo-util\n[hexo-i18n]: https://github.com/hexojs/hexo-i18n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<p>Hexo 有强大的插件系统，使您能轻松扩展功能而不用修改核心模块的源码。在 Hexo 中有两种形式的插件：</p>\n<h3 id=\"脚本（Scripts）\"><a href=\"#脚本（Scripts）\" class=\"headerlink\" title=\"脚本（Scripts）\"></a>脚本（Scripts）</h3><p>如果您的代码很简单，建议您编写脚本，您只需要把 JavaScript 文件放到 <code>scripts</code> 文件夹，在启动时就会自动载入。</p>\n<h3 id=\"插件（Packages）\"><a href=\"#插件（Packages）\" class=\"headerlink\" title=\"插件（Packages）\"></a>插件（Packages）</h3><p>如果您的代码较复杂，或是您想要发布到 NPM 上，建议您编写插件。首先，在 <code>node_modules</code> 文件夹中建立文件夹，文件夹名称开头必须为 <code>hexo-</code>，如此一来 Hexo 才会在启动时载入否则 Hexo 将会忽略它。</p>\n<p>文件夹内至少要包含 2 个文件：一个是主程序，另一个是 <code>package.json</code>，描述插件的用途和所依赖的插件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── index.js</span><br><span class=\"line\">└── package.json</span><br></pre></td></tr></table></figure>\n<p><code>package.json</code> 中至少要包含 <code>name</code>, <code>version</code>, <code>main</code> 属性，例如：</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-my-plugin\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h3><p>您可以使用 Hexo 提供的官方工具插件来加速开发：</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-fs\" target=\"_blank\" rel=\"noopener\">hexo-fs</a>：文件 IO</li>\n<li><a href=\"https://github.com/hexojs/hexo-util\" target=\"_blank\" rel=\"noopener\">hexo-util</a>：工具程式</li>\n<li><a href=\"https://github.com/hexojs/hexo-i18n\" target=\"_blank\" rel=\"noopener\">hexo-i18n</a>：本地化（i18n）</li>\n<li><a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a>：生成分页资料</li>\n</ul>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p>当您完成插件后，可以考虑将它发布到 <a href=\"/plugins\">插件列表</a>，让更多人能够使用您的插件。发布插件的步骤和 <a href=\"contributing.html#更新文件\">更新文件</a> 非常类似。</p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>把库（repository）复制到电脑上，并安装所依赖的插件。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编辑 <code>source/_data/plugins.yml</code>，在档案中新增您的插件，例如：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">- name: hexo-server</span><br><span class=\"line\">  description: Server module for Hexo.</span><br><span class=\"line\">  link: https://github.com/hexojs/hexo-server</span><br><span class=\"line\">  tags:</span><br><span class=\"line\">    - official</span><br><span class=\"line\">    - server</span><br><span class=\"line\">    - console</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>推送（push）分支。</p>\n</li>\n<li>建立一个新的合并申请（pull request）并描述改动。</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a40063koeo48867fxw",
				"title": "标签插件（Tag Plugins）",
				"markdown": "标签插件和 Front-matter 中的标签不同，它们是用于在文章中快速插入特定内容的插件。\n\n## 引用块\n\n在文章中插入引言，可包含作者、来源和标题。\n\n**别号：** quote\n\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n### 样例\n\n**没有提供参数，则只输出普通的 blockquote**\n\n```\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n```\n\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n\n**引用书上的句子**\n\n```\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n```\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n**引用 Twitter**\n\n```\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n```\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n**引用网络上的文章**\n\n```\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n```\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n## 代码块\n\n在文章中插入代码。\n\n**别名：** code\n\n```\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n\n### 样例\n\n**普通的代码块**\n\n```\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**指定语言**\n\n```\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n```\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n\n**附加说明**\n\n```\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n```\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n\n**附加说明和网址**\n\n```\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n```\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n## 反引号代码块\n\n另一种形式的代码块，不同的是它使用三个反引号来包裹。\n\n{% raw %}\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n{% endraw %}\n\n## Pull Quote\n\n在文章中插入 Pull quote。\n\n```\n{% pullquote [class] %}\ncontent\n{% endpullquote %}\n```\n\n## jsFiddle\n\n在文章中嵌入 jsFiddle。\n\n```\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\n\n## Gist\n\n在文章中嵌入 Gist。\n\n```\n{% gist gist_id [filename] %}\n```\n\n## iframe\n\n在文章中插入 iframe。\n\n```\n{% iframe url [width] [height] %}\n```\n\n## Image\n\n在文章中插入指定大小的图片。\n\n```\n{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}\n```\n\n## Link\n\n在文章中插入链接，并自动给外部链接添加 `target=\"_blank\"` 属性。\n\n```\n{% link text url [external] [title] %}\n```\n\n## Include Code\n\n插入 `source` 文件夹内的代码文件。\n\n```\n{% include_code [title] [lang:language] path/to/file %}\n```\n\n## Youtube\n\n在文章中插入 Youtube 视频。\n\n```\n{% youtube video_id %}\n```\n\n## Vimeo\n\n在文章中插入 Vimeo 视频。\n\n```\n{% vimeo video_id %}\n```\n\n## 引用文章\n\n引用其他文章的链接。\n\n```\n{% post_path slug %}\n{% post_link slug [title] %}\n```\n\n## 引用资源\n\n引用文章的资源。\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n## Raw\n\n如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。\n\n```\n{% raw %}\ncontent\n{% endraw %}\n```\n",
				"html": "<p>标签插件和 Front-matter 中的标签不同，它们是用于在文章中快速插入特定内容的插件。</p>\n<h2 id=\"引用块\"><a href=\"#引用块\" class=\"headerlink\" title=\"引用块\"></a>引用块</h2><p>在文章中插入引言，可包含作者、来源和标题。</p>\n<p><strong>别号：</strong> quote</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"样例\"><a href=\"#样例\" class=\"headerlink\" title=\"样例\"></a>样例</h3><p><strong>没有提供参数，则只输出普通的 blockquote</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote %&#125;</span><br><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>\n</blockquote>\n<p><strong>引用书上的句子</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class=\"line\">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n<p><strong>引用 Twitter</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;</span><br><span class=\"line\">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\" target=\"_blank\" rel=\"noopener\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\" target=\"_blank\" rel=\"noopener\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<p><strong>引用网络上的文章</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</span><br><span class=\"line\">Every interaction is both precious and an opportunity to delight.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\" target=\"_blank\" rel=\"noopener\">Welcome to Island Marketing</a></cite></footer></blockquote>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><p>在文章中插入代码。</p>\n<p><strong>别名：</strong> code</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class=\"line\">code snippet</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"样例-1\"><a href=\"#样例-1\" class=\"headerlink\" title=\"样例\"></a>样例</h3><p><strong>普通的代码块</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock %&#125;</span><br><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br></pre></td></tr></table></figure>\n<p><strong>指定语言</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock lang:objc %&#125;</span><br><span class=\"line\">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"code\"><pre><span class=\"line\">[rectangle setX: <span class=\"number\">10</span> y: <span class=\"number\">10</span> width: <span class=\"number\">20</span> height: <span class=\"number\">20</span>];</span><br></pre></td></tr></table></figure>\n<p><strong>附加说明</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock Array.map %&#125;</span><br><span class=\"line\">array.map(callback[, thisArg])</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>\n<p><strong>附加说明和网址</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock _.compact http://underscorejs.org/#compact Underscore.js %&#125;</span><br><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>_.compact</span><a href=\"http://underscorejs.org/#compact\" target=\"_blank\" rel=\"noopener\">Underscore.js</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>\n<h2 id=\"反引号代码块\"><a href=\"#反引号代码块\" class=\"headerlink\" title=\"反引号代码块\"></a>反引号代码块</h2><p>另一种形式的代码块，不同的是它使用三个反引号来包裹。</p>\n\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n\n<h2 id=\"Pull-Quote\"><a href=\"#Pull-Quote\" class=\"headerlink\" title=\"Pull Quote\"></a>Pull Quote</h2><p>在文章中插入 Pull quote。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% pullquote [class] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"jsFiddle\"><a href=\"#jsFiddle\" class=\"headerlink\" title=\"jsFiddle\"></a>jsFiddle</h2><p>在文章中嵌入 jsFiddle。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h2><p>在文章中嵌入 Gist。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"iframe\"><a href=\"#iframe\" class=\"headerlink\" title=\"iframe\"></a>iframe</h2><p>在文章中插入 iframe。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2><p>在文章中插入指定大小的图片。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><p>在文章中插入链接，并自动给外部链接添加 <code>target=&quot;_blank&quot;</code> 属性。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-Code\"><a href=\"#Include-Code\" class=\"headerlink\" title=\"Include Code\"></a>Include Code</h2><p>插入 <code>source</code> 文件夹内的代码文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% include_code [title] [lang:language] path/to/file %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Youtube\"><a href=\"#Youtube\" class=\"headerlink\" title=\"Youtube\"></a>Youtube</h2><p>在文章中插入 Youtube 视频。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% youtube video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Vimeo\"><a href=\"#Vimeo\" class=\"headerlink\" title=\"Vimeo\"></a>Vimeo</h2><p>在文章中插入 Vimeo 视频。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% vimeo video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用文章\"><a href=\"#引用文章\" class=\"headerlink\" title=\"引用文章\"></a>引用文章</h2><p>引用其他文章的链接。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% post_path slug %&#125;</span><br><span class=\"line\">&#123;% post_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用资源\"><a href=\"#引用资源\" class=\"headerlink\" title=\"引用资源\"></a>引用资源</h2><p>引用文章的资源。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Raw\"><a href=\"#Raw\" class=\"headerlink\" title=\"Raw\"></a>Raw</h2><p>如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a40064koeodwgt1ria",
				"title": "问题解答",
				"markdown": "在使用 Hexo 时，您可能会遇到一些问题，下列的常见问题解答可能会对您有所帮助。如果您在这里找不到解答，可以在 [GitHub](https://github.com/hexojs/hexo/issues) 或 [Google Group](https://groups.google.com/group/hexo) 上提问。\n\n## YAML 解析错误\n\n``` plain\nJS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:\n      last_updated: Last updated: %s\n```\n\n如果 YAML 字符串中包含冒号（`:`）的话，请加上引号。\n\n``` plain\nJS-YAML: bad indentation of a mapping entry at line 18, column 31:\n      last_updated:\"Last updated: %s\"\n```\n\n请确认您使用空格进行缩进（Soft tab），并确认冒号后有加上一个空格。\n\n您可参阅 [YAML 规范](http://www.yaml.org/spec/1.2/spec.html) 以取得更多信息。\n\n## EMFILE 错误\n\n``` plain\nError: EMFILE, too many open files\n```\n\n虽然 Node.js 有非阻塞 I/O，同步 I/O 的数量仍被系统所限制，在生成大量静态文件的时候，您可能会碰到 EMFILE 错误，您可以尝试提高同步 I/O 的限制数量来解决此问题。\n\n``` bash\n$ ulimit -n 10000\n```\n（这一命令只对Linux系统有效）\n\n## Git 部署问题\n\n``` plain\nfatal: 'username.github.io' does not appear to be a git repository\n```\n\n请确认您已经在电脑上 [配置 git](https://help.github.com/articles/set-up-git)，或改用 HTTPS 库（repository）地址。\n\n## 服务器问题\n\n``` plain\nError: listen EADDRINUSE\n```\n\n您可能同时开启两个 Hexo 服务器，或者有其他应用程序正在占用相同的端口，请尝试修改 `port` 参数，或是在启动 Hexo 服务器时加上 `-p` 选项。\n\n``` bash\n$ hexo server -p 5000\n```\n\n## 插件安装问题\n\n``` plain\nnpm ERR! node-waf configure build\n```\n\n当您尝试安装以 C/C++ 或其他非 JavaScript 语言所编写的插件时，可能会遇到此类问题，请确认您已经在电脑上安装相对应的编译器。\n\n## DTrace 错误 （Mac OS X）\n\n```plain\n{ [Error: Cannot find module './build/Release/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/default/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/Debug/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n```\n\nDTrace 安装可能有错误 , 使用下列命令:\n```sh\n$ npm install hexo --no-optional\n```\n参考 [#1326](https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796)\n\n\n## 在 Jade 或 Swig 遍历资料\n\nHexo 使用 [Warehouse] 存储资料，它不是一般数组所以必须先进行类型转型才能遍历。\n\n```\n{% for post in site.posts.toArray() %}\n{% endfor %}\n```\n\n## 资料没有更新\n\n有时资料可能没有被更新，或是生成的文件与修改前的相同，您可以尝试清除缓存并再执行一次。\n\n``` bash\n$ hexo clean\n```\n\n## 泄露（Escape）内容\n\nHexo 使用 [Nunjucks] 来解析文章（旧版本使用 [Swig]，两者语法类似），内容若包含 `{% raw %}{{ }}{% endraw %}` 或 `{% raw %}{% %}{% endraw %}` 可能导致解析错误，您可以用 `raw` 标签包裹来避免潜在问题发生。\n\n```\n{% raw %}\nHello {{ sensitive }}\n{% endraw %}\n```\n\n## ENOSPC 错误 （Linux）\n\n运行 `$ hexo server` 命令有时会返回这样的错误：\n```\nError: watch ENOSPC ...\n```\n它可以用过运行 `$ npm dedupe` 来解决，如果不起作用的话，可以尝试在 Linux 终端中运行下列命令：\n```\n$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\n这将会提高你能监视的文件数量。\n\n[Warehouse]: https://github.com/hexojs/warehouse\n[Swig]: http://paularmstrong.github.io/swig/\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n\n",
				"html": "<p>在使用 Hexo 时，您可能会遇到一些问题，下列的常见问题解答可能会对您有所帮助。如果您在这里找不到解答，可以在 <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> 或 <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a> 上提问。</p>\n<h2 id=\"YAML-解析错误\"><a href=\"#YAML-解析错误\" class=\"headerlink\" title=\"YAML 解析错误\"></a>YAML 解析错误</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:</span><br><span class=\"line\">      last_updated: Last updated: %s</span><br></pre></td></tr></table></figure>\n<p>如果 YAML 字符串中包含冒号（<code>:</code>）的话，请加上引号。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: bad indentation of a mapping entry at line 18, column 31:</span><br><span class=\"line\">      last_updated:&quot;Last updated: %s&quot;</span><br></pre></td></tr></table></figure>\n<p>请确认您使用空格进行缩进（Soft tab），并确认冒号后有加上一个空格。</p>\n<p>您可参阅 <a href=\"http://www.yaml.org/spec/1.2/spec.html\" target=\"_blank\" rel=\"noopener\">YAML 规范</a> 以取得更多信息。</p>\n<h2 id=\"EMFILE-错误\"><a href=\"#EMFILE-错误\" class=\"headerlink\" title=\"EMFILE 错误\"></a>EMFILE 错误</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: EMFILE, too many open files</span><br></pre></td></tr></table></figure>\n<p>虽然 Node.js 有非阻塞 I/O，同步 I/O 的数量仍被系统所限制，在生成大量静态文件的时候，您可能会碰到 EMFILE 错误，您可以尝试提高同步 I/O 的限制数量来解决此问题。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ulimit</span> -n 10000</span><br></pre></td></tr></table></figure>\n<p>（这一命令只对Linux系统有效）</p>\n<h2 id=\"Git-部署问题\"><a href=\"#Git-部署问题\" class=\"headerlink\" title=\"Git 部署问题\"></a>Git 部署问题</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">fatal: &apos;username.github.io&apos; does not appear to be a git repository</span><br></pre></td></tr></table></figure>\n<p>请确认您已经在电脑上 <a href=\"https://help.github.com/articles/set-up-git\" target=\"_blank\" rel=\"noopener\">配置 git</a>，或改用 HTTPS 库（repository）地址。</p>\n<h2 id=\"服务器问题\"><a href=\"#服务器问题\" class=\"headerlink\" title=\"服务器问题\"></a>服务器问题</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: listen EADDRINUSE</span><br></pre></td></tr></table></figure>\n<p>您可能同时开启两个 Hexo 服务器，或者有其他应用程序正在占用相同的端口，请尝试修改 <code>port</code> 参数，或是在启动 Hexo 服务器时加上 <code>-p</code> 选项。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h2 id=\"插件安装问题\"><a href=\"#插件安装问题\" class=\"headerlink\" title=\"插件安装问题\"></a>插件安装问题</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm ERR! node-waf configure build</span><br></pre></td></tr></table></figure>\n<p>当您尝试安装以 C/C++ 或其他非 JavaScript 语言所编写的插件时，可能会遇到此类问题，请确认您已经在电脑上安装相对应的编译器。</p>\n<h2 id=\"DTrace-错误-（Mac-OS-X）\"><a href=\"#DTrace-错误-（Mac-OS-X）\" class=\"headerlink\" title=\"DTrace 错误 （Mac OS X）\"></a>DTrace 错误 （Mac OS X）</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/default/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Debug/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br></pre></td></tr></table></figure>\n<p>DTrace 安装可能有错误 , 使用下列命令:<br><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo --no-optional</span><br></pre></td></tr></table></figure></p>\n<p>参考 <a href=\"https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796\" target=\"_blank\" rel=\"noopener\">#1326</a></p>\n<h2 id=\"在-Jade-或-Swig-遍历资料\"><a href=\"#在-Jade-或-Swig-遍历资料\" class=\"headerlink\" title=\"在 Jade 或 Swig 遍历资料\"></a>在 Jade 或 Swig 遍历资料</h2><p>Hexo 使用 <a href=\"https://github.com/hexojs/warehouse\" target=\"_blank\" rel=\"noopener\">Warehouse</a> 存储资料，它不是一般数组所以必须先进行类型转型才能遍历。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% for post in site.posts.toArray() %&#125;</span><br><span class=\"line\">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"资料没有更新\"><a href=\"#资料没有更新\" class=\"headerlink\" title=\"资料没有更新\"></a>资料没有更新</h2><p>有时资料可能没有被更新，或是生成的文件与修改前的相同，您可以尝试清除缓存并再执行一次。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<h2 id=\"泄露（Escape）内容\"><a href=\"#泄露（Escape）内容\" class=\"headerlink\" title=\"泄露（Escape）内容\"></a>泄露（Escape）内容</h2><p>Hexo 使用 <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> 来解析文章（旧版本使用 <a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a>，两者语法类似），内容若包含 <code>{{ }}</code> 或 <code>{% %}</code> 可能导致解析错误，您可以用 <code>raw</code> 标签包裹来避免潜在问题发生。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">Hello &#123;&#123; sensitive &#125;&#125;</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ENOSPC-错误-（Linux）\"><a href=\"#ENOSPC-错误-（Linux）\" class=\"headerlink\" title=\"ENOSPC 错误 （Linux）\"></a>ENOSPC 错误 （Linux）</h2><p>运行 <code>$ hexo server</code> 命令有时会返回这样的错误：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: watch ENOSPC ...</span><br></pre></td></tr></table></figure></p>\n<p>它可以用过运行 <code>$ npm dedupe</code> 来解决，如果不起作用的话，可以尝试在 Linux 终端中运行下列命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure></p>\n<p>这将会提高你能监视的文件数量。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a40065koeovav10mcq",
				"title": "模版",
				"markdown": "模板决定了网站内容的呈现方式，每个主题至少都应包含一个 `index` 模板，以下是各页面相对应的模板名称：\n\n模板 | 用途 | 回退\n--- | --- | ---\n`index` | 首页 |\n`post` | 文章 | `index`\n`page` | 分页 | `index`\n`archive` | 归档 | `index`\n`category` | 分类归档 | `archive`\n`tag` | 标签归档 | `archive`\n\n## 布局（Layout）\n\n如果页面结构类似，例如两个模板都有页首（Header）和页脚（Footer），您可考虑通过「布局」让两个模板共享相同的结构。一个布局文件必须要能显示 `body` 变量的内容，如此一来模板的内容才会被显示，举例来说：\n\n``` html index.ejs\nindex\n```\n\n``` html layout.ejs\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n```\n\n生成：\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>index</body>\n</html>\n```\n\n每个模板都默认使用 `layout` 布局，您可在 front-matter 指定其他布局，或是设为 `false` 来关闭布局功能，您甚至可在布局中再使用其他布局来建立嵌套布局。\n\n## 局部模版（Partial）\n\n局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\n生成：\n\n``` html\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n```\n\n### 局部变量\n\n您可以在局部模板中指定局部变量并使用。\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= title></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\n生成：\n\n``` html\n<h1 id=\"logo\">Hello World</h1>\n<div id=\"content\">Home page</div>\n```\n\n## 优化\n\n如果您的主题太过于复杂，或是需要生成的文件量太过于庞大，可能会大幅降低性能，除了简化主题外，您可以考虑 Hexo 2.7 新增的局部缓存（Fragment Caching） 功能。\n\n本功能借鉴于 [Ruby on Rails](http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching)，它储存局部内容，下次便能直接使用缓存内容，可以减少文件夹查询并使生成速度更快。\n\n它可用于页首、页脚、侧边栏等文件不常变动的位置，举例来说：\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\n如果您使用局部模板的话，可以更简单：\n\n``` js\n<%- partial('header', {}, {cache: true});\n```\n\n但是，如果您开启了 `relative_link` 参数的话，请勿使用局部缓存功能，因为相对链接在每个页面可能不同。\n",
				"html": "<p>模板决定了网站内容的呈现方式，每个主题至少都应包含一个 <code>index</code> 模板，以下是各页面相对应的模板名称：</p>\n<table>\n<thead>\n<tr>\n<th>模板</th>\n<th>用途</th>\n<th>回退</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>index</code></td>\n<td>首页</td>\n<td></td>\n</tr>\n<tr>\n<td><code>post</code></td>\n<td>文章</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>分页</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>archive</code></td>\n<td>归档</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>分类归档</td>\n<td><code>archive</code></td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td>标签归档</td>\n<td><code>archive</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"布局（Layout）\"><a href=\"#布局（Layout）\" class=\"headerlink\" title=\"布局（Layout）\"></a>布局（Layout）</h2><p>如果页面结构类似，例如两个模板都有页首（Header）和页脚（Footer），您可考虑通过「布局」让两个模板共享相同的结构。一个布局文件必须要能显示 <code>body</code> 变量的内容，如此一来模板的内容才会被显示，举例来说：</p>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">index</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>每个模板都默认使用 <code>layout</code> 布局，您可在 front-matter 指定其他布局，或是设为 <code>false</code> 来关闭布局功能，您甚至可在布局中再使用其他布局来建立嵌套布局。</p>\n<h2 id=\"局部模版（Partial）\"><a href=\"#局部模版（Partial）\" class=\"headerlink\" title=\"局部模版（Partial）\"></a>局部模版（Partial）</h2><p>局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>') %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>My Site<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"局部变量\"><a href=\"#局部变量\" class=\"headerlink\" title=\"局部变量\"></a>局部变量</h3><p>您可以在局部模板中指定局部变量并使用。</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>', &#123;<span class=\"attr\">title:</span> '<span class=\"attr\">Hello</span> <span class=\"attr\">World</span>'&#125;) %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><p>如果您的主题太过于复杂，或是需要生成的文件量太过于庞大，可能会大幅降低性能，除了简化主题外，您可以考虑 Hexo 2.7 新增的局部缓存（Fragment Caching） 功能。</p>\n<p>本功能借鉴于 <a href=\"http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\" target=\"_blank\" rel=\"noopener\">Ruby on Rails</a>，它储存局部内容，下次便能直接使用缓存内容，可以减少文件夹查询并使生成速度更快。</p>\n<p>它可用于页首、页脚、侧边栏等文件不常变动的位置，举例来说：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>如果您使用局部模板的话，可以更简单：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p>但是，如果您开启了 <code>relative_link</code> 参数的话，请勿使用局部缓存功能，因为相对链接在每个页面可能不同。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a40066koeoeif8jxza",
				"title": "主题",
				"markdown": "创建 Hexo 主题非常容易，您只要在 `themes` 文件夹内，新增一个任意名称的文件夹，并修改 `_config.yml` 内的 `theme` 设定，即可切换主题。一个主题可能会有以下的结构：\n\n``` plain\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n### _config.yml\n\n主题的配置文件。修改时会自动更新，无需重启服务器。\n\n### languages\n\n语言文件夹。请参见 [国际化 (i18n)](internationalization.html)。\n\n### layout\n\n布局文件夹。用于存放主题的模板文件，决定了网站内容的呈现方式，Hexo 内建 [Swig] 模板引擎，您可以另外安装插件来获得 [EJS]、[Haml] 或 [Jade] 支持，Hexo 根据模板文件的扩展名来决定所使用的模板引擎，例如：\n\n``` plain\nlayout.ejs   - 使用 EJS\nlayout.swig  - 使用 Swig\n```\n\n您可参考 [模板](templates.html) 以获得更多信息。\n\n### scripts\n\n脚本文件夹。在启动时，Hexo 会载入此文件夹内的 JavaScript 文件，请参见 [插件](plugins.html) 以获得更多信息。\n\n### source\n\n资源文件夹，除了模板以外的 Asset，例如 CSS、JavaScript 文件等，都应该放在这个文件夹中。文件或文件夹开头名称为 `_`（下划线线）或隐藏的文件会被忽略。\n\n如果文件可以被渲染的话，会经过解析然后储存到 `public` 文件夹，否则会直接拷贝到 `public` 文件夹。\n\n### 发布\n当您完成主题后，可以考虑将它发布到 [主题列表](/themes)，让更多人能够使用您的主题。在发布前建议先进行 [主题单元测试](https://github.com/hexojs/hexo-theme-unit-test)，确保每一项功能都能正常使用。发布主题的步骤和 [更新文档](contributing.html#更新文档) 非常类似。\n\n1. Fork [hexojs/site]\n2. 把库（repository）复制到电脑上，并安装所依赖的插件。\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. 编辑 `source/_data/themes.yml`，在文件中新增您的主题，例如：\n\n    {% code %}\n    - name: landscape\n      description: A brand new default theme for Hexo.\n      link: https://github.com/hexojs/hexo-theme-landscape\n      preview: http://hexo.io/hexo-theme-landscape\n      tags:\n        - official\n        - responsive\n        - widget\n        - two_column\n        - one_column\n    {% endcode %}\n\n4. 在 `source/themes/screenshots` 新增同名的截图档案，图片必须为 800x500 的 PNG 文件。\n5. 推送（push）分支。\n6. 建立一个新的合并申请（pull request）并描述改动。\n\n[EJS]: https://github.com/hexojs/hexo-renderer-ejs\n[Swig]: http://paularmstrong.github.com/swig/\n[Haml]: https://github.com/hexojs/hexo-renderer-haml\n[Jade]: https://github.com/hexojs/hexo-renderer-jade\n[hexojs/site]: https://github.com/hexojs/site",
				"html": "<p>创建 Hexo 主题非常容易，您只要在 <code>themes</code> 文件夹内，新增一个任意名称的文件夹，并修改 <code>_config.yml</code> 内的 <code>theme</code> 设定，即可切换主题。一个主题可能会有以下的结构：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── languages</span><br><span class=\"line\">├── layout</span><br><span class=\"line\">├── scripts</span><br><span class=\"line\">└── source</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>主题的配置文件。修改时会自动更新，无需重启服务器。</p>\n<h3 id=\"languages\"><a href=\"#languages\" class=\"headerlink\" title=\"languages\"></a>languages</h3><p>语言文件夹。请参见 <a href=\"internationalization.html\">国际化 (i18n)</a>。</p>\n<h3 id=\"layout\"><a href=\"#layout\" class=\"headerlink\" title=\"layout\"></a>layout</h3><p>布局文件夹。用于存放主题的模板文件，决定了网站内容的呈现方式，Hexo 内建 <a href=\"http://paularmstrong.github.com/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a> 模板引擎，您可以另外安装插件来获得 <a href=\"https://github.com/hexojs/hexo-renderer-ejs\" target=\"_blank\" rel=\"noopener\">EJS</a>、<a href=\"https://github.com/hexojs/hexo-renderer-haml\" target=\"_blank\" rel=\"noopener\">Haml</a> 或 <a href=\"https://github.com/hexojs/hexo-renderer-jade\" target=\"_blank\" rel=\"noopener\">Jade</a> 支持，Hexo 根据模板文件的扩展名来决定所使用的模板引擎，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">layout.ejs   - 使用 EJS</span><br><span class=\"line\">layout.swig  - 使用 Swig</span><br></pre></td></tr></table></figure>\n<p>您可参考 <a href=\"templates.html\">模板</a> 以获得更多信息。</p>\n<h3 id=\"scripts\"><a href=\"#scripts\" class=\"headerlink\" title=\"scripts\"></a>scripts</h3><p>脚本文件夹。在启动时，Hexo 会载入此文件夹内的 JavaScript 文件，请参见 <a href=\"plugins.html\">插件</a> 以获得更多信息。</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>资源文件夹，除了模板以外的 Asset，例如 CSS、JavaScript 文件等，都应该放在这个文件夹中。文件或文件夹开头名称为 <code>_</code>（下划线线）或隐藏的文件会被忽略。</p>\n<p>如果文件可以被渲染的话，会经过解析然后储存到 <code>public</code> 文件夹，否则会直接拷贝到 <code>public</code> 文件夹。</p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p>当您完成主题后，可以考虑将它发布到 <a href=\"/themes\">主题列表</a>，让更多人能够使用您的主题。在发布前建议先进行 <a href=\"https://github.com/hexojs/hexo-theme-unit-test\" target=\"_blank\" rel=\"noopener\">主题单元测试</a>，确保每一项功能都能正常使用。发布主题的步骤和 <a href=\"contributing.html#更新文档\">更新文档</a> 非常类似。</p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>把库（repository）复制到电脑上，并安装所依赖的插件。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编辑 <code>source/_data/themes.yml</code>，在文件中新增您的主题，例如：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">- name: landscape</span><br><span class=\"line\">  description: A brand new default theme for Hexo.</span><br><span class=\"line\">  link: https://github.com/hexojs/hexo-theme-landscape</span><br><span class=\"line\">  preview: http://hexo.io/hexo-theme-landscape</span><br><span class=\"line\">  tags:</span><br><span class=\"line\">    - official</span><br><span class=\"line\">    - responsive</span><br><span class=\"line\">    - widget</span><br><span class=\"line\">    - two_column</span><br><span class=\"line\">    - one_column</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 <code>source/themes/screenshots</code> 新增同名的截图档案，图片必须为 800x500 的 PNG 文件。</p>\n</li>\n<li>推送（push）分支。</li>\n<li>建立一个新的合并申请（pull request）并描述改动。</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a40067koeoxmsc0g5w",
				"title": "变量",
				"markdown": "### 全局变量\n\n变量 | 描述\n--- | ---\n`site` | [网站变量](#网站变量)\n`page` | 针对该页面的内容以及 front-matter 所设定的变量。\n`config` | 网站配置\n`theme` | 主题配置。继承自网站配置。\n`_` (单下划线) | [Lodash] 函数库\n`path` | 当前页面的路径（不含根路径）\n`url` | 当前页面的完整网址\n`env` | 环境变量\n\n### 网站变量\n\n变量 | 描述\n--- | ---\n`site.posts` | 所有文章\n`site.pages` | 所有分页\n`site.categories` | 所有分类\n`site.tags` | 所有标签\n\n### 页面变量\n\n**页面（page）**\n\n变量 | 描述\n--- | ---\n`page.title` | 页面标题\n`page.date` | 页面建立日期（[Moment.js] 对象）\n`page.updated` | 页面更新日期（[Moment.js] 对象）\n`page.comments` | 留言是否开启\n`page.layout` | 布局名称\n`page.content` | 页面的完整内容\n`page.excerpt` | 页面摘要\n`page.more` | 除了页面摘要的其余内容\n`page.source` | 页面原始路径\n`page.full_source` | 页面的完整原始路径\n`page.path` | 页面网址（不含根路径）。我们通常在主题中使用 `url_for(page.path)`。\n`page.permalink` | 页面的完整网址\n`page.prev` | 上一个页面。如果此为第一个页面则为 `null`。\n`page.next` | 下一个页面。如果此为最后一个页面则为 `null`。\n`page.raw` | 文章的原始内容\n`page.photos` | 文章的照片（用于相簿）\n`page.link` | 文章的外部链接（用于链接文章）\n\n**文章 (post):** 和 `page` 布局类似，但是添加了下列变量。\n\nVariable | Description\n--- | ---\n`page.published` | 如果该文章已发布则为True\n`page.categories` | 该文章的所有分类\n`page.tags` | 该文章的所有标签\n\n**首页（index）**\n\n变量 | 描述\n--- | ---\n`page.per_page` | 每页显示的文章数量\n`page.total` | 总文章数\n`page.current` | 目前页数\n`page.current_url` | 目前分页的网址\n`page.posts` | 本页文章\n`page.prev` | 上一页的页数。如果此页是第一页的话则为 `0`。\n`page.prev_link` | 上一页的网址。如果此页是第一页的话则为 `''`。\n`page.next` | 下一页的页数。如果此页是最后一页的话则为 `0`。\n`page.next_link` | 下一页的网址。如果此页是最后一页的话则为 `''`。\n`page.path` | 当前页面的路径（不含根目录）。我们通常在主题中使用 `url_for(page.path)`。\n\n**归档 (archive)**：与 `index` 布局相同，但新增以下变量。\n\n变量 | 描述\n--- | ---\n`page.archive` | 等于 `true`\n`page.year` | 年份归档 (4位)\n`page.month` | 月份归档 (没有前导零的2位数)\n\n**分类 (category)**：与 `index` 布局相同，但新增以下变量。\n\n变量 | 描述\n--- | ---\n`page.category` | 分类名称\n\n**标签 (tag)**：与 `index` 布局相同，但新增以下变量。\n\n变量 | 描述\n--- | ---\n`page.tag` | 标签名称\n\n[Lodash]: http://lodash.com/\n[Moment.js]: http://momentjs.com/\n",
				"html": "<h3 id=\"全局变量\"><a href=\"#全局变量\" class=\"headerlink\" title=\"全局变量\"></a>全局变量</h3><table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site</code></td>\n<td><a href=\"#网站变量\">网站变量</a></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>针对该页面的内容以及 front-matter 所设定的变量。</td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>网站配置</td>\n</tr>\n<tr>\n<td><code>theme</code></td>\n<td>主题配置。继承自网站配置。</td>\n</tr>\n<tr>\n<td><code>_</code> (单下划线)</td>\n<td><a href=\"http://lodash.com/\" target=\"_blank\" rel=\"noopener\">Lodash</a> 函数库</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>当前页面的路径（不含根路径）</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>当前页面的完整网址</td>\n</tr>\n<tr>\n<td><code>env</code></td>\n<td>环境变量</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"网站变量\"><a href=\"#网站变量\" class=\"headerlink\" title=\"网站变量\"></a>网站变量</h3><table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site.posts</code></td>\n<td>所有文章</td>\n</tr>\n<tr>\n<td><code>site.pages</code></td>\n<td>所有分页</td>\n</tr>\n<tr>\n<td><code>site.categories</code></td>\n<td>所有分类</td>\n</tr>\n<tr>\n<td><code>site.tags</code></td>\n<td>所有标签</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"页面变量\"><a href=\"#页面变量\" class=\"headerlink\" title=\"页面变量\"></a>页面变量</h3><p><strong>页面（page）</strong></p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.title</code></td>\n<td>页面标题</td>\n</tr>\n<tr>\n<td><code>page.date</code></td>\n<td>页面建立日期（<a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 对象）</td>\n</tr>\n<tr>\n<td><code>page.updated</code></td>\n<td>页面更新日期（<a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 对象）</td>\n</tr>\n<tr>\n<td><code>page.comments</code></td>\n<td>留言是否开启</td>\n</tr>\n<tr>\n<td><code>page.layout</code></td>\n<td>布局名称</td>\n</tr>\n<tr>\n<td><code>page.content</code></td>\n<td>页面的完整内容</td>\n</tr>\n<tr>\n<td><code>page.excerpt</code></td>\n<td>页面摘要</td>\n</tr>\n<tr>\n<td><code>page.more</code></td>\n<td>除了页面摘要的其余内容</td>\n</tr>\n<tr>\n<td><code>page.source</code></td>\n<td>页面原始路径</td>\n</tr>\n<tr>\n<td><code>page.full_source</code></td>\n<td>页面的完整原始路径</td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>页面网址（不含根路径）。我们通常在主题中使用 <code>url_for(page.path)</code>。</td>\n</tr>\n<tr>\n<td><code>page.permalink</code></td>\n<td>页面的完整网址</td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>上一个页面。如果此为第一个页面则为 <code>null</code>。</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>下一个页面。如果此为最后一个页面则为 <code>null</code>。</td>\n</tr>\n<tr>\n<td><code>page.raw</code></td>\n<td>文章的原始内容</td>\n</tr>\n<tr>\n<td><code>page.photos</code></td>\n<td>文章的照片（用于相簿）</td>\n</tr>\n<tr>\n<td><code>page.link</code></td>\n<td>文章的外部链接（用于链接文章）</td>\n</tr>\n</tbody>\n</table>\n<p><strong>文章 (post):</strong> 和 <code>page</code> 布局类似，但是添加了下列变量。</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.published</code></td>\n<td>如果该文章已发布则为True</td>\n</tr>\n<tr>\n<td><code>page.categories</code></td>\n<td>该文章的所有分类</td>\n</tr>\n<tr>\n<td><code>page.tags</code></td>\n<td>该文章的所有标签</td>\n</tr>\n</tbody>\n</table>\n<p><strong>首页（index）</strong></p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.per_page</code></td>\n<td>每页显示的文章数量</td>\n</tr>\n<tr>\n<td><code>page.total</code></td>\n<td>总文章数</td>\n</tr>\n<tr>\n<td><code>page.current</code></td>\n<td>目前页数</td>\n</tr>\n<tr>\n<td><code>page.current_url</code></td>\n<td>目前分页的网址</td>\n</tr>\n<tr>\n<td><code>page.posts</code></td>\n<td>本页文章</td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>上一页的页数。如果此页是第一页的话则为 <code>0</code>。</td>\n</tr>\n<tr>\n<td><code>page.prev_link</code></td>\n<td>上一页的网址。如果此页是第一页的话则为 <code>&#39;&#39;</code>。</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>下一页的页数。如果此页是最后一页的话则为 <code>0</code>。</td>\n</tr>\n<tr>\n<td><code>page.next_link</code></td>\n<td>下一页的网址。如果此页是最后一页的话则为 <code>&#39;&#39;</code>。</td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>当前页面的路径（不含根目录）。我们通常在主题中使用 <code>url_for(page.path)</code>。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>归档 (archive)</strong>：与 <code>index</code> 布局相同，但新增以下变量。</p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.archive</code></td>\n<td>等于 <code>true</code></td>\n</tr>\n<tr>\n<td><code>page.year</code></td>\n<td>年份归档 (4位)</td>\n</tr>\n<tr>\n<td><code>page.month</code></td>\n<td>月份归档 (没有前导零的2位数)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>分类 (category)</strong>：与 <code>index</code> 布局相同，但新增以下变量。</p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.category</code></td>\n<td>分类名称</td>\n</tr>\n</tbody>\n</table>\n<p><strong>标签 (tag)</strong>：与 <code>index</code> 布局相同，但新增以下变量。</p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.tag</code></td>\n<td>标签名称</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a50068koeom5e2eadh",
				"title": "写作",
				"markdown": "\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39808163&cid=69927827&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n\n你可以执行下列命令来创建一篇新文章。\n\n``` bash\n$ hexo new [layout] <title>\n```\n\n您可以在命令中指定文章的布局（layout），默认为 `post`，可以通过修改 `_config.yml` 中的 `default_layout` 参数来指定默认布局。\n\n### 布局（Layout）\n\nHexo 有三种默认布局：`post`、`page` 和 `draft`，它们分别对应不同的路径，而您自定义的其他布局和 `post` 相同，都将储存到 `source/_posts` 文件夹。\n\n布局 | 路径\n--- | ---\n`post` | `source/_posts`\n`page` | `source`\n`draft` | `source/_drafts`\n\n{% note tip 不要处理我的文章 %}\n如果你不想你的文章被处理，你可以将 Front-Matter 中的`layout:` 设为 `false` 。\n{% endnote %}\n\n### 文件名称\n\nHexo 默认以标题做为文件名称，但您可编辑 `new_post_name` 参数来改变默认的文件名称，举例来说，设为 `:year-:month-:day-:title.md` 可让您更方便的通过日期来管理文章。\n\n变量 | 描述\n--- | ---\n`:title` | 标题（小写，空格将会被替换为短杠）\n`:year` | 建立的年份，比如， `2015`\n`:month` | 建立的月份（有前导零），比如， `04`\n`:i_month` | 建立的月份（无前导零），比如， `4`\n`:day` | 建立的日期（有前导零），比如， `07`\n`:i_day` | 建立的日期（无前导零），比如， `7`\n\n### 草稿\n\n刚刚提到了 Hexo 的一种特殊布局：`draft`，这种布局在建立时会被保存到 `source/_drafts` 文件夹，您可通过 `publish` 命令将草稿移动到 `source/_posts` 文件夹，该命令的使用方式与 `new` 十分类似，您也可在命令中指定 `layout` 来指定布局。\n\n``` bash\n$ hexo publish [layout] <title>\n```\n\n草稿默认不会显示在页面中，您可在执行时加上 `--draft` 参数，或是把 `render_drafts` 参数设为 `true` 来预览草稿。\n\n## 模版（Scaffold）\n\n在新建文章时，Hexo 会根据 `scaffolds` 文件夹内相对应的文件来建立文件，例如：\n\n``` bash\n$ hexo new photo \"My Gallery\"\n```\n\n在执行这行指令时，Hexo 会尝试在 `scaffolds` 文件夹中寻找 `photo.md`，并根据其内容建立文章，以下是您可以在模版中使用的变量：\n\n变量 | 描述\n--- | ---\n`layout` | 布局\n`title` | 标题\n`date` | 文件建立日期\n",
				"html": "<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=39808163&cid=69927827&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n\n<p>你可以执行下列命令来创建一篇新文章。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>您可以在命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。</p>\n<h3 id=\"布局（Layout）\"><a href=\"#布局（Layout）\" class=\"headerlink\" title=\"布局（Layout）\"></a>布局（Layout）</h3><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>，它们分别对应不同的路径，而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p>\n<table>\n<thead>\n<tr>\n<th>布局</th>\n<th>路径</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post</code></td>\n<td><code>source/_posts</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>draft</code></td>\n<td><code>source/_drafts</code></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note tip\"><strong class=\"note-title\">不要处理我的文章</strong><p>如果你不想你的文章被处理，你可以将 Front-Matter 中的<code>layout:</code> 设为 <code>false</code> 。</p>\n</blockquote>\n<h3 id=\"文件名称\"><a href=\"#文件名称\" class=\"headerlink\" title=\"文件名称\"></a>文件名称</h3><p>Hexo 默认以标题做为文件名称，但您可编辑 <code>new_post_name</code> 参数来改变默认的文件名称，举例来说，设为 <code>:year-:month-:day-:title.md</code> 可让您更方便的通过日期来管理文章。</p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:title</code></td>\n<td>标题（小写，空格将会被替换为短杠）</td>\n</tr>\n<tr>\n<td><code>:year</code></td>\n<td>建立的年份，比如， <code>2015</code></td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>建立的月份（有前导零），比如， <code>04</code></td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>建立的月份（无前导零），比如， <code>4</code></td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>建立的日期（有前导零），比如， <code>07</code></td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>建立的日期（无前导零），比如， <code>7</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"草稿\"><a href=\"#草稿\" class=\"headerlink\" title=\"草稿\"></a>草稿</h3><p>刚刚提到了 Hexo 的一种特殊布局：<code>draft</code>，这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹，您可通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹，该命令的使用方式与 <code>new</code> 十分类似，您也可在命令中指定 <code>layout</code> 来指定布局。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p>\n<h2 id=\"模版（Scaffold）\"><a href=\"#模版（Scaffold）\" class=\"headerlink\" title=\"模版（Scaffold）\"></a>模版（Scaffold）</h2><p>在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new photo <span class=\"string\">\"My Gallery\"</span></span><br></pre></td></tr></table></figure>\n<p>在执行这行指令时，Hexo 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>photo.md</code>，并根据其内容建立文章，以下是您可以在模版中使用的变量：</p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>布局</td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>标题</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>文件建立日期</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a50069koeowcpeck4j",
				"title": "Box",
				"markdown": "「Box」是 Hexo 用来处理特定文件夹中的文件的容器，在 Hexo 中有两个 Box，分别是 `hexo.source` 和 `hexo.theme`，前者用于处理 `source` 文件夹，而后者用于处理主题文件夹。\n\n## 载入文件\n\nBox 提供了两种方法来载入文件：`process`, `watch`，前者用于载入文件夹内的所有文件；而后者除了执行 `process` 以外，还会继续监视文件变动。\n\n``` js\nbox.process().then(function(){\n  // ...\n});\n\nbox.watch().then(function(){\n  // 之后可调用 box.unwatch()，停止监视文件\n});\n```\n\n## 比对路径\n\nBox 提供了多种比对路径的模式，您可以以使用正则表达式（regular expression）、函数、或是一种类似于 Express 的路径字符串，例如：\n\n``` plain\nposts/:id => posts/89\nposts/*path => posts/2015/title\n```\n\n您可以以参考 [util.Pattern] 以获得更多信息。\n\n## 处理器（Processor）\n\n处理器（Processor）是 Box 中非常重要的元素，它用于处理文件，您可以使用上述的路径对比来限制该处理器所要处理的文件类型。使用 `addProcessor` 来添加处理器。\n\n``` js\nbox.addProcessor('posts/:id', function(file){\n  //\n});\n```\n\nBox 在处理时会把目前处理的文件内容（`file`）传给处理器，您可以通过此参数获得该文件的数据。\n\n属性 | 描述\n--- | ---\n`source` | 文件完整路径\n`path` | 文件相对于 Box 的路径\n`type` | 文件类型。有 `create`, `update`, `skip`, `delete`。\n`params` | 从路径对比中取得的信息\n\nBox 还提供了一些方法，让您无须手动处理文件 I/O。\n\n方法 | 描述\n--- | ---\n`read` | 读取文件\n`readSync` | 同步读取文件\n`stat` | 读取文件状态\n`statSync` | 同步读取文件状态\n`render` | 渲染文件\n`renderSync` | 同步渲染文件\n\n[util.Pattern]: https://github.com/hexojs/hexo-util#patternrule",
				"html": "<p>「Box」是 Hexo 用来处理特定文件夹中的文件的容器，在 Hexo 中有两个 Box，分别是 <code>hexo.source</code> 和 <code>hexo.theme</code>，前者用于处理 <code>source</code> 文件夹，而后者用于处理主题文件夹。</p>\n<h2 id=\"载入文件\"><a href=\"#载入文件\" class=\"headerlink\" title=\"载入文件\"></a>载入文件</h2><p>Box 提供了两种方法来载入文件：<code>process</code>, <code>watch</code>，前者用于载入文件夹内的所有文件；而后者除了执行 <code>process</code> 以外，还会继续监视文件变动。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.process().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">box.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 之后可调用 box.unwatch()，停止监视文件</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"比对路径\"><a href=\"#比对路径\" class=\"headerlink\" title=\"比对路径\"></a>比对路径</h2><p>Box 提供了多种比对路径的模式，您可以以使用正则表达式（regular expression）、函数、或是一种类似于 Express 的路径字符串，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">posts/:id =&gt; posts/89</span><br><span class=\"line\">posts/*path =&gt; posts/2015/title</span><br></pre></td></tr></table></figure>\n<p>您可以以参考 <a href=\"https://github.com/hexojs/hexo-util#patternrule\" target=\"_blank\" rel=\"noopener\">util.Pattern</a> 以获得更多信息。</p>\n<h2 id=\"处理器（Processor）\"><a href=\"#处理器（Processor）\" class=\"headerlink\" title=\"处理器（Processor）\"></a>处理器（Processor）</h2><p>处理器（Processor）是 Box 中非常重要的元素，它用于处理文件，您可以使用上述的路径对比来限制该处理器所要处理的文件类型。使用 <code>addProcessor</code> 来添加处理器。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.addProcessor(<span class=\"string\">'posts/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Box 在处理时会把目前处理的文件内容（<code>file</code>）传给处理器，您可以通过此参数获得该文件的数据。</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>文件完整路径</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>文件相对于 Box 的路径</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>文件类型。有 <code>create</code>, <code>update</code>, <code>skip</code>, <code>delete</code>。</td>\n</tr>\n<tr>\n<td><code>params</code></td>\n<td>从路径对比中取得的信息</td>\n</tr>\n</tbody>\n</table>\n<p>Box 还提供了一些方法，让您无须手动处理文件 I/O。</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>read</code></td>\n<td>读取文件</td>\n</tr>\n<tr>\n<td><code>readSync</code></td>\n<td>同步读取文件</td>\n</tr>\n<tr>\n<td><code>stat</code></td>\n<td>读取文件状态</td>\n</tr>\n<tr>\n<td><code>statSync</code></td>\n<td>同步读取文件状态</td>\n</tr>\n<tr>\n<td><code>render</code></td>\n<td>渲染文件</td>\n</tr>\n<tr>\n<td><code>renderSync</code></td>\n<td>同步渲染文件</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a5006akoeoaaqjpkzq",
				"title": "控制台（Console）",
				"markdown": "控制台是 Hexo 与开发者之间沟通的桥梁。\n\n## 概要\n\n``` js\nhexo.extend.console.register(name, desc, options, function(args){\n  // ...\n});\n```\n\n参数 | 描述\n--- | ---\n`name` | 名称\n`desc` | 描述\n`options`| 选项\n\n在函数中会传入 `args` 参数，此参数是使用者在终端中所传入的参数，是一个经 [Minimist] 解析的对象。\n\n## 选项\n\n### 用法\n\n控制台的操作方法，例如：\n\n``` js\n{usage: '[layout] <title>'}\n// hexo new [layout] <title>\n```\n\n### 参数\n\n控制台各个参数的说明，例如：\n\n``` js\n{\n  arguments: [\n    {name: 'layout', desc: 'Post layout'},\n    {name: 'title', desc: 'Post title'}\n  ]\n}\n```\n\n### 选项\n\n控制台的选项，例如：\n\n``` js\n{\n  options: [\n    {name: '-r, --replace', desc: 'Replace existing files'}\n  ]\n}\n```\n\n### 描述\n\n控制台更详细的说明。\n\n## 范例\n\n``` js\nhexo.extend.console.register('config', 'Display configuration', function(args){\n  console.log(hexo.config);\n});\n```\n\n[Minimist]: https://github.com/substack/minimist",
				"html": "<p>控制台是 Hexo 与开发者之间沟通的桥梁。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(name, desc, options, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>名称</td>\n</tr>\n<tr>\n<td><code>desc</code></td>\n<td>描述</td>\n</tr>\n<tr>\n<td><code>options</code></td>\n<td>选项</td>\n</tr>\n</tbody>\n</table>\n<p>在函数中会传入 <code>args</code> 参数，此参数是使用者在终端中所传入的参数，是一个经 <a href=\"https://github.com/substack/minimist\" target=\"_blank\" rel=\"noopener\">Minimist</a> 解析的对象。</p>\n<h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h2><h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><p>控制台的操作方法，例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">usage</span>: <span class=\"string\">'[layout] &lt;title&gt;'</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">// hexo new [layout] &lt;title&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h3><p>控制台各个参数的说明，例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"built_in\">arguments</span>: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'layout'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post layout'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'title'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post title'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"选项-1\"><a href=\"#选项-1\" class=\"headerlink\" title=\"选项\"></a>选项</h3><p>控制台的选项，例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  options: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'-r, --replace'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Replace existing files'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h3><p>控制台更详细的说明。</p>\n<h2 id=\"范例\"><a href=\"#范例\" class=\"headerlink\" title=\"范例\"></a>范例</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(<span class=\"string\">'config'</span>, <span class=\"string\">'Display configuration'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(hexo.config);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a6006bkoeopyesyg7q",
				"title": "部署器（Deployer）",
				"markdown": "部署器帮助开发者将网站快速部署到远程服务器上，避免了复杂的指令。\n\n## 概要\n\n``` js\nhexo.extend.deployer.register(name, function(args){\n  // ...\n});\n```\n\n在函数中会传入 `args` 参数，该参数包含了 `_config.yml` 中的 `deploy` 参数值，以及开发者在终端中所传入的参数。",
				"html": "<p>部署器帮助开发者将网站快速部署到远程服务器上，避免了复杂的指令。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.deployer.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>在函数中会传入 <code>args</code> 参数，该参数包含了 <code>_config.yml</code> 中的 <code>deploy</code> 参数值，以及开发者在终端中所传入的参数。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a6006ckoeo4rskeuyx",
				"title": "事件",
				"markdown": "Hexo 继承了 [EventEmitter]，您可以用 `on` 方法监听 Hexo 所发布的事件，也可以使用 `emit` 方法对 Hexo 发布事件，更详细的说明请参阅 Node.js 的 API。\n\n### deployBefore\n\n在部署完成前发布。\n\n### deployAfter\n\n在部署成功后发布。\n\n### exit\n\n在 Hexo 结束前发布。\n\n### generateBefore\n\n在静态文件生成前发布。\n\n### generateAfter\n\n在静态文件生成后发布。\n\n### new\n\n在文章文件建立后发布。该事件返回文章参数。\n\n``` js\nhexo.on('new', function(post){\n  // \n});\n```\n\n资料 | 描述\n--- | ---\n`post.path` | 文章文件的完整路径\n`post.content` | 文章文件的内容\n\n### processBefore\n\n在处理原始文件前发布。此事件会返回一个地址，代表 Box（Box）的根目录。\n\n### processAfter\n\n在原始文件处理后发布。此事件会返回一个地址，代表 Box（Box）的根目录。\n\n### ready\n\n在初始化完成后发布。\n\n[EventEmitter]: http://nodejs.org/api/events.html",
				"html": "<p>Hexo 继承了 <a href=\"http://nodejs.org/api/events.html\" target=\"_blank\" rel=\"noopener\">EventEmitter</a>，您可以用 <code>on</code> 方法监听 Hexo 所发布的事件，也可以使用 <code>emit</code> 方法对 Hexo 发布事件，更详细的说明请参阅 Node.js 的 API。</p>\n<h3 id=\"deployBefore\"><a href=\"#deployBefore\" class=\"headerlink\" title=\"deployBefore\"></a>deployBefore</h3><p>在部署完成前发布。</p>\n<h3 id=\"deployAfter\"><a href=\"#deployAfter\" class=\"headerlink\" title=\"deployAfter\"></a>deployAfter</h3><p>在部署成功后发布。</p>\n<h3 id=\"exit\"><a href=\"#exit\" class=\"headerlink\" title=\"exit\"></a>exit</h3><p>在 Hexo 结束前发布。</p>\n<h3 id=\"generateBefore\"><a href=\"#generateBefore\" class=\"headerlink\" title=\"generateBefore\"></a>generateBefore</h3><p>在静态文件生成前发布。</p>\n<h3 id=\"generateAfter\"><a href=\"#generateAfter\" class=\"headerlink\" title=\"generateAfter\"></a>generateAfter</h3><p>在静态文件生成后发布。</p>\n<h3 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h3><p>在文章文件建立后发布。该事件返回文章参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.on(<span class=\"string\">'new'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// </span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>资料</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post.path</code></td>\n<td>文章文件的完整路径</td>\n</tr>\n<tr>\n<td><code>post.content</code></td>\n<td>文章文件的内容</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"processBefore\"><a href=\"#processBefore\" class=\"headerlink\" title=\"processBefore\"></a>processBefore</h3><p>在处理原始文件前发布。此事件会返回一个地址，代表 Box（Box）的根目录。</p>\n<h3 id=\"processAfter\"><a href=\"#processAfter\" class=\"headerlink\" title=\"processAfter\"></a>processAfter</h3><p>在原始文件处理后发布。此事件会返回一个地址，代表 Box（Box）的根目录。</p>\n<h3 id=\"ready\"><a href=\"#ready\" class=\"headerlink\" title=\"ready\"></a>ready</h3><p>在初始化完成后发布。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a6006dkoeox9akqmf5",
				"title": "过滤器（Filter）",
				"markdown": "过滤器用于修改特定文件，Hexo 将这些文件依序传给过滤器，而过滤器可以针对文件进行修改，这个概念借鉴自 [WordPress](http://codex.wordpress.org/Plugin_API#Filters)。\n\n## 概要\n\n``` js\nhexo.extend.filter.register(type, function(){\n}, priority);\n```\n\n您可以指定过滤器的优先级 `priority`，`priority` 值越低，过滤器会越早执行，默认的 `priority` 是 10。\n\n## 执行过滤器\n\n``` js\nhexo.extend.filter.exec(type, data, options);\nhexo.extend.filter.execSync(type, data, options);\n```\n\n选项 | 描述\n--- | ---\n`context` | Context\n`args` | 参数。必须为数组。\n\n`data` 会作为第一个参数传入每个过滤器，而您可以在过滤器中通过返回值改变下一个过滤器中的 `data`，如果什么都没有返回的话则会保持原本的 `data`。您还可以使用 `args` 指定过滤器的其他参数。举例来说：\n\n``` js\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'some data'\n  // arg1 === 'foo'\n  // arg2 === 'bar'\n  \n  return 'something';\n});\n\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'something'\n});\n\nhexo.extend.filter.exec('test', 'some data', {\n  args: ['foo', 'bar']\n});\n```\n\n您也可以使用以下方法来执行过滤器：\n\n``` js\nhexo.execFilter(type, data, options);\nhexo.execFilterSync(type, data, options);\n```\n\n## 移除过滤器\n\n``` js\nhexo.extend.filter.unregister(type, filter);\n```\n\n## 过滤器列表\n\n以下是 Hexo 所使用的过滤器。\n\n### before_post_render\n\n在文章开始渲染前执行。您可以参考 [文章渲染](posts.html#渲染) 以了解执行顺序。\n\n举例来说，把标题转为小写：\n\n``` js\nhexo.extend.filter.register('before_post_render', function(data){\n  data.title = data.title.toLowerCase();\n  return data;\n});\n```\n\n### after_post_render\n\n在文章渲染完成后执行。您可以参考 [文章渲染](posts.html#渲染) 以了解执行顺序。\n\n举例来说，把 `@username` 取代为 Twitter 的开发者链接。\n\n``` js\nhexo.extend.filter.register('after_post_render', function(data){\n  data.content = data.content.replace(/@(\\d+)/, '<a href=\"http://twitter.com/$1\">#$1</a>');\n  return data;\n});\n```\n\n### before_exit\n\n在 Hexo 即将结束时执行，也就是在 `hexo.exit` 被调用后执行。\n\n``` js\nhexo.extend.filter.register('before_exit', function(){\n  // ...\n});\n```\n\n### before_generate\n\n在生成器解析前执行。\n\n``` js\nhexo.extend.filter.register('before_generate', function(){\n  // ...\n});\n```\n\n### after_generate\n\n在生成器解析后执行。\n\n``` js\nhexo.extend.filter.register('after_generate', function(){\n  // ...\n});\n```\n\n### template_locals\n\n修改模板的 [局部变量](../docs/variables.html)。\n\n举例来说，在模板的局部变量中新增当前时间：\n\n``` js\nhexo.extend.filter.register('template_locals', function(locals){\n  locals.now = Date.now();\n  return locals;\n});\n```\n\n### after_init\n\n在 Hexo 初始化完成后执行，也就是在 `hexo.init` 执行完成后执行。\n\n``` js\nhexo.extend.filter.register('after_init', function(){\n  // ...\n});\n```\n\n### new_post_path\n\n用来决定新建文章的路径，在建立文章时执行。\n\n``` js\nhexo.extend.filter.register('new_post_path', function(data, replace){\n  // ...\n});\n```\n\n### post_permalink\n\n用来决定文章的永久链接。\n\n``` js\nhexo.extend.filter.register('post_permalink', function(data){\n  // ...\n});\n```\n\n### after_render\n\n在渲染后执行，您可以参考 [渲染](rendering.html#after_render_过滤器) 以了解更多信息。\n\n### server_middleware\n\n新增服务器的 Middleware。`app` 是一个 [Connect] 实例。\n\n举例来说，在响应头中新增 `X-Powered-By: Hexo`。\n\n``` js\nhexo.extend.filter.register('server_middleware', function(app){\n  app.use(function(req, res, next){\n    res.setHeader('X-Powered-By', 'Hexo');\n    next();\n  });\n});\n```\n\n[Connect]: https://github.com/senchalabs/connect",
				"html": "<p>过滤器用于修改特定文件，Hexo 将这些文件依序传给过滤器，而过滤器可以针对文件进行修改，这个概念借鉴自 <a href=\"http://codex.wordpress.org/Plugin_API#Filters\" target=\"_blank\" rel=\"noopener\">WordPress</a>。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(type, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">&#125;, priority);</span><br></pre></td></tr></table></figure>\n<p>您可以指定过滤器的优先级 <code>priority</code>，<code>priority</code> 值越低，过滤器会越早执行，默认的 <code>priority</code> 是 10。</p>\n<h2 id=\"执行过滤器\"><a href=\"#执行过滤器\" class=\"headerlink\" title=\"执行过滤器\"></a>执行过滤器</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.exec(type, data, options);</span><br><span class=\"line\">hexo.extend.filter.execSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>context</code></td>\n<td>Context</td>\n</tr>\n<tr>\n<td><code>args</code></td>\n<td>参数。必须为数组。</td>\n</tr>\n</tbody>\n</table>\n<p><code>data</code> 会作为第一个参数传入每个过滤器，而您可以在过滤器中通过返回值改变下一个过滤器中的 <code>data</code>，如果什么都没有返回的话则会保持原本的 <code>data</code>。您还可以使用 <code>args</code> 指定过滤器的其他参数。举例来说：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'some data'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg1 === 'foo'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg2 === 'bar'</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'something'</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'something'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.exec(<span class=\"string\">'test'</span>, <span class=\"string\">'some data'</span>, &#123;</span><br><span class=\"line\">  args: [<span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span>]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>您也可以使用以下方法来执行过滤器：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.execFilter(type, data, options);</span><br><span class=\"line\">hexo.execFilterSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<h2 id=\"移除过滤器\"><a href=\"#移除过滤器\" class=\"headerlink\" title=\"移除过滤器\"></a>移除过滤器</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.unregister(type, filter);</span><br></pre></td></tr></table></figure>\n<h2 id=\"过滤器列表\"><a href=\"#过滤器列表\" class=\"headerlink\" title=\"过滤器列表\"></a>过滤器列表</h2><p>以下是 Hexo 所使用的过滤器。</p>\n<h3 id=\"before-post-render\"><a href=\"#before-post-render\" class=\"headerlink\" title=\"before_post_render\"></a>before_post_render</h3><p>在文章开始渲染前执行。您可以参考 <a href=\"posts.html#渲染\">文章渲染</a> 以了解执行顺序。</p>\n<p>举例来说，把标题转为小写：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.title = data.title.toLowerCase();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-post-render\"><a href=\"#after-post-render\" class=\"headerlink\" title=\"after_post_render\"></a>after_post_render</h3><p>在文章渲染完成后执行。您可以参考 <a href=\"posts.html#渲染\">文章渲染</a> 以了解执行顺序。</p>\n<p>举例来说，把 <code>@username</code> 取代为 Twitter 的开发者链接。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.content = data.content.replace(<span class=\"regexp\">/@(\\d+)/</span>, <span class=\"string\">'&lt;a href=\"http://twitter.com/$1\"&gt;#$1&lt;/a&gt;'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-exit\"><a href=\"#before-exit\" class=\"headerlink\" title=\"before_exit\"></a>before_exit</h3><p>在 Hexo 即将结束时执行，也就是在 <code>hexo.exit</code> 被调用后执行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_exit'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-generate\"><a href=\"#before-generate\" class=\"headerlink\" title=\"before_generate\"></a>before_generate</h3><p>在生成器解析前执行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-generate\"><a href=\"#after-generate\" class=\"headerlink\" title=\"after_generate\"></a>after_generate</h3><p>在生成器解析后执行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"template-locals\"><a href=\"#template-locals\" class=\"headerlink\" title=\"template_locals\"></a>template_locals</h3><p>修改模板的 <a href=\"../docs/variables.html\">局部变量</a>。</p>\n<p>举例来说，在模板的局部变量中新增当前时间：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'template_locals'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  locals.now = <span class=\"built_in\">Date</span>.now();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-init\"><a href=\"#after-init\" class=\"headerlink\" title=\"after_init\"></a>after_init</h3><p>在 Hexo 初始化完成后执行，也就是在 <code>hexo.init</code> 执行完成后执行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_init'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"new-post-path\"><a href=\"#new-post-path\" class=\"headerlink\" title=\"new_post_path\"></a>new_post_path</h3><p>用来决定新建文章的路径，在建立文章时执行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'new_post_path'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, replace</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"post-permalink\"><a href=\"#post-permalink\" class=\"headerlink\" title=\"post_permalink\"></a>post_permalink</h3><p>用来决定文章的永久链接。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'post_permalink'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-render\"><a href=\"#after-render\" class=\"headerlink\" title=\"after_render\"></a>after_render</h3><p>在渲染后执行，您可以参考 <a href=\"rendering.html#after_render_过滤器\">渲染</a> 以了解更多信息。</p>\n<h3 id=\"server-middleware\"><a href=\"#server-middleware\" class=\"headerlink\" title=\"server_middleware\"></a>server_middleware</h3><p>新增服务器的 Middleware。<code>app</code> 是一个 <a href=\"https://github.com/senchalabs/connect\" target=\"_blank\" rel=\"noopener\">Connect</a> 实例。</p>\n<p>举例来说，在响应头中新增 <code>X-Powered-By: Hexo</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'server_middleware'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>)</span>&#123;</span><br><span class=\"line\">  app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;</span><br><span class=\"line\">    res.setHeader(<span class=\"string\">'X-Powered-By'</span>, <span class=\"string\">'Hexo'</span>);</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a7006ekoeoijcuhj56",
				"title": "API",
				"markdown": "本文件提供您更丰富的 API 信息，使您更容易修改 Hexo 源代码或编写插件。如果您只是想查询 Hexo 的基本使用方法，请参阅 [文档](../docs/)。\n\n在开始之前，请注意本文件仅适用于 Hexo 3 及以上版本。\n\n## 初始化\n\n首先，我们必须建立一个 Hexo 实例（instance），第一个参数是网站的根目录，也就是 `base_dir`，而第二个参数则是初始化的选项。接著执行 `init` 方法后，Hexo 会加载插件及配置文件。\n\n``` js\nvar Hexo = require('hexo');\nvar hexo = new Hexo(process.cwd(), {});\n\nhexo.init().then(function(){\n  // ...\n});\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`debug` | 开启调试模式。在终端中显示调试信息，并在根目录中存储 `debug.log` 日志文件。| `false`\n`safe` | 开启安全模式。不加载任何插件。| `false`\n`silent` | 开启安静模式。不在终端中显示任何信息。| `false`\n`config` | 指定配置文件的路径。| `_config.yml`\n\n## 载入文件\n\nHexo 提供了两种方法来载入文件：`load`, `watch`，前者用于载入 `source` 文件夹内的所有文件及主题资源；而后者除了执行 `load` 以外，还会继续监视文件变动。\n\n这两个方法实际上所做的，就是载入文件列表，并把文件传给相对应的处理器（Processor），当文件全部处理完毕后，就执行生成器（Generator）来建立路由。\n\n``` js\nhexo.load().then(function(){\n  // ...\n});\n\nhexo.watch().then(function(){\n  // 之后可以调用 hexo.unwatch()，停止监视文件\n});\n```\n\n## 执行指令\n\n您可以通过 `call` 方法来调用控制台（Console），第一个参数是控制台的名称，而第二个参数是选项——根据不同控制台有所不同。\n\n``` js\nhexo.call('generate', {}).then(function(){\n  // ...\n});\n```\n\n## 结束\n\n当指令完毕后，请执行 `exit` 方法让 Hexo 退出结束前的准备工作（如存储资料库）。\n\n``` js\nhexo.call('generate').then(function(){\n  return hexo.exit();\n}).catch(function(err){\n  return hexo.exit(err);\n});\n```\n",
				"html": "<p>本文件提供您更丰富的 API 信息，使您更容易修改 Hexo 源代码或编写插件。如果您只是想查询 Hexo 的基本使用方法，请参阅 <a href=\"../docs/\">文档</a>。</p>\n<p>在开始之前，请注意本文件仅适用于 Hexo 3 及以上版本。</p>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><p>首先，我们必须建立一个 Hexo 实例（instance），第一个参数是网站的根目录，也就是 <code>base_dir</code>，而第二个参数则是初始化的选项。接著执行 <code>init</code> 方法后，Hexo 会加载插件及配置文件。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Hexo = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> hexo = <span class=\"keyword\">new</span> Hexo(process.cwd(), &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.init().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>debug</code></td>\n<td>开启调试模式。在终端中显示调试信息，并在根目录中存储 <code>debug.log</code> 日志文件。</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>safe</code></td>\n<td>开启安全模式。不加载任何插件。</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>silent</code></td>\n<td>开启安静模式。不在终端中显示任何信息。</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>指定配置文件的路径。</td>\n<td><code>_config.yml</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"载入文件\"><a href=\"#载入文件\" class=\"headerlink\" title=\"载入文件\"></a>载入文件</h2><p>Hexo 提供了两种方法来载入文件：<code>load</code>, <code>watch</code>，前者用于载入 <code>source</code> 文件夹内的所有文件及主题资源；而后者除了执行 <code>load</code> 以外，还会继续监视文件变动。</p>\n<p>这两个方法实际上所做的，就是载入文件列表，并把文件传给相对应的处理器（Processor），当文件全部处理完毕后，就执行生成器（Generator）来建立路由。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.load().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 之后可以调用 hexo.unwatch()，停止监视文件</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"执行指令\"><a href=\"#执行指令\" class=\"headerlink\" title=\"执行指令\"></a>执行指令</h2><p>您可以通过 <code>call</code> 方法来调用控制台（Console），第一个参数是控制台的名称，而第二个参数是选项——根据不同控制台有所不同。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>, &#123;&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><p>当指令完毕后，请执行 <code>exit</code> 方法让 Hexo 退出结束前的准备工作（如存储资料库）。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit();</span><br><span class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit(err);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a7006fkoeoi28jtjx0",
				"title": "生成器（Generator）",
				"markdown": "生成器根据处理后的原始文件建立路由。\n\n## 概要\n\n``` js\nhexo.extend.generator.register(name, function(locals){\n});\n```\n\n在函数中会传入一个 `locals` 参数，等同于 [网站变量](../docs/variables.html#网站变量)，请尽量利用此参数取得网站数据，避免直接存取资料库。\n\n## 更新路由\n\n``` js\nhexo.extend.generator.register('test', function(locals){\n  // Object\n  return {\n    path: 'foo',\n    data: 'foo'\n  };\n  \n  // Array\n  return [\n    {path: 'foo', data: 'foo'},\n    {path: 'bar', data: 'bar'}\n  ];\n});\n```\n\n属性 | 描述\n--- | ---\n`path` | 路径。不可包含开头的 `/`。\n`data` | 数据\n`layout` | 布局。指定用于渲染的模板，可为字符串或数组，如果省略此属性的话则会直接输出 `data`。\n\n在原始文件更新时，Hexo 会执行所有生成器并重建路由，**请直接回传资料，不要直接操作路由**。\n\n## 范例\n\n### 归档页面\n\n在 `archives/index.html` 建立一归档页面，把所有文章当作资料传入模板内，这个资料也就等同于模板中的 `page` 变量。\n\n然后，设置 `layout` 属性好让 Hexo 使用主题模板来渲染，在此例中同时设定了两个布局，当 `archive` 布局不存在时，会继续尝试 `index` 布局。\n\n``` js\nhexo.extend.generator.register('archive', function(locals){\n  return {\n    path: 'archives/index.html',\n    data: locals.posts,\n    layout: ['archive', 'index']\n  }\n});\n```\n\n### 有分页的归档页面\n\n您可以通过 [hexo-pagination] 这个方便的官方工具来轻松建立分页归档。\n\n``` js\nvar pagination = require('hexo-pagination');\n\nhexo.extend.generator.register('archive', function(locals){\n  return pagination('archives/index.html', locals.posts, {\n    perPage: 10,\n    layout: ['archive', 'index'],\n    data: {}\n  });\n});\n```\n\n### 生成所有文章\n\n遍历 `locals.posts` 中的所有文章并生成所有文章的路由。\n\n``` js\nhexo.extend.generator.register('post', function(locals){\n  return locals.posts.map(function(post){\n    return {\n      path: post.path,\n      data: post,\n      layout: 'post'\n    };\n  });\n});\n```\n\n### 复制文件\n\n这次不直接在 `data` 中返回数据而是返回一个函数，如此一来这个路由唯有在使用时才会建立 `fs.ReadStream`。\n\n``` js\nvar fs = require('hexo-fs');\n\nhexo.extend.generator.register('asset', function(locals){\n  return {\n    path: 'file.txt',\n    data: function(){\n      return fs.createReadStream('path/to/file.txt')\n    }\n  };\n});\n```\n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n",
				"html": "<p>生成器根据处理后的原始文件建立路由。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>在函数中会传入一个 <code>locals</code> 参数，等同于 <a href=\"../docs/variables.html#网站变量\">网站变量</a>，请尽量利用此参数取得网站数据，避免直接存取资料库。</p>\n<h2 id=\"更新路由\"><a href=\"#更新路由\" class=\"headerlink\" title=\"更新路由\"></a>更新路由</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Object</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'foo'</span>,</span><br><span class=\"line\">    data: <span class=\"string\">'foo'</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// Array</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> [</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'foo'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'foo'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'bar'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'bar'</span>&#125;</span><br><span class=\"line\">  ];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>path</code></td>\n<td>路径。不可包含开头的 <code>/</code>。</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>数据</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>布局。指定用于渲染的模板，可为字符串或数组，如果省略此属性的话则会直接输出 <code>data</code>。</td>\n</tr>\n</tbody>\n</table>\n<p>在原始文件更新时，Hexo 会执行所有生成器并重建路由，<strong>请直接回传资料，不要直接操作路由</strong>。</p>\n<h2 id=\"范例\"><a href=\"#范例\" class=\"headerlink\" title=\"范例\"></a>范例</h2><h3 id=\"归档页面\"><a href=\"#归档页面\" class=\"headerlink\" title=\"归档页面\"></a>归档页面</h3><p>在 <code>archives/index.html</code> 建立一归档页面，把所有文章当作资料传入模板内，这个资料也就等同于模板中的 <code>page</code> 变量。</p>\n<p>然后，设置 <code>layout</code> 属性好让 Hexo 使用主题模板来渲染，在此例中同时设定了两个布局，当 <code>archive</code> 布局不存在时，会继续尝试 <code>index</code> 布局。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'archives/index.html'</span>,</span><br><span class=\"line\">    data: locals.posts,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"有分页的归档页面\"><a href=\"#有分页的归档页面\" class=\"headerlink\" title=\"有分页的归档页面\"></a>有分页的归档页面</h3><p>您可以通过 <a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a> 这个方便的官方工具来轻松建立分页归档。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pagination(<span class=\"string\">'archives/index.html'</span>, locals.posts, &#123;</span><br><span class=\"line\">    perPage: <span class=\"number\">10</span>,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>],</span><br><span class=\"line\">    data: &#123;&#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成所有文章\"><a href=\"#生成所有文章\" class=\"headerlink\" title=\"生成所有文章\"></a>生成所有文章</h3><p>遍历 <code>locals.posts</code> 中的所有文章并生成所有文章的路由。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'post'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals.posts.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      path: post.path,</span><br><span class=\"line\">      data: post,</span><br><span class=\"line\">      layout: <span class=\"string\">'post'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"复制文件\"><a href=\"#复制文件\" class=\"headerlink\" title=\"复制文件\"></a>复制文件</h3><p>这次不直接在 <code>data</code> 中返回数据而是返回一个函数，如此一来这个路由唯有在使用时才会建立 <code>fs.ReadStream</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'asset'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'file.txt'</span>,</span><br><span class=\"line\">    data: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> fs.createReadStream(<span class=\"string\">'path/to/file.txt'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a7006gkoeoig16bth4",
				"title": "辅助函数（Helper）",
				"markdown": "辅助函数帮助您在模板中快速插入内容，建议您把复杂的代码放在辅助函数而非模板中。\n\n## 概要\n\n``` js\nhexo.extend.helper.register(name, function(){\n});\n```\n\n## 范例\n\n``` js\nhexo.extend.helper.register('js', function(path){\n  return '<script type=\"text/javascript\" src=\"' + path + '\"></script>';\n});\n```\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"script.js\"></script>\n```",
				"html": "<p>辅助函数帮助您在模板中快速插入内容，建议您把复杂的代码放在辅助函数而非模板中。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"范例\"><a href=\"#范例\" class=\"headerlink\" title=\"范例\"></a>范例</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(<span class=\"string\">'js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script type=\"text/javascript\" src=\"'</span> + path + <span class=\"string\">'\"&gt;&lt;/script&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a8006hkoeot4549hv2",
				"title": "局部变量",
				"markdown": "局部变量用于模版渲染，也就是模版中的 `site` 变量。\n\n## 默认变量\n\n变量 | 描述\n--- | ---\n`posts` | 所有文章\n`pages` | 所有分页\n`categories` | 所有分类\n`tags` | 所有标签\n\n## 获取变量\n\n``` js\nhexo.locals.get('posts')\n```\n\n## 设置变量\n\n``` js\nhexo.locals.set('posts', function(){\n  return ...\n});\n```\n\n## 移除变量\n\n``` js\nhexo.locals.remove('posts');\n```\n\n## 获取所有变量\n\n``` js\nhexo.locals.toObject();\n```\n\n## 清除缓存\n\n``` js\nhexo.locals.invalidate();\n```",
				"html": "<p>局部变量用于模版渲染，也就是模版中的 <code>site</code> 变量。</p>\n<h2 id=\"默认变量\"><a href=\"#默认变量\" class=\"headerlink\" title=\"默认变量\"></a>默认变量</h2><table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>posts</code></td>\n<td>所有文章</td>\n</tr>\n<tr>\n<td><code>pages</code></td>\n<td>所有分页</td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>所有分类</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>所有标签</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"获取变量\"><a href=\"#获取变量\" class=\"headerlink\" title=\"获取变量\"></a>获取变量</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.get(<span class=\"string\">'posts'</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置变量\"><a href=\"#设置变量\" class=\"headerlink\" title=\"设置变量\"></a>设置变量</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.set(<span class=\"string\">'posts'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"移除变量\"><a href=\"#移除变量\" class=\"headerlink\" title=\"移除变量\"></a>移除变量</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.remove(<span class=\"string\">'posts'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"获取所有变量\"><a href=\"#获取所有变量\" class=\"headerlink\" title=\"获取所有变量\"></a>获取所有变量</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.toObject();</span><br></pre></td></tr></table></figure>\n<h2 id=\"清除缓存\"><a href=\"#清除缓存\" class=\"headerlink\" title=\"清除缓存\"></a>清除缓存</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.invalidate();</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a8006ikoeoksmgbk7y",
				"title": "迁移器（Migrator）",
				"markdown": "迁移器帮助开发者从其他系统迁移到 Hexo。\n\n## 概要\n\n``` js\nhexo.extend.migrator.register(name, function(args){\n  // ...\n});\n```\n\n在函数中需要传入 `args` 参数，该参数包含了开发者在终端中所传入的参数。",
				"html": "<p>迁移器帮助开发者从其他系统迁移到 Hexo。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.migrator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>在函数中需要传入 <code>args</code> 参数，该参数包含了开发者在终端中所传入的参数。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a9006jkoeolz1ugg2d",
				"title": "文章",
				"markdown": "## 新建文章\n\n``` js\nhexo.post.create(data, replace);\n```\n\n参数 | 描述\n--- | ---\n`data` | 数据\n`replace` | 替换现有文件\n\n您可以在资料中指定文章的属性，除了以下属性之外，其他属性也会被加到 front-matter 中。\n\n属性 | 描述\n--- | ---\n`title` | 标题\n`slug` | 网址\n`layout` | 布局。默认为 `default_layout` 参数。\n`path` | 路径。默认会根据 `new_post_path` 参数创建文章路径。\n`date` | 日期。默认为当前时间。\n\n## 发布草稿\n\n``` js\nhexo.post.publish(data, replace);\n```\n\n参数 | 描述\n--- | ---\n`data` | 资料\n`replace` | 替换现有文件\n\n您可以在资料中指定文章的属性，除了以下的属性之外，其他属性也会被加到 front-matter 中。\n\n属性 | 描述\n--- | ---\n`slug` | 文件名称（必须）\n`layout` | 布局。默认为 `default_layout` 参数。\n\n## 渲染\n\n``` js\nhexo.post.render(source, data);\n```\n\n参数 | 描述\n--- | ---\n`source` | 文件的完整路径（可忽略）\n`data` | 数据\n\n资料中必须包含 `content` 属性，如果没有的话，会尝试读取原始文件。此函数的执行顺序为：\n\n- 执行 `before_post_render` 过滤器\n- 使用 Markdown 或其他渲染器渲染（根据扩展名而定）\n- 使用 [Nunjucks] 渲染\n- 执行 `after_post_render` 过滤器\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/",
				"html": "<h2 id=\"新建文章\"><a href=\"#新建文章\" class=\"headerlink\" title=\"新建文章\"></a>新建文章</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.create(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>数据</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>替换现有文件</td>\n</tr>\n</tbody>\n</table>\n<p>您可以在资料中指定文章的属性，除了以下属性之外，其他属性也会被加到 front-matter 中。</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>标题</td>\n</tr>\n<tr>\n<td><code>slug</code></td>\n<td>网址</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>布局。默认为 <code>default_layout</code> 参数。</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>路径。默认会根据 <code>new_post_path</code> 参数创建文章路径。</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>日期。默认为当前时间。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"发布草稿\"><a href=\"#发布草稿\" class=\"headerlink\" title=\"发布草稿\"></a>发布草稿</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.publish(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>资料</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>替换现有文件</td>\n</tr>\n</tbody>\n</table>\n<p>您可以在资料中指定文章的属性，除了以下的属性之外，其他属性也会被加到 front-matter 中。</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>slug</code></td>\n<td>文件名称（必须）</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>布局。默认为 <code>default_layout</code> 参数。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"渲染\"><a href=\"#渲染\" class=\"headerlink\" title=\"渲染\"></a>渲染</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.render(source, data);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>文件的完整路径（可忽略）</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>数据</td>\n</tr>\n</tbody>\n</table>\n<p>资料中必须包含 <code>content</code> 属性，如果没有的话，会尝试读取原始文件。此函数的执行顺序为：</p>\n<ul>\n<li>执行 <code>before_post_render</code> 过滤器</li>\n<li>使用 Markdown 或其他渲染器渲染（根据扩展名而定）</li>\n<li>使用 <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> 渲染</li>\n<li>执行 <code>after_post_render</code> 过滤器</li>\n</ul>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a9006kkoeo1oxr5c0y",
				"title": "处理器（Processor）",
				"markdown": "处理器用于处理 `source` 文件夹内的原始文件。\n\n## 概要\n\n``` js\nhexo.extend.processor.register(rule, function(file){\n});\n```\n\n完整说明请参考 [Box](box.html)。",
				"html": "<p>处理器用于处理 <code>source</code> 文件夹内的原始文件。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.processor.register(rule, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>完整说明请参考 <a href=\"box.html\">Box</a>。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a9006lkoeo7dtrpe0x",
				"title": "渲染",
				"markdown": "在 Hexo 中，有两个方法可用于渲染文件或字符串，分别是非同步的 `hexo.render.render` 和同步的 `hexo.render.renderSync`，这两个方法的使用方式十分类似，因此以下仅以非同步的 `hexo.render.render` 为例。\n\n## 渲染字符串\n\n在渲染字符串时，您必须指定 `engine`，如此一来 Hexo 才知道该使用哪个渲染引擎来渲染。\n\n``` js\nhexo.render.render({text: 'example', engine: 'swig'}).then(function(result){\n  // ...\n});\n```\n\n## 渲染文件\n\n在渲染文件时，您无须指定 `engine`，Hexo 会自动根据扩展名猜测所要使用的渲染引擎，当然您也可以使用 `engine` 指定。\n\n``` js\nhexo.render.render({path: 'path/to/file.swig'}).then(function(result){\n  // ...\n});\n```\n\n## 渲染选项\n\n在渲染时，您可以向第二个参数中传入参数。\n\n``` js\nhexo.render.render({text: ''}, {foo: 'foo'}).then(function(result){\n  // ...\n});\n```\n\n## after_render 过滤器\n\n在渲染完成后，Hexo 会自动执行相对应的 `after_render` 过滤器，举例来说，我们可以通过这个功能实现 JavaScript 的压缩。\n\n``` js\nvar UglifyJS = require('uglify-js');\n\nhexo.extend.filter.register('after_render:js', function(str, data){\n  var result = UglifyJS.minify(str);\n  return result.code;\n});\n```\n\n## 检查文件是否可被渲染\n\n您可以通过 `isRenderable` 或 `isRenderableSync` 两个方法检查文件路径是否可以被渲染，只有在相对应的渲染器（renderer）已注册的情况下才会返回 true。\n\n``` js\nhexo.render.isRenderable('layout.swig') // true\nhexo.render.isRenderable('image.png') // false\n```\n\n## 获取文件的输出扩展名\n\n您可以通过 `getOutput` 方法取得文件路径输出后的扩展名，如果文件无法渲染，则会返回空字符串。\n\n``` js\nhexo.render.getOutput('layout.swig') // html\nhexo.render.getOutput('image.png') // '''\n```",
				"html": "<p>在 Hexo 中，有两个方法可用于渲染文件或字符串，分别是非同步的 <code>hexo.render.render</code> 和同步的 <code>hexo.render.renderSync</code>，这两个方法的使用方式十分类似，因此以下仅以非同步的 <code>hexo.render.render</code> 为例。</p>\n<h2 id=\"渲染字符串\"><a href=\"#渲染字符串\" class=\"headerlink\" title=\"渲染字符串\"></a>渲染字符串</h2><p>在渲染字符串时，您必须指定 <code>engine</code>，如此一来 Hexo 才知道该使用哪个渲染引擎来渲染。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">'example'</span>, <span class=\"attr\">engine</span>: <span class=\"string\">'swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"渲染文件\"><a href=\"#渲染文件\" class=\"headerlink\" title=\"渲染文件\"></a>渲染文件</h2><p>在渲染文件时，您无须指定 <code>engine</code>，Hexo 会自动根据扩展名猜测所要使用的渲染引擎，当然您也可以使用 <code>engine</code> 指定。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">path</span>: <span class=\"string\">'path/to/file.swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"渲染选项\"><a href=\"#渲染选项\" class=\"headerlink\" title=\"渲染选项\"></a>渲染选项</h2><p>在渲染时，您可以向第二个参数中传入参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">''</span>&#125;, &#123;<span class=\"attr\">foo</span>: <span class=\"string\">'foo'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"after-render-过滤器\"><a href=\"#after-render-过滤器\" class=\"headerlink\" title=\"after_render 过滤器\"></a>after_render 过滤器</h2><p>在渲染完成后，Hexo 会自动执行相对应的 <code>after_render</code> 过滤器，举例来说，我们可以通过这个功能实现 JavaScript 的压缩。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> UglifyJS = <span class=\"built_in\">require</span>(<span class=\"string\">'uglify-js'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_render:js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str, data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = UglifyJS.minify(str);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result.code;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"检查文件是否可被渲染\"><a href=\"#检查文件是否可被渲染\" class=\"headerlink\" title=\"检查文件是否可被渲染\"></a>检查文件是否可被渲染</h2><p>您可以通过 <code>isRenderable</code> 或 <code>isRenderableSync</code> 两个方法检查文件路径是否可以被渲染，只有在相对应的渲染器（renderer）已注册的情况下才会返回 true。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"获取文件的输出扩展名\"><a href=\"#获取文件的输出扩展名\" class=\"headerlink\" title=\"获取文件的输出扩展名\"></a>获取文件的输出扩展名</h2><p>您可以通过 <code>getOutput</code> 方法取得文件路径输出后的扩展名，如果文件无法渲染，则会返回空字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// html</span></span><br><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// '''</span></span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6aa006mkoeo8f0wz0nz",
				"title": "渲染引擎（Renderer）",
				"markdown": "渲染引擎用于渲染内容。\n\n## 概要\n\n``` js\nhexo.extend.renderer.register(name, output, function(data, options){\n}, sync);\n```\n\n参数 | 描述\n--- | ---\n`name` | 输入的扩展名（小写，不含开头的 `.`）\n`output` | 输出的扩展名（小写，不含开头的 `.`）\n`sync` | 同步模式\n\n渲染函数中会传入两个参数：\n\n参数 | 描述\n--- | ---\n`data` | 包含两个属性：文件路径 `path` 和文件内容 `text`。`path` 不一定存在。\n`option` | 选项\n\n## 范例\n\n### 非同步模式\n\n``` js\nvar stylus = require('stylus');\n\n// Callback\nhexo.extend.renderer.register('styl', 'css', function(data, options, callback){\n  stylus(data.text).set('filename', data.path).render(callback);\n});\n\n// Promise\nhexo.extend.renderer.register('styl', 'css', function(data, options){\n  return new Promise(function(resolve, reject){\n    resolve('test');\n  });\n});\n```\n\n### 同步模式\n\n``` js\nvar ejs = require('ejs');\n\nhexo.extend.renderer.register('ejs', 'html', function(data, options){\n  options.filename = data.path;\n  return ejs.render(data.text, options);\n}, true);\n```",
				"html": "<p>渲染引擎用于渲染内容。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.renderer.register(name, output, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">&#125;, sync);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>输入的扩展名（小写，不含开头的 <code>.</code>）</td>\n</tr>\n<tr>\n<td><code>output</code></td>\n<td>输出的扩展名（小写，不含开头的 <code>.</code>）</td>\n</tr>\n<tr>\n<td><code>sync</code></td>\n<td>同步模式</td>\n</tr>\n</tbody>\n</table>\n<p>渲染函数中会传入两个参数：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>包含两个属性：文件路径 <code>path</code> 和文件内容 <code>text</code>。<code>path</code> 不一定存在。</td>\n</tr>\n<tr>\n<td><code>option</code></td>\n<td>选项</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"范例\"><a href=\"#范例\" class=\"headerlink\" title=\"范例\"></a>范例</h2><h3 id=\"非同步模式\"><a href=\"#非同步模式\" class=\"headerlink\" title=\"非同步模式\"></a>非同步模式</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> stylus = <span class=\"built_in\">require</span>(<span class=\"string\">'stylus'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Callback</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options, callback</span>)</span>&#123;</span><br><span class=\"line\">  stylus(data.text).set(<span class=\"string\">'filename'</span>, data.path).render(callback);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Promise</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'test'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"同步模式\"><a href=\"#同步模式\" class=\"headerlink\" title=\"同步模式\"></a>同步模式</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'ejs'</span>, <span class=\"string\">'html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  options.filename = data.path;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, options);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6aa006nkoeoq5dnz8tu",
				"title": "路由",
				"markdown": "路由存储了网站中所用到的所有路径。\n\n## 获取路径\n\n`get` 方法会传回一个 [Stream]，例如把该路径的资料存储到某个指定位置。\n\n``` js\nvar data = hexo.route.get('index.html');\nvar dest = fs.createWriteStream('somewhere');\n\ndata.pipe(dest);\n```\n\n## 设置路径\n\n您可以在 `set` 方法中使用字符串、[Buffer] 或函数，如下：\n\n``` js\n// String\nhexo.route.set('index.html', 'index')\n\n// Buffer\nhexo.route.set('index.html', new Buffer('index'));\n\n// Function (Promise)\nhexo.route.set('index.html', function(){\n  return new Promise(function(resolve, reject){\n    resolve('index');\n  });\n});\n\n// Function (Callback)\nhexo.route.set('index.html', function(callback){\n  callback(null, 'index');\n});\n```\n\n您还可以设置该路径是否更新，这样在生成文件时便能忽略未更动的文件，加快生成时间。\n\n``` js\nhexo.route.set('index.html', {\n    data: 'index',\n    modified: false\n});\n\n// hexo.route.isModified('index.html') => false\n```\n\n## 移除路径\n\n``` js\nhexo.route.remove('index.html');\n```\n\n## 获得路由表\n\n``` js\nhexo.route.list();\n```\n\n## 格式化路径\n\n`format` 方法可将字符串转为合法的路径。\n\n``` js\nhexo.route.format('archives/');\n// archives/index.html\n```\n\n[Stream]: http://nodejs.org/api/stream.html\n[Buffer]: http://nodejs.org/api/buffer.html",
				"html": "<p>路由存储了网站中所用到的所有路径。</p>\n<h2 id=\"获取路径\"><a href=\"#获取路径\" class=\"headerlink\" title=\"获取路径\"></a>获取路径</h2><p><code>get</code> 方法会传回一个 <a href=\"http://nodejs.org/api/stream.html\" target=\"_blank\" rel=\"noopener\">Stream</a>，例如把该路径的资料存储到某个指定位置。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = hexo.route.get(<span class=\"string\">'index.html'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dest = fs.createWriteStream(<span class=\"string\">'somewhere'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">data.pipe(dest);</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置路径\"><a href=\"#设置路径\" class=\"headerlink\" title=\"设置路径\"></a>设置路径</h2><p>您可以在 <code>set</code> 方法中使用字符串、<a href=\"http://nodejs.org/api/buffer.html\" target=\"_blank\" rel=\"noopener\">Buffer</a> 或函数，如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// String</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"string\">'index'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Buffer</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"keyword\">new</span> Buffer(<span class=\"string\">'index'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Function (Promise)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'index'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Function (Callback)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">callback</span>)</span>&#123;</span><br><span class=\"line\">  callback(<span class=\"literal\">null</span>, <span class=\"string\">'index'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>您还可以设置该路径是否更新，这样在生成文件时便能忽略未更动的文件，加快生成时间。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, &#123;</span><br><span class=\"line\">    data: <span class=\"string\">'index'</span>,</span><br><span class=\"line\">    modified: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// hexo.route.isModified('index.html') =&gt; false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"移除路径\"><a href=\"#移除路径\" class=\"headerlink\" title=\"移除路径\"></a>移除路径</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.remove(<span class=\"string\">'index.html'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"获得路由表\"><a href=\"#获得路由表\" class=\"headerlink\" title=\"获得路由表\"></a>获得路由表</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.list();</span><br></pre></td></tr></table></figure>\n<h2 id=\"格式化路径\"><a href=\"#格式化路径\" class=\"headerlink\" title=\"格式化路径\"></a>格式化路径</h2><p><code>format</code> 方法可将字符串转为合法的路径。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.format(<span class=\"string\">'archives/'</span>);</span><br><span class=\"line\"><span class=\"comment\">// archives/index.html</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6aa006okoeotdbi3nab",
				"title": "脚手架（Scaffold）",
				"markdown": "## 获得脚手架\n\n``` js\nhexo.scaffold.get(name);\n```\n\n## 设置脚手架\n\n``` js\nhexo.scaffold.set(name, content);\n```\n\n## 移除脚手架\n\n``` js\nhexo.scaffold.remove(name);\n```",
				"html": "<h2 id=\"获得脚手架\"><a href=\"#获得脚手架\" class=\"headerlink\" title=\"获得脚手架\"></a>获得脚手架</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.get(name);</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置脚手架\"><a href=\"#设置脚手架\" class=\"headerlink\" title=\"设置脚手架\"></a>设置脚手架</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.set(name, content);</span><br></pre></td></tr></table></figure>\n<h2 id=\"移除脚手架\"><a href=\"#移除脚手架\" class=\"headerlink\" title=\"移除脚手架\"></a>移除脚手架</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.remove(name);</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ad006pkoeo18syi1o5",
				"title": "标签插件（Tag）",
				"markdown": "标签插件帮助开发者在文章中快速插入内容。\n\n## 概要\n\n``` js\nhexo.extend.tag.register(name, function(args, content){\n}, options);\n```\n\n标签函数会传入两个参数：`args` 和 `content`，前者代表开发者在使用标签插件时传入的参数，而后者则是标签插件所覆盖的内容。\n\n从 Hexo 3 开始，因为新增了非同步渲染功能，而改用 [Nunjucks] 作为渲染引擎，其行为可能会与过去使用的 [Swig] 有些许差异。\n\n## 选项\n\n### ends\n\n使用结束标签，此选项默认为 `false`。\n\n### async\n\n开启非同步模式，此选项默认为 `false`。\n\n## 范例\n\n### 没有结束标签\n\n插入 Youtube 影片。\n\n``` js\nhexo.extend.tag.register('youtube', function(args){\n  var id = args[0];\n  return '<div class=\"video-container\"><iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/' + id + '\" frameborder=\"0\" allowfullscreen></iframe></div>';\n});\n```\n\n### 有结束标签\n\n插入 pull quote。\n\n``` js\nhexo.extend.tag.register('pullquote', function(args, content){\n  var className =  args.join(' ');\n  return '<blockquote class=\"pullquote' + className + '\">' + content + '</blockquote>';\n}, {ends: true});\n```\n\n### 非同步渲染\n\n插入文件。\n\n``` js\nvar fs = require('hexo-fs');\nvar pathFn = require('path');\n\nhexo.extend.tag.register('include_code', function(args){\n  var filename = args[0];\n  var path = pathFn.join(hexo.source_dir, filename);\n  \n  return fs.readFile(path).then(function(content){\n    return '<pre><code>' + content + '</code></pre>';\n  });\n}, {async: true});\n```\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n[Swig]: http://paularmstrong.github.io/swig/",
				"html": "<p>标签插件帮助开发者在文章中快速插入内容。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">&#125;, options);</span><br></pre></td></tr></table></figure>\n<p>标签函数会传入两个参数：<code>args</code> 和 <code>content</code>，前者代表开发者在使用标签插件时传入的参数，而后者则是标签插件所覆盖的内容。</p>\n<p>从 Hexo 3 开始，因为新增了非同步渲染功能，而改用 <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> 作为渲染引擎，其行为可能会与过去使用的 <a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a> 有些许差异。</p>\n<h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h2><h3 id=\"ends\"><a href=\"#ends\" class=\"headerlink\" title=\"ends\"></a>ends</h3><p>使用结束标签，此选项默认为 <code>false</code>。</p>\n<h3 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h3><p>开启非同步模式，此选项默认为 <code>false</code>。</p>\n<h2 id=\"范例\"><a href=\"#范例\" class=\"headerlink\" title=\"范例\"></a>范例</h2><h3 id=\"没有结束标签\"><a href=\"#没有结束标签\" class=\"headerlink\" title=\"没有结束标签\"></a>没有结束标签</h3><p>插入 Youtube 影片。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'youtube'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> id = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;div class=\"video-container\"&gt;&lt;iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/'</span> + id + <span class=\"string\">'\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"有结束标签\"><a href=\"#有结束标签\" class=\"headerlink\" title=\"有结束标签\"></a>有结束标签</h3><p>插入 pull quote。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'pullquote'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> className =  args.join(<span class=\"string\">' '</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;blockquote class=\"pullquote'</span> + className + <span class=\"string\">'\"&gt;'</span> + content + <span class=\"string\">'&lt;/blockquote&gt;'</span>;</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">ends</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"非同步渲染\"><a href=\"#非同步渲染\" class=\"headerlink\" title=\"非同步渲染\"></a>非同步渲染</h3><p>插入文件。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> pathFn = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'include_code'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> filename = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> path = pathFn.join(hexo.source_dir, filename);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> fs.readFile(path).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">content</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;pre&gt;&lt;code&gt;'</span> + content + <span class=\"string\">'&lt;/code&gt;&lt;/pre&gt;'</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">async</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67g001ckoeo3l9yz2h1",
				"title": "",
				"markdown": "ul#intro-feature-list\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-bolt\n      h3.intro-feature-title 超快速度\n      p.intro-feature-desc Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-pencil\n      h3.intro-feature-title 支持 Markdown\n      p.intro-feature-desc Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cloud-upload\n      h3.intro-feature-title 一键部署\n      p.intro-feature-desc 只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cog\n      h3.intro-feature-title 丰富的插件\n      p.intro-feature-desc Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。",
				"html": "<ul id=\"intro-feature-list\"><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-bolt\"></i></div><h3 class=\"intro-feature-title\">超快速度</h3><p class=\"intro-feature-desc\">Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-pencil\"></i></div><h3 class=\"intro-feature-title\">支持 Markdown</h3><p class=\"intro-feature-desc\">Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cloud-upload\"></i></div><h3 class=\"intro-feature-title\">一键部署</h3><p class=\"intro-feature-desc\">只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cog\"></i></div><h3 class=\"intro-feature-title\">丰富的插件</h3><p class=\"intro-feature-desc\">Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。</p></div></li></ul>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ad006rkoeopeo90c5f",
				"title": "箱子（Box）",
				"markdown": "「箱子」是 Hexo 用來處理特定資料夾中的檔案的容器，在 Hexo 中有兩個箱子，分別是 `hexo.source` 和 `hexo.theme`，前者用於處理 `source` 資料夾，而後者用於處理主題資料夾。\n\n## 載入檔案\n\n箱子提供了兩種方法來載入檔案：`process`, `watch`，前者用於載入資料夾內的所有檔案；而後者除了執行 `process` 以外，還會繼續監看檔案變動。\n\n``` js\nbox.process().then(function(){\n  // ...\n});\n\nbox.watch().then(function(){\n  // 之後可呼叫 box.unwatch() 停止檔案監看\n});\n```\n\n## 路徑比對\n\n箱子提供了多種路徑比對的模式，您可使用正規表達式（regular expression）、函數、或是一種類似於 Express 的路徑字串，例如：\n\n``` plain\nposts/:id => posts/89\nposts/*path => posts/2015/title\n```\n\n您可參考 [util.Pattern] 以獲得更多資訊。\n\n## 處理器（Processor）\n\n處理器（Processor）是箱子中非常重要的元素，它用於處理檔案，您可使用上述的路徑比對來限制該處理器所要處理的檔案類型。使用 `addProcessor` 來註冊處理器。\n\n``` js\nbox.addProcessor('posts/:id', function(file){\n  //\n});\n```\n\n箱子在處理時會把目前處理的檔案內容（`file`）傳給處理器，您可透過此參數取得該檔案的資訊。\n\n屬性 | 描述\n--- | ---\n`source` | 檔案完整路徑\n`path` | 檔案相對於箱子的路徑\n`type` | 檔案類型。有 `create`, `update`, `skip`, `delete`。\n`params` | 從路徑比對中取得的資訊\n\n箱子還提供了一些方法，讓您無須自行處理檔案 IO。\n\n方法 | 描述\n--- | ---\n`read` | 讀取檔案\n`readSync` | 同步讀取檔案\n`stat` | 讀取檔案狀態\n`statSync` | 同步讀取檔案狀態\n`render` | 渲染檔案\n`renderSync` | 同步渲染檔案\n\n[util.Pattern]: https://github.com/hexojs/hexo-util#patternrule",
				"html": "<p>「箱子」是 Hexo 用來處理特定資料夾中的檔案的容器，在 Hexo 中有兩個箱子，分別是 <code>hexo.source</code> 和 <code>hexo.theme</code>，前者用於處理 <code>source</code> 資料夾，而後者用於處理主題資料夾。</p>\n<h2 id=\"載入檔案\"><a href=\"#載入檔案\" class=\"headerlink\" title=\"載入檔案\"></a>載入檔案</h2><p>箱子提供了兩種方法來載入檔案：<code>process</code>, <code>watch</code>，前者用於載入資料夾內的所有檔案；而後者除了執行 <code>process</code> 以外，還會繼續監看檔案變動。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.process().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">box.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 之後可呼叫 box.unwatch() 停止檔案監看</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"路徑比對\"><a href=\"#路徑比對\" class=\"headerlink\" title=\"路徑比對\"></a>路徑比對</h2><p>箱子提供了多種路徑比對的模式，您可使用正規表達式（regular expression）、函數、或是一種類似於 Express 的路徑字串，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">posts/:id =&gt; posts/89</span><br><span class=\"line\">posts/*path =&gt; posts/2015/title</span><br></pre></td></tr></table></figure>\n<p>您可參考 <a href=\"https://github.com/hexojs/hexo-util#patternrule\" target=\"_blank\" rel=\"noopener\">util.Pattern</a> 以獲得更多資訊。</p>\n<h2 id=\"處理器（Processor）\"><a href=\"#處理器（Processor）\" class=\"headerlink\" title=\"處理器（Processor）\"></a>處理器（Processor）</h2><p>處理器（Processor）是箱子中非常重要的元素，它用於處理檔案，您可使用上述的路徑比對來限制該處理器所要處理的檔案類型。使用 <code>addProcessor</code> 來註冊處理器。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.addProcessor(<span class=\"string\">'posts/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>箱子在處理時會把目前處理的檔案內容（<code>file</code>）傳給處理器，您可透過此參數取得該檔案的資訊。</p>\n<table>\n<thead>\n<tr>\n<th>屬性</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>檔案完整路徑</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>檔案相對於箱子的路徑</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>檔案類型。有 <code>create</code>, <code>update</code>, <code>skip</code>, <code>delete</code>。</td>\n</tr>\n<tr>\n<td><code>params</code></td>\n<td>從路徑比對中取得的資訊</td>\n</tr>\n</tbody>\n</table>\n<p>箱子還提供了一些方法，讓您無須自行處理檔案 IO。</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>read</code></td>\n<td>讀取檔案</td>\n</tr>\n<tr>\n<td><code>readSync</code></td>\n<td>同步讀取檔案</td>\n</tr>\n<tr>\n<td><code>stat</code></td>\n<td>讀取檔案狀態</td>\n</tr>\n<tr>\n<td><code>statSync</code></td>\n<td>同步讀取檔案狀態</td>\n</tr>\n<tr>\n<td><code>render</code></td>\n<td>渲染檔案</td>\n</tr>\n<tr>\n<td><code>renderSync</code></td>\n<td>同步渲染檔案</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ae006skoeojp3mj4gw",
				"title": "控制台（Console）",
				"markdown": "控制台是 Hexo 與使用者之間溝通的橋樑。\n\n## 概要\n\n``` js\nhexo.extend.console.register(name, desc, options, function(args){\n  // ...\n});\n```\n\n參數 | 描述\n--- | ---\n`name` | 名稱\n`desc` | 描述\n`options`| 選項\n\n在函數中會傳入 `args` 參數，此參數是使用者在終端機所傳入的參數，是一個經 [Minimist] 解析的物件。\n\n## 選項\n\n### 用法\n\n控制台的操作方法，例如：\n\n``` js\n{usage: '[layout] <title>'}\n// hexo new [layout] <title>\n```\n\n### 參數\n\n控制台各個參數的說明，例如：\n\n``` js\n{\n  arguments: [\n    {name: 'layout', desc: 'Post layout'},\n    {name: 'title', desc: 'Post title'}\n  ]\n}\n```\n\n### 選項\n\n控制台的選項，例如：\n\n``` js\n{\n  options: [\n    {name: '-r, --replace', desc: 'Replace existing files'}\n  ]\n}\n```\n\n### 描述\n\n控制台更詳細的說明。\n\n## 範例\n\n``` js\nhexo.extend.console.register('config', 'Display configuration', function(args){\n  console.log(hexo.config);\n});\n```\n\n[Minimist]: https://github.com/substack/minimist",
				"html": "<p>控制台是 Hexo 與使用者之間溝通的橋樑。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(name, desc, options, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>參數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>名稱</td>\n</tr>\n<tr>\n<td><code>desc</code></td>\n<td>描述</td>\n</tr>\n<tr>\n<td><code>options</code></td>\n<td>選項</td>\n</tr>\n</tbody>\n</table>\n<p>在函數中會傳入 <code>args</code> 參數，此參數是使用者在終端機所傳入的參數，是一個經 <a href=\"https://github.com/substack/minimist\" target=\"_blank\" rel=\"noopener\">Minimist</a> 解析的物件。</p>\n<h2 id=\"選項\"><a href=\"#選項\" class=\"headerlink\" title=\"選項\"></a>選項</h2><h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><p>控制台的操作方法，例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">usage</span>: <span class=\"string\">'[layout] &lt;title&gt;'</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">// hexo new [layout] &lt;title&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"參數\"><a href=\"#參數\" class=\"headerlink\" title=\"參數\"></a>參數</h3><p>控制台各個參數的說明，例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"built_in\">arguments</span>: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'layout'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post layout'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'title'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post title'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"選項-1\"><a href=\"#選項-1\" class=\"headerlink\" title=\"選項\"></a>選項</h3><p>控制台的選項，例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  options: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'-r, --replace'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Replace existing files'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h3><p>控制台更詳細的說明。</p>\n<h2 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(<span class=\"string\">'config'</span>, <span class=\"string\">'Display configuration'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(hexo.config);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ae006tkoeo72pym3h1",
				"title": "佈署器（Deployer）",
				"markdown": "佈署器幫助使用者快速將網站佈署到遠端伺服器上，免去複雜的指令。\n\n## 概要\n\n``` js\nhexo.extend.deployer.register(name, function(args){\n  // ...\n});\n```\n\n在函數中會傳入 `args` 參數，此參數包含了 `_config.yml` 中的 `deploy` 設定，及使用者在終端機所傳入的參數。",
				"html": "<p>佈署器幫助使用者快速將網站佈署到遠端伺服器上，免去複雜的指令。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.deployer.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>在函數中會傳入 <code>args</code> 參數，此參數包含了 <code>_config.yml</code> 中的 <code>deploy</code> 設定，及使用者在終端機所傳入的參數。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ae006ukoeodvx6qaj7",
				"title": "事件",
				"markdown": "Hexo 繼承了 [EventEmitter]，您可用 `on` 方法監聽 Hexo 所發佈的事件，亦可用 `emit` 方法對 Hexo 發佈事件，更詳細的說明請參閱 Node.js 的 API。\n\n### deployBefore\n\n在佈署工作執行前發佈。\n\n### deployAfter\n\n在佈署工作執行成功後發佈。\n\n### exit\n\n在 Hexo 結束前發佈。\n\n### generateBefore\n\n在產生靜態檔案前發佈。\n\n### generateAfter\n\n在靜態檔案產生完成後發佈。\n\n### new\n\n在文章檔案建立完成後發佈。此事件會回傳資料參數。\n\n``` js\nhexo.on('new', function(post){\n  // \n});\n```\n\n資料 | 描述\n--- | ---\n`post.path` | 文章檔案的完整路徑\n`post.content` | 文章檔案的內容\n\n### processBefore\n\n在處理原始檔案前發佈。此事件會回傳一個路徑，代表箱子（Box）的根目錄。\n\n### processAfter\n\n在原始檔案處理完成後發佈。此事件會回傳一個路徑，代表箱子（Box）的根目錄。\n\n### ready\n\n在初始化完成後發佈。\n\n[EventEmitter]: http://nodejs.org/api/events.html",
				"html": "<p>Hexo 繼承了 <a href=\"http://nodejs.org/api/events.html\" target=\"_blank\" rel=\"noopener\">EventEmitter</a>，您可用 <code>on</code> 方法監聽 Hexo 所發佈的事件，亦可用 <code>emit</code> 方法對 Hexo 發佈事件，更詳細的說明請參閱 Node.js 的 API。</p>\n<h3 id=\"deployBefore\"><a href=\"#deployBefore\" class=\"headerlink\" title=\"deployBefore\"></a>deployBefore</h3><p>在佈署工作執行前發佈。</p>\n<h3 id=\"deployAfter\"><a href=\"#deployAfter\" class=\"headerlink\" title=\"deployAfter\"></a>deployAfter</h3><p>在佈署工作執行成功後發佈。</p>\n<h3 id=\"exit\"><a href=\"#exit\" class=\"headerlink\" title=\"exit\"></a>exit</h3><p>在 Hexo 結束前發佈。</p>\n<h3 id=\"generateBefore\"><a href=\"#generateBefore\" class=\"headerlink\" title=\"generateBefore\"></a>generateBefore</h3><p>在產生靜態檔案前發佈。</p>\n<h3 id=\"generateAfter\"><a href=\"#generateAfter\" class=\"headerlink\" title=\"generateAfter\"></a>generateAfter</h3><p>在靜態檔案產生完成後發佈。</p>\n<h3 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h3><p>在文章檔案建立完成後發佈。此事件會回傳資料參數。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.on(<span class=\"string\">'new'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// </span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>資料</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post.path</code></td>\n<td>文章檔案的完整路徑</td>\n</tr>\n<tr>\n<td><code>post.content</code></td>\n<td>文章檔案的內容</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"processBefore\"><a href=\"#processBefore\" class=\"headerlink\" title=\"processBefore\"></a>processBefore</h3><p>在處理原始檔案前發佈。此事件會回傳一個路徑，代表箱子（Box）的根目錄。</p>\n<h3 id=\"processAfter\"><a href=\"#processAfter\" class=\"headerlink\" title=\"processAfter\"></a>processAfter</h3><p>在原始檔案處理完成後發佈。此事件會回傳一個路徑，代表箱子（Box）的根目錄。</p>\n<h3 id=\"ready\"><a href=\"#ready\" class=\"headerlink\" title=\"ready\"></a>ready</h3><p>在初始化完成後發佈。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ae006vkoeoqmjxlqej",
				"title": "過濾器（Filter）",
				"markdown": "過濾器用於修改特定資料，Hexo 將資料依序傳給過濾器，而過濾器可以針對資料進行修改，這個概念是從 [WordPress](http://codex.wordpress.org/Plugin_API#Filters) 借來的。\n\n## 概要\n\n``` js\nhexo.extend.filter.register(type, function(){\n  // ...\n}, priority);\n```\n\n您可指定過濾器的優先度 `priority`，`priority` 值越低的過濾器會越先執行，預設的 `priority` 是 10。\n\n## 執行過濾器\n\n``` js\nhexo.extend.filter.exec(type, data, options);\nhexo.extend.filter.execSync(type, data, options);\n```\n\n選項 | 描述\n--- | ---\n`context` | Context\n`args` | 參數。必須為陣列。\n\n`data` 會作為第一個參數傳入每個過濾器，而您可在過濾器中透過回傳值改變下一個過濾器中的 `data`，如果什麼都沒回傳的話則會保持原本的 `data`。您還可使用 `args` 指定過濾器的其他參數。舉例來說：\n\n``` js\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'some data'\n  // arg1 === 'foo'\n  // arg2 === 'bar'\n\n  return 'something';\n});\n\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'something'\n});\n\nhexo.extend.filter.exec('test', 'some data', {\n  args: ['foo', 'bar']\n});\n```\n\n您也可使用以下方法來執行過濾器：\n\n``` js\nhexo.execFilter(type, data, options);\nhexo.execFilterSync(type, data, options);\n```\n\n## 移除過濾器\n\n``` js\nhexo.extend.filter.unregister(type, filter);\n```\n\n## 過濾器列表\n\n以下是 Hexo 所使用的過濾器。\n\n### before_post_render\n\n在文章開始渲染前執行。您可參考 [文章渲染](posts.html#渲染) 以瞭解執行順序。\n\n舉例來說，把標題轉為小寫：\n\n``` js\nhexo.extend.filter.register('before_post_render', function(data){\n  data.title = data.title.toLowerCase();\n  return data;\n});\n```\n\n### after_post_render\n\n在文章渲染完成後執行。您可參考 [文章渲染](posts.html#渲染) 以瞭解執行順序。\n\n舉例來說，把 `@username` 取代為 Twitter 的使用者連結。\n\n``` js\nhexo.extend.filter.register('after_post_render', function(data){\n  data.content = data.content.replace(/@(\\d+)/, '<a href=\"http://twitter.com/$1\">#$1</a>');\n  return data;\n});\n```\n\n### before_exit\n\n在 Hexo 即將結束時執行，也就是在 `hexo.exit` 被呼叫後執行。\n\n``` js\nhexo.extend.filter.register('before_exit', function(){\n  // ...\n});\n```\n\n### before_generate\n\n在產生器執行開始前執行。\n\n``` js\nhexo.extend.filter.register('before_generate', function(){\n  // ...\n});\n```\n\n### after_generate\n\n在產生器執行結束後執行。\n\n``` js\nhexo.extend.filter.register('after_generate', function(){\n  // ...\n});\n```\n\n### template_locals\n\n修改模板的 [區域變數](../docs/variables.html)。\n\n舉例來說，在模板的區域變數中新增目前的時間：\n\n``` js\nhexo.extend.filter.register('template_locals', function(locals){\n  locals.now = Date.now();\n  return locals;\n});\n```\n\n### after_init\n\n在 Hexo 初始化完成後執行，也就是在 `hexo.init` 執行完成後執行。\n\n``` js\nhexo.extend.filter.register('after_init', function(){\n  // ...\n});\n```\n\n### new_post_path\n\n用來決定新建文章的路徑，在建立文章時執行。\n\n``` js\nhexo.extend.filter.register('new_post_path', function(data, replace){\n  // ...\n});\n```\n\n### post_permalink\n\n用來決定文章的永久連結。\n\n``` js\nhexo.extend.filter.register('post_permalink', function(data){\n  // ...\n});\n```\n\n### after_render\n\n在渲染後執行，您可參考 [渲染](rendering.html#after_render_過濾器) 以瞭解更多資訊。\n\n### server_middleware\n\n新增伺服器的 Middleware。`app` 是一個 [Connect] 實例。\n\n舉例來說，在回應標頭中新增 `X-Powered-By: Hexo`。\n\n``` js\nhexo.extend.filter.register('server_middleware', function(app){\n  app.use(function(req, res, next){\n    res.setHeader('X-Powered-By', 'Hexo');\n    next();\n  });\n});\n```\n\n[Connect]: https://github.com/senchalabs/connect\n",
				"html": "<p>過濾器用於修改特定資料，Hexo 將資料依序傳給過濾器，而過濾器可以針對資料進行修改，這個概念是從 <a href=\"http://codex.wordpress.org/Plugin_API#Filters\" target=\"_blank\" rel=\"noopener\">WordPress</a> 借來的。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(type, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, priority);</span><br></pre></td></tr></table></figure>\n<p>您可指定過濾器的優先度 <code>priority</code>，<code>priority</code> 值越低的過濾器會越先執行，預設的 <code>priority</code> 是 10。</p>\n<h2 id=\"執行過濾器\"><a href=\"#執行過濾器\" class=\"headerlink\" title=\"執行過濾器\"></a>執行過濾器</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.exec(type, data, options);</span><br><span class=\"line\">hexo.extend.filter.execSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>context</code></td>\n<td>Context</td>\n</tr>\n<tr>\n<td><code>args</code></td>\n<td>參數。必須為陣列。</td>\n</tr>\n</tbody>\n</table>\n<p><code>data</code> 會作為第一個參數傳入每個過濾器，而您可在過濾器中透過回傳值改變下一個過濾器中的 <code>data</code>，如果什麼都沒回傳的話則會保持原本的 <code>data</code>。您還可使用 <code>args</code> 指定過濾器的其他參數。舉例來說：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'some data'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg1 === 'foo'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg2 === 'bar'</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'something'</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'something'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.exec(<span class=\"string\">'test'</span>, <span class=\"string\">'some data'</span>, &#123;</span><br><span class=\"line\">  args: [<span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span>]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>您也可使用以下方法來執行過濾器：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.execFilter(type, data, options);</span><br><span class=\"line\">hexo.execFilterSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<h2 id=\"移除過濾器\"><a href=\"#移除過濾器\" class=\"headerlink\" title=\"移除過濾器\"></a>移除過濾器</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.unregister(type, filter);</span><br></pre></td></tr></table></figure>\n<h2 id=\"過濾器列表\"><a href=\"#過濾器列表\" class=\"headerlink\" title=\"過濾器列表\"></a>過濾器列表</h2><p>以下是 Hexo 所使用的過濾器。</p>\n<h3 id=\"before-post-render\"><a href=\"#before-post-render\" class=\"headerlink\" title=\"before_post_render\"></a>before_post_render</h3><p>在文章開始渲染前執行。您可參考 <a href=\"posts.html#渲染\">文章渲染</a> 以瞭解執行順序。</p>\n<p>舉例來說，把標題轉為小寫：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.title = data.title.toLowerCase();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-post-render\"><a href=\"#after-post-render\" class=\"headerlink\" title=\"after_post_render\"></a>after_post_render</h3><p>在文章渲染完成後執行。您可參考 <a href=\"posts.html#渲染\">文章渲染</a> 以瞭解執行順序。</p>\n<p>舉例來說，把 <code>@username</code> 取代為 Twitter 的使用者連結。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.content = data.content.replace(<span class=\"regexp\">/@(\\d+)/</span>, <span class=\"string\">'&lt;a href=\"http://twitter.com/$1\"&gt;#$1&lt;/a&gt;'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-exit\"><a href=\"#before-exit\" class=\"headerlink\" title=\"before_exit\"></a>before_exit</h3><p>在 Hexo 即將結束時執行，也就是在 <code>hexo.exit</code> 被呼叫後執行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_exit'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-generate\"><a href=\"#before-generate\" class=\"headerlink\" title=\"before_generate\"></a>before_generate</h3><p>在產生器執行開始前執行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-generate\"><a href=\"#after-generate\" class=\"headerlink\" title=\"after_generate\"></a>after_generate</h3><p>在產生器執行結束後執行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"template-locals\"><a href=\"#template-locals\" class=\"headerlink\" title=\"template_locals\"></a>template_locals</h3><p>修改模板的 <a href=\"../docs/variables.html\">區域變數</a>。</p>\n<p>舉例來說，在模板的區域變數中新增目前的時間：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'template_locals'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  locals.now = <span class=\"built_in\">Date</span>.now();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-init\"><a href=\"#after-init\" class=\"headerlink\" title=\"after_init\"></a>after_init</h3><p>在 Hexo 初始化完成後執行，也就是在 <code>hexo.init</code> 執行完成後執行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_init'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"new-post-path\"><a href=\"#new-post-path\" class=\"headerlink\" title=\"new_post_path\"></a>new_post_path</h3><p>用來決定新建文章的路徑，在建立文章時執行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'new_post_path'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, replace</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"post-permalink\"><a href=\"#post-permalink\" class=\"headerlink\" title=\"post_permalink\"></a>post_permalink</h3><p>用來決定文章的永久連結。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'post_permalink'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-render\"><a href=\"#after-render\" class=\"headerlink\" title=\"after_render\"></a>after_render</h3><p>在渲染後執行，您可參考 <a href=\"rendering.html#after_render_過濾器\">渲染</a> 以瞭解更多資訊。</p>\n<h3 id=\"server-middleware\"><a href=\"#server-middleware\" class=\"headerlink\" title=\"server_middleware\"></a>server_middleware</h3><p>新增伺服器的 Middleware。<code>app</code> 是一個 <a href=\"https://github.com/senchalabs/connect\" target=\"_blank\" rel=\"noopener\">Connect</a> 實例。</p>\n<p>舉例來說，在回應標頭中新增 <code>X-Powered-By: Hexo</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'server_middleware'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>)</span>&#123;</span><br><span class=\"line\">  app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;</span><br><span class=\"line\">    res.setHeader(<span class=\"string\">'X-Powered-By'</span>, <span class=\"string\">'Hexo'</span>);</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6af006wkoeop2ehnb63",
				"title": "產生器（Generator）",
				"markdown": "產生器根據處理後的原始檔案建立路由。\n\n## 概要\n\n``` js\nhexo.extend.generator.register(name, function(locals){\n  // ...\n});\n```\n\n在函數中會傳入一個 `locals` 參數，等同於 [網站變數](../docs/variables.html#網站變數)，請盡量利用此參數取得網站資料，避免直接存取資料庫。\n\n## 更新路由\n\n``` js\nhexo.extend.generator.register('test', function(locals){\n  // Object\n  return {\n    path: 'foo',\n    data: 'foo'\n  };\n  \n  // Array\n  return [\n    {path: 'foo', data: 'foo'},\n    {path: 'bar', data: 'bar'}\n  ];\n});\n```\n\n屬性 | 描述\n--- | ---\n`path` | 路徑。不可包含開頭的 `/`。\n`data` | 資料\n`layout` | 佈局。指定用於渲染的模板，可為字串或陣列，如果省略此屬性的話則會直接輸出 `data`。\n\n在原始檔案更新時，Hexo 會執行所有產生器並重建路由，**請直接回傳資料，不要直接操作路由**。\n\n## 範例\n\n### 彙整頁面\n\n在 `archives/index.html` 建立一彙整頁面，把所有文章當作資料傳入模板內，這個資料也就等同於模板中的 `page` 變數。\n\n然後，設定 `layout` 屬性好讓 Hexo 使用主題模板來渲染，在此例中同時設定了兩個佈局，當 `archive` 佈局不存在時，會繼續嘗試 `index` 佈局。\n\n``` js\nhexo.extend.generator.register('archive', function(locals){\n  return {\n    path: 'archives/index.html',\n    data: locals.posts,\n    layout: ['archive', 'index']\n  }\n});\n```\n\n### 有分頁的彙整頁面\n\n您可透過 [hexo-pagination] 這個方便的官方工具程式來輕鬆建立分頁彙整。\n\n``` js\nvar pagination = require('hexo-pagination');\n\nhexo.extend.generator.register('archive', function(locals){\n  return pagination('archives/index.html', locals.posts, {\n    perPage: 10,\n    layout: ['archive', 'index'],\n    data: {}\n  });\n});\n```\n\n### 產生所有文章\n\n遍歷 `locals.posts` 中的所有文章並產生所有文章的路由。\n\n``` js\nhexo.extend.generator.register('post', function(locals){\n  return locals.posts.map(function(post){\n    return {\n      path: post.path,\n      data: post,\n      layout: 'post'\n    };\n  });\n});\n```\n\n### 複製檔案\n\n這次不直接在 `data` 中傳回資料而是傳回一個函數，如此一來這個路由唯有在使用時才會建立 `fs.ReadStream`。\n\n``` js\nvar fs = require('hexo-fs');\n\nhexo.extend.generator.register('asset', function(locals){\n  return {\n    path: 'file.txt',\n    data: function(){\n      return fs.createReadStream('path/to/file.txt')\n    }\n  };\n});\n```\n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n",
				"html": "<p>產生器根據處理後的原始檔案建立路由。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>在函數中會傳入一個 <code>locals</code> 參數，等同於 <a href=\"../docs/variables.html#網站變數\">網站變數</a>，請盡量利用此參數取得網站資料，避免直接存取資料庫。</p>\n<h2 id=\"更新路由\"><a href=\"#更新路由\" class=\"headerlink\" title=\"更新路由\"></a>更新路由</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Object</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'foo'</span>,</span><br><span class=\"line\">    data: <span class=\"string\">'foo'</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// Array</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> [</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'foo'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'foo'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'bar'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'bar'</span>&#125;</span><br><span class=\"line\">  ];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>屬性</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>path</code></td>\n<td>路徑。不可包含開頭的 <code>/</code>。</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>資料</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>佈局。指定用於渲染的模板，可為字串或陣列，如果省略此屬性的話則會直接輸出 <code>data</code>。</td>\n</tr>\n</tbody>\n</table>\n<p>在原始檔案更新時，Hexo 會執行所有產生器並重建路由，<strong>請直接回傳資料，不要直接操作路由</strong>。</p>\n<h2 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h2><h3 id=\"彙整頁面\"><a href=\"#彙整頁面\" class=\"headerlink\" title=\"彙整頁面\"></a>彙整頁面</h3><p>在 <code>archives/index.html</code> 建立一彙整頁面，把所有文章當作資料傳入模板內，這個資料也就等同於模板中的 <code>page</code> 變數。</p>\n<p>然後，設定 <code>layout</code> 屬性好讓 Hexo 使用主題模板來渲染，在此例中同時設定了兩個佈局，當 <code>archive</code> 佈局不存在時，會繼續嘗試 <code>index</code> 佈局。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'archives/index.html'</span>,</span><br><span class=\"line\">    data: locals.posts,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"有分頁的彙整頁面\"><a href=\"#有分頁的彙整頁面\" class=\"headerlink\" title=\"有分頁的彙整頁面\"></a>有分頁的彙整頁面</h3><p>您可透過 <a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a> 這個方便的官方工具程式來輕鬆建立分頁彙整。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pagination(<span class=\"string\">'archives/index.html'</span>, locals.posts, &#123;</span><br><span class=\"line\">    perPage: <span class=\"number\">10</span>,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>],</span><br><span class=\"line\">    data: &#123;&#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"產生所有文章\"><a href=\"#產生所有文章\" class=\"headerlink\" title=\"產生所有文章\"></a>產生所有文章</h3><p>遍歷 <code>locals.posts</code> 中的所有文章並產生所有文章的路由。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'post'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals.posts.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      path: post.path,</span><br><span class=\"line\">      data: post,</span><br><span class=\"line\">      layout: <span class=\"string\">'post'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"複製檔案\"><a href=\"#複製檔案\" class=\"headerlink\" title=\"複製檔案\"></a>複製檔案</h3><p>這次不直接在 <code>data</code> 中傳回資料而是傳回一個函數，如此一來這個路由唯有在使用時才會建立 <code>fs.ReadStream</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'asset'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'file.txt'</span>,</span><br><span class=\"line\">    data: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> fs.createReadStream(<span class=\"string\">'path/to/file.txt'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6af006xkoeo4w3w0dtf",
				"title": "API",
				"markdown": "本文件提供您更豐富的 API 資訊，使您更容易修改 Hexo 原始碼或撰寫外掛。如果您只是想要查詢關於 Hexo 的基本使用方法，請參閱 [文件](../docs/)。\n\n在開始之前，請注意本文件僅適用於 Hexo 3 及以上版本。\n\n## 初始化\n\n首先，我們必須建立一個 Hexo 實例（instance），第一個參數是網站的根目錄，也就是 `base_dir`，而第二個參數則是初始化的選項。接著執行 `init` 方法後，Hexo 會載入外掛及配置檔案。\n\n``` js\nvar Hexo = require('hexo');\nvar hexo = new Hexo(process.cwd(), {});\n\nhexo.init().then(function(){\n  // ...\n});\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`debug` | 開啟除錯模式。在終端機中顯示除錯訊息，並在根目錄中儲存 `debug.log` 記錄檔。| `false`\n`safe` | 開啟安全模式。不要載入任何外掛。| `false`\n`silent` | 開啟安靜模式。不要在終端機中顯示任何訊息。| `false`\n`config` | 指定配置檔案的路徑。| `_config.yml`\n\n## 載入檔案\n\nHexo 提供了兩種方法來載入檔案：`load`, `watch`，前者用於載入 `source` 資料夾內的所有檔案及主題資料；而後者除了執行 `load` 以外，還會繼續監看檔案變動。\n\n這兩個方法實際上所做的，就是載入檔案列表，並把檔案傳給相對應的處理器（Processor），當檔案全部處理完畢後，就執行產生器（Generator）來建立路由。\n\n``` js\nhexo.load().then(function(){\n  // ...\n});\n\nhexo.watch().then(function(){\n  // 之後可呼叫 hexo.unwatch() 停止檔案監看\n});\n```\n\n## 執行指令\n\n您可透過 `call` 方法來呼叫控制台（Console），第一個參數是控制台的名稱，而第二個參數是選項，根據不同控制台而有所不同。\n\n``` js\nhexo.call('generate', {}).then(function(){\n  // ...\n});\n```\n\n## 結束\n\n當指令完畢後，請執行 `exit` 方法讓 Hexo 完成結束前的準備工作（如儲存資料庫）。\n\n``` js\nhexo.call('generate').then(function(){\n  return hexo.exit();\n}).catch(function(err){\n  return hexo.exit(err);\n});\n```",
				"html": "<p>本文件提供您更豐富的 API 資訊，使您更容易修改 Hexo 原始碼或撰寫外掛。如果您只是想要查詢關於 Hexo 的基本使用方法，請參閱 <a href=\"../docs/\">文件</a>。</p>\n<p>在開始之前，請注意本文件僅適用於 Hexo 3 及以上版本。</p>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><p>首先，我們必須建立一個 Hexo 實例（instance），第一個參數是網站的根目錄，也就是 <code>base_dir</code>，而第二個參數則是初始化的選項。接著執行 <code>init</code> 方法後，Hexo 會載入外掛及配置檔案。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Hexo = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> hexo = <span class=\"keyword\">new</span> Hexo(process.cwd(), &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.init().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>debug</code></td>\n<td>開啟除錯模式。在終端機中顯示除錯訊息，並在根目錄中儲存 <code>debug.log</code> 記錄檔。</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>safe</code></td>\n<td>開啟安全模式。不要載入任何外掛。</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>silent</code></td>\n<td>開啟安靜模式。不要在終端機中顯示任何訊息。</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>指定配置檔案的路徑。</td>\n<td><code>_config.yml</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"載入檔案\"><a href=\"#載入檔案\" class=\"headerlink\" title=\"載入檔案\"></a>載入檔案</h2><p>Hexo 提供了兩種方法來載入檔案：<code>load</code>, <code>watch</code>，前者用於載入 <code>source</code> 資料夾內的所有檔案及主題資料；而後者除了執行 <code>load</code> 以外，還會繼續監看檔案變動。</p>\n<p>這兩個方法實際上所做的，就是載入檔案列表，並把檔案傳給相對應的處理器（Processor），當檔案全部處理完畢後，就執行產生器（Generator）來建立路由。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.load().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 之後可呼叫 hexo.unwatch() 停止檔案監看</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"執行指令\"><a href=\"#執行指令\" class=\"headerlink\" title=\"執行指令\"></a>執行指令</h2><p>您可透過 <code>call</code> 方法來呼叫控制台（Console），第一個參數是控制台的名稱，而第二個參數是選項，根據不同控制台而有所不同。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>, &#123;&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"結束\"><a href=\"#結束\" class=\"headerlink\" title=\"結束\"></a>結束</h2><p>當指令完畢後，請執行 <code>exit</code> 方法讓 Hexo 完成結束前的準備工作（如儲存資料庫）。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit();</span><br><span class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit(err);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6af006ykoeoa84w9bai",
				"title": "輔助函數（Helper）",
				"markdown": "輔助函數幫助您在模板中快速插入內容，建議您把複雜的程式碼放在輔助函數而非模板中。\n\n## 概要\n\n``` js\nhexo.extend.helper.register(name, function(){\n  // ...\n});\n```\n\n## 範例\n\n``` js\nhexo.extend.helper.register('js', function(path){\n  return '<script type=\"text/javascript\" src=\"' + path + '\"></script>';\n});\n```\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"script.js\"></script>\n```",
				"html": "<p>輔助函數幫助您在模板中快速插入內容，建議您把複雜的程式碼放在輔助函數而非模板中。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(<span class=\"string\">'js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script type=\"text/javascript\" src=\"'</span> + path + <span class=\"string\">'\"&gt;&lt;/script&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6af006zkoeoxscw7q9g",
				"title": "區域變數",
				"markdown": "區域變數用於模版渲染，也就是模版中的 `site` 變數。\n\n## 預設變數\n\n變數 | 描述\n--- | ---\n`posts` | 所有文章\n`pages` | 所有分頁\n`categories` | 所有分類\n`tags` | 所有標籤\n\n## 取得變數\n\n``` js\nhexo.locals.get('posts')\n```\n\n## 設定變數\n\n``` js\nhexo.locals.set('posts', function(){\n  return ...\n});\n```\n\n## 移除變數\n\n``` js\nhexo.locals.remove('posts');\n```\n\n## 取得所有變數\n\n``` js\nhexo.locals.toObject();\n```\n\n## 清除快取\n\n``` js\nhexo.locals.invalidate();\n```",
				"html": "<p>區域變數用於模版渲染，也就是模版中的 <code>site</code> 變數。</p>\n<h2 id=\"預設變數\"><a href=\"#預設變數\" class=\"headerlink\" title=\"預設變數\"></a>預設變數</h2><table>\n<thead>\n<tr>\n<th>變數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>posts</code></td>\n<td>所有文章</td>\n</tr>\n<tr>\n<td><code>pages</code></td>\n<td>所有分頁</td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>所有分類</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>所有標籤</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"取得變數\"><a href=\"#取得變數\" class=\"headerlink\" title=\"取得變數\"></a>取得變數</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.get(<span class=\"string\">'posts'</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"設定變數\"><a href=\"#設定變數\" class=\"headerlink\" title=\"設定變數\"></a>設定變數</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.set(<span class=\"string\">'posts'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"移除變數\"><a href=\"#移除變數\" class=\"headerlink\" title=\"移除變數\"></a>移除變數</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.remove(<span class=\"string\">'posts'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"取得所有變數\"><a href=\"#取得所有變數\" class=\"headerlink\" title=\"取得所有變數\"></a>取得所有變數</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.toObject();</span><br></pre></td></tr></table></figure>\n<h2 id=\"清除快取\"><a href=\"#清除快取\" class=\"headerlink\" title=\"清除快取\"></a>清除快取</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.invalidate();</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ag0070koeohaqzurs3",
				"title": "文章",
				"markdown": "## 建立文章\n\n``` js\nhexo.post.create(data, replace);\n```\n\n參數 | 描述\n--- | ---\n`data` | 資料\n`replace` | 取代現有檔案\n\n您可在資料中指定文章的屬性，除了以下的屬性之外，其他屬性也會被加到 front-matter 中。\n\n資料 | 描述\n--- | ---\n`title` | 標題\n`slug` | 網址\n`layout` | 佈局。預設為 `default_layout` 設定。\n`path` | 路徑。預設會根據 `new_post_path` 設定建構文章路徑。\n`date` | 日期。預設為目前時間。\n\n## 發佈草稿\n\n``` js\nhexo.post.publish(data, replace);\n```\n\n參數 | 描述\n--- | ---\n`data` | 資料\n`replace` | 取代現有檔案\n\n您可在資料中指定文章的屬性，除了以下的屬性之外，其他屬性也會被加到 front-matter 中。\n\n資料 | 描述\n--- | ---\n`slug` | 檔案名稱（必須）\n`layout` | 佈局。預設為 `default_layout` 設定。\n\n## 渲染\n\n``` js\nhexo.post.render(source, data);\n```\n\n參數 | 描述\n--- | ---\n`source` | 檔案的完整路徑（可忽略）\n`data` | 資料\n\n資料中必須包含 `content` 屬性，如果沒有的話，會試著讀取原始檔案。此函數的執行順序為：\n\n- 執行 `before_post_render` 過濾器\n- 使用 Markdown 或其他渲染器渲染（根據副檔名而定）\n- 使用 [Nunjucks] 渲染\n- 執行 `after_post_render` 過濾器\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/",
				"html": "<h2 id=\"建立文章\"><a href=\"#建立文章\" class=\"headerlink\" title=\"建立文章\"></a>建立文章</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.create(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>參數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>資料</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>取代現有檔案</td>\n</tr>\n</tbody>\n</table>\n<p>您可在資料中指定文章的屬性，除了以下的屬性之外，其他屬性也會被加到 front-matter 中。</p>\n<table>\n<thead>\n<tr>\n<th>資料</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>標題</td>\n</tr>\n<tr>\n<td><code>slug</code></td>\n<td>網址</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>佈局。預設為 <code>default_layout</code> 設定。</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>路徑。預設會根據 <code>new_post_path</code> 設定建構文章路徑。</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>日期。預設為目前時間。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"發佈草稿\"><a href=\"#發佈草稿\" class=\"headerlink\" title=\"發佈草稿\"></a>發佈草稿</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.publish(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>參數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>資料</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>取代現有檔案</td>\n</tr>\n</tbody>\n</table>\n<p>您可在資料中指定文章的屬性，除了以下的屬性之外，其他屬性也會被加到 front-matter 中。</p>\n<table>\n<thead>\n<tr>\n<th>資料</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>slug</code></td>\n<td>檔案名稱（必須）</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>佈局。預設為 <code>default_layout</code> 設定。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"渲染\"><a href=\"#渲染\" class=\"headerlink\" title=\"渲染\"></a>渲染</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.render(source, data);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>參數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>檔案的完整路徑（可忽略）</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>資料</td>\n</tr>\n</tbody>\n</table>\n<p>資料中必須包含 <code>content</code> 屬性，如果沒有的話，會試著讀取原始檔案。此函數的執行順序為：</p>\n<ul>\n<li>執行 <code>before_post_render</code> 過濾器</li>\n<li>使用 Markdown 或其他渲染器渲染（根據副檔名而定）</li>\n<li>使用 <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> 渲染</li>\n<li>執行 <code>after_post_render</code> 過濾器</li>\n</ul>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ag0071koeoohhjbfei",
				"title": "處理器（Processor）",
				"markdown": "處理器用於處理 `source` 資料夾內的原始檔案。\n\n## 概要\n\n``` js\nhexo.extend.processor.register(rule, function(file){\n  // ...\n});\n```\n\n完整說明請參照 [箱子](box.html)。",
				"html": "<p>處理器用於處理 <code>source</code> 資料夾內的原始檔案。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.processor.register(rule, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>完整說明請參照 <a href=\"box.html\">箱子</a>。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ag0072koeox04dkrdn",
				"title": "轉移器（Migrator）",
				"markdown": "轉移器幫助使用者從其他系統轉移到 Hexo。\n\n## 概要\n\n``` js\nhexo.extend.migrator.register(name, function(args){\n  // ...\n});\n```\n\n在函數中會傳入 `args` 參數，此參數包含了使用者在終端機所傳入的參數。",
				"html": "<p>轉移器幫助使用者從其他系統轉移到 Hexo。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.migrator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>在函數中會傳入 <code>args</code> 參數，此參數包含了使用者在終端機所傳入的參數。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ag0073koeo3uw1dj8g",
				"title": "渲染",
				"markdown": "在 Hexo 中，有兩個方法可用於渲染檔案或字串，分別是非同步的 `hexo.render.render` 和同步的 `hexo.render.renderSync`，這兩個方法的使用方式十分類似，因此以下僅舉非同步的 `hexo.render.render` 為例。\n\n## 渲染字串\n\n在渲染字串時，您必須指定 `engine`，如此一來 Hexo 才知道該選擇哪個渲染引擎來渲染。\n\n``` js\nhexo.render.render({text: 'example', engine: 'swig'}).then(function(result){\n  // ...\n});\n```\n\n## 渲染檔案\n\n在渲染檔案時，您無須指定 `engine`，Hexo 會自動從副檔名猜測所要使用的渲染引擎，當然您也可使用 `engine` 指定。\n\n``` js\nhexo.render.render({path: 'path/to/file.swig'}).then(function(result){\n  // ...\n});\n```\n\n## 渲染選項\n\n在渲染時，您可在第二個參數中代入選項。\n\n``` js\nhexo.render.render({text: ''}, {foo: 'foo'}).then(function(result){\n  // ...\n});\n```\n\n## after_render 過濾器\n\n在渲染完成後，Hexo 會自動執行相對應的 `after_render` 過濾器，舉例來說，我們可透過這個功能實作 JavaScript 壓縮。\n\n``` js\nvar UglifyJS = require('uglify-js');\n\nhexo.extend.filter.register('after_render:js', function(str, data){\n  var result = UglifyJS.minify(str);\n  return result.code;\n});\n```\n\n## 檢查檔案是否可被渲染\n\n您可透過 `isRenderable` 或 `isRenderableSync` 兩個方法檢查檔案路徑是否可被渲染，只有在相對應的渲染器（renderer）已註冊的情況下才會返回 true。\n\n``` js\nhexo.render.isRenderable('layout.swig') // true\nhexo.render.isRenderable('image.png') // false\n```\n\n## 取得檔案的輸出副檔名\n\n您可透過 `getOutput` 方法取得檔案路徑輸出後的副檔名，如果檔案無法渲染，則會返回空字串。\n\n``` js\nhexo.render.getOutput('layout.swig') // html\nhexo.render.getOutput('image.png') // '''\n```",
				"html": "<p>在 Hexo 中，有兩個方法可用於渲染檔案或字串，分別是非同步的 <code>hexo.render.render</code> 和同步的 <code>hexo.render.renderSync</code>，這兩個方法的使用方式十分類似，因此以下僅舉非同步的 <code>hexo.render.render</code> 為例。</p>\n<h2 id=\"渲染字串\"><a href=\"#渲染字串\" class=\"headerlink\" title=\"渲染字串\"></a>渲染字串</h2><p>在渲染字串時，您必須指定 <code>engine</code>，如此一來 Hexo 才知道該選擇哪個渲染引擎來渲染。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">'example'</span>, <span class=\"attr\">engine</span>: <span class=\"string\">'swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"渲染檔案\"><a href=\"#渲染檔案\" class=\"headerlink\" title=\"渲染檔案\"></a>渲染檔案</h2><p>在渲染檔案時，您無須指定 <code>engine</code>，Hexo 會自動從副檔名猜測所要使用的渲染引擎，當然您也可使用 <code>engine</code> 指定。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">path</span>: <span class=\"string\">'path/to/file.swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"渲染選項\"><a href=\"#渲染選項\" class=\"headerlink\" title=\"渲染選項\"></a>渲染選項</h2><p>在渲染時，您可在第二個參數中代入選項。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">''</span>&#125;, &#123;<span class=\"attr\">foo</span>: <span class=\"string\">'foo'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"after-render-過濾器\"><a href=\"#after-render-過濾器\" class=\"headerlink\" title=\"after_render 過濾器\"></a>after_render 過濾器</h2><p>在渲染完成後，Hexo 會自動執行相對應的 <code>after_render</code> 過濾器，舉例來說，我們可透過這個功能實作 JavaScript 壓縮。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> UglifyJS = <span class=\"built_in\">require</span>(<span class=\"string\">'uglify-js'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_render:js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str, data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = UglifyJS.minify(str);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result.code;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"檢查檔案是否可被渲染\"><a href=\"#檢查檔案是否可被渲染\" class=\"headerlink\" title=\"檢查檔案是否可被渲染\"></a>檢查檔案是否可被渲染</h2><p>您可透過 <code>isRenderable</code> 或 <code>isRenderableSync</code> 兩個方法檢查檔案路徑是否可被渲染，只有在相對應的渲染器（renderer）已註冊的情況下才會返回 true。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"取得檔案的輸出副檔名\"><a href=\"#取得檔案的輸出副檔名\" class=\"headerlink\" title=\"取得檔案的輸出副檔名\"></a>取得檔案的輸出副檔名</h2><p>您可透過 <code>getOutput</code> 方法取得檔案路徑輸出後的副檔名，如果檔案無法渲染，則會返回空字串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// html</span></span><br><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// '''</span></span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ah0074koeoftiw39q6",
				"title": "路由",
				"markdown": "路由儲存了網站中所用到的所有路徑。\n\n## 取得路徑\n\n`get` 方法會傳回一個 [Stream]，例如把該路徑的資料儲存到某個指定位置。\n\n``` js\nvar data = hexo.route.get('index.html');\nvar dest = fs.createWriteStream('somewhere');\n\ndata.pipe(dest);\n```\n\n## 設定路徑\n\n您可在 `set` 方法中使用字串、[Buffer] 或函數，如下：\n\n``` js\n// String\nhexo.route.set('index.html', 'index')\n\n// Buffer\nhexo.route.set('index.html', new Buffer('index'));\n\n// Function (Promise)\nhexo.route.set('index.html', function(){\n  return new Promise(function(resolve, reject){\n    resolve('index');\n  });\n});\n\n// Function (Callback)\nhexo.route.set('index.html', function(callback){\n  callback(null, 'index');\n});\n```\n\n您還可設定該路徑是否更新，這樣在生成檔案時便能忽略未更動的檔案，加快生成時間。\n\n``` js\nhexo.route.set('index.html', {\n    data: 'index',\n    modified: false\n});\n\n// hexo.route.isModified('index.html') => false\n```\n\n## 移除路徑\n\n``` js\nhexo.route.remove('index.html');\n```\n\n## 取得路由表\n\n``` js\nhexo.route.list();\n```\n\n## 格式化路徑\n\n`format` 方法可將字串轉為合法的路徑。\n\n``` js\nhexo.route.format('archives/');\n// archives/index.html\n```\n\n[Stream]: http://nodejs.org/api/stream.html\n[Buffer]: http://nodejs.org/api/buffer.html",
				"html": "<p>路由儲存了網站中所用到的所有路徑。</p>\n<h2 id=\"取得路徑\"><a href=\"#取得路徑\" class=\"headerlink\" title=\"取得路徑\"></a>取得路徑</h2><p><code>get</code> 方法會傳回一個 <a href=\"http://nodejs.org/api/stream.html\" target=\"_blank\" rel=\"noopener\">Stream</a>，例如把該路徑的資料儲存到某個指定位置。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = hexo.route.get(<span class=\"string\">'index.html'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dest = fs.createWriteStream(<span class=\"string\">'somewhere'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">data.pipe(dest);</span><br></pre></td></tr></table></figure>\n<h2 id=\"設定路徑\"><a href=\"#設定路徑\" class=\"headerlink\" title=\"設定路徑\"></a>設定路徑</h2><p>您可在 <code>set</code> 方法中使用字串、<a href=\"http://nodejs.org/api/buffer.html\" target=\"_blank\" rel=\"noopener\">Buffer</a> 或函數，如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// String</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"string\">'index'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Buffer</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"keyword\">new</span> Buffer(<span class=\"string\">'index'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Function (Promise)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'index'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Function (Callback)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">callback</span>)</span>&#123;</span><br><span class=\"line\">  callback(<span class=\"literal\">null</span>, <span class=\"string\">'index'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>您還可設定該路徑是否更新，這樣在生成檔案時便能忽略未更動的檔案，加快生成時間。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, &#123;</span><br><span class=\"line\">    data: <span class=\"string\">'index'</span>,</span><br><span class=\"line\">    modified: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// hexo.route.isModified('index.html') =&gt; false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"移除路徑\"><a href=\"#移除路徑\" class=\"headerlink\" title=\"移除路徑\"></a>移除路徑</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.remove(<span class=\"string\">'index.html'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"取得路由表\"><a href=\"#取得路由表\" class=\"headerlink\" title=\"取得路由表\"></a>取得路由表</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.list();</span><br></pre></td></tr></table></figure>\n<h2 id=\"格式化路徑\"><a href=\"#格式化路徑\" class=\"headerlink\" title=\"格式化路徑\"></a>格式化路徑</h2><p><code>format</code> 方法可將字串轉為合法的路徑。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.format(<span class=\"string\">'archives/'</span>);</span><br><span class=\"line\"><span class=\"comment\">// archives/index.html</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ah0075koeofs6xvuxz",
				"title": "鷹架（Scaffold）",
				"markdown": "## 取得鷹架\n\n``` js\nhexo.scaffold.get(name);\n```\n\n## 設定鷹架\n\n``` js\nhexo.scaffold.set(name, content);\n```\n\n## 移除鷹架\n\n``` js\nhexo.scaffold.remove(name);\n```",
				"html": "<h2 id=\"取得鷹架\"><a href=\"#取得鷹架\" class=\"headerlink\" title=\"取得鷹架\"></a>取得鷹架</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.get(name);</span><br></pre></td></tr></table></figure>\n<h2 id=\"設定鷹架\"><a href=\"#設定鷹架\" class=\"headerlink\" title=\"設定鷹架\"></a>設定鷹架</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.set(name, content);</span><br></pre></td></tr></table></figure>\n<h2 id=\"移除鷹架\"><a href=\"#移除鷹架\" class=\"headerlink\" title=\"移除鷹架\"></a>移除鷹架</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.remove(name);</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ah0076koeoh7j1xmjh",
				"title": "渲染引擎（Renderer）",
				"markdown": "渲染引擎用於渲染內容。\n\n## 概要\n\n``` js\nhexo.extend.renderer.register(name, output, function(data, options){\n  // ...\n}, sync);\n```\n\n參數 | 描述\n--- | ---\n`name` | 輸入的副檔名（小寫，不含開頭的 `.`）\n`output` | 輸出的副檔名（小寫，不含開頭的 `.`）\n`sync` | 同步模式\n\n渲染函數中會傳入兩個參數：\n\n參數 | 描述\n--- | ---\n`data` | 包含兩個屬性：檔案路徑 `path` 和檔案內容 `text`。`path` 不一定存在。\n`option` | 選項\n\n## 範例\n\n### 非同步模式\n\n``` js\nvar stylus = require('stylus');\n\n// Callback\nhexo.extend.renderer.register('styl', 'css', function(data, options, callback){\n  stylus(data.text).set('filename', data.path).render(callback);\n});\n\n// Promise\nhexo.extend.renderer.register('styl', 'css', function(data, options){\n  return new Promise(function(resolve, reject){\n    resolve('test');\n  });\n});\n```\n\n### 同步模式\n\n``` js\nvar ejs = require('ejs');\n\nhexo.extend.renderer.register('ejs', 'html', function(data, options){\n  options.filename = data.path;\n  return ejs.render(data.text, options);\n}, true);\n```",
				"html": "<p>渲染引擎用於渲染內容。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.renderer.register(name, output, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, sync);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>參數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>輸入的副檔名（小寫，不含開頭的 <code>.</code>）</td>\n</tr>\n<tr>\n<td><code>output</code></td>\n<td>輸出的副檔名（小寫，不含開頭的 <code>.</code>）</td>\n</tr>\n<tr>\n<td><code>sync</code></td>\n<td>同步模式</td>\n</tr>\n</tbody>\n</table>\n<p>渲染函數中會傳入兩個參數：</p>\n<table>\n<thead>\n<tr>\n<th>參數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>包含兩個屬性：檔案路徑 <code>path</code> 和檔案內容 <code>text</code>。<code>path</code> 不一定存在。</td>\n</tr>\n<tr>\n<td><code>option</code></td>\n<td>選項</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h2><h3 id=\"非同步模式\"><a href=\"#非同步模式\" class=\"headerlink\" title=\"非同步模式\"></a>非同步模式</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> stylus = <span class=\"built_in\">require</span>(<span class=\"string\">'stylus'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Callback</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options, callback</span>)</span>&#123;</span><br><span class=\"line\">  stylus(data.text).set(<span class=\"string\">'filename'</span>, data.path).render(callback);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Promise</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'test'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"同步模式\"><a href=\"#同步模式\" class=\"headerlink\" title=\"同步模式\"></a>同步模式</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'ejs'</span>, <span class=\"string\">'html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  options.filename = data.path;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, options);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ah0077koeo7a6j86wq",
				"title": "標籤外掛（Tag）",
				"markdown": "標籤外掛幫助使用者在文章中快速插入內容。\n\n## 概要\n\n``` js\nhexo.extend.tag.register(name, function(args, content){\n  // ...\n}, options);\n```\n\n標籤函數會傳入兩個參數：`args` 和 `content`，前者代表使用者在使用標籤外掛時傳入的參數，而後者則是標籤外掛所包覆的內容。\n\n自 Hexo 3 開始，因為新增了非同步渲染功能，而改用 [Nunjucks] 作為渲染引擎，其行為可能會與過去使用的 [Swig] 有些許差異。\n\n## 選項\n\n### ends\n\n使用結尾標籤，此選項預設為 `false`。\n\n### async\n\n開啟非同步模式，此選項預設為 `false`。\n\n## 範例\n\n### 沒有結尾標籤\n\n插入 Youtube 影片。\n\n``` js\nhexo.extend.tag.register('youtube', function(args){\n  var id = args[0];\n  return '<div class=\"video-container\"><iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/' + id + '\" frameborder=\"0\" allowfullscreen></iframe></div>';\n});\n```\n\n### 有結尾標籤\n\n插入 pull quote。\n\n``` js\nhexo.extend.tag.register('pullquote', function(args, content){\n  var className =  args.join(' ');\n  return '<blockquote class=\"pullquote' + className + '\">' + content + '</blockquote>';\n}, {ends: true});\n```\n\n### 非同步渲染\n\n插入檔案。\n\n``` js\nvar fs = require('hexo-fs');\nvar pathFn = require('path');\n\nhexo.extend.tag.register('include_code', function(args){\n  var filename = args[0];\n  var path = pathFn.join(hexo.source_dir, filename);\n  \n  return fs.readFile(path).then(function(content){\n    return '<pre><code>' + content + '</code></pre>';\n  });\n}, {async: true});\n```\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n[Swig]: http://paularmstrong.github.io/swig/",
				"html": "<p>標籤外掛幫助使用者在文章中快速插入內容。</p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, options);</span><br></pre></td></tr></table></figure>\n<p>標籤函數會傳入兩個參數：<code>args</code> 和 <code>content</code>，前者代表使用者在使用標籤外掛時傳入的參數，而後者則是標籤外掛所包覆的內容。</p>\n<p>自 Hexo 3 開始，因為新增了非同步渲染功能，而改用 <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> 作為渲染引擎，其行為可能會與過去使用的 <a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a> 有些許差異。</p>\n<h2 id=\"選項\"><a href=\"#選項\" class=\"headerlink\" title=\"選項\"></a>選項</h2><h3 id=\"ends\"><a href=\"#ends\" class=\"headerlink\" title=\"ends\"></a>ends</h3><p>使用結尾標籤，此選項預設為 <code>false</code>。</p>\n<h3 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h3><p>開啟非同步模式，此選項預設為 <code>false</code>。</p>\n<h2 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h2><h3 id=\"沒有結尾標籤\"><a href=\"#沒有結尾標籤\" class=\"headerlink\" title=\"沒有結尾標籤\"></a>沒有結尾標籤</h3><p>插入 Youtube 影片。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'youtube'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> id = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;div class=\"video-container\"&gt;&lt;iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/'</span> + id + <span class=\"string\">'\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"有結尾標籤\"><a href=\"#有結尾標籤\" class=\"headerlink\" title=\"有結尾標籤\"></a>有結尾標籤</h3><p>插入 pull quote。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'pullquote'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> className =  args.join(<span class=\"string\">' '</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;blockquote class=\"pullquote'</span> + className + <span class=\"string\">'\"&gt;'</span> + content + <span class=\"string\">'&lt;/blockquote&gt;'</span>;</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">ends</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"非同步渲染\"><a href=\"#非同步渲染\" class=\"headerlink\" title=\"非同步渲染\"></a>非同步渲染</h3><p>插入檔案。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> pathFn = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'include_code'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> filename = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> path = pathFn.join(hexo.source_dir, filename);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> fs.readFile(path).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">content</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;pre&gt;&lt;code&gt;'</span> + content + <span class=\"string\">'&lt;/code&gt;&lt;/pre&gt;'</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">async</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ai0078koeozk3az2y3",
				"title": "主題",
				"markdown": "`hexo.theme` 除了繼承 [盒子](box.html) 外，還身兼儲存模板的功能。\n\n## 取得模板\n\n``` js\nhexo.theme.getView(path);\n```\n\n## 設定模板\n\n``` js\nhexo.theme.setView(path, data);\n```\n\n## 移除模板\n\n``` js\nhexo.theme.removeView(path);\n```\n\n## 模板\n\n模板本身有兩個方法可供使用：`render` 和 `renderSync`，兩者功能一樣，只是前者為非同步函數，而後者為同步函數，因此以下僅以 `render` 舉例。\n\n``` js\nvar view = hexo.theme.getView('layout.swig');\n\nview.render({foo: 1, bar: 2}).then(function(result){\n  // ...\n});\n```\n\n您可在 `render` 方法傳入選項作為參數，`render` 方法會先使用相應的渲染引擎進行處理，並載入 [輔助函數](helper.html)，渲染完成後，會試著尋找佈局（layout）是否存在，當 `layout` 設為 `false` 或不存在時則會直接回傳渲染結果。",
				"html": "<p><code>hexo.theme</code> 除了繼承 <a href=\"box.html\">盒子</a> 外，還身兼儲存模板的功能。</p>\n<h2 id=\"取得模板\"><a href=\"#取得模板\" class=\"headerlink\" title=\"取得模板\"></a>取得模板</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.getView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"設定模板\"><a href=\"#設定模板\" class=\"headerlink\" title=\"設定模板\"></a>設定模板</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.setView(path, data);</span><br></pre></td></tr></table></figure>\n<h2 id=\"移除模板\"><a href=\"#移除模板\" class=\"headerlink\" title=\"移除模板\"></a>移除模板</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.removeView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h2><p>模板本身有兩個方法可供使用：<code>render</code> 和 <code>renderSync</code>，兩者功能一樣，只是前者為非同步函數，而後者為同步函數，因此以下僅以 <code>render</code> 舉例。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> view = hexo.theme.getView(<span class=\"string\">'layout.swig'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">view.render(&#123;<span class=\"attr\">foo</span>: <span class=\"number\">1</span>, <span class=\"attr\">bar</span>: <span class=\"number\">2</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>您可在 <code>render</code> 方法傳入選項作為參數，<code>render</code> 方法會先使用相應的渲染引擎進行處理，並載入 <a href=\"helper.html\">輔助函數</a>，渲染完成後，會試著尋找佈局（layout）是否存在，當 <code>layout</code> 設為 <code>false</code> 或不存在時則會直接回傳渲染結果。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ai0079koeokza40bjb",
				"title": "資產資料夾",
				"markdown": "資產（Asset）代表 `source` 資料夾中除了文章以外的所有檔案，例如圖片、CSS、JS 檔案等。Hexo 提供了一種更方便管理 Asset 的設定：`post_asset_folder`。\n\n``` yaml\npost_asset_folder: true\n```\n\n當您開啟 `post_asset_folder` 設定後，在建立檔案時，Hexo 會自動建立一個與文章同名的資料夾，您可以把與該文章相關的所有資產都放到那個資料夾，如此一來，您便可以更方便的使用資產。\n\n## 標籤外掛\n\nHexo 3 新增了幾個外掛，讓您更方便的在文章內引用資產。\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n",
				"html": "<p>資產（Asset）代表 <code>source</code> 資料夾中除了文章以外的所有檔案，例如圖片、CSS、JS 檔案等。Hexo 提供了一種更方便管理 Asset 的設定：<code>post_asset_folder</code>。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>當您開啟 <code>post_asset_folder</code> 設定後，在建立檔案時，Hexo 會自動建立一個與文章同名的資料夾，您可以把與該文章相關的所有資產都放到那個資料夾，如此一來，您便可以更方便的使用資產。</p>\n<h2 id=\"標籤外掛\"><a href=\"#標籤外掛\" class=\"headerlink\" title=\"標籤外掛\"></a>標籤外掛</h2><p>Hexo 3 新增了幾個外掛，讓您更方便的在文章內引用資產。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ai007akoeorhkq9syj",
				"title": "指令",
				"markdown": "\n{% youtube bJBsW4b5WME %}\n\n## init\n\n``` bash\n$ hexo init [folder]\n```\n\n建立一個新的網站。如果沒有設定 `folder` 的話，Hexo 會在目前的資料夾建立網站。\n\n## new\n\n``` bash\n$ hexo new [layout] <title>\n```\n\n建立一篇新的文章。如果沒有設定 `layout` 的話，則會使用 [_config.yml](configuration.html) 中的 `default_layout` 設定代替。如果標題包含空格的話，請使用引號括起來。\n\n## generate\n\n``` bash\n$ hexo generate\n```\n\n產生靜態檔案。\n\n選項 | 描述\n--- | ---\n`-d`, `--deploy` | 產生完成即部署網站\n`-w`, `--watch` | 監看檔案變更\n\n## publish\n\n``` bash\n$ hexo publish [layout] <filename>\n```\n\n發表草稿。\n\n## server\n\n``` bash\n$ hexo server\n```\n\n啟動伺服器，預設是 `http://localhost:4000/`。\n\n選項 | 描述\n--- | ---\n`-p`, `--port` | 覆蓋連接埠設定\n`-s`, `--static` | 只使用靜態檔案\n`-l`, `--log` | 啟動記錄器，或覆蓋記錄格式\n\n## deploy\n\n``` bash\n$ hexo deploy\n```\n\n部署網站。\n\n選項 | 描述\n--- | ---\n`-g`, `--generate` | 部署網站前先產生靜態檔案\n\n## render\n\n``` bash\n$ hexo render <file> [file2] ...\n```\n\n渲染檔案。\n\n選項 | 描述\n--- | ---\n`-o`, `--output` | 輸出位置\n\n## migrate\n\n``` bash\n$ hexo migrate <type>\n```\n\n從其他系統 [轉移內容](migration.html)。\n\n## clean\n\n``` bash\n$ hexo clean\n```\n\n清除快取檔案 (`db.json`) 和已產生的靜態檔案 (`public`)。\n\n## list\n\n``` bash\n$ hexo list <type>\n```\n\n列出網站資料。\n\n## version\n\n``` bash\n$ hexo version\n```\n\n顯示版本資訊。\n\n## 選項\n\n### 安全模式\n\n``` bash\n$ hexo --safe\n```\n\n在安全模式下，不會載入外掛和腳本。當您在安裝新外掛後遭遇問題時，可以嘗試以安全模式重新執行。\n\n### 除錯模式\n\n``` bash\n$ hexo --debug\n```\n\n在終端機中顯示除錯訊息並儲存記錄檔到 `debug.log`。當您碰到問題時，試著以除錯模式重新執行一次，並 [把除錯訊息貼到 GitHub](https://github.com/hexojs/hexo/issues/new)。\n\n### 安靜模式\n\n``` bash\n$ hexo --silent\n```\n\n隱藏終端機的訊息。\n\n### 自訂配置檔的路徑\n\n``` bash\n$ hexo --config custom.yml\n```\n\n自訂配置檔的路徑而不是使用 `_config.yml`。此參數也接受以逗號分隔的 JSON 或 YAML 檔列表字串 (不得含有空格)，它們將會被合併產生一個 `_multiconfig.yml`。\n\n``` bash\n$ hexo --config custom.yml,custom2.json\n```\n\n### 顯示草稿\n\n``` bash\n$ hexo --draft\n```\n\n顯示 `source/_drafts` 資料夾中的草稿文章。\n\n### 自定 CWD\n\n``` bash\n$ hexo --cwd /path/to/cwd\n```\n\n自訂目前工作目錄（Current working directory）的路徑。\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/bJBsW4b5WME\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h2 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init [folder]</span><br></pre></td></tr></table></figure>\n<p>建立一個新的網站。如果沒有設定 <code>folder</code> 的話，Hexo 會在目前的資料夾建立網站。</p>\n<h2 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>建立一篇新的文章。如果沒有設定 <code>layout</code> 的話，則會使用 <a href=\"configuration.html\">_config.yml</a> 中的 <code>default_layout</code> 設定代替。如果標題包含空格的話，請使用引號括起來。</p>\n<h2 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>產生靜態檔案。</p>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-d</code>, <code>--deploy</code></td>\n<td>產生完成即部署網站</td>\n</tr>\n<tr>\n<td><code>-w</code>, <code>--watch</code></td>\n<td>監看檔案變更</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"publish\"><a href=\"#publish\" class=\"headerlink\" title=\"publish\"></a>publish</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<p>發表草稿。</p>\n<h2 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>啟動伺服器，預設是 <code>http://localhost:4000/</code>。</p>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-p</code>, <code>--port</code></td>\n<td>覆蓋連接埠設定</td>\n</tr>\n<tr>\n<td><code>-s</code>, <code>--static</code></td>\n<td>只使用靜態檔案</td>\n</tr>\n<tr>\n<td><code>-l</code>, <code>--log</code></td>\n<td>啟動記錄器，或覆蓋記錄格式</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>部署網站。</p>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-g</code>, <code>--generate</code></td>\n<td>部署網站前先產生靜態檔案</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo render &lt;file&gt; [file2] ...</span><br></pre></td></tr></table></figure>\n<p>渲染檔案。</p>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-o</code>, <code>--output</code></td>\n<td>輸出位置</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"migrate\"><a href=\"#migrate\" class=\"headerlink\" title=\"migrate\"></a>migrate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>從其他系統 <a href=\"migration.html\">轉移內容</a>。</p>\n<h2 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>清除快取檔案 (<code>db.json</code>) 和已產生的靜態檔案 (<code>public</code>)。</p>\n<h2 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo list &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>列出網站資料。</p>\n<h2 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n<p>顯示版本資訊。</p>\n<h2 id=\"選項\"><a href=\"#選項\" class=\"headerlink\" title=\"選項\"></a>選項</h2><h3 id=\"安全模式\"><a href=\"#安全模式\" class=\"headerlink\" title=\"安全模式\"></a>安全模式</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --safe</span><br></pre></td></tr></table></figure>\n<p>在安全模式下，不會載入外掛和腳本。當您在安裝新外掛後遭遇問題時，可以嘗試以安全模式重新執行。</p>\n<h3 id=\"除錯模式\"><a href=\"#除錯模式\" class=\"headerlink\" title=\"除錯模式\"></a>除錯模式</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --debug</span><br></pre></td></tr></table></figure>\n<p>在終端機中顯示除錯訊息並儲存記錄檔到 <code>debug.log</code>。當您碰到問題時，試著以除錯模式重新執行一次，並 <a href=\"https://github.com/hexojs/hexo/issues/new\" target=\"_blank\" rel=\"noopener\">把除錯訊息貼到 GitHub</a>。</p>\n<h3 id=\"安靜模式\"><a href=\"#安靜模式\" class=\"headerlink\" title=\"安靜模式\"></a>安靜模式</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --silent</span><br></pre></td></tr></table></figure>\n<p>隱藏終端機的訊息。</p>\n<h3 id=\"自訂配置檔的路徑\"><a href=\"#自訂配置檔的路徑\" class=\"headerlink\" title=\"自訂配置檔的路徑\"></a>自訂配置檔的路徑</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure>\n<p>自訂配置檔的路徑而不是使用 <code>_config.yml</code>。此參數也接受以逗號分隔的 JSON 或 YAML 檔列表字串 (不得含有空格)，它們將會被合併產生一個 <code>_multiconfig.yml</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --config custom.yml,custom2.json</span><br></pre></td></tr></table></figure>\n<h3 id=\"顯示草稿\"><a href=\"#顯示草稿\" class=\"headerlink\" title=\"顯示草稿\"></a>顯示草稿</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --draft</span><br></pre></td></tr></table></figure>\n<p>顯示 <code>source/_drafts</code> 資料夾中的草稿文章。</p>\n<h3 id=\"自定-CWD\"><a href=\"#自定-CWD\" class=\"headerlink\" title=\"自定 CWD\"></a>自定 CWD</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure>\n<p>自訂目前工作目錄（Current working directory）的路徑。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ai007bkoeojafdgmyk",
				"title": "配置",
				"markdown": "您可以在 `_config.yml` 或 [替代配置檔](#Using-an-Alternate-Config) 中修改網站配置。\n\n{% youtube 5bL8b5ulUD4 %}\n\n### 網站\n\n設定 | 描述\n--- | ---\n`title` | 網站標題\n`subtitle` | 網站副標題\n`description` | 網站描述\n`author` | 您的名字\n`language` | 網站使用的語言，參考 [2-lettter ISO-639-1 code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)，預設為 `en`\n`timezone` | 網站時區，Hexo 預設使用您電腦的時區，您可以在 [時區列表](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) 尋找適當的時區，例如 `America/New_York` 、 `Japan` 與 `UTC`\n\n### 網址\n\n設定 | 描述 | 預設值\n--- | --- | ---\n`url` | 網站的網址 |\n`root` | 網站的根目錄 |\n`permalink` | 文章 [永久連結](permalinks.html) 的格式 | `:year/:month/:day/:title/`\n`permalink_defaults` | `permalink` 中各區段的預設值 |\n\n{% note info 網站存放在子目錄 %}\n如果您的網站存放在子目錄中，例如 `http://example.org/blog`，請將您的 `url` 設為 `http://example.org/blog` 並把 `root` 設為 `/blog/`。\n{% endnote %}\n\n### 目錄\n\n設定 | 描述 | 預設值\n--- | --- | ---\n`source_dir` | 原始檔案資料夾，這個資料夾用於存放您的內容 | `source`\n`public_dir` | 靜態檔案資料夾，這個資料夾用於存放建立完畢的檔案 | public\n`tag_dir` | 標籤資料夾 | `tags`\n`archive_dir` | 彙整資料夾 | `archives`\n`category_dir` | 分類資料夾 | `categories`\n`code_dir` | Include code 資料夾 | `downloads/code`\n`i18n_dir` | 國際化（i18n）資料夾 | `:lang`\n`skip_render` | 跳過指定檔案的渲染，您可使用 [glob 表達式](https://github.com/isaacs/minimatch) 來配對路徑 |\n\n### 寫作\n\n設定 | 描述 | 預設值\n--- | --- | ---\n`new_post_name` | 新文章的檔案名稱 | `:title.md`\n`default_layout` | 預設佈局 | `post`\n`auto_spacing` | 在西方文字與東方文字中加入空白 | `false`\n`titlecase` | 把標題轉換為 title case | `false`\n`external_link` | 在新頁籤中開啟連結 | `true`\n`filename_case` | 把檔案名稱轉換為: `1` 小寫或 `2` 大寫 | `0`\n`render_drafts` | 顯示草稿 | `false`\n`post_asset_folder` | 啟動 [Asset 資料夾](asset-folders.html) | `false`\n`relative_link` | 把連結改為與根目錄的相對位址 | `false`\n`future` | 顯示未來的文章 | `true`\n`highlight` | 程式碼區塊的設定 |\n\n### 分類 & 標籤\n\n設定 | 描述 | 預設值\n--- | --- | ---\n`default_category` | 預設分類 | `uncategorized`\n`category_map` | 分類別名 |\n`tag_map` | 標籤別名 |\n\n### 日期 / 時間格式\n\nHexo 使用 [Moment.js](http://momentjs.com/) 來解析和顯示時間。\n\n設定 | 描述 | 預設值\n--- | --- | ---\n`date_format` | 日期格式 | `YYYY-MM-DD`\n`time_format` | 時間格式 | `HH:mm:ss`\n\n### 分頁\n\n設定 | 描述 | 預設值\n--- | --- | ---\n`per_page` | 一頁顯示的文章量 (`0` = 關閉分頁功能) | `10`\n`pagination_dir` | 分頁目錄 | `page`\n\n### 擴充套件\n\n設定 | 描述\n--- | ---\n`theme` | 使用主題名稱, 設為 `false` 表示關閉主題功能\n`deploy` | 佈署設定\n\n\n### 包含/排除 檔案或資料夾\n\nHexo 會根據配置檔中 `include` / `exlude` 欄位設定，了解要 處理/忽略 哪些特定的檔案或資料夾。\n\n設定 | 描述\n--- | ---\n`include` | Hexo 預設會忽略隱藏檔與隱藏資料夾，但列在這個欄位中的檔案，Hexo 仍然會去處理\n`exclude` | 列在這裡的檔案將會被 Hexo 忽略\n\n範例:\n```yaml\n# 包含/排除 檔案或資料夾\ninclude:\n  - .nojekyll\nexclude:\n  - .DS_Store\n```\n\n### 使用替代配置檔\n\n使用 `hexo` 指令時，只要在指令後面加上 `--config` 參數與自訂配置檔 (需為 JSON 或 YAML 檔) 路徑即可指定此次想要搭配使用的配置檔。該參數也可以是以逗號分隔的檔案列表 (注意中間不得有空格) 來滿足一次使用多個配置檔的需求。\n\n範例:\n\n``` bash\n# 使用自訂的 'custom.yml' 取代預設的 '_config.yml'\n$ hexo server --config custom.yml\n\n# 使用多個配置檔, 有衝突時優先使用 'custom2.json'\n$ hexo server --config custom.yml,custom2.json\n```\n\n使用多個配置檔會合併產生一個 `_multiconfig.yml`。當合併遇到衝突時，列在愈後面的檔案，有愈高的優先權。可以使用任意數量帶有任意層級物件的 JSON 或 YAML 檔。注意**檔案列表字串中不得有空白**。\n\n以前述的多個配置檔範例來說明，若 `custom.yml` 中有 `foo: bar`，且 `custom2.json` 中有 `\"foo\": \"dinosaur\"`，最終在 `_multiconfig.yml` 裡的將會是 `foo: dinosaur`。\n",
				"html": "<p>您可以在 <code>_config.yml</code> 或 <a href=\"#Using-an-Alternate-Config\">替代配置檔</a> 中修改網站配置。</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/5bL8b5ulUD4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h3 id=\"網站\"><a href=\"#網站\" class=\"headerlink\" title=\"網站\"></a>網站</h3><table>\n<thead>\n<tr>\n<th>設定</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>網站標題</td>\n</tr>\n<tr>\n<td><code>subtitle</code></td>\n<td>網站副標題</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>網站描述</td>\n</tr>\n<tr>\n<td><code>author</code></td>\n<td>您的名字</td>\n</tr>\n<tr>\n<td><code>language</code></td>\n<td>網站使用的語言，參考 <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"_blank\" rel=\"noopener\">2-lettter ISO-639-1 code</a>，預設為 <code>en</code></td>\n</tr>\n<tr>\n<td><code>timezone</code></td>\n<td>網站時區，Hexo 預設使用您電腦的時區，您可以在 <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" target=\"_blank\" rel=\"noopener\">時區列表</a> 尋找適當的時區，例如 <code>America/New_York</code> 、 <code>Japan</code> 與 <code>UTC</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"網址\"><a href=\"#網址\" class=\"headerlink\" title=\"網址\"></a>網址</h3><table>\n<thead>\n<tr>\n<th>設定</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>url</code></td>\n<td>網站的網址</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>網站的根目錄</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>文章 <a href=\"permalinks.html\">永久連結</a> 的格式</td>\n<td><code>:year/:month/:day/:title/</code></td>\n</tr>\n<tr>\n<td><code>permalink_defaults</code></td>\n<td><code>permalink</code> 中各區段的預設值</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note info\"><strong class=\"note-title\">網站存放在子目錄</strong><p>如果您的網站存放在子目錄中，例如 <code>http://example.org/blog</code>，請將您的 <code>url</code> 設為 <code>http://example.org/blog</code> 並把 <code>root</code> 設為 <code>/blog/</code>。</p>\n</blockquote>\n<h3 id=\"目錄\"><a href=\"#目錄\" class=\"headerlink\" title=\"目錄\"></a>目錄</h3><table>\n<thead>\n<tr>\n<th>設定</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source_dir</code></td>\n<td>原始檔案資料夾，這個資料夾用於存放您的內容</td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>public_dir</code></td>\n<td>靜態檔案資料夾，這個資料夾用於存放建立完畢的檔案</td>\n<td>public</td>\n</tr>\n<tr>\n<td><code>tag_dir</code></td>\n<td>標籤資料夾</td>\n<td><code>tags</code></td>\n</tr>\n<tr>\n<td><code>archive_dir</code></td>\n<td>彙整資料夾</td>\n<td><code>archives</code></td>\n</tr>\n<tr>\n<td><code>category_dir</code></td>\n<td>分類資料夾</td>\n<td><code>categories</code></td>\n</tr>\n<tr>\n<td><code>code_dir</code></td>\n<td>Include code 資料夾</td>\n<td><code>downloads/code</code></td>\n</tr>\n<tr>\n<td><code>i18n_dir</code></td>\n<td>國際化（i18n）資料夾</td>\n<td><code>:lang</code></td>\n</tr>\n<tr>\n<td><code>skip_render</code></td>\n<td>跳過指定檔案的渲染，您可使用 <a href=\"https://github.com/isaacs/minimatch\" target=\"_blank\" rel=\"noopener\">glob 表達式</a> 來配對路徑</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"寫作\"><a href=\"#寫作\" class=\"headerlink\" title=\"寫作\"></a>寫作</h3><table>\n<thead>\n<tr>\n<th>設定</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>new_post_name</code></td>\n<td>新文章的檔案名稱</td>\n<td><code>:title.md</code></td>\n</tr>\n<tr>\n<td><code>default_layout</code></td>\n<td>預設佈局</td>\n<td><code>post</code></td>\n</tr>\n<tr>\n<td><code>auto_spacing</code></td>\n<td>在西方文字與東方文字中加入空白</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>titlecase</code></td>\n<td>把標題轉換為 title case</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>external_link</code></td>\n<td>在新頁籤中開啟連結</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>filename_case</code></td>\n<td>把檔案名稱轉換為: <code>1</code> 小寫或 <code>2</code> 大寫</td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>render_drafts</code></td>\n<td>顯示草稿</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>post_asset_folder</code></td>\n<td>啟動 <a href=\"asset-folders.html\">Asset 資料夾</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>relative_link</code></td>\n<td>把連結改為與根目錄的相對位址</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>future</code></td>\n<td>顯示未來的文章</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>highlight</code></td>\n<td>程式碼區塊的設定</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"分類-amp-標籤\"><a href=\"#分類-amp-標籤\" class=\"headerlink\" title=\"分類 &amp; 標籤\"></a>分類 &amp; 標籤</h3><table>\n<thead>\n<tr>\n<th>設定</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>default_category</code></td>\n<td>預設分類</td>\n<td><code>uncategorized</code></td>\n</tr>\n<tr>\n<td><code>category_map</code></td>\n<td>分類別名</td>\n<td></td>\n</tr>\n<tr>\n<td><code>tag_map</code></td>\n<td>標籤別名</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"日期-時間格式\"><a href=\"#日期-時間格式\" class=\"headerlink\" title=\"日期 / 時間格式\"></a>日期 / 時間格式</h3><p>Hexo 使用 <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 來解析和顯示時間。</p>\n<table>\n<thead>\n<tr>\n<th>設定</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>date_format</code></td>\n<td>日期格式</td>\n<td><code>YYYY-MM-DD</code></td>\n</tr>\n<tr>\n<td><code>time_format</code></td>\n<td>時間格式</td>\n<td><code>HH:mm:ss</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"分頁\"><a href=\"#分頁\" class=\"headerlink\" title=\"分頁\"></a>分頁</h3><table>\n<thead>\n<tr>\n<th>設定</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>per_page</code></td>\n<td>一頁顯示的文章量 (<code>0</code> = 關閉分頁功能)</td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td><code>pagination_dir</code></td>\n<td>分頁目錄</td>\n<td><code>page</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"擴充套件\"><a href=\"#擴充套件\" class=\"headerlink\" title=\"擴充套件\"></a>擴充套件</h3><table>\n<thead>\n<tr>\n<th>設定</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>theme</code></td>\n<td>使用主題名稱, 設為 <code>false</code> 表示關閉主題功能</td>\n</tr>\n<tr>\n<td><code>deploy</code></td>\n<td>佈署設定</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"包含-排除-檔案或資料夾\"><a href=\"#包含-排除-檔案或資料夾\" class=\"headerlink\" title=\"包含/排除 檔案或資料夾\"></a>包含/排除 檔案或資料夾</h3><p>Hexo 會根據配置檔中 <code>include</code> / <code>exlude</code> 欄位設定，了解要 處理/忽略 哪些特定的檔案或資料夾。</p>\n<table>\n<thead>\n<tr>\n<th>設定</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>include</code></td>\n<td>Hexo 預設會忽略隱藏檔與隱藏資料夾，但列在這個欄位中的檔案，Hexo 仍然會去處理</td>\n</tr>\n<tr>\n<td><code>exclude</code></td>\n<td>列在這裡的檔案將會被 Hexo 忽略</td>\n</tr>\n</tbody>\n</table>\n<p>範例:<br><figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 包含/排除 檔案或資料夾</span></span><br><span class=\"line\"><span class=\"attr\">include:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">.nojekyll</span></span><br><span class=\"line\"><span class=\"attr\">exclude:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">.DS_Store</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"使用替代配置檔\"><a href=\"#使用替代配置檔\" class=\"headerlink\" title=\"使用替代配置檔\"></a>使用替代配置檔</h3><p>使用 <code>hexo</code> 指令時，只要在指令後面加上 <code>--config</code> 參數與自訂配置檔 (需為 JSON 或 YAML 檔) 路徑即可指定此次想要搭配使用的配置檔。該參數也可以是以逗號分隔的檔案列表 (注意中間不得有空格) 來滿足一次使用多個配置檔的需求。</p>\n<p>範例:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用自訂的 'custom.yml' 取代預設的 '_config.yml'</span></span><br><span class=\"line\">$ hexo server --config custom.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用多個配置檔, 有衝突時優先使用 'custom2.json'</span></span><br><span class=\"line\">$ hexo server --config custom.yml,custom2.json</span><br></pre></td></tr></table></figure>\n<p>使用多個配置檔會合併產生一個 <code>_multiconfig.yml</code>。當合併遇到衝突時，列在愈後面的檔案，有愈高的優先權。可以使用任意數量帶有任意層級物件的 JSON 或 YAML 檔。注意<strong>檔案列表字串中不得有空白</strong>。</p>\n<p>以前述的多個配置檔範例來說明，若 <code>custom.yml</code> 中有 <code>foo: bar</code>，且 <code>custom2.json</code> 中有 <code>&quot;foo&quot;: &quot;dinosaur&quot;</code>，最終在 <code>_multiconfig.yml</code> 裡的將會是 <code>foo: dinosaur</code>。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ai007ckoeojxzzdhhi",
				"title": "貢獻",
				"markdown": "## 開發\n\n我們非常歡迎您加入 Hexo 的開發，這份文件將幫助您了解開發流程。\n\n### 開始之前\n\n請遵守以下準則：\n\n- 遵守 [Google JavaScript 代碼風格](https://google.github.io/styleguide/jsguide.html)。\n- 使用 2 個空格縮排。\n- 不要把逗號放在最前面。\n\n### 工作流程\n\n1. Fork [hexojs/hexo]\n2. 把檔案庫（repository）複製到電腦上，並安裝相依套件。\n\n    {% code %}\n    $ git clone https://github.com/<username>/hexo.git\n    $ cd hexo\n    $ npm install\n    $ git submodule update --init\n    {% endcode %}\n\n3. 新增一個功能分支。\n\n    {% code %}\n    $ git checkout -b new_feature\n    {% endcode %}\n\n4. 開始開發。\n5. 推送（push）分支。\n\n    {% code %}\n    $ git push origin new_feature\n    {% endcode %}\n\n6. 建立一個新的合併申請（pull request）並描述變更。\n\n### 注意事項\n\n- 不要修改 `package.json` 的版本號。\n- 只有在測試通過的情況下您的合併申請才會被核准，在提交前別忘了進行測試。\n\n    {% code %}\n    $ npm test\n    {% endcode %}\n\n## 更新文件\n\nHexo 文件開放原始碼，您可以在 [hexojs/site] 找到原始碼。\n\n### 工作流程\n\n1. Fork [hexojs/site]\n2. 把檔案庫（repository）複製到電腦上，並安裝相依套件。\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. 開始編輯文件，您可透過伺服器預覽變更。\n\n    {% code %}\n    $ hexo server\n    {% endcode %}\n\n4. 推送（push）分支。\n5. 建立一個新的合併申請（pull request）並描述變更。\n\n### 翻譯\n\n1. 在 `source` 資料夾中建立一個新的語言資料夾（全小寫）。\n2. 把 `source` 資料夾中相關的檔案（Markdown 和模板檔案）複製到新的語言資料夾中。\n3. 在 `source/_data/language.yml` 中新增語言。\n4. 在 `themes/navy/languages` 複製 `en.yml` 並命名為語言名稱（全小寫）。\n\n## 回報問題\n\n當您使用 Hexo 遭遇問題時，可試著在 [解決問題](troubleshooting.html) 中尋找解答，或是在 [GitHub](https://github.com/hexojs/hexo/issues) 或 [Google Group](https://groups.google.com/group/hexo) 詢問。若找不到答案，請至 GitHub 回報。\n\n1. 以 [除錯模式](commands.html#除錯模式) 再執行一次。\n2. 執行 `hexo vesion` 並檢查版本資訊。\n3. 把除錯資訊和版本資訊都貼到 GitHub。\n\n[hexojs/hexo]: https://github.com/hexojs/hexo\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<h2 id=\"開發\"><a href=\"#開發\" class=\"headerlink\" title=\"開發\"></a>開發</h2><p>我們非常歡迎您加入 Hexo 的開發，這份文件將幫助您了解開發流程。</p>\n<h3 id=\"開始之前\"><a href=\"#開始之前\" class=\"headerlink\" title=\"開始之前\"></a>開始之前</h3><p>請遵守以下準則：</p>\n<ul>\n<li>遵守 <a href=\"https://google.github.io/styleguide/jsguide.html\" target=\"_blank\" rel=\"noopener\">Google JavaScript 代碼風格</a>。</li>\n<li>使用 2 個空格縮排。</li>\n<li>不要把逗號放在最前面。</li>\n</ul>\n<h3 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">hexojs/hexo</a></li>\n<li><p>把檔案庫（repository）複製到電腦上，並安裝相依套件。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/hexo.git</span><br><span class=\"line\">$ cd hexo</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">$ git submodule update --init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>新增一個功能分支。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout -b new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>開始開發。</p>\n</li>\n<li><p>推送（push）分支。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push origin new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>建立一個新的合併申請（pull request）並描述變更。</p>\n</li>\n</ol>\n<h3 id=\"注意事項\"><a href=\"#注意事項\" class=\"headerlink\" title=\"注意事項\"></a>注意事項</h3><ul>\n<li>不要修改 <code>package.json</code> 的版本號。</li>\n<li><p>只有在測試通過的情況下您的合併申請才會被核准，在提交前別忘了進行測試。</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm test</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"更新文件\"><a href=\"#更新文件\" class=\"headerlink\" title=\"更新文件\"></a>更新文件</h2><p>Hexo 文件開放原始碼，您可以在 <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a> 找到原始碼。</p>\n<h3 id=\"工作流程-1\"><a href=\"#工作流程-1\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>把檔案庫（repository）複製到電腦上，並安裝相依套件。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>開始編輯文件，您可透過伺服器預覽變更。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>推送（push）分支。</p>\n</li>\n<li>建立一個新的合併申請（pull request）並描述變更。</li>\n</ol>\n<h3 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h3><ol>\n<li>在 <code>source</code> 資料夾中建立一個新的語言資料夾（全小寫）。</li>\n<li>把 <code>source</code> 資料夾中相關的檔案（Markdown 和模板檔案）複製到新的語言資料夾中。</li>\n<li>在 <code>source/_data/language.yml</code> 中新增語言。</li>\n<li>在 <code>themes/navy/languages</code> 複製 <code>en.yml</code> 並命名為語言名稱（全小寫）。</li>\n</ol>\n<h2 id=\"回報問題\"><a href=\"#回報問題\" class=\"headerlink\" title=\"回報問題\"></a>回報問題</h2><p>當您使用 Hexo 遭遇問題時，可試著在 <a href=\"troubleshooting.html\">解決問題</a> 中尋找解答，或是在 <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> 或 <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a> 詢問。若找不到答案，請至 GitHub 回報。</p>\n<ol>\n<li>以 <a href=\"commands.html#除錯模式\">除錯模式</a> 再執行一次。</li>\n<li>執行 <code>hexo vesion</code> 並檢查版本資訊。</li>\n<li>把除錯資訊和版本資訊都貼到 GitHub。</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6aj007dkoeof6mep0jg",
				"title": "Front-matter",
				"markdown": "\n{% youtube 2oxWnm8E-mc %}\n\nFront-matter 是檔案最上方以 `---` 分隔的區域，用於指定個別檔案的變數，舉例來說：\n\n``` yaml\ntitle: Hello World\ndate: 2013/7/13 20:46:25\n---\n```\n\n以下是預先定義的設定，您可在模板中取得這些設定值並加以利用。\n\n設定 | 描述 | 預設值\n--- | --- | ---\n`layout` | 佈局 | \n`title` | 標題 |\n`date` | 建立日期 | 檔案建立日期\n`updated` | 更新日期 | 檔案更新日期\n`comments` | 開啟文章的留言功能 | true\n`tags` | 標籤（不適用於分頁） |\n`categories` | 分類（不適用於分頁）|\n`permalink` | 覆蓋文章網址 |\n\n### 分類和標籤\n\n分類和標籤只有文章才支援，您可以在 Front-matter 中設定。在其他系統中，分類和標籤可能聽起來很接近，但是在 Hexo 中有著決定性的差別：分類是有順序和階層性的，也就是說 `Foo, Bar` 不等於 `Bar, Foo`；而標籤沒有順序和階層。\n\n``` yaml\ncategories:\n- Diary\ntags:\n- PS3\n- Games\n```\n\n### JSON Front-matter\n\n除了 YAML 外，你也可利用 JSON 來撰寫 Front-matter，只要將 `---` 代換成 `;;;` 即可。\n\n``` json\n\"title\": \"Hello World\",\n\"date\": \"2013/7/13 20:46:25\"\n;;;\n```\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/2oxWnm8E-mc\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>Front-matter 是檔案最上方以 <code>---</code> 分隔的區域，用於指定個別檔案的變數，舉例來說：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"string\">/7/13</span> <span class=\"number\">20</span><span class=\"string\">:46:25</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n<p>以下是預先定義的設定，您可在模板中取得這些設定值並加以利用。</p>\n<table>\n<thead>\n<tr>\n<th>設定</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>佈局</td>\n<td></td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>標題</td>\n<td></td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>建立日期</td>\n<td>檔案建立日期</td>\n</tr>\n<tr>\n<td><code>updated</code></td>\n<td>更新日期</td>\n<td>檔案更新日期</td>\n</tr>\n<tr>\n<td><code>comments</code></td>\n<td>開啟文章的留言功能</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>標籤（不適用於分頁）</td>\n<td></td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>分類（不適用於分頁）</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>覆蓋文章網址</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"分類和標籤\"><a href=\"#分類和標籤\" class=\"headerlink\" title=\"分類和標籤\"></a>分類和標籤</h3><p>分類和標籤只有文章才支援，您可以在 Front-matter 中設定。在其他系統中，分類和標籤可能聽起來很接近，但是在 Hexo 中有著決定性的差別：分類是有順序和階層性的，也就是說 <code>Foo, Bar</code> 不等於 <code>Bar, Foo</code>；而標籤沒有順序和階層。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Diary</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">PS3</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Games</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"JSON-Front-matter\"><a href=\"#JSON-Front-matter\" class=\"headerlink\" title=\"JSON Front-matter\"></a>JSON Front-matter</h3><p>除了 YAML 外，你也可利用 JSON 來撰寫 Front-matter，只要將 <code>---</code> 代換成 <code>;;;</code> 即可。</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"title\": \"Hello World\",</span><br><span class=\"line\">\"date\": \"2013/7/13 20:46:25\"</span><br><span class=\"line\">;;;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6aj007ekoeoa7nnyjad",
				"title": "資料檔案",
				"markdown": "有時您可能需要在主題中使用某些資料，而這些資料並不在文章內，或是想要重複使用，那麼您可以考慮使用 Hexo 3 新增的「資料檔案」功能。此功能會載入 `source/_data` 內的 YAML 或 JSON 檔案，如此一來您便能在網站中使用。\n\n舉例來說，在 `source/_data` 資料夾中新增 `menu.yml` 檔案：\n\n``` yaml\nHome: /\nGallery: /gallery/\nArchives: /archives/\n```\n\n您就能在模板中使用這些資料：\n\n```\n<% for (var link in site.data.menu) { %>\n  <a href=\"<%= site.data.menu[link] %>\"> <%= link %> </a>\n<% } %>\n```\n\n输出结果如下:\n\n```\n<a href=\"/\"> Home </a>\n<a href=\"/gallery/\"> Gallery </a>\n<a href=\"/archives/\"> Archives </a>\n```",
				"html": "<p>有時您可能需要在主題中使用某些資料，而這些資料並不在文章內，或是想要重複使用，那麼您可以考慮使用 Hexo 3 新增的「資料檔案」功能。此功能會載入 <code>source/_data</code> 內的 YAML 或 JSON 檔案，如此一來您便能在網站中使用。</p>\n<p>舉例來說，在 <code>source/_data</code> 資料夾中新增 <code>menu.yml</code> 檔案：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Home:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">Gallery:</span> <span class=\"string\">/gallery/</span></span><br><span class=\"line\"><span class=\"attr\">Archives:</span> <span class=\"string\">/archives/</span></span><br></pre></td></tr></table></figure>\n<p>您就能在模板中使用這些資料：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;% for (var link in site.data.menu) &#123; %&gt;</span><br><span class=\"line\">  &lt;a href=&quot;&lt;%= site.data.menu[link] %&gt;&quot;&gt; &lt;%= link %&gt; &lt;/a&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>输出结果如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;/&quot;&gt; Home &lt;/a&gt;</span><br><span class=\"line\">&lt;a href=&quot;/gallery/&quot;&gt; Gallery &lt;/a&gt;</span><br><span class=\"line\">&lt;a href=&quot;/archives/&quot;&gt; Archives &lt;/a&gt;</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6aj007fkoeoeg53ghx6",
				"title": "佈署",
				"markdown": "\n{% youtube ZIltKlkG4S0 %}\n\nHexo 提供了快速方便的一鍵佈署功能，讓您只需一個指令就能將網站佈署到伺服器上。\n\n``` bash\n$ hexo deploy\n```\n\n在開始之前，您必須先在 `_config.yml` 中修改設定，一個正確的部署設定中至少要有 `type` 欄位，例如：\n\n``` yaml\ndeploy:\n  type: git\n```\n\n您可同時使用多個 deployer，Hexo 會依照順序執行每個 deployer。\n\n``` yaml\ndeploy:\n- type: git\n  repo: \n- type: heroku\n  repo:\n```\n\n## Git\n\n安裝 [hexo-deployer-git]。\n\n``` bash\n$ npm install hexo-deployer-git --save\n```\n\n修改設定。\n\n``` yaml\ndeploy:\n  type: git\n  repo: <repository url>\n  branch: [branch]\n  message: [message]\n```\n\n選項 | 描述\n--- | ---\n`repo` | 儲存庫（Repository）網址\n`branch` | 分支名稱。如果您使用的是 GitHub 或 GitCafe 的話，程式會嘗試自動偵測。\n`message` | 自定提交訊息 (預設是 `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## Heroku\n\n安裝 [hexo-deployer-heroku]。\n\n``` bash\n$ npm install hexo-deployer-heroku --save\n```\n\n修改設定。\n\n``` yaml\ndeploy:\n  type: heroku\n  repo: <repository url>\n  message: [message]\n```\n\n選項 | 描述\n--- | ---\n`repo` | Heroku 儲存庫（Repository）網址\n`message` | 自定提交訊息 (預設是 `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## Rsync\n\n安裝 [hexo-deployer-rsync]。\n\n``` bash\n$ npm install hexo-deployer-rsync --save\n```\n\n修改設定。\n\n``` yaml\ndeploy:\n  type: rsync\n  host: <host>\n  user: <user>\n  root: <root>\n  port: [port]\n  delete: [true|false]\n  verbose: [true|false]\n  ignore_errors: [true|false]\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`host` | 遠端主機的位址 |\n`user` | 使用者名稱 |\n`root` | 遠端主機的根目錄 |\n`port` | 連接埠 | 22\n`delete` | 刪除遠端主機上的舊檔案 | true\n`verbose` | 顯示除錯訊息 | true\n`ignore_errors` | 忽略錯誤 | false\n\n## OpenShift\n\n安裝 [hexo-deployer-openshift]。\n\n``` bash\n$ npm install hexo-deployer-openshift --save\n```\n\n修改設定。\n\n``` yaml\ndeploy:\n  type: openshift\n  repo: <repository url>\n  message: [message]\n```\n\n選項 | 描述\n--- | ---\n`repo` | OpenShift 儲存庫（Repository）網址\n`message` | 自定提交訊息 (預設是 `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## FTPSync\n\n安裝 [hexo-deployer-ftpsync]。\n\n``` bash\n$ npm install hexo-deployer-ftpsync --save\n```\n\n修改設定。\n\n``` yaml\ndeploy:\n  type: ftpsync\n  host: <host>\n  user: <user>\n  pass: <password>\n  remote: [remote]\n  port: [port]\n  ignore: [ignore]\n  connections: [connections]\n  verbose: [true|false]\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`host` | 遠端主機位址 |\n`user` | 使用者名稱 |\n`pass` | 密碼 |\n`remote` | 遠端主機的根目錄 | `/`\n`port` | 連接埠 | 21\n`ignore` | 忽略本機或遠端的檔案 |\n`connections` | 連接數 | 1\n`verbose` | 顯示除錯訊息 | false\n\n## 其他方法\n\nHexo 產生的所有檔案都放在 `public` 資料夾，您可以將它們拷貝到您喜歡的地方。\n\n[hexo-deployer-git]: https://github.com/hexojs/hexo-deployer-git\n[hexo-deployer-heroku]: https://github.com/hexojs/hexo-deployer-heroku\n[hexo-deployer-rsync]: https://github.com/hexojs/hexo-deployer-rsync\n[hexo-deployer-openshift]: https://github.com/hexojs/hexo-deployer-openshift\n[hexo-deployer-ftpsync]: https://github.com/hexojs/hexo-deployer-ftpsync\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/ZIltKlkG4S0\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>Hexo 提供了快速方便的一鍵佈署功能，讓您只需一個指令就能將網站佈署到伺服器上。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>在開始之前，您必須先在 <code>_config.yml</code> 中修改設定，一個正確的部署設定中至少要有 <code>type</code> 欄位，例如：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br></pre></td></tr></table></figure>\n<p>您可同時使用多個 deployer，Hexo 會依照順序執行每個 deployer。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> </span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><p>安裝 <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>修改設定。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">[branch]</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>儲存庫（Repository）網址</td>\n</tr>\n<tr>\n<td><code>branch</code></td>\n<td>分支名稱。如果您使用的是 GitHub 或 GitCafe 的話，程式會嘗試自動偵測。</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>自定提交訊息 (預設是 <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Heroku\"><a href=\"#Heroku\" class=\"headerlink\" title=\"Heroku\"></a>Heroku</h2><p>安裝 <a href=\"https://github.com/hexojs/hexo-deployer-heroku\" target=\"_blank\" rel=\"noopener\">hexo-deployer-heroku</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-heroku --save</span><br></pre></td></tr></table></figure>\n<p>修改設定。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>Heroku 儲存庫（Repository）網址</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>自定提交訊息 (預設是 <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Rsync\"><a href=\"#Rsync\" class=\"headerlink\" title=\"Rsync\"></a>Rsync</h2><p>安裝 <a href=\"https://github.com/hexojs/hexo-deployer-rsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-rsync</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-rsync --save</span><br></pre></td></tr></table></figure>\n<p>修改設定。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">rsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  root:</span> <span class=\"string\">&lt;root&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  delete:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore_errors:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>遠端主機的位址</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>使用者名稱</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>遠端主機的根目錄</td>\n<td></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>連接埠</td>\n<td>22</td>\n</tr>\n<tr>\n<td><code>delete</code></td>\n<td>刪除遠端主機上的舊檔案</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>顯示除錯訊息</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>ignore_errors</code></td>\n<td>忽略錯誤</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"OpenShift\"><a href=\"#OpenShift\" class=\"headerlink\" title=\"OpenShift\"></a>OpenShift</h2><p>安裝 <a href=\"https://github.com/hexojs/hexo-deployer-openshift\" target=\"_blank\" rel=\"noopener\">hexo-deployer-openshift</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-openshift --save</span><br></pre></td></tr></table></figure>\n<p>修改設定。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">openshift</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>OpenShift 儲存庫（Repository）網址</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>自定提交訊息 (預設是 <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"FTPSync\"><a href=\"#FTPSync\" class=\"headerlink\" title=\"FTPSync\"></a>FTPSync</h2><p>安裝 <a href=\"https://github.com/hexojs/hexo-deployer-ftpsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-ftpsync</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-ftpsync --save</span><br></pre></td></tr></table></figure>\n<p>修改設定。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">ftpsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  pass:</span> <span class=\"string\">&lt;password&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  remote:</span> <span class=\"string\">[remote]</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore:</span> <span class=\"string\">[ignore]</span></span><br><span class=\"line\"><span class=\"attr\">  connections:</span> <span class=\"string\">[connections]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>遠端主機位址</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>使用者名稱</td>\n<td></td>\n</tr>\n<tr>\n<td><code>pass</code></td>\n<td>密碼</td>\n<td></td>\n</tr>\n<tr>\n<td><code>remote</code></td>\n<td>遠端主機的根目錄</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>連接埠</td>\n<td>21</td>\n</tr>\n<tr>\n<td><code>ignore</code></td>\n<td>忽略本機或遠端的檔案</td>\n<td></td>\n</tr>\n<tr>\n<td><code>connections</code></td>\n<td>連接數</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>顯示除錯訊息</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"其他方法\"><a href=\"#其他方法\" class=\"headerlink\" title=\"其他方法\"></a>其他方法</h2><p>Hexo 產生的所有檔案都放在 <code>public</code> 資料夾，您可以將它們拷貝到您喜歡的地方。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6aj007gkoeobvthixk6",
				"title": "產生檔案",
				"markdown": "使用 Hexo 產生靜態檔案非常快速而且簡單。\n\n``` bash\n$ hexo generate\n```\n\n### 監看檔案變更\n\nHexo 能夠監看檔案變更並立即重新產生靜態檔案，在建立時會比對檔案的 SHA1 checksum，只有變動的檔案才會寫入。\n\n``` bash\n$ hexo generate --watch\n```\n\n### 完成後佈署\n\n您可執行下列的其中一個指令，讓 Hexo 在建立完畢後自動佈署網站，兩個指令的作用是相同的。\n\n``` bash\n$ hexo generate --deploy\n$ hexo deploy --generate\n```",
				"html": "<p>使用 Hexo 產生靜態檔案非常快速而且簡單。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<h3 id=\"監看檔案變更\"><a href=\"#監看檔案變更\" class=\"headerlink\" title=\"監看檔案變更\"></a>監看檔案變更</h3><p>Hexo 能夠監看檔案變更並立即重新產生靜態檔案，在建立時會比對檔案的 SHA1 checksum，只有變動的檔案才會寫入。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --watch</span><br></pre></td></tr></table></figure>\n<h3 id=\"完成後佈署\"><a href=\"#完成後佈署\" class=\"headerlink\" title=\"完成後佈署\"></a>完成後佈署</h3><p>您可執行下列的其中一個指令，讓 Hexo 在建立完畢後自動佈署網站，兩個指令的作用是相同的。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --deploy</span><br><span class=\"line\">$ hexo deploy --generate</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ak007hkoeoh1ans1vu",
				"title": "文件",
				"markdown": "歡迎使用 Hexo，此文件將幫助您快速開始使用。如果您在使用途中遇到任何問題，您可以在 [解決問題](troubleshooting.html) 中找到解答，或者也可以在 [GitHub](https://github.com/hexojs/hexo/issues) 或 [Google Group](https://groups.google.com/group/hexo) 上詢問。\n\n{% youtube bCj0iVVqkSg %}\n\n## 什麼是 Hexo？\n\nHexo 是一個快速、簡單且強大的網誌框架。Hexo 使用 [Markdown](http://daringfireball.net/projects/markdown/)（或其他渲染引擎）解析您的文章，並在幾秒鐘內，透過漂亮的主題產生靜態檔案。\n\n## 安裝\n\n讓 Hexo 準備就緒僅需幾分鐘，若您在安裝時遭遇問題而且找不到任何解決方式，請 [回報問題](https://github.com/hexojs/hexo/issues)，我會試著解決您的問題。\n\n### 安裝需求\n\n安裝 Hexo 相當簡單；然而，在安裝前您必須先檢查下列您的電腦是否已經安裝下列軟體：\n\n- [Node.js](http://nodejs.org/)\n- [Git](http://git-scm.com/)\n\n若您的電腦已經安裝上述的必備軟體，那麼恭喜您！只需要透過 npm 即可完成 Hexo 的安裝。\n\n``` bash\n$ npm install -g hexo-cli\n```\n\n如果您的電腦尚未安裝必備軟體的話，請根據下列的安裝指示來完成安裝。\n\n{% note warn Mac 使用者 %}\n您在編譯時可能會碰到問題，請先至 App Store 安裝 Xcode，一旦 Xcode 安裝完成後，開啟它並前往 **Preferences -> Download -> Command Line Tools -> Install** 安裝命令列工具。\n{% endnote %}\n\n### 安裝 Git\n\n- Windows：下載並安裝 [git](https://git-scm.com/download/win).\n- Mac：使用 [Homebrew](http://mxcl.github.com/homebrew/), [MacPorts](http://www.macports.org/) 或 [安裝程式](http://sourceforge.net/projects/git-osx-installer/) 安裝。\n- Linux (Ubuntu, Debian)：`sudo apt-get install git-core`\n- Linux (Fedora, Red Hat, CentOS)：`sudo yum install git-core`\n\n### 安裝 Node.js\n\n安裝 Node.js 的最佳方式是透過 [Node Version Manager](https://github.com/creationix/nvm)。感謝 nvm 的開發者提供簡易自動安裝的腳本指令：\n\ncURL:\n\n``` bash\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n\nWget:\n\n``` bash\n$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n\n一旦安裝完成，重啟終端機並執行下列指令以安裝 Node.js。\n\n``` bash\n$ nvm install stable\n```\n\n或者您也可以下載 [安裝程式](http://nodejs.org/) 來安裝。\n\n### 安裝 Hexo\n\n一旦所有的必備軟體都安裝完畢後，即可透過 npm 安裝 Hexo：\n\n``` bash\n$ npm install -g hexo-cli\n```\n",
				"html": "<p>歡迎使用 Hexo，此文件將幫助您快速開始使用。如果您在使用途中遇到任何問題，您可以在 <a href=\"troubleshooting.html\">解決問題</a> 中找到解答，或者也可以在 <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> 或 <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a> 上詢問。</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/bCj0iVVqkSg\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h2 id=\"什麼是-Hexo？\"><a href=\"#什麼是-Hexo？\" class=\"headerlink\" title=\"什麼是 Hexo？\"></a>什麼是 Hexo？</h2><p>Hexo 是一個快速、簡單且強大的網誌框架。Hexo 使用 <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a>（或其他渲染引擎）解析您的文章，並在幾秒鐘內，透過漂亮的主題產生靜態檔案。</p>\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><p>讓 Hexo 準備就緒僅需幾分鐘，若您在安裝時遭遇問題而且找不到任何解決方式，請 <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">回報問題</a>，我會試著解決您的問題。</p>\n<h3 id=\"安裝需求\"><a href=\"#安裝需求\" class=\"headerlink\" title=\"安裝需求\"></a>安裝需求</h3><p>安裝 Hexo 相當簡單；然而，在安裝前您必須先檢查下列您的電腦是否已經安裝下列軟體：</p>\n<ul>\n<li><a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node.js</a></li>\n<li><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></li>\n</ul>\n<p>若您的電腦已經安裝上述的必備軟體，那麼恭喜您！只需要透過 npm 即可完成 Hexo 的安裝。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>如果您的電腦尚未安裝必備軟體的話，請根據下列的安裝指示來完成安裝。</p>\n<blockquote class=\"note warn\"><strong class=\"note-title\">Mac 使用者</strong><p>您在編譯時可能會碰到問題，請先至 App Store 安裝 Xcode，一旦 Xcode 安裝完成後，開啟它並前往 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安裝命令列工具。</p>\n</blockquote>\n<h3 id=\"安裝-Git\"><a href=\"#安裝-Git\" class=\"headerlink\" title=\"安裝 Git\"></a>安裝 Git</h3><ul>\n<li>Windows：下載並安裝 <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a>.</li>\n<li>Mac：使用 <a href=\"http://mxcl.github.com/homebrew/\" target=\"_blank\" rel=\"noopener\">Homebrew</a>, <a href=\"http://www.macports.org/\" target=\"_blank\" rel=\"noopener\">MacPorts</a> 或 <a href=\"http://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"noopener\">安裝程式</a> 安裝。</li>\n<li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li>\n<li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li>\n</ul>\n<h3 id=\"安裝-Node-js\"><a href=\"#安裝-Node-js\" class=\"headerlink\" title=\"安裝 Node.js\"></a>安裝 Node.js</h3><p>安裝 Node.js 的最佳方式是透過 <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">Node Version Manager</a>。感謝 nvm 的開發者提供簡易自動安裝的腳本指令：</p>\n<p>cURL:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<p>Wget:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<p>一旦安裝完成，重啟終端機並執行下列指令以安裝 Node.js。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ nvm install stable</span><br></pre></td></tr></table></figure>\n<p>或者您也可以下載 <a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">安裝程式</a> 來安裝。</p>\n<h3 id=\"安裝-Hexo\"><a href=\"#安裝-Hexo\" class=\"headerlink\" title=\"安裝 Hexo\"></a>安裝 Hexo</h3><p>一旦所有的必備軟體都安裝完畢後，即可透過 npm 安裝 Hexo：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ak007ikoeo7rcs1pl0",
				"title": "國際化（i18n）",
				"markdown": "若要讓您的網站以不同語言呈現，您可使用國際化（internationalization）功能。請先在 `_config.yml` 中調整 `language` 設定，這代表的是預設語言，您也可設定多個語言來調整預設語言的順位。\n\n``` yaml\nlanguage: zh-tw\n\nlanguage: \n- zh-tw\n- en\n```\n\n### 語言檔案\n\n語言檔案可以 YAML 或 JSON 呈現，並放在主題資料夾中的 `languages` 資料夾。您可在語言檔案中使用 [printf 格式](https://github.com/alexei/sprintf.js)。\n\n### 模板\n\n在模板中，透過 `__` 或 `_p` 輔助函數，即可取得翻譯後的字串，前者用於一般使用；而後者用於複數字串。例如：\n\n``` yaml en.yml\nindex:\n  title: Home\n  add: Add\n  video:\n    zero: No videos\n    one: One video\n    other: %d videos\n```\n\n``` js\n<%= __('index.title') %>\n// Home\n\n<%= _p('index.video', 3) %>\n// 3 videos\n```\n\n### 路徑\n\n您可在 front-matter 中指定該頁面的語言，也可在 `_config.yml` 中修改 `i18n_dir` 設定，讓 Hexo 自動偵測。\n\n``` yaml\ni18n_dir: :lang\n```\n\n`i18n_dir` 的預設值是 `:lang`，也就是說 Hexo 會擷取網址中的第一段以偵測語言，舉例來說：\n\n``` plain\n/index.html => en\n/archives/index.html => en\n/zh-tw/index.html => zh-tw\n```\n\n擷取到的字串唯有在語言檔存在的情況下，才會被當作是語言，因此例二 `/archives/index.html` 中的 `archives` 就不被當成是語言。",
				"html": "<p>若要讓您的網站以不同語言呈現，您可使用國際化（internationalization）功能。請先在 <code>_config.yml</code> 中調整 <code>language</code> 設定，這代表的是預設語言，您也可設定多個語言來調整預設語言的順位。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-tw</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">language:</span> </span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">zh-tw</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"語言檔案\"><a href=\"#語言檔案\" class=\"headerlink\" title=\"語言檔案\"></a>語言檔案</h3><p>語言檔案可以 YAML 或 JSON 呈現，並放在主題資料夾中的 <code>languages</code> 資料夾。您可在語言檔案中使用 <a href=\"https://github.com/alexei/sprintf.js\" target=\"_blank\" rel=\"noopener\">printf 格式</a>。</p>\n<h3 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h3><p>在模板中，透過 <code>__</code> 或 <code>_p</code> 輔助函數，即可取得翻譯後的字串，前者用於一般使用；而後者用於複數字串。例如：</p>\n<figure class=\"highlight yaml\"><figcaption><span>en.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">index:</span></span><br><span class=\"line\"><span class=\"attr\">  title:</span> <span class=\"string\">Home</span></span><br><span class=\"line\"><span class=\"attr\">  add:</span> <span class=\"string\">Add</span></span><br><span class=\"line\"><span class=\"attr\">  video:</span></span><br><span class=\"line\"><span class=\"attr\">    zero:</span> <span class=\"literal\">No</span> <span class=\"string\">videos</span></span><br><span class=\"line\"><span class=\"attr\">    one:</span> <span class=\"string\">One</span> <span class=\"string\">video</span></span><br><span class=\"line\"><span class=\"attr\">    other:</span> <span class=\"string\">%d</span> <span class=\"string\">videos</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%= __(<span class=\"string\">'index.title'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Home</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%= _p(<span class=\"string\">'index.video'</span>, <span class=\"number\">3</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 3 videos</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"路徑\"><a href=\"#路徑\" class=\"headerlink\" title=\"路徑\"></a>路徑</h3><p>您可在 front-matter 中指定該頁面的語言，也可在 <code>_config.yml</code> 中修改 <code>i18n_dir</code> 設定，讓 Hexo 自動偵測。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">i18n_dir:</span> <span class=\"string\">:lang</span></span><br></pre></td></tr></table></figure>\n<p><code>i18n_dir</code> 的預設值是 <code>:lang</code>，也就是說 Hexo 會擷取網址中的第一段以偵測語言，舉例來說：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">/index.html =&gt; en</span><br><span class=\"line\">/archives/index.html =&gt; en</span><br><span class=\"line\">/zh-tw/index.html =&gt; zh-tw</span><br></pre></td></tr></table></figure>\n<p>擷取到的字串唯有在語言檔存在的情況下，才會被當作是語言，因此例二 <code>/archives/index.html</code> 中的 <code>archives</code> 就不被當成是語言。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ak007jkoeowrr9wkj0",
				"title": "永久連結（Permalinks）",
				"markdown": "您可以在設定中調整網站的永久連結。\n\n### 變數\n\n除了下列變數外，您還可使用 Front-matter 中的所有屬性。\n\n變數 | 描述\n--- | ---\n`:year` | 文章的發表年份（4 位數）\n`:month` | 文章的發表月份（2 位數）\n`:i_month` | 文章的發表月份（去掉開頭的零）\n`:day` | 文章的發表日期 (2 位數)\n`:i_day` | 文章的發表日期（去掉開頭的零）\n`:title` | 檔案名稱\n`:id` | 文章 ID\n`:category` | 分類。如果文章沒有分類，則是 `default_category` 設定。\n\n您可在 `permalink_defaults` 設定中調整永久連結中各變數的預設值：\n\n``` yaml\npermalink_defaults:\n  lang: en\n```\n\n### 範例\n\n假設 `source/_posts` 資料夾中有個 `hello-world.md`，包含以下內容：\n\n``` yaml\ntitle: Hello World\ndate: 2013-07-14 17:01:34\ncategories:\n- foo\n- bar\n```\n\n設定 | 結果\n--- | ---\n`:year/:month/:day/:title/` | 2013/07/14/hello-world\n`:year-:month-:day-:title.html` | 2013-07-14-hello-world.html\n`:category/:title` | foo/bar/hello-world\n\n### 多語系支援\n\n若要建立一個多語系的網站，您可修改 `new_post_name` 和 `permalink` 設定，如下：\n\n``` yaml\nnew_post_name: :lang/:title.md\npermalink: :lang/:title/\n```\n\n當您建立新文章時，文章會被儲存至：\n\n``` bash\n$ hexo new \"Hello World\" --lang tw\n# => source/_posts/tw/Hello-World.md\n```\n\n而網址會是：\n\n``` plain\nhttp://localhost:4000/tw/hello-world/\n```",
				"html": "<p>您可以在設定中調整網站的永久連結。</p>\n<h3 id=\"變數\"><a href=\"#變數\" class=\"headerlink\" title=\"變數\"></a>變數</h3><p>除了下列變數外，您還可使用 Front-matter 中的所有屬性。</p>\n<table>\n<thead>\n<tr>\n<th>變數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year</code></td>\n<td>文章的發表年份（4 位數）</td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>文章的發表月份（2 位數）</td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>文章的發表月份（去掉開頭的零）</td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>文章的發表日期 (2 位數)</td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>文章的發表日期（去掉開頭的零）</td>\n</tr>\n<tr>\n<td><code>:title</code></td>\n<td>檔案名稱</td>\n</tr>\n<tr>\n<td><code>:id</code></td>\n<td>文章 ID</td>\n</tr>\n<tr>\n<td><code>:category</code></td>\n<td>分類。如果文章沒有分類，則是 <code>default_category</code> 設定。</td>\n</tr>\n</tbody>\n</table>\n<p>您可在 <code>permalink_defaults</code> 設定中調整永久連結中各變數的預設值：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">permalink_defaults:</span></span><br><span class=\"line\"><span class=\"attr\">  lang:</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h3><p>假設 <code>source/_posts</code> 資料夾中有個 <code>hello-world.md</code>，包含以下內容：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"bullet\">-07</span><span class=\"bullet\">-14</span> <span class=\"number\">17</span><span class=\"string\">:01:34</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">foo</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">bar</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>設定</th>\n<th>結果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year/:month/:day/:title/</code></td>\n<td>2013/07/14/hello-world</td>\n</tr>\n<tr>\n<td><code>:year-:month-:day-:title.html</code></td>\n<td>2013-07-14-hello-world.html</td>\n</tr>\n<tr>\n<td><code>:category/:title</code></td>\n<td>foo/bar/hello-world</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"多語系支援\"><a href=\"#多語系支援\" class=\"headerlink\" title=\"多語系支援\"></a>多語系支援</h3><p>若要建立一個多語系的網站，您可修改 <code>new_post_name</code> 和 <code>permalink</code> 設定，如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:lang/:title.md</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:lang/:title/</span></span><br></pre></td></tr></table></figure>\n<p>當您建立新文章時，文章會被儲存至：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"Hello World\"</span> --lang tw</span><br><span class=\"line\"><span class=\"comment\"># =&gt; source/_posts/tw/Hello-World.md</span></span><br></pre></td></tr></table></figure>\n<p>而網址會是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://localhost:4000/tw/hello-world/</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ak007kkoeoocrh1dur",
				"title": "轉移",
				"markdown": "## RSS\n\n首先，安裝 `hexo-migrator-rss` 外掛。\n\n``` bash\n$ npm install hexo-migrator-rss --save\n```\n\n一旦外掛安裝完成，執行下列指令，從 RSS 轉移所有文章。`source` 可以是檔案路徑或網址。\n\n``` bash\n$ hexo migrate rss <source>\n```\n\n## Jekyll\n\n把 `_posts` 資料夾內的所有檔案複製至 `source/_posts` 資料夾，並在 `_config.yml` 中修改 `new_post_name` 設定。\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## Octopress\n\n把 Octopress 的 `source/_posts` 資料夾內的所有檔案轉移至 Hexo 的 `source/_posts` 資料夾，並修改 `_config.yml` 中的 `new_post_name` 設定。\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## WordPress\n\n首先，安裝 `hexo-migrator-wordpress` 外掛。\n\n``` bash\n$ npm install hexo-migrator-wordpress --save\n```\n\n由 WordPress 儀表板的 \"工具\" → \"匯出\" → \"WordPress\" 匯出網站資料 (詳情請參見 [WordPress 支援頁](http://en.support.wordpress.com/export/))。\n\n接著執行：\n\n``` bash\n$ hexo migrate wordpress <source>\n```\n\n`source` 為 WordPress 匯出檔案的路徑或網址：\n\n## Joomla\n\n首先，安裝 `hexo-migrator-joomla` 外掛\n\n```bash\n$ npm install hexo-migrator-joomla --save\n```\n\n並使用 [J2XML](http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D) 元件匯出你的 Joomla 文章。\n\n接著執行：\n\n```bash\n$ hexo migrate joomla <source>\n```\n\n`source` 為 Joomla 匯出檔案的路徑或網址。",
				"html": "<h2 id=\"RSS\"><a href=\"#RSS\" class=\"headerlink\" title=\"RSS\"></a>RSS</h2><p>首先，安裝 <code>hexo-migrator-rss</code> 外掛。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-rss --save</span><br></pre></td></tr></table></figure>\n<p>一旦外掛安裝完成，執行下列指令，從 RSS 轉移所有文章。<code>source</code> 可以是檔案路徑或網址。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate rss &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Jekyll\"><a href=\"#Jekyll\" class=\"headerlink\" title=\"Jekyll\"></a>Jekyll</h2><p>把 <code>_posts</code> 資料夾內的所有檔案複製至 <code>source/_posts</code> 資料夾，並在 <code>_config.yml</code> 中修改 <code>new_post_name</code> 設定。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Octopress\"><a href=\"#Octopress\" class=\"headerlink\" title=\"Octopress\"></a>Octopress</h2><p>把 Octopress 的 <code>source/_posts</code> 資料夾內的所有檔案轉移至 Hexo 的 <code>source/_posts</code> 資料夾，並修改 <code>_config.yml</code> 中的 <code>new_post_name</code> 設定。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"WordPress\"><a href=\"#WordPress\" class=\"headerlink\" title=\"WordPress\"></a>WordPress</h2><p>首先，安裝 <code>hexo-migrator-wordpress</code> 外掛。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-wordpress --save</span><br></pre></td></tr></table></figure>\n<p>由 WordPress 儀表板的 “工具” → “匯出” → “WordPress” 匯出網站資料 (詳情請參見 <a href=\"http://en.support.wordpress.com/export/\" target=\"_blank\" rel=\"noopener\">WordPress 支援頁</a>)。</p>\n<p>接著執行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate wordpress &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p><code>source</code> 為 WordPress 匯出檔案的路徑或網址：</p>\n<h2 id=\"Joomla\"><a href=\"#Joomla\" class=\"headerlink\" title=\"Joomla\"></a>Joomla</h2><p>首先，安裝 <code>hexo-migrator-joomla</code> 外掛</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-joomla --save</span><br></pre></td></tr></table></figure>\n<p>並使用 <a href=\"http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D\" target=\"_blank\" rel=\"noopener\">J2XML</a> 元件匯出你的 Joomla 文章。</p>\n<p>接著執行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate joomla &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p><code>source</code> 為 Joomla 匯出檔案的路徑或網址。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6ak007lkoeoa1xxnufy",
				"title": "外掛",
				"markdown": "Hexo 有強大的外掛系統，使您能輕鬆擴展功能而不用修改核心模組的原始碼。在 Hexo 中有兩種形式的外掛：\n\n### 腳本（Scripts）\n\n如果您的程式碼很簡單，建議您撰寫腳本，您只需要把 JavaScript 檔案放到 `scripts` 資料夾，在啟動時就會自動載入一次。\n\n### 套件（Packages）\n\n如果您的程式碼較複雜，或是您想要發佈到 NPM 上，建議您撰寫套件。首先，在 `node_modules` 資料夾中建立資料夾，資料夾名稱開頭必須為 `hexo-`，如此一來 Hexo 才會在啟動時載入。\n\n資料夾內至少要包含 2 個檔案：一個是主程式，另一個是 `package.json`，描述套件的用途和相依套件。\n\n``` plain\n.\n├── index.js\n└── package.json\n```\n\n`package.json` 中至少要包含 `name`, `version`, `main` 屬性，例如：\n\n``` json package.json\n{\n  \"name\": \"hexo-my-plugin\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index\"\n}\n```\n\n### 工具\n\n您可善用 Hexo 提供的官方工具套件來加速開發：\n\n- [hexo-fs]：檔案 IO\n- [hexo-util]：工具程式\n- [hexo-i18n]：本地化（i18n）\n- [hexo-pagination]：產生分頁資料\n\n### 發佈\n\n當您完成外掛後，可以考慮將它發佈到 [外掛列表](/plugins)，讓更多人能夠使用您的外掛。發佈外掛的步驟和 [更新文件](contributing.html#更新文件) 非常類似。\n\n1. Fork [hexojs/site]\n2. 把檔案庫（repository）複製到電腦上，並安裝相依套件。\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. 編輯 `source/_data/plugins.yml`，在檔案中新增您的外掛，例如：\n\n    {% code %}\n    - name: hexo-server\n      description: Server module for Hexo.\n      link: https://github.com/hexojs/hexo-server\n      tags:\n        - official\n        - server\n        - console\n    {% endcode %}\n\n4. 推送（push）分支。\n5. 建立一個新的合併申請（pull request）。\n\n[hexo-fs]: https://github.com/hexojs/hexo-fs\n[hexo-util]: https://github.com/hexojs/hexo-util\n[hexo-i18n]: https://github.com/hexojs/hexo-i18n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<p>Hexo 有強大的外掛系統，使您能輕鬆擴展功能而不用修改核心模組的原始碼。在 Hexo 中有兩種形式的外掛：</p>\n<h3 id=\"腳本（Scripts）\"><a href=\"#腳本（Scripts）\" class=\"headerlink\" title=\"腳本（Scripts）\"></a>腳本（Scripts）</h3><p>如果您的程式碼很簡單，建議您撰寫腳本，您只需要把 JavaScript 檔案放到 <code>scripts</code> 資料夾，在啟動時就會自動載入一次。</p>\n<h3 id=\"套件（Packages）\"><a href=\"#套件（Packages）\" class=\"headerlink\" title=\"套件（Packages）\"></a>套件（Packages）</h3><p>如果您的程式碼較複雜，或是您想要發佈到 NPM 上，建議您撰寫套件。首先，在 <code>node_modules</code> 資料夾中建立資料夾，資料夾名稱開頭必須為 <code>hexo-</code>，如此一來 Hexo 才會在啟動時載入。</p>\n<p>資料夾內至少要包含 2 個檔案：一個是主程式，另一個是 <code>package.json</code>，描述套件的用途和相依套件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── index.js</span><br><span class=\"line\">└── package.json</span><br></pre></td></tr></table></figure>\n<p><code>package.json</code> 中至少要包含 <code>name</code>, <code>version</code>, <code>main</code> 屬性，例如：</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-my-plugin\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h3><p>您可善用 Hexo 提供的官方工具套件來加速開發：</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-fs\" target=\"_blank\" rel=\"noopener\">hexo-fs</a>：檔案 IO</li>\n<li><a href=\"https://github.com/hexojs/hexo-util\" target=\"_blank\" rel=\"noopener\">hexo-util</a>：工具程式</li>\n<li><a href=\"https://github.com/hexojs/hexo-i18n\" target=\"_blank\" rel=\"noopener\">hexo-i18n</a>：本地化（i18n）</li>\n<li><a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a>：產生分頁資料</li>\n</ul>\n<h3 id=\"發佈\"><a href=\"#發佈\" class=\"headerlink\" title=\"發佈\"></a>發佈</h3><p>當您完成外掛後，可以考慮將它發佈到 <a href=\"/plugins\">外掛列表</a>，讓更多人能夠使用您的外掛。發佈外掛的步驟和 <a href=\"contributing.html#更新文件\">更新文件</a> 非常類似。</p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>把檔案庫（repository）複製到電腦上，並安裝相依套件。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>編輯 <code>source/_data/plugins.yml</code>，在檔案中新增您的外掛，例如：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">- name: hexo-server</span><br><span class=\"line\">  description: Server module for Hexo.</span><br><span class=\"line\">  link: https://github.com/hexojs/hexo-server</span><br><span class=\"line\">  tags:</span><br><span class=\"line\">    - official</span><br><span class=\"line\">    - server</span><br><span class=\"line\">    - console</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>推送（push）分支。</p>\n</li>\n<li>建立一個新的合併申請（pull request）。</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6al007mkoeo32ruhpkq",
				"title": "Server",
				"markdown": "## [hexo-server]\n\nHexo 3 把伺服器獨立成個別模組，您必須先安裝 [hexo-server] 才能使用。\n\n``` bash\n$ npm install hexo-server --save\n```\n\n安裝完畢後，輸入以下指令以啟動伺服器，您的網站預設會執行於 `http://localhost:4000`，在伺服器啟動期間，Hexo 會監看檔案變動並自動更新，您無須重啟伺服器。\n\n``` bash\n$ hexo server\n```\n\n如果您想要變更連接埠，或是在執行時遇到了 `EADDRINUSE` 錯誤，可以在執行時使用 `-p` 選項指定其他連接埠。\n\n``` bash\n$ hexo server -p 5000\n```\n\n### 靜態模式\n\n在靜態模式下，伺服器只會處理 `public` 資料夾內的檔案，而且不會處理檔案變動，在執行時，您應該先自行執行 `hexo generate`，此模式通常用於生產環境（production）下。\n\n``` bash\n$ hexo server -s\n```\n\n### 自定 IP\n\n伺服器預設運作在 `0.0.0.0`，您可以覆蓋預設的 IP 設定。\n\n``` bash\n$ hexo server -i 192.168.1.1\n```\n\n## Pow\n\n[Pow] 是一個 Mac 系統上的零配置 Rack 伺服器，它也可作為一個簡單易用的靜態檔案伺服器來使用。\n\n### 安裝\n\n``` bash\n$ curl get.pow.cx | sh\n```\n\n### 設定\n\n在 `~/.pow` 資料夾建立連結（symlink）。\n\n``` bash\n$ cd ~/.pow\n$ ln -s /path/to/myapp\n```\n\n您的網站將會執行於 `http://myapp.dev`，網址是根據連結名稱而定。\n\n[hexo-server]: https://github.com/hexojs/hexo-server\n[Pow]: http://pow.cx/",
				"html": "<h2 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo-server\"></a><a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a></h2><p>Hexo 3 把伺服器獨立成個別模組，您必須先安裝 <a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a> 才能使用。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure>\n<p>安裝完畢後，輸入以下指令以啟動伺服器，您的網站預設會執行於 <code>http://localhost:4000</code>，在伺服器啟動期間，Hexo 會監看檔案變動並自動更新，您無須重啟伺服器。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>如果您想要變更連接埠，或是在執行時遇到了 <code>EADDRINUSE</code> 錯誤，可以在執行時使用 <code>-p</code> 選項指定其他連接埠。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h3 id=\"靜態模式\"><a href=\"#靜態模式\" class=\"headerlink\" title=\"靜態模式\"></a>靜態模式</h3><p>在靜態模式下，伺服器只會處理 <code>public</code> 資料夾內的檔案，而且不會處理檔案變動，在執行時，您應該先自行執行 <code>hexo generate</code>，此模式通常用於生產環境（production）下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -s</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定-IP\"><a href=\"#自定-IP\" class=\"headerlink\" title=\"自定 IP\"></a>自定 IP</h3><p>伺服器預設運作在 <code>0.0.0.0</code>，您可以覆蓋預設的 IP 設定。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -i 192.168.1.1</span><br></pre></td></tr></table></figure>\n<h2 id=\"Pow\"><a href=\"#Pow\" class=\"headerlink\" title=\"Pow\"></a>Pow</h2><p><a href=\"http://pow.cx/\" target=\"_blank\" rel=\"noopener\">Pow</a> 是一個 Mac 系統上的零配置 Rack 伺服器，它也可作為一個簡單易用的靜態檔案伺服器來使用。</p>\n<h3 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl get.pow.cx | sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"設定\"><a href=\"#設定\" class=\"headerlink\" title=\"設定\"></a>設定</h3><p>在 <code>~/.pow</code> 資料夾建立連結（symlink）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/.pow</span><br><span class=\"line\">$ ln -s /path/to/myapp</span><br></pre></td></tr></table></figure>\n<p>您的網站將會執行於 <code>http://myapp.dev</code>，網址是根據連結名稱而定。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6al007nkoeod89quegn",
				"title": "標籤外掛（Tag Plugins）",
				"markdown": "標籤外掛和 Front-matter 中的標籤不同，它們是用於在文章中快速插入特定內容的外掛。\n\n## Block Quote\n\n在文章中插入引言，可包含作者、來源和標題。\n\n**捷徑：** quote\n\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n**沒有提供參數，僅輸出普通的 blockquote**\n\n```\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n```\n\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n\n**引用書上的句子**\n\n```\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n```\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n**引用 Twitter**\n\n```\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n```\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n**引用網路上的文章**\n\n```\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n```\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n## Code Block\n\n在文章中插入程式碼。\n\n**捷徑：** code\n\n```\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n\n**普通的程式碼區塊**\n\n```\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**指定語言**\n\n```\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n```\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n\n**加上說明**\n\n```\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n```\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n\n**加上說明和網址**\n\n```\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n```\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n## Backtick Code Block\n\n另一種形式的程式碼區塊。\n\n{% raw %}\n&#96``[language] [title] [url] [link text]\ncode snippet\n&#96``\n{% endraw %}\n\n## Pull Quote\n\n在文章中插入 Pull quote。\n\n```\n{% pullquote [class] %}\ncontent\n{% endpullquote %}\n```\n\n## jsFiddle\n\n在文章中嵌入 jsFiddle。\n\n```\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\n\n## Gist\n\n在文章中嵌入 Gist。\n\n```\n{% gist gist_id [filename] %}\n```\n\n## iframe\n\n在文章中插入 iframe。\n\n```\n{% iframe url [width] [height] %}\n```\n\n## Image\n\n在文章中插入指定大小的圖片。\n\n```\n{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}\n```\n\n## Link\n\n在文章中插入連結，並在外連連結自動加上 `target=\"_blank\"` 屬性。\n\n```\n{% link text url [external] [title] %}\n```\n\n## Include Code\n\n插入 `source` 資料夾內的程式檔。\n\n```\n{% include_code [title] [lang:language] path/to/file %}\n```\n\n## Youtube\n\n在文章中插入 Youtube 影片。\n\n```\n{% youtube video_id %}\n```\n\n## Vimeo\n\n在文章中插入 Vimeo 影片。\n\n```\n{% vimeo video_id %}\n```\n\n## 引用文章\n\n引用其他文章的連結。\n\n```\n{% post_path slug %}\n{% post_link slug [title] %}\n```\n\n## 引用資產\n\n引用文章的資產。\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n## Raw\n\n如果您要在文章中插入 Swig 標籤，可以試著使用 Raw 標籤，以免發生解析異常。\n\n```\n{% raw %}\ncontent\n{% endraw %}\n```\n",
				"html": "<p>標籤外掛和 Front-matter 中的標籤不同，它們是用於在文章中快速插入特定內容的外掛。</p>\n<h2 id=\"Block-Quote\"><a href=\"#Block-Quote\" class=\"headerlink\" title=\"Block Quote\"></a>Block Quote</h2><p>在文章中插入引言，可包含作者、來源和標題。</p>\n<p><strong>捷徑：</strong> quote</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>沒有提供參數，僅輸出普通的 blockquote</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote %&#125;</span><br><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>\n</blockquote>\n<p><strong>引用書上的句子</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class=\"line\">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n<p><strong>引用 Twitter</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;</span><br><span class=\"line\">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\" target=\"_blank\" rel=\"noopener\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\" target=\"_blank\" rel=\"noopener\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<p><strong>引用網路上的文章</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</span><br><span class=\"line\">Every interaction is both precious and an opportunity to delight.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\" target=\"_blank\" rel=\"noopener\">Welcome to Island Marketing</a></cite></footer></blockquote>\n<h2 id=\"Code-Block\"><a href=\"#Code-Block\" class=\"headerlink\" title=\"Code Block\"></a>Code Block</h2><p>在文章中插入程式碼。</p>\n<p><strong>捷徑：</strong> code</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class=\"line\">code snippet</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>普通的程式碼區塊</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock %&#125;</span><br><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br></pre></td></tr></table></figure>\n<p><strong>指定語言</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock lang:objc %&#125;</span><br><span class=\"line\">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"code\"><pre><span class=\"line\">[rectangle setX: <span class=\"number\">10</span> y: <span class=\"number\">10</span> width: <span class=\"number\">20</span> height: <span class=\"number\">20</span>];</span><br></pre></td></tr></table></figure>\n<p><strong>加上說明</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock Array.map %&#125;</span><br><span class=\"line\">array.map(callback[, thisArg])</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>\n<p><strong>加上說明和網址</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock _.compact http://underscorejs.org/#compact Underscore.js %&#125;</span><br><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>_.compact</span><a href=\"http://underscorejs.org/#compact\" target=\"_blank\" rel=\"noopener\">Underscore.js</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>\n<h2 id=\"Backtick-Code-Block\"><a href=\"#Backtick-Code-Block\" class=\"headerlink\" title=\"Backtick Code Block\"></a>Backtick Code Block</h2><p>另一種形式的程式碼區塊。</p>\n\n&#96``[language] [title] [url] [link text]\ncode snippet\n&#96``\n\n<h2 id=\"Pull-Quote\"><a href=\"#Pull-Quote\" class=\"headerlink\" title=\"Pull Quote\"></a>Pull Quote</h2><p>在文章中插入 Pull quote。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% pullquote [class] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"jsFiddle\"><a href=\"#jsFiddle\" class=\"headerlink\" title=\"jsFiddle\"></a>jsFiddle</h2><p>在文章中嵌入 jsFiddle。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h2><p>在文章中嵌入 Gist。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"iframe\"><a href=\"#iframe\" class=\"headerlink\" title=\"iframe\"></a>iframe</h2><p>在文章中插入 iframe。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2><p>在文章中插入指定大小的圖片。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><p>在文章中插入連結，並在外連連結自動加上 <code>target=&quot;_blank&quot;</code> 屬性。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-Code\"><a href=\"#Include-Code\" class=\"headerlink\" title=\"Include Code\"></a>Include Code</h2><p>插入 <code>source</code> 資料夾內的程式檔。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% include_code [title] [lang:language] path/to/file %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Youtube\"><a href=\"#Youtube\" class=\"headerlink\" title=\"Youtube\"></a>Youtube</h2><p>在文章中插入 Youtube 影片。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% youtube video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Vimeo\"><a href=\"#Vimeo\" class=\"headerlink\" title=\"Vimeo\"></a>Vimeo</h2><p>在文章中插入 Vimeo 影片。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% vimeo video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用文章\"><a href=\"#引用文章\" class=\"headerlink\" title=\"引用文章\"></a>引用文章</h2><p>引用其他文章的連結。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% post_path slug %&#125;</span><br><span class=\"line\">&#123;% post_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用資產\"><a href=\"#引用資產\" class=\"headerlink\" title=\"引用資產\"></a>引用資產</h2><p>引用文章的資產。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Raw\"><a href=\"#Raw\" class=\"headerlink\" title=\"Raw\"></a>Raw</h2><p>如果您要在文章中插入 Swig 標籤，可以試著使用 Raw 標籤，以免發生解析異常。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6am007okoeokhf4jly4",
				"title": "建立",
				"markdown": "\n{% youtube iJv4N5EdKJ4 %}\n\n一旦 Hexo 完成後，請執行下列指令，Hexo 會在指定資料夾中建立所有您需要的檔案。\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n建立完成後，專案資料夾會有下列檔案：\n\n``` plain\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\n網站 [配置](configuration.html) 檔案，您可以在此配置大部分的設定。\n\n### package.json\n\n應用程式資料。[EJS](http://embeddedjs.com/), [Stylus](http://learnboost.github.io/stylus/) 和 [Markdown](http://daringfireball.net/projects/markdown/) renderer 已預設安裝，您可以稍後移除。\n\n``` json package.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### scaffolds\n\n[鷹架](writing.html#鷹架（Scaffold）) 資料夾。當您建立新文章時，Hexo 會根據 scaffold 來建立檔案。\n\n### source\n\n原始檔案資料夾是放置內容的地方。檔案 / 資料夾名稱開頭為 `_` (底線) 和隱藏檔案會被忽略，除了 `_posts` 資料夾以外。Markdown 和 HTML 檔案會被處理並放到 `public` 資料夾，而其他檔案會被拷貝過去。\n\n### themes\n\n[主題](themes.html) 資料夾。Hexo 會根據主題來產生靜態檔案。\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/iJv4N5EdKJ4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>一旦 Hexo 完成後，請執行下列指令，Hexo 會在指定資料夾中建立所有您需要的檔案。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>建立完成後，專案資料夾會有下列檔案：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>網站 <a href=\"configuration.html\">配置</a> 檔案，您可以在此配置大部分的設定。</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>應用程式資料。<a href=\"http://embeddedjs.com/\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"http://learnboost.github.io/stylus/\" target=\"_blank\" rel=\"noopener\">Stylus</a> 和 <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a> renderer 已預設安裝，您可以稍後移除。</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-site\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"private\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"hexo\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-archive\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-category\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-index\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-tag\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-ejs\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-stylus\"</span>: <span class=\"string\">\"^0.2.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-marked\"</span>: <span class=\"string\">\"^0.2.4\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-server\"</span>: <span class=\"string\">\"^0.1.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p><a href=\"writing.html#鷹架（Scaffold）\">鷹架</a> 資料夾。當您建立新文章時，Hexo 會根據 scaffold 來建立檔案。</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>原始檔案資料夾是放置內容的地方。檔案 / 資料夾名稱開頭為 <code>_</code> (底線) 和隱藏檔案會被忽略，除了 <code>_posts</code> 資料夾以外。Markdown 和 HTML 檔案會被處理並放到 <code>public</code> 資料夾，而其他檔案會被拷貝過去。</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p><a href=\"themes.html\">主題</a> 資料夾。Hexo 會根據主題來產生靜態檔案。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6b2007pkoeohz0yyry8",
				"title": "主題",
				"markdown": "打造 Hexo 主題非常容易，您只要在 `themes` 資料夾內，新增一個資料夾，並修改 `_config.yml` 內的 `theme` 設定，即可切換主題。一個主題可能會有以下的結構：\n\n``` plain\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n### _config.yml\n\n主題的配置檔案。修改時會自動更新，無需重啟伺服器。\n\n### languages\n\n語言資料夾。請參見 [國際化 (i18n)](internationalization.html)。\n\n### layout\n\n佈局資料夾。用於放置主題的模板檔案，決定了網站內容的呈現方式，Hexo 內建 [Swig] 模板引擎，您可另外安裝外掛來獲得 [EJS]、[Haml] 或 [Jade] 支援，Hexo 根據模板檔案的副檔名來決定所使用的模板引擎，例如：\n\n``` plain\nEJS: layout.ejs\nSwig: layout.swig\n```\n\n您可參考 [模板](templates.html) 以獲得更多資訊。\n\n### scripts\n\n腳本資料夾。在啟動時，Hexo 會載入此資料夾內的 JavaScript 檔案，請參見 [外掛](plugins.html) 以獲得更多資訊。\n\n### source\n\n原始檔案資料夾，除了模板以外的 Asset，例如 CSS、JavaScript 檔案等，應該放在這個資料夾。檔案或資料夾開頭名稱為 `_`（底線）或隱藏檔案會被忽略。\n\n如果檔案可以被渲染的話，會經過處理再儲存到 `public` 資料夾，否則會直接拷貝到 `public` 資料夾。\n\n### 發佈\n\n當您完成主題後，可以考慮將它發佈到 [主題列表](/themes)，讓更多人能夠使用您的主題，在發佈前建議先進行 [主題單元測試](https://github.com/hexojs/hexo-theme-unit-test)，確保每一項功能都能正常運作。發佈主題的步驟和 [更新文件](contributing.html#更新文件) 非常類似。\n\n1. Fork [hexojs/site]\n2. 把檔案庫（repository）複製到電腦上，並安裝相依套件。\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. 編輯 `source/_data/themes.yml`，在檔案中新增您的主題，例如：\n\n    {% code %}\n    - name: landscape\n      description: A brand new default theme for Hexo.\n      link: https://github.com/hexojs/hexo-theme-landscape\n      preview: http://hexo.io/hexo-theme-landscape\n      tags:\n        - official\n        - responsive\n        - widget\n        - two_column\n        - one_column\n    {% endcode %}\n\n4. 在 `source/themes/screenshots` 新增同名的截圖檔案，圖片必須為 800x500 的 PNG 檔案。\n5. 推送（push）分支。\n6. 建立一個新的合併申請（pull request）。\n\n[EJS]: https://github.com/hexojs/hexo-renderer-ejs\n[Swig]: http://paularmstrong.github.com/swig/\n[Haml]: https://github.com/hexojs/hexo-renderer-haml\n[Jade]: https://github.com/hexojs/hexo-renderer-jade\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<p>打造 Hexo 主題非常容易，您只要在 <code>themes</code> 資料夾內，新增一個資料夾，並修改 <code>_config.yml</code> 內的 <code>theme</code> 設定，即可切換主題。一個主題可能會有以下的結構：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── languages</span><br><span class=\"line\">├── layout</span><br><span class=\"line\">├── scripts</span><br><span class=\"line\">└── source</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>主題的配置檔案。修改時會自動更新，無需重啟伺服器。</p>\n<h3 id=\"languages\"><a href=\"#languages\" class=\"headerlink\" title=\"languages\"></a>languages</h3><p>語言資料夾。請參見 <a href=\"internationalization.html\">國際化 (i18n)</a>。</p>\n<h3 id=\"layout\"><a href=\"#layout\" class=\"headerlink\" title=\"layout\"></a>layout</h3><p>佈局資料夾。用於放置主題的模板檔案，決定了網站內容的呈現方式，Hexo 內建 <a href=\"http://paularmstrong.github.com/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a> 模板引擎，您可另外安裝外掛來獲得 <a href=\"https://github.com/hexojs/hexo-renderer-ejs\" target=\"_blank\" rel=\"noopener\">EJS</a>、<a href=\"https://github.com/hexojs/hexo-renderer-haml\" target=\"_blank\" rel=\"noopener\">Haml</a> 或 <a href=\"https://github.com/hexojs/hexo-renderer-jade\" target=\"_blank\" rel=\"noopener\">Jade</a> 支援，Hexo 根據模板檔案的副檔名來決定所使用的模板引擎，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">EJS: layout.ejs</span><br><span class=\"line\">Swig: layout.swig</span><br></pre></td></tr></table></figure>\n<p>您可參考 <a href=\"templates.html\">模板</a> 以獲得更多資訊。</p>\n<h3 id=\"scripts\"><a href=\"#scripts\" class=\"headerlink\" title=\"scripts\"></a>scripts</h3><p>腳本資料夾。在啟動時，Hexo 會載入此資料夾內的 JavaScript 檔案，請參見 <a href=\"plugins.html\">外掛</a> 以獲得更多資訊。</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>原始檔案資料夾，除了模板以外的 Asset，例如 CSS、JavaScript 檔案等，應該放在這個資料夾。檔案或資料夾開頭名稱為 <code>_</code>（底線）或隱藏檔案會被忽略。</p>\n<p>如果檔案可以被渲染的話，會經過處理再儲存到 <code>public</code> 資料夾，否則會直接拷貝到 <code>public</code> 資料夾。</p>\n<h3 id=\"發佈\"><a href=\"#發佈\" class=\"headerlink\" title=\"發佈\"></a>發佈</h3><p>當您完成主題後，可以考慮將它發佈到 <a href=\"/themes\">主題列表</a>，讓更多人能夠使用您的主題，在發佈前建議先進行 <a href=\"https://github.com/hexojs/hexo-theme-unit-test\" target=\"_blank\" rel=\"noopener\">主題單元測試</a>，確保每一項功能都能正常運作。發佈主題的步驟和 <a href=\"contributing.html#更新文件\">更新文件</a> 非常類似。</p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>把檔案庫（repository）複製到電腦上，並安裝相依套件。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>編輯 <code>source/_data/themes.yml</code>，在檔案中新增您的主題，例如：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">- name: landscape</span><br><span class=\"line\">  description: A brand new default theme for Hexo.</span><br><span class=\"line\">  link: https://github.com/hexojs/hexo-theme-landscape</span><br><span class=\"line\">  preview: http://hexo.io/hexo-theme-landscape</span><br><span class=\"line\">  tags:</span><br><span class=\"line\">    - official</span><br><span class=\"line\">    - responsive</span><br><span class=\"line\">    - widget</span><br><span class=\"line\">    - two_column</span><br><span class=\"line\">    - one_column</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 <code>source/themes/screenshots</code> 新增同名的截圖檔案，圖片必須為 800x500 的 PNG 檔案。</p>\n</li>\n<li>推送（push）分支。</li>\n<li>建立一個新的合併申請（pull request）。</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6b2007qkoeo35kilksm",
				"title": "模版",
				"markdown": "模板決定了網站內容的呈現方式，每個主題至少都應包含一個 `index` 模板，以下是各頁面相對應的模板名稱：\n\n模板 | 用途 | Fallback\n--- | --- | ---\n`index` | 首頁 |\n`post` | 文章 | `index`\n`page` | 分頁 | `index`\n`archive` | 彙整 | `index`\n`category` | 分類彙整 | `archive`\n`tag` | 標籤彙整 | `archive`\n\n## 佈局（Layout）\n\n如果頁面結構類似，例如兩個模板都有頁首（Header）和頁尾（Footer），您可考慮透過「佈局」讓兩個模板共享相同的結構。一個佈局檔案必須要能顯示 `body` 變數的內容，如此一來模板的內容才會被顯示，舉例來說：\n\n``` html index.ejs\nindex\n```\n\n``` html layout.ejs\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n```\n\n產生：\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>index</body>\n</html>\n```\n\n每個模板預設都套用 `layout` 佈局，您可在 front-matter 指定其他佈局，或是設為 `false` 來關閉佈局功能，您甚至可在佈局中再使用其他佈局來建立巢狀佈局。\n\n## 局部模版（Partial）\n\n局部模板讓您在不同模板之間共享相同的組件，例如頁首（Header）、頁尾（Footer）或側邊欄（Sidebar）等，可利用局部模板功能分割為個別檔案，讓維護更加便利。舉例來說：\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\n產生：\n\n``` html\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n```\n\n### 區域變數\n\n您可以在模板中指定區域變數，就能在其他模板中使用。\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= title></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\n產生：\n\n``` html\n<h1 id=\"logo\">Hello World</h1>\n<div id=\"content\">Home page</div>\n```\n\n## 最佳化\n\n如果您的主題太過於複雜，或是需要產生的檔案量太過於龐大，可能會大幅降低效能，除了簡化主題外，您可以考慮 Hexo 2.7 新增的局部快取（Fragment Caching）功能。\n\n本功能借鑑於 [Ruby on Rails](http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching)，它儲存局部區塊的內容，下次便能直接使用快取內容，可以減少資料庫查詢並使產生速度更快。\n\n它可用於頁首、頁尾、側邊欄等資料不常變動的位置，舉例來說：\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\n如果您使用局部模板的話，可以更簡單：\n\n``` js\n<%- partial('header', {}, {cache: true});\n```\n\n但是，如果您開啟了 `relative_link` 設定的話，請勿使用局部快取功能，因為相對連結在每個頁面可能不同。",
				"html": "<p>模板決定了網站內容的呈現方式，每個主題至少都應包含一個 <code>index</code> 模板，以下是各頁面相對應的模板名稱：</p>\n<table>\n<thead>\n<tr>\n<th>模板</th>\n<th>用途</th>\n<th>Fallback</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>index</code></td>\n<td>首頁</td>\n<td></td>\n</tr>\n<tr>\n<td><code>post</code></td>\n<td>文章</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>分頁</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>archive</code></td>\n<td>彙整</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>分類彙整</td>\n<td><code>archive</code></td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td>標籤彙整</td>\n<td><code>archive</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"佈局（Layout）\"><a href=\"#佈局（Layout）\" class=\"headerlink\" title=\"佈局（Layout）\"></a>佈局（Layout）</h2><p>如果頁面結構類似，例如兩個模板都有頁首（Header）和頁尾（Footer），您可考慮透過「佈局」讓兩個模板共享相同的結構。一個佈局檔案必須要能顯示 <code>body</code> 變數的內容，如此一來模板的內容才會被顯示，舉例來說：</p>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">index</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>產生：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>每個模板預設都套用 <code>layout</code> 佈局，您可在 front-matter 指定其他佈局，或是設為 <code>false</code> 來關閉佈局功能，您甚至可在佈局中再使用其他佈局來建立巢狀佈局。</p>\n<h2 id=\"局部模版（Partial）\"><a href=\"#局部模版（Partial）\" class=\"headerlink\" title=\"局部模版（Partial）\"></a>局部模版（Partial）</h2><p>局部模板讓您在不同模板之間共享相同的組件，例如頁首（Header）、頁尾（Footer）或側邊欄（Sidebar）等，可利用局部模板功能分割為個別檔案，讓維護更加便利。舉例來說：</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>') %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>產生：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>My Site<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"區域變數\"><a href=\"#區域變數\" class=\"headerlink\" title=\"區域變數\"></a>區域變數</h3><p>您可以在模板中指定區域變數，就能在其他模板中使用。</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>', &#123;<span class=\"attr\">title:</span> '<span class=\"attr\">Hello</span> <span class=\"attr\">World</span>'&#125;) %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>產生：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"最佳化\"><a href=\"#最佳化\" class=\"headerlink\" title=\"最佳化\"></a>最佳化</h2><p>如果您的主題太過於複雜，或是需要產生的檔案量太過於龐大，可能會大幅降低效能，除了簡化主題外，您可以考慮 Hexo 2.7 新增的局部快取（Fragment Caching）功能。</p>\n<p>本功能借鑑於 <a href=\"http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\" target=\"_blank\" rel=\"noopener\">Ruby on Rails</a>，它儲存局部區塊的內容，下次便能直接使用快取內容，可以減少資料庫查詢並使產生速度更快。</p>\n<p>它可用於頁首、頁尾、側邊欄等資料不常變動的位置，舉例來說：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>如果您使用局部模板的話，可以更簡單：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p>但是，如果您開啟了 <code>relative_link</code> 設定的話，請勿使用局部快取功能，因為相對連結在每個頁面可能不同。</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6b3007rkoeo07ha7urg",
				"title": "解決問題",
				"markdown": "在使用 Hexo 時，您可能會遇到一些問題，下列的常見問題解答可能會對您有所幫助。如果您在這裡找不道解答，可以在 [GitHub](https://github.com/hexojs/hexo/issues) 或 [Google Group](https://groups.google.com/group/hexo) 上詢問。\n\n## YAML 解析錯誤\n\n``` plain\nJS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:\n      last_updated: Last updated: %s\n```\n\n如果 YAML 字串中包含冒號（`:`）的話，請加上引號。\n\n``` plain\nJS-YAML: bad indentation of a mapping entry at line 18, column 31:\n      last_updated:\"Last updated: %s\"\n```\n\n請確認您使用空白進行縮排（Soft tab），並確認冒號後有加上一個空格。\n\n您可參閱 [YAML 規格](http://www.yaml.org/spec/1.2/spec.html) 以取得更多資訊。\n\n## EMFILE 錯誤\n\n``` plain\nError: EMFILE, too many open files\n```\n\n雖然 Node.js 有非阻塞 I/O，同步 I/O 的數量仍被系統所限制，在產生大量靜態檔案的時候，您可能會碰到 EMFILE 錯誤，您可試著提高同步 I/O 的限制來解決此問題。\n\n``` bash\n$ ulimit -n 10000\n```\n\n## Git 佈署問題\n\n``` plain\nfatal: 'username.github.io' does not appear to be a git repository\n```\n\n請確認您已經在電腦上 [設定 git](https://help.github.com/articles/set-up-git)，或改用 HTTPS 儲存庫（repository）網址。\n\n## 伺服器問題\n\n``` plain\nError: listen EADDRINUSE\n```\n\n您可能同時開啟兩個 Hexo 伺服器，或者有其他應用程式正在佔用相同的連接埠，請試著修改 `port` 設定，或是在啟動 Hexo 伺服器時加上 `-p` 選項。\n\n``` bash\n$ hexo server -p 5000\n```\n\n## 外掛安裝問題\n\n``` plain\nnpm ERR! node-waf configure build\n```\n\n當您試著安裝以 C/C++ 或其他非 JavaScript 語言所撰寫的外掛時，可能會遭遇此問題，請確認您已經在電腦上安裝相對應的編譯器。\n\n## 在 Jade 或 Swig 遍歷資料\n\nHexo 使用 [Warehouse] 儲存資料，它不是一般陣列所以必須先轉型才能遍歷。\n\n```\n{% for post in site.posts.toArray() %}\n{% endfor %}\n```\n\n## 資料沒有更新\n\n有時資料可能沒有被更新，或是產生出的檔案與修改前的相同，您可試著清除快取並再試一次。\n\n``` bash\n$ hexo clean\n```\n\n## 脫逸（Escape）內容\n\nHexo 使用 [Nunjucks] 來解析文章（舊版本使用 [Swig]，兩者語法類似），內容若包含 `{% raw %}{{ }}{% endraw %}` 或 `{% raw %}{% %}{% endraw %}` 可能導致解析錯誤，您可以用 `raw` 標籤包裹來避免潛在問題發生。\n\n```\n{% raw %}\nHello {{ sensitive }}\n{% endraw %}\n```\n\n[Warehouse]: https://github.com/hexojs/warehouse\n[Swig]: http://paularmstrong.github.io/swig/\n[Nunjucks]: http://mozilla.github.io/nunjucks/",
				"html": "<p>在使用 Hexo 時，您可能會遇到一些問題，下列的常見問題解答可能會對您有所幫助。如果您在這裡找不道解答，可以在 <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> 或 <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a> 上詢問。</p>\n<h2 id=\"YAML-解析錯誤\"><a href=\"#YAML-解析錯誤\" class=\"headerlink\" title=\"YAML 解析錯誤\"></a>YAML 解析錯誤</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:</span><br><span class=\"line\">      last_updated: Last updated: %s</span><br></pre></td></tr></table></figure>\n<p>如果 YAML 字串中包含冒號（<code>:</code>）的話，請加上引號。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: bad indentation of a mapping entry at line 18, column 31:</span><br><span class=\"line\">      last_updated:&quot;Last updated: %s&quot;</span><br></pre></td></tr></table></figure>\n<p>請確認您使用空白進行縮排（Soft tab），並確認冒號後有加上一個空格。</p>\n<p>您可參閱 <a href=\"http://www.yaml.org/spec/1.2/spec.html\" target=\"_blank\" rel=\"noopener\">YAML 規格</a> 以取得更多資訊。</p>\n<h2 id=\"EMFILE-錯誤\"><a href=\"#EMFILE-錯誤\" class=\"headerlink\" title=\"EMFILE 錯誤\"></a>EMFILE 錯誤</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: EMFILE, too many open files</span><br></pre></td></tr></table></figure>\n<p>雖然 Node.js 有非阻塞 I/O，同步 I/O 的數量仍被系統所限制，在產生大量靜態檔案的時候，您可能會碰到 EMFILE 錯誤，您可試著提高同步 I/O 的限制來解決此問題。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ulimit</span> -n 10000</span><br></pre></td></tr></table></figure>\n<h2 id=\"Git-佈署問題\"><a href=\"#Git-佈署問題\" class=\"headerlink\" title=\"Git 佈署問題\"></a>Git 佈署問題</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">fatal: &apos;username.github.io&apos; does not appear to be a git repository</span><br></pre></td></tr></table></figure>\n<p>請確認您已經在電腦上 <a href=\"https://help.github.com/articles/set-up-git\" target=\"_blank\" rel=\"noopener\">設定 git</a>，或改用 HTTPS 儲存庫（repository）網址。</p>\n<h2 id=\"伺服器問題\"><a href=\"#伺服器問題\" class=\"headerlink\" title=\"伺服器問題\"></a>伺服器問題</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: listen EADDRINUSE</span><br></pre></td></tr></table></figure>\n<p>您可能同時開啟兩個 Hexo 伺服器，或者有其他應用程式正在佔用相同的連接埠，請試著修改 <code>port</code> 設定，或是在啟動 Hexo 伺服器時加上 <code>-p</code> 選項。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h2 id=\"外掛安裝問題\"><a href=\"#外掛安裝問題\" class=\"headerlink\" title=\"外掛安裝問題\"></a>外掛安裝問題</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm ERR! node-waf configure build</span><br></pre></td></tr></table></figure>\n<p>當您試著安裝以 C/C++ 或其他非 JavaScript 語言所撰寫的外掛時，可能會遭遇此問題，請確認您已經在電腦上安裝相對應的編譯器。</p>\n<h2 id=\"在-Jade-或-Swig-遍歷資料\"><a href=\"#在-Jade-或-Swig-遍歷資料\" class=\"headerlink\" title=\"在 Jade 或 Swig 遍歷資料\"></a>在 Jade 或 Swig 遍歷資料</h2><p>Hexo 使用 <a href=\"https://github.com/hexojs/warehouse\" target=\"_blank\" rel=\"noopener\">Warehouse</a> 儲存資料，它不是一般陣列所以必須先轉型才能遍歷。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% for post in site.posts.toArray() %&#125;</span><br><span class=\"line\">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"資料沒有更新\"><a href=\"#資料沒有更新\" class=\"headerlink\" title=\"資料沒有更新\"></a>資料沒有更新</h2><p>有時資料可能沒有被更新，或是產生出的檔案與修改前的相同，您可試著清除快取並再試一次。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<h2 id=\"脫逸（Escape）內容\"><a href=\"#脫逸（Escape）內容\" class=\"headerlink\" title=\"脫逸（Escape）內容\"></a>脫逸（Escape）內容</h2><p>Hexo 使用 <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> 來解析文章（舊版本使用 <a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a>，兩者語法類似），內容若包含 <code>{{ }}</code> 或 <code>{% %}</code> 可能導致解析錯誤，您可以用 <code>raw</code> 標籤包裹來避免潛在問題發生。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">Hello &#123;&#123; sensitive &#125;&#125;</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6b3007skoeorrsxvlar",
				"title": "變數",
				"markdown": "### 全局變數\n\n變數 | 描述\n--- | ---\n`site` | [網站變數](#網站變數)\n`page` | 針對該頁面的資訊以及 front-matter 所設定的變數。\n`config` | 網站配置\n`theme` | 主題配置。繼承自網站配置。\n`_` (單底線) | [Lodash] 函式庫\n`path` | 目前頁面的路徑（不含根路徑）\n`url` | 目前頁面的完整網址\n`env` | 環境變數\n\n### 網站變數\n\n變數 | 描述\n--- | ---\n`site.posts` | 所有文章\n`site.pages` | 所有分頁\n`site.categories` | 所有分類\n`site.tags` | 所有標籤\n\n### 頁面變數\n\n**文章（post, page, ...）**\n\n變數 | 描述\n--- | ---\n`page.title` | 文章標題\n`page.date` | 文章建立日期（[Moment.js] 物件）\n`page.updated` | 文章更新日期（[Moment.js] 物件）\n`page.categories` | 文章分類\n`page.tags` | 文章標籤\n`page.comments` | 留言是否開啟\n`page.layout` | 佈局名稱\n`page.content` | 文章的完整內容\n`page.excerpt` | 文章摘要\n`page.more` | 除了文章摘要的其餘內容\n`page.source` | 文章原始路徑\n`page.full_source` | 文章的完整原始路徑\n`page.path` | 文章網址（不含根路徑）。我們通常在主題中使用 `url_for(page.path)`。\n`page.permalink` | 文章的完整網址\n`page.prev` | 上一篇文章。如果此為第一篇文章則為 `null`。\n`page.next` | 下一篇文章。如果此為最後一篇文章則為 `null`。\n`page.raw` | 文章的原始內容\n`page.photos` | 文章的照片（用於相簿）\n`page.link` | 文章的外連連結（用於連結文章）\n\n**首頁（index）**\n\n變數 | 描述\n--- | ---\n`page.per_page` | 每頁顯示的文章數量\n`page.total` | 總頁數\n`page.current` | 目前頁數\n`page.current_url` | 目前分頁的網址\n`page.posts` | 本頁文章\n`page.prev` | 上一頁的頁數。如果此頁是第一頁的話則為 `0`。\n`page.prev_link` | 上一頁的連結。如果此頁是第一頁的話則為 `''`。\n`page.next` | 下一頁的頁數。如果此頁是最後一頁的話則為 `0`。\n`page.next_link` | 下一頁的網址。如果此頁是最後一頁的話則為 `''`。\n`page.path` | 目前頁面的路徑（不含根目錄）。我們通常在主題中使用 `url_for(page.path)`。\n\n**彙整 (archive)**：與 `index` 佈局相同，但新增以下變數。\n\n變數 | 描述\n--- | ---\n`archive` | 等於 `true`\n`year` | 彙整年份（4 位數）\n`month` | 彙整月份（不含開頭的零）\n\n**分類 (category)**：與 `index` 佈局相同，但新增以下變數。\n\n變數 | 描述\n--- | ---\n`category` | 分類名稱\n\n**標籤 (tag)**：與 `index` 佈局相同，但新增以下變數。\n\n變數 | 描述\n--- | ---\n`tag` | 標籤名稱\n\n[Lodash]: http://lodash.com/\n[Moment.js]: http://momentjs.com/",
				"html": "<h3 id=\"全局變數\"><a href=\"#全局變數\" class=\"headerlink\" title=\"全局變數\"></a>全局變數</h3><table>\n<thead>\n<tr>\n<th>變數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site</code></td>\n<td><a href=\"#網站變數\">網站變數</a></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>針對該頁面的資訊以及 front-matter 所設定的變數。</td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>網站配置</td>\n</tr>\n<tr>\n<td><code>theme</code></td>\n<td>主題配置。繼承自網站配置。</td>\n</tr>\n<tr>\n<td><code>_</code> (單底線)</td>\n<td><a href=\"http://lodash.com/\" target=\"_blank\" rel=\"noopener\">Lodash</a> 函式庫</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>目前頁面的路徑（不含根路徑）</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>目前頁面的完整網址</td>\n</tr>\n<tr>\n<td><code>env</code></td>\n<td>環境變數</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"網站變數\"><a href=\"#網站變數\" class=\"headerlink\" title=\"網站變數\"></a>網站變數</h3><table>\n<thead>\n<tr>\n<th>變數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site.posts</code></td>\n<td>所有文章</td>\n</tr>\n<tr>\n<td><code>site.pages</code></td>\n<td>所有分頁</td>\n</tr>\n<tr>\n<td><code>site.categories</code></td>\n<td>所有分類</td>\n</tr>\n<tr>\n<td><code>site.tags</code></td>\n<td>所有標籤</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"頁面變數\"><a href=\"#頁面變數\" class=\"headerlink\" title=\"頁面變數\"></a>頁面變數</h3><p><strong>文章（post, page, …）</strong></p>\n<table>\n<thead>\n<tr>\n<th>變數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.title</code></td>\n<td>文章標題</td>\n</tr>\n<tr>\n<td><code>page.date</code></td>\n<td>文章建立日期（<a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 物件）</td>\n</tr>\n<tr>\n<td><code>page.updated</code></td>\n<td>文章更新日期（<a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 物件）</td>\n</tr>\n<tr>\n<td><code>page.categories</code></td>\n<td>文章分類</td>\n</tr>\n<tr>\n<td><code>page.tags</code></td>\n<td>文章標籤</td>\n</tr>\n<tr>\n<td><code>page.comments</code></td>\n<td>留言是否開啟</td>\n</tr>\n<tr>\n<td><code>page.layout</code></td>\n<td>佈局名稱</td>\n</tr>\n<tr>\n<td><code>page.content</code></td>\n<td>文章的完整內容</td>\n</tr>\n<tr>\n<td><code>page.excerpt</code></td>\n<td>文章摘要</td>\n</tr>\n<tr>\n<td><code>page.more</code></td>\n<td>除了文章摘要的其餘內容</td>\n</tr>\n<tr>\n<td><code>page.source</code></td>\n<td>文章原始路徑</td>\n</tr>\n<tr>\n<td><code>page.full_source</code></td>\n<td>文章的完整原始路徑</td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>文章網址（不含根路徑）。我們通常在主題中使用 <code>url_for(page.path)</code>。</td>\n</tr>\n<tr>\n<td><code>page.permalink</code></td>\n<td>文章的完整網址</td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>上一篇文章。如果此為第一篇文章則為 <code>null</code>。</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>下一篇文章。如果此為最後一篇文章則為 <code>null</code>。</td>\n</tr>\n<tr>\n<td><code>page.raw</code></td>\n<td>文章的原始內容</td>\n</tr>\n<tr>\n<td><code>page.photos</code></td>\n<td>文章的照片（用於相簿）</td>\n</tr>\n<tr>\n<td><code>page.link</code></td>\n<td>文章的外連連結（用於連結文章）</td>\n</tr>\n</tbody>\n</table>\n<p><strong>首頁（index）</strong></p>\n<table>\n<thead>\n<tr>\n<th>變數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.per_page</code></td>\n<td>每頁顯示的文章數量</td>\n</tr>\n<tr>\n<td><code>page.total</code></td>\n<td>總頁數</td>\n</tr>\n<tr>\n<td><code>page.current</code></td>\n<td>目前頁數</td>\n</tr>\n<tr>\n<td><code>page.current_url</code></td>\n<td>目前分頁的網址</td>\n</tr>\n<tr>\n<td><code>page.posts</code></td>\n<td>本頁文章</td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>上一頁的頁數。如果此頁是第一頁的話則為 <code>0</code>。</td>\n</tr>\n<tr>\n<td><code>page.prev_link</code></td>\n<td>上一頁的連結。如果此頁是第一頁的話則為 <code>&#39;&#39;</code>。</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>下一頁的頁數。如果此頁是最後一頁的話則為 <code>0</code>。</td>\n</tr>\n<tr>\n<td><code>page.next_link</code></td>\n<td>下一頁的網址。如果此頁是最後一頁的話則為 <code>&#39;&#39;</code>。</td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>目前頁面的路徑（不含根目錄）。我們通常在主題中使用 <code>url_for(page.path)</code>。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>彙整 (archive)</strong>：與 <code>index</code> 佈局相同，但新增以下變數。</p>\n<table>\n<thead>\n<tr>\n<th>變數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>archive</code></td>\n<td>等於 <code>true</code></td>\n</tr>\n<tr>\n<td><code>year</code></td>\n<td>彙整年份（4 位數）</td>\n</tr>\n<tr>\n<td><code>month</code></td>\n<td>彙整月份（不含開頭的零）</td>\n</tr>\n</tbody>\n</table>\n<p><strong>分類 (category)</strong>：與 <code>index</code> 佈局相同，但新增以下變數。</p>\n<table>\n<thead>\n<tr>\n<th>變數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>category</code></td>\n<td>分類名稱</td>\n</tr>\n</tbody>\n</table>\n<p><strong>標籤 (tag)</strong>：與 <code>index</code> 佈局相同，但新增以下變數。</p>\n<table>\n<thead>\n<tr>\n<th>變數</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>tag</code></td>\n<td>標籤名稱</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6b4007wkoeowp8eiq32",
				"title": "辅助函数（Helpers）",
				"markdown": "辅助函数帮助您在模版中快速插入内容。辅助函数不能在源文件中使用。\n\n## 网址\n\n### url_for\n\n在路径前加上根路径，从 Hexo 2.7 开始您应该使用此函数而不是 `config.root + path`。\n\n``` js\n<%- url_for(path) %>\n```\n\n### relative_url\n\n取得与 `from` 相对的 `to` 路径。\n\n``` js\n<%- relative_url(from, to) %>\n```\n\n### gravatar\n\n插入 Gravatar 图片。\n如果你不指定 `options` 参数，将会应用默认参数。否则，你可以将其设置为一个数字，这个数字将会作为 Gravatar 的大小参数。最后，如果你设置它一个对象，它将会被转换为 Gravatar 的一个查询字符串参数。\n\n``` js\n<%- gravatar(email, [options]);\n```\n\n**示例：**\n\n``` js\n<%- gravatar('a@abc.com') %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787\n\n<%- gravatar('a@abc.com', 40) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40\n\n<%- gravatar('a@abc.com' {s: 40, d: 'http://example.com/image.png'}) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&d=http%3A%2F%2Fexample.com%2Fimage.png\n```\n\n## HTML 标签\n\n### css\n\n载入 CSS 文件。`path` 可以是数组或字符串，如果 `path` 开头不是 `/` 或任何协议，则会自动加上根路径；如果后面没有加上 `.css` 扩展名的话，也会自动加上。\n\n``` js\n<%- css(path, ...) %>\n```\n\n**示例：**\n\n``` js\n<%- css('style.css') %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n\n<%- css(['style.css', 'screen.css']) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n// <link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\">\n```\n\n### js\n\n载入 JavaScript 文件。`path` 可以是数组或字符串，如果 `path` 开头不是 `/` 或任何协议，则会自动加上根路径；如果后面没有加上 `.js` 扩展名的话，也会自动加上。\n\n``` js\n<%- js(path, ...) %>\n```\n\n**示例：**\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n\n<%- js(['script.js', 'gallery.js']) %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n// <script type=\"text/javascript\" src=\"/gallery.js\"></script>\n```\n\n### link_to\n\n插入链接。\n\n``` js\n<%- link_to(path, [text], [options]) %>\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`external` | 在新视窗打开链接 | false\n`class` | Class 名称 |\n`id` | ID |\n\n**示例：**\n\n``` js\n<%- link_to('http://www.google.com') %>\n// <a href=\"http://www.google.com\" title=\"http://www.google.com\">http://www.google.com</a>\n\n<%- link_to('http://www.google.com', 'Google') %>\n// <a href=\"http://www.google.com\" title=\"Google\">Google</a>\n\n<%- link_to('http://www.google.com', 'Google', {external: true}) %>\n// <a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\">Google</a>\n```\n\n### mail_to\n\n插入电子邮箱链接。\n\n``` js\n<%- mail_to(path, [text], [options]) %>\n```\n\n参数 | 描述\n--- | ---\n`class` | Class 名称\n`id` | ID\n`subject` | 邮件主题\n`cc` | 抄送（CC）\n`bcc` | 密送（BCC）\n`body` | 邮件内容\n\n**示例：**\n\n``` js\n<%- mail_to('a@abc.com') %>\n// <a href=\"mailto:a@abc.com\" title=\"a@abc.com\">a@abc.com</a>\n\n<%- mail_to('a@abc.com', 'Email') %>\n// <a href=\"mailto:a@abc.com\" title=\"Email\">Email</a>\n```\n\n### image_tag\n\n插入图片。\n\n``` js\n<%- image_tag(path, [options]) %>\n```\n\n参数 | 描述\n--- | ---\n`alt` | 图片的替代文字\n`class` | Class 名称\n`id` | ID\n`width` | 图片宽度\n`height` | 图片高度\n\n### favicon_tag\n\n插入 favicon。\n\n``` js\n<%- favicon_tag(path) %>\n```\n\n### feed_tag\n\n插入 feed 链接。\n\n``` js\n<%- feed_tag(path, [options]) %>\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`title` | Feed 标题 |\n`type` | Feed 类型 | atom\n\n## 条件函数\n\n### is_current\n\n检查 `path` 是否符合目前页面的网址。开启 `strict` 选项启用严格比对。\n\n``` js\n<%- is_current(path, [strict]) %>\n```\n\n### is_home\n\n检查目前是否为首页。\n\n``` js\n<%- is_home() %>\n```\n\n### is_post\n\n检查目前是否为文章。\n\n``` js\n<%- is_post() %>\n```\n\n### is_archive\n\n检查目前是否为存档页面。\n\n``` js\n<%- is_archive() %>\n```\n\n### is_year\n\n检查目前是否为年度归档页面。\n\n``` js\n<%- is_year() %>\n```\n\n### is_month\n\n检查目前是否为月度归档页面。\n\n``` js\n<%- is_month() %>\n```\n\n### is_category\n\n检查目前是否为分类归档页面。\n如果给定一个字符串作为参数，将会检查目前是否为指定分类。\n\n``` js\n<%- is_category() %>\n<%- is_category('hobby') %>\n```\n\n### is_tag\n\n检查目前是否为标签归档页面。\n如果给定一个字符串作为参数，将会检查目前是否为指定标签。\n\n``` js\n<%- is_tag() %>\n<%- is_tag('hobby') %>\n```\n\n## 字符串处理\n\n### trim\n\n清除字符串开头和结尾的空格。\n\n``` js\n<%- trim(string) %>\n```\n\n### strip_html\n\n清除字符串中的 HTML 标签。\n\n``` js\n<%- strip_html(string) %>\n```\n\n**示例：**\n\n``` js\n<%- strip_html('It's not <b>important</b> anymore!') %>\n// It's not important anymore!\n```\n\n### titlecase\n\n把字符串转换为正确的 Title case。\n\n``` js\n<%- titlecase(string) %>\n```\n\n**示例：**\n\n``` js\n<%- titlecase('this is an apple') %>\n# This is an Apple\n```\n\n### markdown\n\n使用 Markdown 解析字符串。\n\n``` js\n<%- markdown(str) %>\n```\n\n**示例：**\n\n``` js\n<%- markdown('make me **strong**') %>\n// make me <strong>strong</strong>\n```\n\n### render\n\n解析字符串。\n\n``` js\n<%- render(str, engine, [options]) %>\n```\n\n### word_wrap\n\n使每行的字符串长度不超过 `length`。`length` 预设为 80。\n\n``` js\n<%- word_wrap(str, [length]) %>\n```\n\n**示例：**\n\n``` js\n<%- word_wrap('Once upon a time', 8) %>\n// Once upon\\n a time\n```\n\n### truncate\n\n移除超过 `length` 长度的字符串。\n\n``` js\n<%- truncate(text, length) %>\n```\n\n**示例：**\n\n``` js\n<%- truncate('Once upon a time in a world far far away', {length: 17}) %>\n// Once upon a ti...\n\n<%- truncate('Once upon a time in a world far far away', {length: 17, separator: ' '}) %>\n// Once upon a...\n\n<%- truncate('And they found that many people were sleeping better.', {length: 25, omission: '... (continued)'}) %>\n// And they f... (continued)\n```\n\n## 模板\n\n### partial\n\n载入其他模板文件，您可在 `locals` 设定区域变量。\n\n``` js\n<%- partial(layout, [locals], [options]) %>\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`cache` | 缓存（使用 Fragment cache） | `false`\n`only` | 限制局部变量。在模板中只能使用 `locals` 中设定的变量。 | `false`\n\n### fragment_cache\n\n局部缓存。它储存局部内容，下次使用时就能直接使用缓存。\n\n``` js\n<%- fragment_cache(id, fn);\n```\n\n**示例：**\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}) %>\n```\n\n## 日期与时间\n\n### date\n\n插入格式化的日期。`date` 可以是 UNIX 时间、ISO 字符串、Date 对象或 [Moment.js] 对象。`format` 默认为 `date_format` 配置信息。\n\n``` js\n<%- date(date, [format]) %>\n```\n\n**示例：**\n\n``` js\n<%- date(Date.now()) %>\n// 2013-01-01\n\n<%- date(Date.now(), 'YYYY/M/D') %>\n// Jan 1 2013\n```\n\n### date_xml\n\n插入 XML 格式的日期。`date` 可以是 UNIX 时间、ISO 字符串、Date 对象或 [Moment.js] 对象。\n\n``` js\n<%- date_xml(date) %>\n```\n\n**示例：**\n\n``` js\n<%- date_xml(Date.now()) %>\n// 2013-01-01T00:00:00.000Z\n```\n\n### time\n\n插入格式化的时间。`date` 可以是 UNIX 时间、ISO 字符串、Date 对象或 [Moment.js] 对象。`format` 默认为 `time_format` 配置信息。\n\n``` js\n<%- time(date, [format]) %>\n```\n\n**示例：**\n\n``` js\n<%- time(Date.now()) %>\n// 13:05:12\n\n<%- time(Date.now(), 'h:mm:ss a') %>\n// 1:05:12 pm\n```\n\n### full_date\n\n插入格式化的日期和时间。`date` 可以是 UNIX 时间、ISO 字符串、Date 对象或 [Moment.js] 对象。`format` 默认为 `date_format + time_format`。\n\n``` js\n<%- full_date(date, [format]) %>\n```\n\n**示例：**\n\n``` js\n<%- full_date(new Date()) %>\n// Jan 1, 2013 0:00:00\n\n<%- full_date(new Date(), 'dddd, MMMM Do YYYY, h:mm:ss a') %>\n// Tuesday, January 1st 2013, 12:00:00 am\n```\n\n### moment\n\n[Moment.js] 函数库。\n\n## 列表\n\n### list_categories\n\n插入分类列表。\n\n``` js\n<%- list_categories([options]) %>\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`orderby` | 分类排列方式 | name\n`order` | 分类排列顺序。`1`, `asc` 升序；`-1`, `desc` 降序。 | 1\n`show_count` | 显示每个分类的文章总数 | true\n`style` | 分类列表的显示方式。使用 `list` 以无序列表（unordered list）方式显示。 | list\n`separator` | 分类间的分隔符号。只有在 `style` 不是 `list` 时有用。 | ,\n`depth` | 要显示的分类层级。`0` 显示所有层级的分类；`-1` 和 `0` 很类似，但是显示不分层级；`1` 只显示第一层的分类。 | 0\n`class` | 分类列表的 class 名称。 | category\n`transform` | 改变分类名称显示方法的函数 |\n\n### list_tags\n\n插入标签列表。\n\n``` js\n<%- list_tags([options]) %>\n```\n\n选项 | 描述 | 预设值\n--- | --- | ---\n`orderby` | 标签排列方式 | name\n`order` | 标签排列顺序。`1`, `asc` 升序；`-1`, `desc` 降序。 | 1\n`show_count` | 显示每个标签的文章总数 | true\n`style` | 标签列表的显示方式。使用 `list` 以无序列表（unordered list）方式显示。 | list\n`separator` | 标签间的分隔符号。只有在 `style` 不是 `list` 时有用。 | ,\n`class` | 标签列表的 class 名称。 | tag\n`transform` | 改变标签名称显示方法的函数 |\n`amount` | 要显示的标签数量（0 = 无限制） | 0\n\n### list_archives\n\n插入归档列表。\n\n``` js\n<%- list_archives([options]) %>\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`type` | 类型。此设定可为 `yearly` 或 `monthly`。 | monthly\n`order` | 排列顺序。`1`, `asc` 升序；`-1`, `desc` 降序。 | 1\n`show_count` | 显示每个归档的文章总数 | true\n`format` | 日期格式 | MMMM YYYY\n`style` | 归档列表的显示方式。使用 `list` 以无序列表（unordered list）方式显示。 | list\n`separator` | 归档间的分隔符号。只有在 `style` 不是 `list` 时有用。 | ,\n`class` | 归档列表的 class 名称。 | archive\n`transform` | 改变归档名称显示方法的函数 |\n\n### list_posts\n\n插入文章列表。\n\n``` js\n<%- list_posts([options]) %>\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`orderby` | 文章排列方式 | date\n`order` | 文章排列顺序。`1`, `asc` 升序；`-1`, `desc` 降序。 | -1\n`style` | 文章列表的显示方式。使用 `list` 以无序列表（unordered list）方式显示。 | list\n`separator` | 文章间的分隔符号。只有在 `style` 不是 `list` 时有用。 | ,\n`class` | 文章列表的 class 名称。 | post\n`amount` | 要显示的文章数量（0 = 无限制） | 6\n`transform` | 改变文章名称显示方法的函数 |\n\n### tagcloud\n\n插入标签云。\n\n``` js\n<%- tagcloud([tags], [options]) %>\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`min_font` | 最小字体尺寸 | 10\n`max_font` | 最大字体尺寸 | 20\n`unit` | 字体尺寸的单位 | px\n`amount` | 标签总量 | 40\n`orderby` | 标签排列方式 | name\n`order` | 标签排列顺序。`1`, `sac` 升序；`-1`, `desc` 降序 | 1\n`color` | 使用颜色 | false\n`start_color` | 开始的颜色。您可使用十六进位值（`#b700ff`），rgba（`rgba(183, 0, 255, 1)`），hsla（`hsla(283, 100%, 50%, 1)`）或 [颜色关键字]。此变量仅在 `color` 参数开启时才有用。 |\n`end_color` | 结束的颜色。您可使用十六进位值（`#b700ff`），rgba（`rgba(183, 0, 255, 1)`），hsla（`hsla(283, 100%, 50%, 1)`）或 [颜色关键字]。此变量仅在 `color` 参数开启时才有用。 |\n\n## 其他\n\n### paginator\n\n插入分页链接。\n\n``` js\n<%- paginator(options) %>\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`base` | 基础网址 | /\n`format` | 网址格式 | page/%d/\n`total` | 分页总数 | 1\n`current` | 目前页数 | 0\n`prev_text` | 上一页链接的文字。仅在 `prev_next` 设定开启时才有用。 | Prev\n`next_text` | 下一页链接的文字。仅在 `prev_next` 设定开启时才有用。 | Next\n`space` | 空白文字 | &hellip;\n`prev_next` | 显示上一页和下一页的链接 | true\n`end_size` | 显示于两侧的页数 | 1\n`mid_size` | 显示于中间的页数 | 2\n`show_all` | 显示所有页数。如果开启此参数的话，`end_size` 和 `mid_size` 就没用了。 | false\n\n### search_form\n\n插入 Google 搜索框。\n\n``` js\n<%- search_form(options) %>\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`class` | 表单的 class name | search-form\n`text` | 搜索提示文字 | Search\n`button` | 显示搜索按钮。此参数可为布尔值（boolean）或字符串，当设定是字符串的时候，即为搜索按钮的文字。 | false\n\n### number_format\n\n格式化数字。\n\n``` js\n<%- number_format(number, [options]) %>\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`precision` | 数字精度。此选项可为 `false` 或非负整数。 | false\n`delimiter` | 千位数分隔符号 | ,\n`separator` | 整数和小数之间的分隔符号 | .\n\n**示例：**\n\n``` js\n<%- number_format(12345.67, {precision: 1}) %>\n// 12,345.68\n\n<%- number_format(12345.67, {precision: 4}) %>\n// 12,345.6700\n\n<%- number_format(12345.67, {precision: 0}) %>\n// 12,345\n\n<%- number_format(12345.67, {delimiter: ''}) %>\n// 12345.67\n\n<%- number_format(12345.67, {separator: '/'}) %>\n// 12,345/67\n```\n\n### open_graph\n\n插入 open graph 资源。\n\n``` js\n<%- open_graph([options]) %>\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`title` | 页面标题 (`og:title`) | `page.title`\n`type` | 页面类型 (`og:type`) | blog\n`url` | 页面网址 (`og:url`) | `url`\n`image` | 页面图片 (`og:image`) | 内容中的图片\n`site_name` | 网站名称 (`og:site_name`) | `config.title`\n`description` | 页面描述 (`og:desription`) | 内容摘要或前 200 字\n`twitter_card` | Twitter 卡片类型 (`twitter:card`) | summary\n`twitter_id` | Twitter ID (`twitter:creator`) |\n`twitter_site` | Twitter 网站 (`twitter:site`) |\n`google_plus` | Google+ 个人资料链接 |\n`fb_admins` | Facebook 管理者 ID |\n`fb_app_id` | Facebook 应用程序 ID |\n\n### toc\n\n解析内容中的标题标签 (h1~h6) 并插入目录。\n\n``` js\n<%- toc(str, [options]) %>\n```\n\n参数 | 描述 | 默认值\n--- | --- | ---\n`class` | Class 名称 | toc\n`list_number` | 显示编号 | true\n\n**示例：**\n\n``` js\n<%- toc(page.content) %>\n```\n\n[颜色关键字]: http://www.w3.org/TR/css3-color/#svg-color\n[Moment.js]: http://momentjs.com/\n[Open Graph]: http://ogp.me/\n\n\n",
				"html": "<p>辅助函数帮助您在模版中快速插入内容。辅助函数不能在源文件中使用。</p>\n<h2 id=\"网址\"><a href=\"#网址\" class=\"headerlink\" title=\"网址\"></a>网址</h2><h3 id=\"url-for\"><a href=\"#url-for\" class=\"headerlink\" title=\"url_for\"></a>url_for</h3><p>在路径前加上根路径，从 Hexo 2.7 开始您应该使用此函数而不是 <code>config.root + path</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- url_for(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"relative-url\"><a href=\"#relative-url\" class=\"headerlink\" title=\"relative_url\"></a>relative_url</h3><p>取得与 <code>from</code> 相对的 <code>to</code> 路径。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- relative_url(<span class=\"keyword\">from</span>, to) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"gravatar\"><a href=\"#gravatar\" class=\"headerlink\" title=\"gravatar\"></a>gravatar</h3><p>插入 Gravatar 图片。<br>如果你不指定 <code>options</code> 参数，将会应用默认参数。否则，你可以将其设置为一个数字，这个数字将会作为 Gravatar 的大小参数。最后，如果你设置它一个对象，它将会被转换为 Gravatar 的一个查询字符串参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(email, [options]);</span><br></pre></td></tr></table></figure>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>, <span class=\"number\">40</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span> &#123;<span class=\"attr\">s</span>: <span class=\"number\">40</span>, <span class=\"attr\">d</span>: <span class=\"string\">'http://example.com/image.png'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&amp;d=http%3A%2F%2Fexample.com%2Fimage.png</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"HTML-标签\"><a href=\"#HTML-标签\" class=\"headerlink\" title=\"HTML 标签\"></a>HTML 标签</h2><h3 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h3><p>载入 CSS 文件。<code>path</code> 可以是数组或字符串，如果 <code>path</code> 开头不是 <code>/</code> 或任何协议，则会自动加上根路径；如果后面没有加上 <code>.css</code> 扩展名的话，也会自动加上。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(<span class=\"string\">'style.css'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- css([<span class=\"string\">'style.css'</span>, <span class=\"string\">'screen.css'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\"&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h3><p>载入 JavaScript 文件。<code>path</code> 可以是数组或字符串，如果 <code>path</code> 开头不是 <code>/</code> 或任何协议，则会自动加上根路径；如果后面没有加上 <code>.js</code> 扩展名的话，也会自动加上。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- js([<span class=\"string\">'script.js'</span>, <span class=\"string\">'gallery.js'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/gallery.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"link-to\"><a href=\"#link-to\" class=\"headerlink\" title=\"link_to\"></a>link_to</h3><p>插入链接。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>external</code></td>\n<td>在新视窗打开链接</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class 名称</td>\n<td></td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"http://www.google.com\"&gt;http://www.google.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\"&gt;Google&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>, &#123;<span class=\"attr\">external</span>: <span class=\"literal\">true</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\"&gt;Google&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"mail-to\"><a href=\"#mail-to\" class=\"headerlink\" title=\"mail_to\"></a>mail_to</h3><p>插入电子邮箱链接。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class 名称</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>subject</code></td>\n<td>邮件主题</td>\n</tr>\n<tr>\n<td><code>cc</code></td>\n<td>抄送（CC）</td>\n</tr>\n<tr>\n<td><code>bcc</code></td>\n<td>密送（BCC）</td>\n</tr>\n<tr>\n<td><code>body</code></td>\n<td>邮件内容</td>\n</tr>\n</tbody>\n</table>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"a@abc.com\"&gt;a@abc.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>, <span class=\"string\">'Email'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"Email\"&gt;Email&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"image-tag\"><a href=\"#image-tag\" class=\"headerlink\" title=\"image_tag\"></a>image_tag</h3><p>插入图片。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- image_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>alt</code></td>\n<td>图片的替代文字</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class 名称</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>width</code></td>\n<td>图片宽度</td>\n</tr>\n<tr>\n<td><code>height</code></td>\n<td>图片高度</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"favicon-tag\"><a href=\"#favicon-tag\" class=\"headerlink\" title=\"favicon_tag\"></a>favicon_tag</h3><p>插入 favicon。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- favicon_tag(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"feed-tag\"><a href=\"#feed-tag\" class=\"headerlink\" title=\"feed_tag\"></a>feed_tag</h3><p>插入 feed 链接。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- feed_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Feed 标题</td>\n<td></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Feed 类型</td>\n<td>atom</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"条件函数\"><a href=\"#条件函数\" class=\"headerlink\" title=\"条件函数\"></a>条件函数</h2><h3 id=\"is-current\"><a href=\"#is-current\" class=\"headerlink\" title=\"is_current\"></a>is_current</h3><p>检查 <code>path</code> 是否符合目前页面的网址。开启 <code>strict</code> 选项启用严格比对。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_current(path, [strict]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-home\"><a href=\"#is-home\" class=\"headerlink\" title=\"is_home\"></a>is_home</h3><p>检查目前是否为首页。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_home() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-post\"><a href=\"#is-post\" class=\"headerlink\" title=\"is_post\"></a>is_post</h3><p>检查目前是否为文章。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_post() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-archive\"><a href=\"#is-archive\" class=\"headerlink\" title=\"is_archive\"></a>is_archive</h3><p>检查目前是否为存档页面。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_archive() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-year\"><a href=\"#is-year\" class=\"headerlink\" title=\"is_year\"></a>is_year</h3><p>检查目前是否为年度归档页面。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_year() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-month\"><a href=\"#is-month\" class=\"headerlink\" title=\"is_month\"></a>is_month</h3><p>检查目前是否为月度归档页面。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_month() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-category\"><a href=\"#is-category\" class=\"headerlink\" title=\"is_category\"></a>is_category</h3><p>检查目前是否为分类归档页面。<br>如果给定一个字符串作为参数，将会检查目前是否为指定分类。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_category() %&gt;</span><br><span class=\"line\">&lt;%- is_category(<span class=\"string\">'hobby'</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-tag\"><a href=\"#is-tag\" class=\"headerlink\" title=\"is_tag\"></a>is_tag</h3><p>检查目前是否为标签归档页面。<br>如果给定一个字符串作为参数，将会检查目前是否为指定标签。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_tag() %&gt;</span><br><span class=\"line\">&lt;%- is_tag(<span class=\"string\">'hobby'</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"字符串处理\"><a href=\"#字符串处理\" class=\"headerlink\" title=\"字符串处理\"></a>字符串处理</h2><h3 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\"trim\"></a>trim</h3><p>清除字符串开头和结尾的空格。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- trim(string) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"strip-html\"><a href=\"#strip-html\" class=\"headerlink\" title=\"strip_html\"></a>strip_html</h3><p>清除字符串中的 HTML 标签。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(<span class=\"string\">'It'</span>s not &lt;b&gt;important&lt;<span class=\"regexp\">/b&gt; anymore!') %&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ It's not important anymore!</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"titlecase\"><a href=\"#titlecase\" class=\"headerlink\" title=\"titlecase\"></a>titlecase</h3><p>把字符串转换为正确的 Title case。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(<span class=\"string\">'this is an apple'</span>) %&gt;</span><br><span class=\"line\"># This is an Apple</span><br></pre></td></tr></table></figure>\n<h3 id=\"markdown\"><a href=\"#markdown\" class=\"headerlink\" title=\"markdown\"></a>markdown</h3><p>使用 Markdown 解析字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(str) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(<span class=\"string\">'make me **strong**'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// make me &lt;strong&gt;strong&lt;/strong&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h3><p>解析字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- render(str, engine, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"word-wrap\"><a href=\"#word-wrap\" class=\"headerlink\" title=\"word_wrap\"></a>word_wrap</h3><p>使每行的字符串长度不超过 <code>length</code>。<code>length</code> 预设为 80。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(str, [length]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(<span class=\"string\">'Once upon a time'</span>, <span class=\"number\">8</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon\\n a time</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"truncate\"><a href=\"#truncate\" class=\"headerlink\" title=\"truncate\"></a>truncate</h3><p>移除超过 <code>length</code> 长度的字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(text, length) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon a ti...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>, <span class=\"attr\">separator</span>: <span class=\"string\">' '</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon a...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- truncate(<span class=\"string\">'And they found that many people were sleeping better.'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">25</span>, <span class=\"attr\">omission</span>: <span class=\"string\">'... (continued)'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// And they f... (continued)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h2><h3 id=\"partial\"><a href=\"#partial\" class=\"headerlink\" title=\"partial\"></a>partial</h3><p>载入其他模板文件，您可在 <code>locals</code> 设定区域变量。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(layout, [locals], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cache</code></td>\n<td>缓存（使用 Fragment cache）</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>only</code></td>\n<td>限制局部变量。在模板中只能使用 <code>locals</code> 中设定的变量。</td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fragment-cache\"><a href=\"#fragment-cache\" class=\"headerlink\" title=\"fragment_cache\"></a>fragment_cache</h3><p>局部缓存。它储存局部内容，下次使用时就能直接使用缓存。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(id, fn);</span><br></pre></td></tr></table></figure>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;) %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"日期与时间\"><a href=\"#日期与时间\" class=\"headerlink\" title=\"日期与时间\"></a>日期与时间</h2><h3 id=\"date\"><a href=\"#date\" class=\"headerlink\" title=\"date\"></a>date</h3><p>插入格式化的日期。<code>date</code> 可以是 UNIX 时间、ISO 字符串、Date 对象或 <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 对象。<code>format</code> 默认为 <code>date_format</code> 配置信息。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'YYYY/M/D'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1 2013</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"date-xml\"><a href=\"#date-xml\" class=\"headerlink\" title=\"date_xml\"></a>date_xml</h3><p>插入 XML 格式的日期。<code>date</code> 可以是 UNIX 时间、ISO 字符串、Date 对象或 <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(date) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01T00:00:00.000Z</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"time\"><a href=\"#time\" class=\"headerlink\" title=\"time\"></a>time</h3><p>插入格式化的时间。<code>date</code> 可以是 UNIX 时间、ISO 字符串、Date 对象或 <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 对象。<code>format</code> 默认为 <code>time_format</code> 配置信息。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 13:05:12</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 1:05:12 pm</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"full-date\"><a href=\"#full-date\" class=\"headerlink\" title=\"full_date\"></a>full_date</h3><p>插入格式化的日期和时间。<code>date</code> 可以是 UNIX 时间、ISO 字符串、Date 对象或 <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 对象。<code>format</code> 默认为 <code>date_format + time_format</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1, 2013 0:00:00</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(), <span class=\"string\">'dddd, MMMM Do YYYY, h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Tuesday, January 1st 2013, 12:00:00 am</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"moment\"><a href=\"#moment\" class=\"headerlink\" title=\"moment\"></a>moment</h3><p><a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 函数库。</p>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h3 id=\"list-categories\"><a href=\"#list-categories\" class=\"headerlink\" title=\"list_categories\"></a>list_categories</h3><p>插入分类列表。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_categories([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>分类排列方式</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>分类排列顺序。<code>1</code>, <code>asc</code> 升序；<code>-1</code>, <code>desc</code> 降序。</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>显示每个分类的文章总数</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>分类列表的显示方式。使用 <code>list</code> 以无序列表（unordered list）方式显示。</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>分类间的分隔符号。只有在 <code>style</code> 不是 <code>list</code> 时有用。</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>depth</code></td>\n<td>要显示的分类层级。<code>0</code> 显示所有层级的分类；<code>-1</code> 和 <code>0</code> 很类似，但是显示不分层级；<code>1</code> 只显示第一层的分类。</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>分类列表的 class 名称。</td>\n<td>category</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>改变分类名称显示方法的函数</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-tags\"><a href=\"#list-tags\" class=\"headerlink\" title=\"list_tags\"></a>list_tags</h3><p>插入标签列表。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_tags([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n<th>预设值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>标签排列方式</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>标签排列顺序。<code>1</code>, <code>asc</code> 升序；<code>-1</code>, <code>desc</code> 降序。</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>显示每个标签的文章总数</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>标签列表的显示方式。使用 <code>list</code> 以无序列表（unordered list）方式显示。</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>标签间的分隔符号。只有在 <code>style</code> 不是 <code>list</code> 时有用。</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>标签列表的 class 名称。</td>\n<td>tag</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>改变标签名称显示方法的函数</td>\n<td></td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>要显示的标签数量（0 = 无限制）</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-archives\"><a href=\"#list-archives\" class=\"headerlink\" title=\"list_archives\"></a>list_archives</h3><p>插入归档列表。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_archives([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>type</code></td>\n<td>类型。此设定可为 <code>yearly</code> 或 <code>monthly</code>。</td>\n<td>monthly</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>排列顺序。<code>1</code>, <code>asc</code> 升序；<code>-1</code>, <code>desc</code> 降序。</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>显示每个归档的文章总数</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>日期格式</td>\n<td>MMMM YYYY</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>归档列表的显示方式。使用 <code>list</code> 以无序列表（unordered list）方式显示。</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>归档间的分隔符号。只有在 <code>style</code> 不是 <code>list</code> 时有用。</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>归档列表的 class 名称。</td>\n<td>archive</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>改变归档名称显示方法的函数</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-posts\"><a href=\"#list-posts\" class=\"headerlink\" title=\"list_posts\"></a>list_posts</h3><p>插入文章列表。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_posts([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>文章排列方式</td>\n<td>date</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>文章排列顺序。<code>1</code>, <code>asc</code> 升序；<code>-1</code>, <code>desc</code> 降序。</td>\n<td>-1</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>文章列表的显示方式。使用 <code>list</code> 以无序列表（unordered list）方式显示。</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>文章间的分隔符号。只有在 <code>style</code> 不是 <code>list</code> 时有用。</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>文章列表的 class 名称。</td>\n<td>post</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>要显示的文章数量（0 = 无限制）</td>\n<td>6</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>改变文章名称显示方法的函数</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tagcloud\"><a href=\"#tagcloud\" class=\"headerlink\" title=\"tagcloud\"></a>tagcloud</h3><p>插入标签云。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- tagcloud([tags], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>min_font</code></td>\n<td>最小字体尺寸</td>\n<td>10</td>\n</tr>\n<tr>\n<td><code>max_font</code></td>\n<td>最大字体尺寸</td>\n<td>20</td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td>字体尺寸的单位</td>\n<td>px</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>标签总量</td>\n<td>40</td>\n</tr>\n<tr>\n<td><code>orderby</code></td>\n<td>标签排列方式</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>标签排列顺序。<code>1</code>, <code>sac</code> 升序；<code>-1</code>, <code>desc</code> 降序</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>使用颜色</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>start_color</code></td>\n<td>开始的颜色。您可使用十六进位值（<code>#b700ff</code>），rgba（<code>rgba(183, 0, 255, 1)</code>），hsla（<code>hsla(283, 100%, 50%, 1)</code>）或 <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">颜色关键字</a>。此变量仅在 <code>color</code> 参数开启时才有用。</td>\n<td></td>\n</tr>\n<tr>\n<td><code>end_color</code></td>\n<td>结束的颜色。您可使用十六进位值（<code>#b700ff</code>），rgba（<code>rgba(183, 0, 255, 1)</code>），hsla（<code>hsla(283, 100%, 50%, 1)</code>）或 <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">颜色关键字</a>。此变量仅在 <code>color</code> 参数开启时才有用。</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"paginator\"><a href=\"#paginator\" class=\"headerlink\" title=\"paginator\"></a>paginator</h3><p>插入分页链接。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- paginator(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>base</code></td>\n<td>基础网址</td>\n<td>/</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>网址格式</td>\n<td>page/%d/</td>\n</tr>\n<tr>\n<td><code>total</code></td>\n<td>分页总数</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>current</code></td>\n<td>目前页数</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>prev_text</code></td>\n<td>上一页链接的文字。仅在 <code>prev_next</code> 设定开启时才有用。</td>\n<td>Prev</td>\n</tr>\n<tr>\n<td><code>next_text</code></td>\n<td>下一页链接的文字。仅在 <code>prev_next</code> 设定开启时才有用。</td>\n<td>Next</td>\n</tr>\n<tr>\n<td><code>space</code></td>\n<td>空白文字</td>\n<td>&hellip;</td>\n</tr>\n<tr>\n<td><code>prev_next</code></td>\n<td>显示上一页和下一页的链接</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>end_size</code></td>\n<td>显示于两侧的页数</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>mid_size</code></td>\n<td>显示于中间的页数</td>\n<td>2</td>\n</tr>\n<tr>\n<td><code>show_all</code></td>\n<td>显示所有页数。如果开启此参数的话，<code>end_size</code> 和 <code>mid_size</code> 就没用了。</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"search-form\"><a href=\"#search-form\" class=\"headerlink\" title=\"search_form\"></a>search_form</h3><p>插入 Google 搜索框。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- search_form(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>表单的 class name</td>\n<td>search-form</td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>搜索提示文字</td>\n<td>Search</td>\n</tr>\n<tr>\n<td><code>button</code></td>\n<td>显示搜索按钮。此参数可为布尔值（boolean）或字符串，当设定是字符串的时候，即为搜索按钮的文字。</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"number-format\"><a href=\"#number-format\" class=\"headerlink\" title=\"number_format\"></a>number_format</h3><p>格式化数字。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(number, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>precision</code></td>\n<td>数字精度。此选项可为 <code>false</code> 或非负整数。</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>delimiter</code></td>\n<td>千位数分隔符号</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>整数和小数之间的分隔符号</td>\n<td>.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">1</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.68</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">4</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.6700</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">0</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">delimiter</span>: <span class=\"string\">''</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12345.67</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">separator</span>: <span class=\"string\">'/'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345/67</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"open-graph\"><a href=\"#open-graph\" class=\"headerlink\" title=\"open_graph\"></a>open_graph</h3><p>插入 open graph 资源。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- open_graph([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>页面标题 (<code>og:title</code>)</td>\n<td><code>page.title</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>页面类型 (<code>og:type</code>)</td>\n<td>blog</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>页面网址 (<code>og:url</code>)</td>\n<td><code>url</code></td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>页面图片 (<code>og:image</code>)</td>\n<td>内容中的图片</td>\n</tr>\n<tr>\n<td><code>site_name</code></td>\n<td>网站名称 (<code>og:site_name</code>)</td>\n<td><code>config.title</code></td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>页面描述 (<code>og:desription</code>)</td>\n<td>内容摘要或前 200 字</td>\n</tr>\n<tr>\n<td><code>twitter_card</code></td>\n<td>Twitter 卡片类型 (<code>twitter:card</code>)</td>\n<td>summary</td>\n</tr>\n<tr>\n<td><code>twitter_id</code></td>\n<td>Twitter ID (<code>twitter:creator</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>twitter_site</code></td>\n<td>Twitter 网站 (<code>twitter:site</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>google_plus</code></td>\n<td>Google+ 个人资料链接</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_admins</code></td>\n<td>Facebook 管理者 ID</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_app_id</code></td>\n<td>Facebook 应用程序 ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"toc\"><a href=\"#toc\" class=\"headerlink\" title=\"toc\"></a>toc</h3><p>解析内容中的标题标签 (h1~h6) 并插入目录。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(str, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class 名称</td>\n<td>toc</td>\n</tr>\n<tr>\n<td><code>list_number</code></td>\n<td>显示编号</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(page.content) %&gt;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6b5007xkoeof8qutr02",
				"title": "輔助函數（Helpers）",
				"markdown": "輔助函數幫助您在模版中快速插入內容。\n\n## 網址\n\n### url_for\n\n在路徑前加上根路徑，從 Hexo 2.7 開始您應該使用此函數，避免使用 `config.root + path`。\n\n``` js\n<%- url_for(path) %>\n```\n\n### relative_url\n\n取得與 `from` 相對的 `to` 路徑。\n\n``` js\n<%- relative_url(from, to) %>\n```\n\n### gravatar\n\n插入 Gravatar 圖片。\n\n``` js\n<%- gravatar(email, [size]);\n```\n\n**範例：**\n\n``` js\n<%- gravatar('a@abc.com') %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787\n\n<%- gravatar('a@abc.com', 40) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40\n```\n\n## HTML 標籤\n\n### css\n\n載入 CSS 檔案。`path` 可以是陣列或字串，如果 `path` 開頭不是 `/` 或任何協議，則會自動加上根路徑；如果後面沒有加上 `.css` 副檔名的話，也會自動加上。\n\n``` js\n<%- css(path, ...) %>\n```\n\n**範例：**\n\n``` js\n<%- css('style.css') %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n\n<%- css(['style.css', 'screen.css']) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n// <link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\">\n```\n\n### js\n\n載入 JavaScript 檔案。`path` 可以是陣列或字串，如果 `path` 開頭不是 `/` 或任何協議，則會自動加上根路徑；如果後面沒有加上 `.js` 副檔名的話，也會自動加上。\n\n``` js\n<%- js(path, ...) %>\n```\n\n**範例：**\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n\n<%- js(['script.js', 'gallery.js']) %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n// <script type=\"text/javascript\" src=\"/gallery.js\"></script>\n```\n\n### link_to\n\n插入連結。\n\n``` js\n<%- link_to(path, [text], [options]) %>\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`external` | 在新視窗開啟連結 | false\n`class` | Class 名稱 |\n`id` | ID |\n\n**範例：**\n\n``` js\n<%- link_to('http://www.google.com') %>\n// <a href=\"http://www.google.com\" title=\"http://www.google.com\">http://www.google.com</a>\n\n<%- link_to('http://www.google.com', 'Google') %>\n// <a href=\"http://www.google.com\" title=\"Google\">Google</a>\n\n<%- link_to('http://www.google.com', 'Google', {external: true}) %>\n// <a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\">Google</a>\n```\n\n### mail_to\n\n插入電子郵件連結。\n\n``` js\n<%- mail_to(path, [text], [options]) %>\n```\n\n選項 | 描述\n--- | ---\n`class` | Class 名稱\n`id` | ID\n`subject` | 郵件主旨\n`cc` | 副本（CC）\n`bcc` | 密件副本（BCC）\n`body` | 郵件內容\n\n**範例：**\n\n``` js\n<%- mail_to('a@abc.com') %>\n// <a href=\"mailto:a@abc.com\" title=\"a@abc.com\">a@abc.com</a>\n\n<%- mail_to('a@abc.com', 'Email') %>\n// <a href=\"mailto:a@abc.com\" title=\"Email\">Email</a>\n```\n\n### image_tag\n\n插入圖片。\n\n``` js\n<%- image_tag(path, [options]) %>\n```\n\n選項 | 描述\n--- | ---\n`alt` | 圖片的替代文字\n`class` | Class 名稱\n`id` | ID\n`width` | 圖片寬度\n`height` | 圖片高度\n\n### favicon_tag\n\n插入 favicon。\n\n``` js\n<%- favicon_tag(path) %>\n```\n\n### feed_tag\n\n插入 feed 連結。\n\n``` js\n<%- feed_tag(path, [options]) %>\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`title` | Feed 標題 |\n`type` | Feed 類型 | atom\n\n## 判斷函數\n\n### is_current\n\n檢查 `path` 是否符合目前頁面的網址。開啟 `strict` 選項啟用嚴格比對。\n\n``` js\n<%- is_current(path, [strict]) %>\n```\n\n### is_home\n\n檢查目前是否為首頁。\n\n``` js\n<%- is_home() %>\n```\n\n### is_post\n\n檢查目前是否為文章。\n\n``` js\n<%- is_post() %>\n```\n\n### is_archive\n\n檢查目前是否為彙整頁面。\n\n``` js\n<%- is_archive() %>\n```\n\n### is_year\n\n檢查目前是否為年度彙整頁面。\n\n``` js\n<%- is_year() %>\n```\n\n### is_month\n\n檢查目前是否為每月彙整頁面。\n\n``` js\n<%- is_month() %>\n```\n\n### is_category\n\n檢查目前是否為分類彙整頁面。\n\n``` js\n<%- is_category() %>\n```\n\n### is_tag\n\n檢查目前是否為標籤彙整頁面。\n\n``` js\n<%- is_tag() %>\n```\n\n## 字串處理\n\n### trim\n\n清除字串的開頭和結尾空白。\n\n``` js\n<%- trim(string) %>\n```\n\n### strip_html\n\n清除字串中的 HTML 標籤。\n\n``` js\n<%- strip_html(string) %>\n```\n\n**範例：**\n\n``` js\n<%- strip_html('It's not <b>important</b> anymore!') %>\n// It's not important anymore!\n```\n\n### titlecase\n\n把字串轉換為正確的 Title case。\n\n``` js\n<%- titlecase(string) %>\n```\n\n**範例：**\n\n``` js\n<%- titlecase('this is an apple') %>\n# This is an Apple\n```\n\n### markdown\n\n使用 Markdown 渲染字串。\n\n``` js\n<%- markdown(str) %>\n```\n\n**範例：**\n\n``` js\n<%- markdown('make me **strong**') %>\n// make me <strong>strong</strong>\n```\n\n### render\n\n渲染字串。\n\n``` js\n<%- render(str, engine, [options]) %>\n```\n\n### word_wrap\n\n使每行的字串長度不超過 `length`。`length` 預設為 80。\n\n``` js\n<%- word_wrap(str, [length]) %>\n```\n\n**範例：**\n\n``` js\n<%- word_wrap('Once upon a time', 8) %>\n// Once upon\\n a time\n```\n\n### truncate\n\n移除超過 `length` 的字串。\n\n``` js\n<%- truncate(text, length) %>\n```\n\n**範例：**\n\n``` js\n<%- truncate('Once upon a time in a world far far away', 16) %>\n// Once upon a time\n```\n\n## 模板\n\n### partial\n\n載入其他模板檔案，您可在 `locals` 設定區域變數。\n\n``` js\n<%- partial(layout, [locals], [options]) %>\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`cache` | 儲存快取（使用 Fragment cache） | `false`\n`only` | 限制區域變數。在模板中只能使用 `locals` 中設定的變數。 | `false`\n\n### fragment_cache\n\n儲存局部快取。它儲存局部內容，下次使用時就能直接使用快取。\n\n``` js\n<%- fragment_cache(id, fn);\n```\n\n**範例：**\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}) %>\n```\n\n## 日期與時間\n\n### date\n\n插入格式化的日期。`date` 可以是 UNIX 時間、ISO 字串、Date 物件或 [Moment.js] 物件。`format` 預設為 `date_format` 設定。\n\n``` js\n<%- date(date, [format]) %>\n```\n\n**範例：**\n\n``` js\n<%- date(Date.now()) %>\n// 2013-01-01\n\n<%- date(Date.now(), 'MMM D YYYY') %>\n// Jan 1 2013\n```\n\n### date_xml\n\n插入 XML 格式的日期。`date` 可以是 UNIX 時間、ISO 字串、Date 物件或 [Moment.js] 物件。\n\n``` js\n<%- date_xml(date) %>\n```\n\n**範例：**\n\n``` js\n<%- date_xml(Date.now()) %>\n// 2013-01-01T00:00:00.000Z\n```\n\n### time\n\n插入格式化的時間。`date` 可以是 UNIX 時間、ISO 字串、Date 物件或 [Moment.js] 物件。`format` 預設為 `time_format` 設定。\n\n``` js\n<%- time(date, [format]) %>\n```\n\n**範例：**\n\n``` js\n<%- time(Date.now()) %>\n// 13:05:12\n\n<%- time(Date.now(), 'h:mm:ss a') %>\n// 1:05:12 pm\n```\n\n### full_date\n\n插入格式化的日期和時間。`date` 可以是 UNIX 時間、ISO 字串、Date 物件或 [Moment.js] 物件。`format` 預設為 `date_format + time_format` 設定。\n\n``` js\n<%- full_date(date, [format]) %>\n```\n\n**範例：**\n\n``` js\n<%- full_date(new Date()) %>\n// Jan 1, 2013 0:00:00\n\n<%- full_date(new Date(), 'dddd, MMMM Do YYYY, h:mm:ss a') %>\n// Tuesday, January 1st 2013, 12:00:00 am\n```\n\n### moment\n\n[Moment.js] 函式庫。\n\n## 列表\n\n### list_categories\n\n插入分類列表。\n\n``` js\n<%- list_categories([categories], [options]) %>\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`orderby` | 分類排列方式 | name\n`order` | 分類排列順序。`1`, `asc` 升冪；`-1`, `desc` 降冪。 | 1\n`show_count` | 顯示每個分類的文章總數 | true\n`style` | 分類列表的顯示方式。使用 `list` 以無序列表（unordered list）方式顯示。 | list\n`separator` | 分類間的分隔符號。只有在 `style` 不是 `list` 時有用。 | ,\n`depth` | 要顯示的分類層級。`0` 顯示所有層級的分類；`-1` 和 `0` 很類似，但是顯示不分層級；`1` 只顯示第一層的分類。 | 0\n`class` | 分類列表的 class 名稱。 | category\n`transform` | 改變分類名稱顯示方法的函數 | \n\n### list_tags\n\n插入標籤列表。\n\n``` js\n<%- list_tags([tags], [options]) %>\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`orderby` | 標籤排列方式 | name\n`order` | 標籤排列順序。`1`, `asc` 升冪；`-1`, `desc` 降冪。 | 1\n`show_count` | 顯示每個標籤的文章總數 | true\n`style` | 標籤列表的顯示方式。使用 `list` 以無序列表（unordered list）方式顯示。 | list\n`separator` | 標籤間的分隔符號。只有在 `style` 不是 `list` 時有用。 | ,\n`class` | 標籤列表的 class 名稱。 | tag\n`transform` | 改變標籤名稱顯示方法的函數 | \n`amount` | 要顯示的標籤數量（0 = 無限制） | 0\n\n### list_archives\n\n插入彙整列表。\n\n``` js\n<%- list_archives([options]) %>\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`type` | 類型。此設定可為 `yearly` 或 `monthly`。 | monthly\n`order` | 排列順序。`1`, `asc` 升冪；`-1`, `desc` 降冪。 | 1\n`show_count` | 顯示每個彙整的文章總數 | true\n`format` | 日期格式 | MMMM YYYY\n`style` | 彙整列表的顯示方式。使用 `list` 以無序列表（unordered list）方式顯示。 | list\n`separator` | 彙整間的分隔符號。只有在 `style` 不是 `list` 時有用。 | ,\n`class` | 彙整列表的 class 名稱。 | archive\n`transform` | 改變彙整名稱顯示方法的函數 | \n\n### list_posts\n\n插入文章列表。\n\n``` js\n<%- list_posts([options]) %>\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`orderby` | 文章排列方式 | date\n`order` | 文章排列順序。`1`, `asc` 升冪；`-1`, `desc` 降冪。 | -1\n`style` | 文章列表的顯示方式。使用 `list` 以無序列表（unordered list）方式顯示。 | list\n`separator` | 文章間的分隔符號。只有在 `style` 不是 `list` 時有用。 | ,\n`class` | 文章列表的 class 名稱。 | post\n`amount` | 要顯示的文章數量（0 = 無限制） | 6\n`transform` | 改變文章名稱顯示方法的函數 | \n\n### tagcloud\n\n插入標籤雲。\n\n``` js\n<%- tagcloud([tags], [options]) %>\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`min_font` | 最小字體尺寸 | 10\n`max_font` | 最大字體尺寸 | 20\n`unit` | 字體尺寸的單位 | px\n`amount` | 標籤總量 | 40\n`orderby` | 標籤排列方式 | name\n`order` | 標籤排列順序。`1`, `sac` 升冪；`-1`, `desc` 降冪 | 1\n`color` | 使用顏色 | false\n`start_color` | 開始的顏色。您可使用十六進位值（`#b700ff`），rgba（`rgba(183, 0, 255, 1)`），hsla（`hsla(283, 100%, 50%, 1)`）或 [顏色關鍵字]。此選項僅在 `color` 設定開啟時才有用。 |\n`end_color` | 結束的顏色。您可使用十六進位值（`#b700ff`），rgba（`rgba(183, 0, 255, 1)`），hsla（`hsla(283, 100%, 50%, 1)`）或 [顏色關鍵字]。此選項僅在 `color` 設定開啟時才有用。 |\n\n## 其他\n\n### paginator\n\n插入分頁連結。\n\n``` js\n<%- paginator(options) %>\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`base` | 基礎網址 | /\n`format` | 網址格式 | page/%d/\n`total` | 分頁總數 | 1\n`current` | 目前頁數 | 0\n`prev_text` | 上一頁連結的文字。僅在 `prev_next` 設定開啟時才有用。 | Prev\n`next_text` | 下一頁連結的文字。僅在 `prev_next` 設定開啟時才有用。 | Next\n`space` | 空白文字 | &hellp;\n`prev_next` | 顯示上一頁和下一頁的連結 | true\n`end_size` | 顯示於兩側的頁數 | 1\n`mid_size` | 顯示於中間的頁數 | 2\n`show_all` | 顯示所有頁數。如果開啟此設定的話，`end_size` 和 `mid_size` 就沒用了。 | false\n\n### search_form\n\n插入 Google 搜尋表單。\n\n``` js\n<%- search_form(options) %>\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`class` | 表單的 class name | search-form\n`text` | 搜尋提示文字 | Search\n`button` | 顯示搜尋按鈕。此設定可為布林值（boolean）或字串，當設定是字串的時候，即為搜尋按鈕的文字。 | false\n\n### number_format\n\n格式化數字。\n\n``` js\n<%- number_format(number, [options]) %>\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`precision` | 數字精確度。此選項可為 `false` 或非負整數。 | false\n`delimiter` | 千位數分隔符號 | ,\n`separator` | 整數和小數之間的分隔符號 | .\n\n**範例：**\n\n``` js\n<%- number_format(12345.67, {precision: 1}) %>\n// 12,345.68\n\n<%- number_format(12345.67, {precision: 4}) %>\n// 12,345.6700\n\n<%- number_format(12345.67, {precision: 0}) %>\n// 12,345\n\n<%- number_format(12345.67, {delimiter: ''}) %>\n// 12345.67\n\n<%- number_format(12345.67, {separator: '/'}) %>\n// 12,345/67\n```\n\n### open_graph\n\n插入 [Open Graph] 資料。\n\n``` js\n<%- open_graph([options]) %>\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`title` | 頁面標題 (`og:title`) | `page.title`\n`type` | 頁面類型 (`og:type`) | blog\n`url` | 頁面網址 (`og:url`) | `url`\n`image` | 頁面圖片 (`og:image`) | 內容中的圖片\n`site_name` | 網站名稱 (`og:site_name`) | `config.title`\n`description` | 頁面描述 (`og:desription`) | 內容摘要或前 200 字\n`twitter_card` | Twitter 卡片類型 (`twitter:card`) | summary\n`twitter_id` | Twitter ID (`twitter:creator`) |\n`twitter_site` | Twitter 網站 (`twitter:site`) |\n`google_plus` | Google+ 個人資料連結 |\n`fb_admins` | Facebook 管理者 ID |\n`fb_app_id` | Facebook 應用程式 ID |\n\n### toc\n\n解析內容中的標題標籤 (h1~h6) 並插入目錄。\n\n``` js\n<%- toc(str, [options]) %>\n```\n\n選項 | 描述 | 預設值\n--- | --- | ---\n`class` | Class 名稱 | toc\n`list_number` | 顯示編號 | true\n\n**範例：**\n\n``` js\n<%- toc(page.content) %>\n```\n\n[顏色關鍵字]: http://www.w3.org/TR/css3-color/#svg-color\n[Moment.js]: http://momentjs.com/\n[Open Graph]: http://ogp.me/",
				"html": "<p>輔助函數幫助您在模版中快速插入內容。</p>\n<h2 id=\"網址\"><a href=\"#網址\" class=\"headerlink\" title=\"網址\"></a>網址</h2><h3 id=\"url-for\"><a href=\"#url-for\" class=\"headerlink\" title=\"url_for\"></a>url_for</h3><p>在路徑前加上根路徑，從 Hexo 2.7 開始您應該使用此函數，避免使用 <code>config.root + path</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- url_for(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"relative-url\"><a href=\"#relative-url\" class=\"headerlink\" title=\"relative_url\"></a>relative_url</h3><p>取得與 <code>from</code> 相對的 <code>to</code> 路徑。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- relative_url(<span class=\"keyword\">from</span>, to) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"gravatar\"><a href=\"#gravatar\" class=\"headerlink\" title=\"gravatar\"></a>gravatar</h3><p>插入 Gravatar 圖片。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(email, [size]);</span><br></pre></td></tr></table></figure>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>, <span class=\"number\">40</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"HTML-標籤\"><a href=\"#HTML-標籤\" class=\"headerlink\" title=\"HTML 標籤\"></a>HTML 標籤</h2><h3 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h3><p>載入 CSS 檔案。<code>path</code> 可以是陣列或字串，如果 <code>path</code> 開頭不是 <code>/</code> 或任何協議，則會自動加上根路徑；如果後面沒有加上 <code>.css</code> 副檔名的話，也會自動加上。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(<span class=\"string\">'style.css'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- css([<span class=\"string\">'style.css'</span>, <span class=\"string\">'screen.css'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\"&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h3><p>載入 JavaScript 檔案。<code>path</code> 可以是陣列或字串，如果 <code>path</code> 開頭不是 <code>/</code> 或任何協議，則會自動加上根路徑；如果後面沒有加上 <code>.js</code> 副檔名的話，也會自動加上。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- js([<span class=\"string\">'script.js'</span>, <span class=\"string\">'gallery.js'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/gallery.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"link-to\"><a href=\"#link-to\" class=\"headerlink\" title=\"link_to\"></a>link_to</h3><p>插入連結。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>external</code></td>\n<td>在新視窗開啟連結</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class 名稱</td>\n<td></td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"http://www.google.com\"&gt;http://www.google.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\"&gt;Google&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>, &#123;<span class=\"attr\">external</span>: <span class=\"literal\">true</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\"&gt;Google&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"mail-to\"><a href=\"#mail-to\" class=\"headerlink\" title=\"mail_to\"></a>mail_to</h3><p>插入電子郵件連結。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class 名稱</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>subject</code></td>\n<td>郵件主旨</td>\n</tr>\n<tr>\n<td><code>cc</code></td>\n<td>副本（CC）</td>\n</tr>\n<tr>\n<td><code>bcc</code></td>\n<td>密件副本（BCC）</td>\n</tr>\n<tr>\n<td><code>body</code></td>\n<td>郵件內容</td>\n</tr>\n</tbody>\n</table>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"a@abc.com\"&gt;a@abc.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>, <span class=\"string\">'Email'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"Email\"&gt;Email&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"image-tag\"><a href=\"#image-tag\" class=\"headerlink\" title=\"image_tag\"></a>image_tag</h3><p>插入圖片。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- image_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>alt</code></td>\n<td>圖片的替代文字</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class 名稱</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>width</code></td>\n<td>圖片寬度</td>\n</tr>\n<tr>\n<td><code>height</code></td>\n<td>圖片高度</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"favicon-tag\"><a href=\"#favicon-tag\" class=\"headerlink\" title=\"favicon_tag\"></a>favicon_tag</h3><p>插入 favicon。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- favicon_tag(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"feed-tag\"><a href=\"#feed-tag\" class=\"headerlink\" title=\"feed_tag\"></a>feed_tag</h3><p>插入 feed 連結。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- feed_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Feed 標題</td>\n<td></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Feed 類型</td>\n<td>atom</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"判斷函數\"><a href=\"#判斷函數\" class=\"headerlink\" title=\"判斷函數\"></a>判斷函數</h2><h3 id=\"is-current\"><a href=\"#is-current\" class=\"headerlink\" title=\"is_current\"></a>is_current</h3><p>檢查 <code>path</code> 是否符合目前頁面的網址。開啟 <code>strict</code> 選項啟用嚴格比對。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_current(path, [strict]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-home\"><a href=\"#is-home\" class=\"headerlink\" title=\"is_home\"></a>is_home</h3><p>檢查目前是否為首頁。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_home() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-post\"><a href=\"#is-post\" class=\"headerlink\" title=\"is_post\"></a>is_post</h3><p>檢查目前是否為文章。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_post() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-archive\"><a href=\"#is-archive\" class=\"headerlink\" title=\"is_archive\"></a>is_archive</h3><p>檢查目前是否為彙整頁面。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_archive() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-year\"><a href=\"#is-year\" class=\"headerlink\" title=\"is_year\"></a>is_year</h3><p>檢查目前是否為年度彙整頁面。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_year() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-month\"><a href=\"#is-month\" class=\"headerlink\" title=\"is_month\"></a>is_month</h3><p>檢查目前是否為每月彙整頁面。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_month() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-category\"><a href=\"#is-category\" class=\"headerlink\" title=\"is_category\"></a>is_category</h3><p>檢查目前是否為分類彙整頁面。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_category() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-tag\"><a href=\"#is-tag\" class=\"headerlink\" title=\"is_tag\"></a>is_tag</h3><p>檢查目前是否為標籤彙整頁面。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_tag() %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"字串處理\"><a href=\"#字串處理\" class=\"headerlink\" title=\"字串處理\"></a>字串處理</h2><h3 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\"trim\"></a>trim</h3><p>清除字串的開頭和結尾空白。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- trim(string) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"strip-html\"><a href=\"#strip-html\" class=\"headerlink\" title=\"strip_html\"></a>strip_html</h3><p>清除字串中的 HTML 標籤。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(<span class=\"string\">'It'</span>s not &lt;b&gt;important&lt;<span class=\"regexp\">/b&gt; anymore!') %&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ It's not important anymore!</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"titlecase\"><a href=\"#titlecase\" class=\"headerlink\" title=\"titlecase\"></a>titlecase</h3><p>把字串轉換為正確的 Title case。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(<span class=\"string\">'this is an apple'</span>) %&gt;</span><br><span class=\"line\"># This is an Apple</span><br></pre></td></tr></table></figure>\n<h3 id=\"markdown\"><a href=\"#markdown\" class=\"headerlink\" title=\"markdown\"></a>markdown</h3><p>使用 Markdown 渲染字串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(str) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(<span class=\"string\">'make me **strong**'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// make me &lt;strong&gt;strong&lt;/strong&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h3><p>渲染字串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- render(str, engine, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"word-wrap\"><a href=\"#word-wrap\" class=\"headerlink\" title=\"word_wrap\"></a>word_wrap</h3><p>使每行的字串長度不超過 <code>length</code>。<code>length</code> 預設為 80。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(str, [length]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(<span class=\"string\">'Once upon a time'</span>, <span class=\"number\">8</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon\\n a time</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"truncate\"><a href=\"#truncate\" class=\"headerlink\" title=\"truncate\"></a>truncate</h3><p>移除超過 <code>length</code> 的字串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(text, length) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, <span class=\"number\">16</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon a time</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h2><h3 id=\"partial\"><a href=\"#partial\" class=\"headerlink\" title=\"partial\"></a>partial</h3><p>載入其他模板檔案，您可在 <code>locals</code> 設定區域變數。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(layout, [locals], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cache</code></td>\n<td>儲存快取（使用 Fragment cache）</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>only</code></td>\n<td>限制區域變數。在模板中只能使用 <code>locals</code> 中設定的變數。</td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fragment-cache\"><a href=\"#fragment-cache\" class=\"headerlink\" title=\"fragment_cache\"></a>fragment_cache</h3><p>儲存局部快取。它儲存局部內容，下次使用時就能直接使用快取。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(id, fn);</span><br></pre></td></tr></table></figure>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;) %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"日期與時間\"><a href=\"#日期與時間\" class=\"headerlink\" title=\"日期與時間\"></a>日期與時間</h2><h3 id=\"date\"><a href=\"#date\" class=\"headerlink\" title=\"date\"></a>date</h3><p>插入格式化的日期。<code>date</code> 可以是 UNIX 時間、ISO 字串、Date 物件或 <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 物件。<code>format</code> 預設為 <code>date_format</code> 設定。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'MMM D YYYY'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1 2013</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"date-xml\"><a href=\"#date-xml\" class=\"headerlink\" title=\"date_xml\"></a>date_xml</h3><p>插入 XML 格式的日期。<code>date</code> 可以是 UNIX 時間、ISO 字串、Date 物件或 <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 物件。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(date) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01T00:00:00.000Z</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"time\"><a href=\"#time\" class=\"headerlink\" title=\"time\"></a>time</h3><p>插入格式化的時間。<code>date</code> 可以是 UNIX 時間、ISO 字串、Date 物件或 <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 物件。<code>format</code> 預設為 <code>time_format</code> 設定。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 13:05:12</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 1:05:12 pm</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"full-date\"><a href=\"#full-date\" class=\"headerlink\" title=\"full_date\"></a>full_date</h3><p>插入格式化的日期和時間。<code>date</code> 可以是 UNIX 時間、ISO 字串、Date 物件或 <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 物件。<code>format</code> 預設為 <code>date_format + time_format</code> 設定。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1, 2013 0:00:00</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(), <span class=\"string\">'dddd, MMMM Do YYYY, h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Tuesday, January 1st 2013, 12:00:00 am</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"moment\"><a href=\"#moment\" class=\"headerlink\" title=\"moment\"></a>moment</h3><p><a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 函式庫。</p>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h3 id=\"list-categories\"><a href=\"#list-categories\" class=\"headerlink\" title=\"list_categories\"></a>list_categories</h3><p>插入分類列表。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_categories([categories], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>分類排列方式</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>分類排列順序。<code>1</code>, <code>asc</code> 升冪；<code>-1</code>, <code>desc</code> 降冪。</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>顯示每個分類的文章總數</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>分類列表的顯示方式。使用 <code>list</code> 以無序列表（unordered list）方式顯示。</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>分類間的分隔符號。只有在 <code>style</code> 不是 <code>list</code> 時有用。</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>depth</code></td>\n<td>要顯示的分類層級。<code>0</code> 顯示所有層級的分類；<code>-1</code> 和 <code>0</code> 很類似，但是顯示不分層級；<code>1</code> 只顯示第一層的分類。</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>分類列表的 class 名稱。</td>\n<td>category</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>改變分類名稱顯示方法的函數</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-tags\"><a href=\"#list-tags\" class=\"headerlink\" title=\"list_tags\"></a>list_tags</h3><p>插入標籤列表。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_tags([tags], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>標籤排列方式</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>標籤排列順序。<code>1</code>, <code>asc</code> 升冪；<code>-1</code>, <code>desc</code> 降冪。</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>顯示每個標籤的文章總數</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>標籤列表的顯示方式。使用 <code>list</code> 以無序列表（unordered list）方式顯示。</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>標籤間的分隔符號。只有在 <code>style</code> 不是 <code>list</code> 時有用。</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>標籤列表的 class 名稱。</td>\n<td>tag</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>改變標籤名稱顯示方法的函數</td>\n<td></td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>要顯示的標籤數量（0 = 無限制）</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-archives\"><a href=\"#list-archives\" class=\"headerlink\" title=\"list_archives\"></a>list_archives</h3><p>插入彙整列表。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_archives([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>type</code></td>\n<td>類型。此設定可為 <code>yearly</code> 或 <code>monthly</code>。</td>\n<td>monthly</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>排列順序。<code>1</code>, <code>asc</code> 升冪；<code>-1</code>, <code>desc</code> 降冪。</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>顯示每個彙整的文章總數</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>日期格式</td>\n<td>MMMM YYYY</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>彙整列表的顯示方式。使用 <code>list</code> 以無序列表（unordered list）方式顯示。</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>彙整間的分隔符號。只有在 <code>style</code> 不是 <code>list</code> 時有用。</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>彙整列表的 class 名稱。</td>\n<td>archive</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>改變彙整名稱顯示方法的函數</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-posts\"><a href=\"#list-posts\" class=\"headerlink\" title=\"list_posts\"></a>list_posts</h3><p>插入文章列表。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_posts([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>文章排列方式</td>\n<td>date</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>文章排列順序。<code>1</code>, <code>asc</code> 升冪；<code>-1</code>, <code>desc</code> 降冪。</td>\n<td>-1</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>文章列表的顯示方式。使用 <code>list</code> 以無序列表（unordered list）方式顯示。</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>文章間的分隔符號。只有在 <code>style</code> 不是 <code>list</code> 時有用。</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>文章列表的 class 名稱。</td>\n<td>post</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>要顯示的文章數量（0 = 無限制）</td>\n<td>6</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>改變文章名稱顯示方法的函數</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tagcloud\"><a href=\"#tagcloud\" class=\"headerlink\" title=\"tagcloud\"></a>tagcloud</h3><p>插入標籤雲。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- tagcloud([tags], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>min_font</code></td>\n<td>最小字體尺寸</td>\n<td>10</td>\n</tr>\n<tr>\n<td><code>max_font</code></td>\n<td>最大字體尺寸</td>\n<td>20</td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td>字體尺寸的單位</td>\n<td>px</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>標籤總量</td>\n<td>40</td>\n</tr>\n<tr>\n<td><code>orderby</code></td>\n<td>標籤排列方式</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>標籤排列順序。<code>1</code>, <code>sac</code> 升冪；<code>-1</code>, <code>desc</code> 降冪</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>使用顏色</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>start_color</code></td>\n<td>開始的顏色。您可使用十六進位值（<code>#b700ff</code>），rgba（<code>rgba(183, 0, 255, 1)</code>），hsla（<code>hsla(283, 100%, 50%, 1)</code>）或 <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">顏色關鍵字</a>。此選項僅在 <code>color</code> 設定開啟時才有用。</td>\n<td></td>\n</tr>\n<tr>\n<td><code>end_color</code></td>\n<td>結束的顏色。您可使用十六進位值（<code>#b700ff</code>），rgba（<code>rgba(183, 0, 255, 1)</code>），hsla（<code>hsla(283, 100%, 50%, 1)</code>）或 <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">顏色關鍵字</a>。此選項僅在 <code>color</code> 設定開啟時才有用。</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"paginator\"><a href=\"#paginator\" class=\"headerlink\" title=\"paginator\"></a>paginator</h3><p>插入分頁連結。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- paginator(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>base</code></td>\n<td>基礎網址</td>\n<td>/</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>網址格式</td>\n<td>page/%d/</td>\n</tr>\n<tr>\n<td><code>total</code></td>\n<td>分頁總數</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>current</code></td>\n<td>目前頁數</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>prev_text</code></td>\n<td>上一頁連結的文字。僅在 <code>prev_next</code> 設定開啟時才有用。</td>\n<td>Prev</td>\n</tr>\n<tr>\n<td><code>next_text</code></td>\n<td>下一頁連結的文字。僅在 <code>prev_next</code> 設定開啟時才有用。</td>\n<td>Next</td>\n</tr>\n<tr>\n<td><code>space</code></td>\n<td>空白文字</td>\n<td>&hellp;</td>\n</tr>\n<tr>\n<td><code>prev_next</code></td>\n<td>顯示上一頁和下一頁的連結</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>end_size</code></td>\n<td>顯示於兩側的頁數</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>mid_size</code></td>\n<td>顯示於中間的頁數</td>\n<td>2</td>\n</tr>\n<tr>\n<td><code>show_all</code></td>\n<td>顯示所有頁數。如果開啟此設定的話，<code>end_size</code> 和 <code>mid_size</code> 就沒用了。</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"search-form\"><a href=\"#search-form\" class=\"headerlink\" title=\"search_form\"></a>search_form</h3><p>插入 Google 搜尋表單。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- search_form(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>表單的 class name</td>\n<td>search-form</td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>搜尋提示文字</td>\n<td>Search</td>\n</tr>\n<tr>\n<td><code>button</code></td>\n<td>顯示搜尋按鈕。此設定可為布林值（boolean）或字串，當設定是字串的時候，即為搜尋按鈕的文字。</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"number-format\"><a href=\"#number-format\" class=\"headerlink\" title=\"number_format\"></a>number_format</h3><p>格式化數字。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(number, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>precision</code></td>\n<td>數字精確度。此選項可為 <code>false</code> 或非負整數。</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>delimiter</code></td>\n<td>千位數分隔符號</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>整數和小數之間的分隔符號</td>\n<td>.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">1</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.68</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">4</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.6700</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">0</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">delimiter</span>: <span class=\"string\">''</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12345.67</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">separator</span>: <span class=\"string\">'/'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345/67</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"open-graph\"><a href=\"#open-graph\" class=\"headerlink\" title=\"open_graph\"></a>open_graph</h3><p>插入 <a href=\"http://ogp.me/\" target=\"_blank\" rel=\"noopener\">Open Graph</a> 資料。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- open_graph([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>頁面標題 (<code>og:title</code>)</td>\n<td><code>page.title</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>頁面類型 (<code>og:type</code>)</td>\n<td>blog</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>頁面網址 (<code>og:url</code>)</td>\n<td><code>url</code></td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>頁面圖片 (<code>og:image</code>)</td>\n<td>內容中的圖片</td>\n</tr>\n<tr>\n<td><code>site_name</code></td>\n<td>網站名稱 (<code>og:site_name</code>)</td>\n<td><code>config.title</code></td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>頁面描述 (<code>og:desription</code>)</td>\n<td>內容摘要或前 200 字</td>\n</tr>\n<tr>\n<td><code>twitter_card</code></td>\n<td>Twitter 卡片類型 (<code>twitter:card</code>)</td>\n<td>summary</td>\n</tr>\n<tr>\n<td><code>twitter_id</code></td>\n<td>Twitter ID (<code>twitter:creator</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>twitter_site</code></td>\n<td>Twitter 網站 (<code>twitter:site</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>google_plus</code></td>\n<td>Google+ 個人資料連結</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_admins</code></td>\n<td>Facebook 管理者 ID</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_app_id</code></td>\n<td>Facebook 應用程式 ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"toc\"><a href=\"#toc\" class=\"headerlink\" title=\"toc\"></a>toc</h3><p>解析內容中的標題標籤 (h1~h6) 並插入目錄。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(str, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n<th>預設值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class 名稱</td>\n<td>toc</td>\n</tr>\n<tr>\n<td><code>list_number</code></td>\n<td>顯示編號</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<p><strong>範例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(page.content) %&gt;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941760000,
				"created_by": 2,
				"updated_at": 1546941760000,
				"updated_by": 2,
				"published_at": 1546941760000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69i0042koeo47o98xzc",
				"title": "Команды",
				"markdown": "## init\n\n``` bash\n$ hexo init [folder]\n```\n\nИнициализирует сайт. Если переменная `folder` не указана, Hexo создаёт сайт в текущей папке.\n\n## new\n\n``` bash\n$ hexo new [layout] <title>\n```\n\nБудет создана новая статья. Если макет не был указан, Hexo будет использовать значение `default_layout` указанное в  [_config.yml](configuration.html). Если название содержит пробелы, заключите его в кавычки.\n\n## generate\n\n``` bash\n$ hexo generate\n```\n\nГенерирует статичные файлы.\n\nПараметр | Описание\n--- | ---\n`-d`, `--deploy` | Опубликовать после генерации\n`-w`, `--watch` | Отслеживать изменения файлов\n\n## publish\n\n``` bash\n$ hexo publish [layout] <filename>\n```\n\nПереносит черновик в публикуемую папку.\n\n## server\n\n``` bash\n$ hexo server\n```\n\nЗапускает локальный сервер. По умолчанию адрес: `http://localhost:4000/`.\n\nПараметр | Описание\n--- | ---\n`-p`, `--port` | Переназначает стандартный порт\n`-s`, `--static` | Обрабатывать только статичные файлы\n`-l`, `--log` | Включить журналирование. Переопределяет формат журнала.\n\n## deploy\n\n``` bash\n$ hexo deploy\n```\n\nПубликует сайт.\n\nПараметр | Описание\n--- | ---\n`-g`, `--generate` | Генерировать перед публикацией\n\n## render\n\n``` bash\n$ hexo render <file1> [file2] ...\n```\n\nГенерирует файлы.\n\nПараметр | Описание\n--- | ---\n`-o`, `--output` | Путь вывода\n\n## migrate\n\n``` bash\n$ hexo migrate <type>\n```\n\n[Миграция](migration.html) контента из других систем.\n\n## clean\n\n``` bash\n$ hexo clean\n```\n\nОчищает кэш (`db.json`) и генерирует файлы для опубликования (`public`).\n\n## list\n\n``` bash\n$ hexo list <type>\n```\n\nСписок всех путей.\n\n## version\n\n``` bash\n$ hexo version\n```\n\nОтображает информацию о версии Hexo.\n\n## Опции\n\n### Безопасный режим\n\n``` bash\n$ hexo --safe\n```\n\nОтключает загрузку плагинов и скриптов. Применяется при возникновении проблем после установки нового плагина.\n\n### Режим отладки\n\n``` bash\n$ hexo --debug\n```\n\nЖурнал подробных сообщений в терминале и `debug.log`. Применяется, при возникновении проблем с Hexo. Если выдаются ошибки, пожалуйста, задайте вопрос на [GitHub](https://github.com/hexojs/hexo/issues/new).\n\n### Тихий режим\n\n``` bash\n$ hexo --silent\n```\n\nОтключает показ сообщений в консоли.\n\n### Альтернативная конфигурация\n\n``` bash\n$ hexo --config custom.yml\n```\n\nИспользует другой конфигурационный файл (вместо `_config.yml`).\n\n### Показать черновики\n\n``` bash\n$ hexo --draft\n```\n\nОтображает черновики (хранящиеся в папке `source/_drafts`).\n\n### Изменить рабочую папку\n\n``` bash\n$ hexo --cwd /path/to/cwd\n```\n\nИзменяет путь к текущей рабочей папке.\n",
				"html": "<h2 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init [folder]</span><br></pre></td></tr></table></figure>\n<p>Инициализирует сайт. Если переменная <code>folder</code> не указана, Hexo создаёт сайт в текущей папке.</p>\n<h2 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>Будет создана новая статья. Если макет не был указан, Hexo будет использовать значение <code>default_layout</code> указанное в  <a href=\"configuration.html\">_config.yml</a>. Если название содержит пробелы, заключите его в кавычки.</p>\n<h2 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>Генерирует статичные файлы.</p>\n<table>\n<thead>\n<tr>\n<th>Параметр</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-d</code>, <code>--deploy</code></td>\n<td>Опубликовать после генерации</td>\n</tr>\n<tr>\n<td><code>-w</code>, <code>--watch</code></td>\n<td>Отслеживать изменения файлов</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"publish\"><a href=\"#publish\" class=\"headerlink\" title=\"publish\"></a>publish</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<p>Переносит черновик в публикуемую папку.</p>\n<h2 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>Запускает локальный сервер. По умолчанию адрес: <code>http://localhost:4000/</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Параметр</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-p</code>, <code>--port</code></td>\n<td>Переназначает стандартный порт</td>\n</tr>\n<tr>\n<td><code>-s</code>, <code>--static</code></td>\n<td>Обрабатывать только статичные файлы</td>\n</tr>\n<tr>\n<td><code>-l</code>, <code>--log</code></td>\n<td>Включить журналирование. Переопределяет формат журнала.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>Публикует сайт.</p>\n<table>\n<thead>\n<tr>\n<th>Параметр</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-g</code>, <code>--generate</code></td>\n<td>Генерировать перед публикацией</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>\n<p>Генерирует файлы.</p>\n<table>\n<thead>\n<tr>\n<th>Параметр</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-o</code>, <code>--output</code></td>\n<td>Путь вывода</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"migrate\"><a href=\"#migrate\" class=\"headerlink\" title=\"migrate\"></a>migrate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p><a href=\"migration.html\">Миграция</a> контента из других систем.</p>\n<h2 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>Очищает кэш (<code>db.json</code>) и генерирует файлы для опубликования (<code>public</code>).</p>\n<h2 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo list &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>Список всех путей.</p>\n<h2 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n<p>Отображает информацию о версии Hexo.</p>\n<h2 id=\"Опции\"><a href=\"#Опции\" class=\"headerlink\" title=\"Опции\"></a>Опции</h2><h3 id=\"Безопасный-режим\"><a href=\"#Безопасный-режим\" class=\"headerlink\" title=\"Безопасный режим\"></a>Безопасный режим</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --safe</span><br></pre></td></tr></table></figure>\n<p>Отключает загрузку плагинов и скриптов. Применяется при возникновении проблем после установки нового плагина.</p>\n<h3 id=\"Режим-отладки\"><a href=\"#Режим-отладки\" class=\"headerlink\" title=\"Режим отладки\"></a>Режим отладки</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --debug</span><br></pre></td></tr></table></figure>\n<p>Журнал подробных сообщений в терминале и <code>debug.log</code>. Применяется, при возникновении проблем с Hexo. Если выдаются ошибки, пожалуйста, задайте вопрос на <a href=\"https://github.com/hexojs/hexo/issues/new\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h3 id=\"Тихий-режим\"><a href=\"#Тихий-режим\" class=\"headerlink\" title=\"Тихий режим\"></a>Тихий режим</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --silent</span><br></pre></td></tr></table></figure>\n<p>Отключает показ сообщений в консоли.</p>\n<h3 id=\"Альтернативная-конфигурация\"><a href=\"#Альтернативная-конфигурация\" class=\"headerlink\" title=\"Альтернативная конфигурация\"></a>Альтернативная конфигурация</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure>\n<p>Использует другой конфигурационный файл (вместо <code>_config.yml</code>).</p>\n<h3 id=\"Показать-черновики\"><a href=\"#Показать-черновики\" class=\"headerlink\" title=\"Показать черновики\"></a>Показать черновики</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --draft</span><br></pre></td></tr></table></figure>\n<p>Отображает черновики (хранящиеся в папке <code>source/_drafts</code>).</p>\n<h3 id=\"Изменить-рабочую-папку\"><a href=\"#Изменить-рабочую-папку\" class=\"headerlink\" title=\"Изменить рабочую папку\"></a>Изменить рабочую папку</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure>\n<p>Изменяет путь к текущей рабочей папке.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68u002ckoeoxhp322ny",
				"title": "Templates",
				"markdown": "템플릿은 당신의 웹 사이트를 외관을 어떻게 표현할지 정의합니다. 아래 표는 페이지에 따른 적절한 템플릿을 소개합니다. 테마는 최소한 `index` 템플릿은 가지고 있어야 합니다. \n\n템플릿 | 페이지 | 대비책\n--- | --- | ---\n`index` | Home page |\n`post` | Posts | `index`\n`page` | Pages | `index`\n`archive` | Archives | `index`\n`category` | Category archives | `archive`\n`tag` | Tag archives | `archive`\n\n## 레이아웃\n\n페이지들이 비슷한 구조를 공유하는 경우 - 예를 들어, header와 footer를 갖는 두 개의 템플릿이 있다고 할 때 - 당신은 `layout`을 사용하여 구조적인 유사성을 나타낼 수 있습니다. 모든 레이아웃 파일은 템플릿의 컨텐츠를 표시할 `body` 변수를 가지고 있어야 합니다.\n\n``` html index.ejs\nindex\n```\n\n``` html layout.ejs\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n```\n\nyields:\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>index</body>\n</html>\n```\n\n기본적으로 `layout` 템플릿은 다른 모든 템플릿에서 사용합니다. 추가적인 레이아웃을 front-matter 내부에 지정할 수도 있고 `false`로 설정하여 비활성화 시킬 수도 있습니다. 심지어 최상위 레이아웃에 레이아웃 템플릿을 더 포함시켜서 복잡하게 중첩된 구조를 만들 수도 있습니다.\n\n## Partials\n\nPartial은 템플릿끼리 구성 요소를 공유할 때 유용합니다. 일반적인 예로 header, footer, sidebar가 있습니다. Partial을 각각의 파일에 포함시켜서 당신의 웹 사이트를 좀 더 간단하게 유지보수 할 수 있습니다.\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\nyields:\n\n``` html\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n```\n\n## 지역 변수\n\n템플릿 내에 지역 변수를 정의할 수 있고 이를 다른 팀플릿 내에서 사용할 수 있습니다.\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= title></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\nyields:\n\n``` html\n<h1 id=\"logo\">Hello World</h1>\n<div id=\"content\">Home page</div>\n```\n\n## 최적화\n\n당신의 테마가 대단히 복잡하거나 매우 많은 수의 파일을 생성한다면, Hexo의 파일 생성 속도가 상당히 느려질 수 있습니다. 이 외에도 테마를 단순화 함으로써 Hexo 2.7에서 소개한 Fragment Caching을 사용할 수도 있습니다.\n\n이 기능은 [Ruby on Rails](http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching)에서 차용하였습니다. 이는 컨텐츠를 조각으로 나누어 저장하고 추가 요청이 발생할 때를 위해 캐시합니다. 이 방법으로 데이터베이스 쿼리 빈도를 낮출 수 있고 파일 생성 속도를 단축시킬 수 있습니다.\n\nFragment caching은 header, footer, sidebar, 다른 정적인 컨텐츠를 사용할 때 최고입니다.\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\n그렇다 하더라도 Partial을 사용하는 것이 더 쉬울 수 있습니다.\n\n``` js\n<%- partial('header', {}, {cache: true});\n```\n\n`relative_link`가 활성화 상태일 때에는 fragment caching을 사용하지 마세요. 사용하게 되면 이슈가 발생할 수 있습니다. 왜냐하면 상대 링크는 표시되는 페이지에 따라 다를 수도 있기 때문입니다.\n",
				"html": "<p>템플릿은 당신의 웹 사이트를 외관을 어떻게 표현할지 정의합니다. 아래 표는 페이지에 따른 적절한 템플릿을 소개합니다. 테마는 최소한 <code>index</code> 템플릿은 가지고 있어야 합니다. </p>\n<table>\n<thead>\n<tr>\n<th>템플릿</th>\n<th>페이지</th>\n<th>대비책</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>index</code></td>\n<td>Home page</td>\n<td></td>\n</tr>\n<tr>\n<td><code>post</code></td>\n<td>Posts</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>Pages</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>archive</code></td>\n<td>Archives</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>Category archives</td>\n<td><code>archive</code></td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td>Tag archives</td>\n<td><code>archive</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"레이아웃\"><a href=\"#레이아웃\" class=\"headerlink\" title=\"레이아웃\"></a>레이아웃</h2><p>페이지들이 비슷한 구조를 공유하는 경우 - 예를 들어, header와 footer를 갖는 두 개의 템플릿이 있다고 할 때 - 당신은 <code>layout</code>을 사용하여 구조적인 유사성을 나타낼 수 있습니다. 모든 레이아웃 파일은 템플릿의 컨텐츠를 표시할 <code>body</code> 변수를 가지고 있어야 합니다.</p>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">index</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>기본적으로 <code>layout</code> 템플릿은 다른 모든 템플릿에서 사용합니다. 추가적인 레이아웃을 front-matter 내부에 지정할 수도 있고 <code>false</code>로 설정하여 비활성화 시킬 수도 있습니다. 심지어 최상위 레이아웃에 레이아웃 템플릿을 더 포함시켜서 복잡하게 중첩된 구조를 만들 수도 있습니다.</p>\n<h2 id=\"Partials\"><a href=\"#Partials\" class=\"headerlink\" title=\"Partials\"></a>Partials</h2><p>Partial은 템플릿끼리 구성 요소를 공유할 때 유용합니다. 일반적인 예로 header, footer, sidebar가 있습니다. Partial을 각각의 파일에 포함시켜서 당신의 웹 사이트를 좀 더 간단하게 유지보수 할 수 있습니다.</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>') %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>My Site<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"지역-변수\"><a href=\"#지역-변수\" class=\"headerlink\" title=\"지역 변수\"></a>지역 변수</h2><p>템플릿 내에 지역 변수를 정의할 수 있고 이를 다른 팀플릿 내에서 사용할 수 있습니다.</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>', &#123;<span class=\"attr\">title:</span> '<span class=\"attr\">Hello</span> <span class=\"attr\">World</span>'&#125;) %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"최적화\"><a href=\"#최적화\" class=\"headerlink\" title=\"최적화\"></a>최적화</h2><p>당신의 테마가 대단히 복잡하거나 매우 많은 수의 파일을 생성한다면, Hexo의 파일 생성 속도가 상당히 느려질 수 있습니다. 이 외에도 테마를 단순화 함으로써 Hexo 2.7에서 소개한 Fragment Caching을 사용할 수도 있습니다.</p>\n<p>이 기능은 <a href=\"http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\" target=\"_blank\" rel=\"noopener\">Ruby on Rails</a>에서 차용하였습니다. 이는 컨텐츠를 조각으로 나누어 저장하고 추가 요청이 발생할 때를 위해 캐시합니다. 이 방법으로 데이터베이스 쿼리 빈도를 낮출 수 있고 파일 생성 속도를 단축시킬 수 있습니다.</p>\n<p>Fragment caching은 header, footer, sidebar, 다른 정적인 컨텐츠를 사용할 때 최고입니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>그렇다 하더라도 Partial을 사용하는 것이 더 쉬울 수 있습니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p><code>relative_link</code>가 활성화 상태일 때에는 fragment caching을 사용하지 마세요. 사용하게 되면 이슈가 발생할 수 있습니다. 왜냐하면 상대 링크는 표시되는 페이지에 따라 다를 수도 있기 때문입니다.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68v002dkoeo1d2k0v22",
				"title": "Tag Plugins",
				"markdown": "태그 플러그인은 포스트의 태그와는 다릅니다. Octopress로부터 가져온 것으로 특별한 컨텐츠를 당신의 포스트에 빠르게 추가할 수 있도록 도와주는 유용한 방법입니다.\n\n## Block Quote\n\n인용구를 post, 소스, 제목에 추가하기 위한 완벽한 방법입니다. 옵션으로 인용구의 원작자를 추가할 수도 있습니다.\n\n**Alias:** quote\n\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n### 예시\n\n**인자가 없는 일반 인용**\n\n```\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n```\n\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n\n**책 인용하기**\n\n```\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n```\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n**Twitter 인용하기**\n\n```\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n```\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n**웹 게시물 인용하기**\n\n```\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n```\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n## Code Block\n\n코드 조각(snippet)을 포스트에 추가할 수 있는 유용한 기능입니다.\n\n**Alias:** code\n\n```\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n\n### 예시\n\n**일반 code block 사용하기**\n\n```\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**언어 지정하기**\n\n```\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n```\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n\n**Code block에 제목 넣기**\n\n```\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n```\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n\n**제목과 URL 넣기**\n\n```\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n```\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n## Backtick Code Block\n\n이 방법은 code block을 사용하는 것과 같습니다만 block을 구분하기 위해 세 개의 역 따옴표를 사용하는 점이 다릅니다.\n\n{% raw %}\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n{% endraw %}\n\n## Pull Quote\n\npull 인용을 추가하기 위한 방법은 다음과 같습니다.\n\n```\n{% pullquote [class] %}\ncontent\n{% endpullquote %}\n```\n\n## jsFiddle\n\njsFiddle을 포함시킬 수 있습니다.\n\n```\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\n\n## Gist\n\nGist를 포함시킬 수 있습니다.\n\n```\n{% gist gist_id [filename] %}\n```\n\n## iframe\n\niframe을 포함시킬 수 있습니다.\n\n```\n{% iframe url [width] [height] %}\n```\n\n## Image\n\n이미지의 사이즈를 지정하여 포함시킬 수 있습니다.\n\n```\n{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}\n```\n\n## Link\n\n`target=\"_blank\"` 속성으로 링크를 포함시킬 수 있습니다.\n\n```\n{% link text url [external] [title] %}\n```\n\n## Include Code\n\n`source/downloads/code` 폴더에 있는 코드를 포함시킬 수 있습니다.\n\n```\n{% include_code [title] [lang:language] path/to/file %}\n```\n\n## YouTube\n\nYouTube video를 포함시킬 수 있습니다.\n\n```\n{% youtube video_id %}\n```\n\n## Vimeo\n\nVimeo video를 포함시킬 수 있습니다.\n\n```\n{% vimeo video_id %}\n```\n\n## Include Posts\n\n다른 포스트의 링크를 포함시킬 수 있습니다.\n\n```\n{% post_path slug %}\n{% post_link slug [title] %}\n```\n\n## Include Assets\n\n포스트의 asset을 포함시킬 수 있습니다.\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n## Raw\n\n특정 컨텐츠가 당신의 포스트 내에서 문제를 일으킨다면, `raw` 태그를 사용하여 감싸주세요. 그러면 렌더링 에러를 피할 수 있습니다.\n\n```\n{% raw %}\ncontent\n{% endraw %}\n```\n",
				"html": "<p>태그 플러그인은 포스트의 태그와는 다릅니다. Octopress로부터 가져온 것으로 특별한 컨텐츠를 당신의 포스트에 빠르게 추가할 수 있도록 도와주는 유용한 방법입니다.</p>\n<h2 id=\"Block-Quote\"><a href=\"#Block-Quote\" class=\"headerlink\" title=\"Block Quote\"></a>Block Quote</h2><p>인용구를 post, 소스, 제목에 추가하기 위한 완벽한 방법입니다. 옵션으로 인용구의 원작자를 추가할 수도 있습니다.</p>\n<p><strong>Alias:</strong> quote</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h3><p><strong>인자가 없는 일반 인용</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote %&#125;</span><br><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>\n</blockquote>\n<p><strong>책 인용하기</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class=\"line\">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n<p><strong>Twitter 인용하기</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;</span><br><span class=\"line\">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\" target=\"_blank\" rel=\"noopener\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\" target=\"_blank\" rel=\"noopener\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<p><strong>웹 게시물 인용하기</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</span><br><span class=\"line\">Every interaction is both precious and an opportunity to delight.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\" target=\"_blank\" rel=\"noopener\">Welcome to Island Marketing</a></cite></footer></blockquote>\n<h2 id=\"Code-Block\"><a href=\"#Code-Block\" class=\"headerlink\" title=\"Code Block\"></a>Code Block</h2><p>코드 조각(snippet)을 포스트에 추가할 수 있는 유용한 기능입니다.</p>\n<p><strong>Alias:</strong> code</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class=\"line\">code snippet</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"예시-1\"><a href=\"#예시-1\" class=\"headerlink\" title=\"예시\"></a>예시</h3><p><strong>일반 code block 사용하기</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock %&#125;</span><br><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br></pre></td></tr></table></figure>\n<p><strong>언어 지정하기</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock lang:objc %&#125;</span><br><span class=\"line\">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"code\"><pre><span class=\"line\">[rectangle setX: <span class=\"number\">10</span> y: <span class=\"number\">10</span> width: <span class=\"number\">20</span> height: <span class=\"number\">20</span>];</span><br></pre></td></tr></table></figure>\n<p><strong>Code block에 제목 넣기</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock Array.map %&#125;</span><br><span class=\"line\">array.map(callback[, thisArg])</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>\n<p><strong>제목과 URL 넣기</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock _.compact http://underscorejs.org/#compact Underscore.js %&#125;</span><br><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>_.compact</span><a href=\"http://underscorejs.org/#compact\" target=\"_blank\" rel=\"noopener\">Underscore.js</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>\n<h2 id=\"Backtick-Code-Block\"><a href=\"#Backtick-Code-Block\" class=\"headerlink\" title=\"Backtick Code Block\"></a>Backtick Code Block</h2><p>이 방법은 code block을 사용하는 것과 같습니다만 block을 구분하기 위해 세 개의 역 따옴표를 사용하는 점이 다릅니다.</p>\n\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n\n<h2 id=\"Pull-Quote\"><a href=\"#Pull-Quote\" class=\"headerlink\" title=\"Pull Quote\"></a>Pull Quote</h2><p>pull 인용을 추가하기 위한 방법은 다음과 같습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% pullquote [class] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"jsFiddle\"><a href=\"#jsFiddle\" class=\"headerlink\" title=\"jsFiddle\"></a>jsFiddle</h2><p>jsFiddle을 포함시킬 수 있습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h2><p>Gist를 포함시킬 수 있습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"iframe\"><a href=\"#iframe\" class=\"headerlink\" title=\"iframe\"></a>iframe</h2><p>iframe을 포함시킬 수 있습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2><p>이미지의 사이즈를 지정하여 포함시킬 수 있습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><p><code>target=&quot;_blank&quot;</code> 속성으로 링크를 포함시킬 수 있습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-Code\"><a href=\"#Include-Code\" class=\"headerlink\" title=\"Include Code\"></a>Include Code</h2><p><code>source/downloads/code</code> 폴더에 있는 코드를 포함시킬 수 있습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% include_code [title] [lang:language] path/to/file %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"YouTube\"><a href=\"#YouTube\" class=\"headerlink\" title=\"YouTube\"></a>YouTube</h2><p>YouTube video를 포함시킬 수 있습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% youtube video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Vimeo\"><a href=\"#Vimeo\" class=\"headerlink\" title=\"Vimeo\"></a>Vimeo</h2><p>Vimeo video를 포함시킬 수 있습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% vimeo video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-Posts\"><a href=\"#Include-Posts\" class=\"headerlink\" title=\"Include Posts\"></a>Include Posts</h2><p>다른 포스트의 링크를 포함시킬 수 있습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% post_path slug %&#125;</span><br><span class=\"line\">&#123;% post_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-Assets\"><a href=\"#Include-Assets\" class=\"headerlink\" title=\"Include Assets\"></a>Include Assets</h2><p>포스트의 asset을 포함시킬 수 있습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Raw\"><a href=\"#Raw\" class=\"headerlink\" title=\"Raw\"></a>Raw</h2><p>특정 컨텐츠가 당신의 포스트 내에서 문제를 일으킨다면, <code>raw</code> 태그를 사용하여 감싸주세요. 그러면 렌더링 에러를 피할 수 있습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68w002ekoeoqcxlyrfr",
				"title": "Troubleshooting",
				"markdown": "Hexo 사용 중에 문제가 발생할 경우, 이 문서에 있는 해결책을 확인해 보세요. 자주 발생하는 문제에 대해 정리해 두었습니다. 만약 이 문서에서 해결 방안을 찾지 못하였다면 [GitHub](https://github.com/hexojs/hexo/issues) 또는 [Google Group](https://groups.google.com/group/hexo)을 검색해 보세요.\n\n## YAML Parsing Error\n\n``` plain\nJS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:\n      last_updated: Last updated: %s\n```\n\n문자열이 콜론(:)을 포함하고 있다면 따옴표(\")로 감싸주세요.\n\n``` plain\nJS-YAML: bad indentation of a mapping entry at line 18, column 31:\n      last_updated:\"Last updated: %s\"\n```\n\nSoft tab의 사용을 명확히 하고 콜론(:) 뒤에는 공백을 추가해 주세요.\n\n[YAML Spec](http://www.yaml.org/spec/1.2/spec.html)에서 더 많은 정보를 확인하실 수 있습니다.\n\n## EMFILE Error\n\n``` plain\nError: EMFILE, too many open files\n```\n\nNode.js가 non-blocking I/O를 가지고 있음에도 불구하고, 동기적 I/O의 최대 개수는 아직도 시스템에 의해 제한됩니다. 많은 수의 파일을 생성하려 할 때 EMFILE error가 발생할 수 있습니다. 이 경우 동기적 I/O의 개술를 증가시키기 위해 아래의 명령어를 수행해 보세요.\n\n``` bash\n$ ulimit -n 10000\n```\n\n## `process out of memory`\n\n생성(generation)중에 이 error가 발생할 수 있습니다.:\n```\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory\n```\n\n`hexo-cli`의 첫 줄에 있는 Node.js heap memory size를 증가시키세요(파일을 찾기 위해 `which hexo` 명령을 사용해 보세요).\n\n```\n#!/usr/bin/env node --max_old_space_size=8192\n```\n\n[Out of memory while generating a huge blog · Issue #1735 · hexojs/hexo](https://github.com/hexojs/hexo/issues/1735)\n\n## Git Deployment Problems\n\n``` plain\nerror: RPC failed; result=22, HTTP code = 403\n\nfatal: 'username.github.io' does not appear to be a git repository\n```\n\n당신의 컴퓨터에 [GIT 설정](https://help.github.com/articles/set-up-git)이 제대로 되어있는지 확인하거나 HTTPS 저장소 URL을 사용해 보세요.\n\n## Server Problems\n\n``` plain\nError: listen EADDRINUSE\n```\n\n동시에 두 개의 Hexo server를 실행시키려 하거나 다른 어플리케이션이 같은 포트를 사용하려고 할 때 발생합니다. `port` 설정을 수정하거나 Hexo server를 `-p` 플래그와 함께 시작해 보세요.\n\n``` bash\n$ hexo server -p 5000\n```\n\n## Plugin Installation Problems\n\n``` plain\nnpm ERR! node-waf configure build\n```\n\n이 에러는 JavaScript가 아닌 C, C++ 등으로 작성된 플러그인을 설치하려 할 때 발생합니다. 컴퓨터에 맞는 올바른 컴파일러를 설치해 보세요.\n\n## Error with DTrace (Mac OS X)\n\n```plain\n{ [Error: Cannot find module './build/Release/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/default/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/Debug/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n```\n\nDTrace의 설치가 문제를 일으킬 수 있습니다. 아래 명령을 사용해 보세요.\n```sh\n$ npm install hexo --no-optional\n```\n[#1326](https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796) 이슈를 확인해 보세요.\n\n## Iterate Data Model on Jade or Swig\n\nHexo는 데이터 모델로 [Warehouse]을 사용합니다. 이는 배열(array)이 아니기 때문에 iterable하게 object를 변환해야 합니다.\n\n```\n{% for post in site.posts.toArray() %}\n{% endfor %}\n```\n\n## Data Not Updated\n\n몇몇 데이터가 갱신되지 않거나 새로 생성되는 파일들이 마지막 버전과 동일할 경우입니다. 캐시를 정리하고 다시 시도해 보세요.\n\n``` bash\n$ hexo clean\n```\n\n## Escape Contents\n\nHexo는 포스트를 렌더링하는데 [Nunjucks]를 사용합니다([Swig]은 이전 버전에서 사용했었습니다. 문법은 비슷합니다.). `{% raw %}{{ }}{% endraw %}` 또는 `{% raw %}{% %}{% endraw %}`로 감싼 컨텐츠는 파싱된 후에 문제를 발생시킵니다. 민감한 컨텐츠는 `raw` 태그 플러그인으로 감싸는 것이 좋습니다.\n\n```\n{% raw %}\nHello {{ sensitive }}\n{% endraw %}\n```\n## ENOSPC Error (Linux)\n`$ hexo server`명령어가 가끔 error를 반환할 때가 있습니다.\n```\nError: watch ENOSPC ...\n```\n`$ npm dedupe`를 실행하여도 해결되지 않는다면 Linux console에서 아래 명령을 수행해 보세요.\n```\n$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\n이 명령어는 감시(watch)할 수 있는 파일의 개수 제한을 증가시킵니다.\n\n[Warehouse]: https://github.com/hexojs/warehouse\n[Swig]: http://paularmstrong.github.io/swig/\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n",
				"html": "<p>Hexo 사용 중에 문제가 발생할 경우, 이 문서에 있는 해결책을 확인해 보세요. 자주 발생하는 문제에 대해 정리해 두었습니다. 만약 이 문서에서 해결 방안을 찾지 못하였다면 <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> 또는 <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a>을 검색해 보세요.</p>\n<h2 id=\"YAML-Parsing-Error\"><a href=\"#YAML-Parsing-Error\" class=\"headerlink\" title=\"YAML Parsing Error\"></a>YAML Parsing Error</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:</span><br><span class=\"line\">      last_updated: Last updated: %s</span><br></pre></td></tr></table></figure>\n<p>문자열이 콜론(:)을 포함하고 있다면 따옴표(“)로 감싸주세요.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: bad indentation of a mapping entry at line 18, column 31:</span><br><span class=\"line\">      last_updated:&quot;Last updated: %s&quot;</span><br></pre></td></tr></table></figure>\n<p>Soft tab의 사용을 명확히 하고 콜론(:) 뒤에는 공백을 추가해 주세요.</p>\n<p><a href=\"http://www.yaml.org/spec/1.2/spec.html\" target=\"_blank\" rel=\"noopener\">YAML Spec</a>에서 더 많은 정보를 확인하실 수 있습니다.</p>\n<h2 id=\"EMFILE-Error\"><a href=\"#EMFILE-Error\" class=\"headerlink\" title=\"EMFILE Error\"></a>EMFILE Error</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: EMFILE, too many open files</span><br></pre></td></tr></table></figure>\n<p>Node.js가 non-blocking I/O를 가지고 있음에도 불구하고, 동기적 I/O의 최대 개수는 아직도 시스템에 의해 제한됩니다. 많은 수의 파일을 생성하려 할 때 EMFILE error가 발생할 수 있습니다. 이 경우 동기적 I/O의 개술를 증가시키기 위해 아래의 명령어를 수행해 보세요.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ulimit</span> -n 10000</span><br></pre></td></tr></table></figure>\n<h2 id=\"process-out-of-memory\"><a href=\"#process-out-of-memory\" class=\"headerlink\" title=\"process out of memory\"></a><code>process out of memory</code></h2><p>생성(generation)중에 이 error가 발생할 수 있습니다.:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory</span><br></pre></td></tr></table></figure></p>\n<p><code>hexo-cli</code>의 첫 줄에 있는 Node.js heap memory size를 증가시키세요(파일을 찾기 위해 <code>which hexo</code> 명령을 사용해 보세요).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env node --max_old_space_size=8192</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/hexojs/hexo/issues/1735\" target=\"_blank\" rel=\"noopener\">Out of memory while generating a huge blog · Issue #1735 · hexojs/hexo</a></p>\n<h2 id=\"Git-Deployment-Problems\"><a href=\"#Git-Deployment-Problems\" class=\"headerlink\" title=\"Git Deployment Problems\"></a>Git Deployment Problems</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">error: RPC failed; result=22, HTTP code = 403</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: &apos;username.github.io&apos; does not appear to be a git repository</span><br></pre></td></tr></table></figure>\n<p>당신의 컴퓨터에 <a href=\"https://help.github.com/articles/set-up-git\" target=\"_blank\" rel=\"noopener\">GIT 설정</a>이 제대로 되어있는지 확인하거나 HTTPS 저장소 URL을 사용해 보세요.</p>\n<h2 id=\"Server-Problems\"><a href=\"#Server-Problems\" class=\"headerlink\" title=\"Server Problems\"></a>Server Problems</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: listen EADDRINUSE</span><br></pre></td></tr></table></figure>\n<p>동시에 두 개의 Hexo server를 실행시키려 하거나 다른 어플리케이션이 같은 포트를 사용하려고 할 때 발생합니다. <code>port</code> 설정을 수정하거나 Hexo server를 <code>-p</code> 플래그와 함께 시작해 보세요.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h2 id=\"Plugin-Installation-Problems\"><a href=\"#Plugin-Installation-Problems\" class=\"headerlink\" title=\"Plugin Installation Problems\"></a>Plugin Installation Problems</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm ERR! node-waf configure build</span><br></pre></td></tr></table></figure>\n<p>이 에러는 JavaScript가 아닌 C, C++ 등으로 작성된 플러그인을 설치하려 할 때 발생합니다. 컴퓨터에 맞는 올바른 컴파일러를 설치해 보세요.</p>\n<h2 id=\"Error-with-DTrace-Mac-OS-X\"><a href=\"#Error-with-DTrace-Mac-OS-X\" class=\"headerlink\" title=\"Error with DTrace (Mac OS X)\"></a>Error with DTrace (Mac OS X)</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/default/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Debug/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br></pre></td></tr></table></figure>\n<p>DTrace의 설치가 문제를 일으킬 수 있습니다. 아래 명령을 사용해 보세요.<br><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo --no-optional</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796\" target=\"_blank\" rel=\"noopener\">#1326</a> 이슈를 확인해 보세요.</p>\n<h2 id=\"Iterate-Data-Model-on-Jade-or-Swig\"><a href=\"#Iterate-Data-Model-on-Jade-or-Swig\" class=\"headerlink\" title=\"Iterate Data Model on Jade or Swig\"></a>Iterate Data Model on Jade or Swig</h2><p>Hexo는 데이터 모델로 <a href=\"https://github.com/hexojs/warehouse\" target=\"_blank\" rel=\"noopener\">Warehouse</a>을 사용합니다. 이는 배열(array)이 아니기 때문에 iterable하게 object를 변환해야 합니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% for post in site.posts.toArray() %&#125;</span><br><span class=\"line\">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Data-Not-Updated\"><a href=\"#Data-Not-Updated\" class=\"headerlink\" title=\"Data Not Updated\"></a>Data Not Updated</h2><p>몇몇 데이터가 갱신되지 않거나 새로 생성되는 파일들이 마지막 버전과 동일할 경우입니다. 캐시를 정리하고 다시 시도해 보세요.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<h2 id=\"Escape-Contents\"><a href=\"#Escape-Contents\" class=\"headerlink\" title=\"Escape Contents\"></a>Escape Contents</h2><p>Hexo는 포스트를 렌더링하는데 <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a>를 사용합니다(<a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a>은 이전 버전에서 사용했었습니다. 문법은 비슷합니다.). <code>{{ }}</code> 또는 <code>{% %}</code>로 감싼 컨텐츠는 파싱된 후에 문제를 발생시킵니다. 민감한 컨텐츠는 <code>raw</code> 태그 플러그인으로 감싸는 것이 좋습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">Hello &#123;&#123; sensitive &#125;&#125;</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ENOSPC-Error-Linux\"><a href=\"#ENOSPC-Error-Linux\" class=\"headerlink\" title=\"ENOSPC Error (Linux)\"></a>ENOSPC Error (Linux)</h2><p><code>$ hexo server</code>명령어가 가끔 error를 반환할 때가 있습니다.<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: watch ENOSPC ...</span><br></pre></td></tr></table></figure></p>\n<p><code>$ npm dedupe</code>를 실행하여도 해결되지 않는다면 Linux console에서 아래 명령을 수행해 보세요.<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure></p>\n<p>이 명령어는 감시(watch)할 수 있는 파일의 개수 제한을 증가시킵니다.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68w002fkoeokeioll0l",
				"title": "Themes",
				"markdown": "Hexo theme를 만드는 것은 쉽습니다. - 새로운 폴더를 생성하기만 하면 됩니다. 당신의 테마의 사용을 위해 `_config.yml` 파일의 theme` 설정을 수정하세요. 테마는 아래의 구조를 가져야 합니다.\n\n``` plain\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n### _config.yml\n\n테마의 환경설정 파일입니다. server를 재시작하지 않고도 이 파일을 수정할 수 있습니다.\n\n### languages\n\n언어 폴더입니다. 더 자세한 정보는 [internationalization (i18n)](internationalization.html)를 참조하세요.\n\n### layout\n\n레이아웃 폴더입니다. 이 폴더는 당신의 웹 사이트를 어떻게 보여줄지 정의한 테마 템플릿 파일을 포함합니다. Hexo는 기본적으로 [Swig] 템플릿 엔진을 준비해 두었습니다. 하지만 당신은 [EJS], [Haml], [Jade] 등 엔진을 대체할 다른 플러그인을 쉽게 설치할 수 있습니다. Hexo는 템플릿의 파일 확장자를 기반으로 템플릿 엔진을 선택합니다.\n\n``` plain\nlayout.ejs   - uses EJS\nlayout.swig  - uses Swig\n```\n\n[templates](templates.html)에서 더 자세한 정보를 확인할 수 있습니다.\n\n### scripts\n\n스크립트 폴더입니다. Hexo는 초기화 과정에서 이 폴더의 모든 JavaScript 파일을 자동으로 불러옵니다. [plugins](plugins.html)에서 더 자세한 정보를 확인할 수 있습니다.\n\n### source\n\n소스 폴더입니다. Asset 파일(CSS, JavaScript 등)을 이곳에 넣어두세요. Hexo는 숨겨진 파일 및 `_`(underscore)로 시작하는 파일과 폴더를 무시합니다.\n\nHexo는 모든 렌더링 가능한 파일들을 처리한 후 `public` 폴더에 저장합니다. 렌더링이 불가능한 파일들은 `public` 폴더로 직접 복사합니다.\n\n### 배포\n\n테마의 제작이 완료되면, [테마 목록](/themes)에 배포할 수 있습니다. 이 동작을 수행하기 전에 정상 동작을 보증하기 위해 [테마 유닛 테스트](https://github.com/hexojs/hexo-theme-unit-test)를 수행하세요. 테마를 배포하는 단계들은 [문서의 갱신](contributing.html#Updating_Documentation) 과정과 매우 유사합니다.\n\n1. Fork [hexojs/site]\n2. 저장소를 당신의 컴퓨터에 clone하고 의존 사항들을 설치합니다.\n\n    ```shell\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    ```\n\n3. `source/_data/themes.yml`를 수정하고 테마를 추가하세요.\n\n    ```yaml\n    - name: landscape\n      description: A brand new default theme for Hexo.\n      link: https://github.com/hexojs/hexo-theme-landscape\n      preview: http://hexo.io/hexo-theme-landscape\n      tags:\n        - official\n        - responsive\n        - widget\n        - two_column\n        - one_column\n    ```\n\n4. `source/themes/screenshots`에 스크린샷을 추가하세요. 스크린샷의 이름은 테마와 동일해야 하며 반드시 사이즈가 800*500 픽셀인 PNG 파일이어야 합니다.\n5. Branch에 push하세요.\n6. 변경사항에 대한 설명을 포함하여 Pull request를 생성합니다.\n\n[EJS]: https://github.com/hexojs/hexo-renderer-ejs\n[Swig]: http://paularmstrong.github.com/swig/\n[Haml]: https://github.com/hexojs/hexo-renderer-haml\n[Jade]: https://github.com/hexojs/hexo-renderer-jade\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<p>Hexo theme를 만드는 것은 쉽습니다. - 새로운 폴더를 생성하기만 하면 됩니다. 당신의 테마의 사용을 위해 <code>_config.yml</code> 파일의 theme` 설정을 수정하세요. 테마는 아래의 구조를 가져야 합니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── languages</span><br><span class=\"line\">├── layout</span><br><span class=\"line\">├── scripts</span><br><span class=\"line\">└── source</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>테마의 환경설정 파일입니다. server를 재시작하지 않고도 이 파일을 수정할 수 있습니다.</p>\n<h3 id=\"languages\"><a href=\"#languages\" class=\"headerlink\" title=\"languages\"></a>languages</h3><p>언어 폴더입니다. 더 자세한 정보는 <a href=\"internationalization.html\">internationalization (i18n)</a>를 참조하세요.</p>\n<h3 id=\"layout\"><a href=\"#layout\" class=\"headerlink\" title=\"layout\"></a>layout</h3><p>레이아웃 폴더입니다. 이 폴더는 당신의 웹 사이트를 어떻게 보여줄지 정의한 테마 템플릿 파일을 포함합니다. Hexo는 기본적으로 <a href=\"http://paularmstrong.github.com/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a> 템플릿 엔진을 준비해 두었습니다. 하지만 당신은 <a href=\"https://github.com/hexojs/hexo-renderer-ejs\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"https://github.com/hexojs/hexo-renderer-haml\" target=\"_blank\" rel=\"noopener\">Haml</a>, <a href=\"https://github.com/hexojs/hexo-renderer-jade\" target=\"_blank\" rel=\"noopener\">Jade</a> 등 엔진을 대체할 다른 플러그인을 쉽게 설치할 수 있습니다. Hexo는 템플릿의 파일 확장자를 기반으로 템플릿 엔진을 선택합니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">layout.ejs   - uses EJS</span><br><span class=\"line\">layout.swig  - uses Swig</span><br></pre></td></tr></table></figure>\n<p><a href=\"templates.html\">templates</a>에서 더 자세한 정보를 확인할 수 있습니다.</p>\n<h3 id=\"scripts\"><a href=\"#scripts\" class=\"headerlink\" title=\"scripts\"></a>scripts</h3><p>스크립트 폴더입니다. Hexo는 초기화 과정에서 이 폴더의 모든 JavaScript 파일을 자동으로 불러옵니다. <a href=\"plugins.html\">plugins</a>에서 더 자세한 정보를 확인할 수 있습니다.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>소스 폴더입니다. Asset 파일(CSS, JavaScript 등)을 이곳에 넣어두세요. Hexo는 숨겨진 파일 및 <code>_</code>(underscore)로 시작하는 파일과 폴더를 무시합니다.</p>\n<p>Hexo는 모든 렌더링 가능한 파일들을 처리한 후 <code>public</code> 폴더에 저장합니다. 렌더링이 불가능한 파일들은 <code>public</code> 폴더로 직접 복사합니다.</p>\n<h3 id=\"배포\"><a href=\"#배포\" class=\"headerlink\" title=\"배포\"></a>배포</h3><p>테마의 제작이 완료되면, <a href=\"/themes\">테마 목록</a>에 배포할 수 있습니다. 이 동작을 수행하기 전에 정상 동작을 보증하기 위해 <a href=\"https://github.com/hexojs/hexo-theme-unit-test\" target=\"_blank\" rel=\"noopener\">테마 유닛 테스트</a>를 수행하세요. 테마를 배포하는 단계들은 <a href=\"contributing.html#Updating_Documentation\">문서의 갱신</a> 과정과 매우 유사합니다.</p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>저장소를 당신의 컴퓨터에 clone하고 의존 사항들을 설치합니다.</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> https://github.com/&lt;username&gt;/site.git</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> site</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>source/_data/themes.yml</code>를 수정하고 테마를 추가하세요.</p>\n <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">- name:</span> <span class=\"string\">landscape</span></span><br><span class=\"line\"><span class=\"attr\">  description:</span> <span class=\"string\">A</span> <span class=\"string\">brand</span> <span class=\"string\">new</span> <span class=\"string\">default</span> <span class=\"string\">theme</span> <span class=\"string\">for</span> <span class=\"string\">Hexo.</span></span><br><span class=\"line\"><span class=\"attr\">  link:</span> <span class=\"attr\">https://github.com/hexojs/hexo-theme-landscape</span></span><br><span class=\"line\"><span class=\"attr\">  preview:</span> <span class=\"attr\">http://hexo.io/hexo-theme-landscape</span></span><br><span class=\"line\"><span class=\"attr\">  tags:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">official</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">responsive</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">widget</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">two_column</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">one_column</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>source/themes/screenshots</code>에 스크린샷을 추가하세요. 스크린샷의 이름은 테마와 동일해야 하며 반드시 사이즈가 800*500 픽셀인 PNG 파일이어야 합니다.</p>\n</li>\n<li>Branch에 push하세요.</li>\n<li>변경사항에 대한 설명을 포함하여 Pull request를 생성합니다.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68w002gkoeop6p23soz",
				"title": "Writing",
				"markdown": "새 포스트나 페이지를 생성하기 위해 아래 명령어를 입력하세요.\n\n``` bash\n$ hexo new [layout] <title>\n```\n\n`post` 는 기본 `layout`입니다. 하지만 `_config.yml` 파일의 `default_layout` 설정을 변경하여 당신이 만든 것으로 변경할 수 있습니다.\n\n### 레이아웃\n\nHexo에는 세 개의 기본 레이아웃이 존재합니다. `post`, `page`, `draft` 입니다. 이 각각의 레이아웃에 의해 생성된 파일들은 서로 다른 경로에 저장됩니다. 새롭게 생성된 포스트는 `source/_posts` 폴더에 저장됩니다.\n\n레이아웃 | 경로\n--- | ---\n`post` | `source/_posts`\n`page` | `source`\n`draft` | `source/_drafts`\n\n{% note tip Don't process my posts! %}\n당신의 post가 처리되는 것을 원치 않는다면 front-matter에 `layout: false`를 선언하면 됩니다.\n{% endnote %}\n\n### 파일명\n\n기본적으로, Hexo는 post의 제목을 파일명과 동일하게 사용합니다. `_config.yml` 파일의 `new_post_name` 설정을 변경하여 기본 파일명을 바꿀 수 있습니다. 예를 들어, `:year-:month-:day-:title.md`는 포스트가 생성된 날짜를 파일명의 접두사로 사용하게 합니다. 당신은 아래와 같은 placeholder를 사용할 수 있습니다.\n\nPlaceholder | 설명\n--- | ---\n`:title` | Post 제목 (소문자, 공백은 '-'하이픈으로 변경됩니다.)\n`:year` | 연도를 생성합니다. 예. `2015`\n`:month` | 월을 생성합니다. (0이 붙습니다.), 예. `04`\n`:i_month` | 월을 생성합니다. (0이 붙지 않습니다.), 예. `4`\n`:day` | 일을 생성합니다. (0이 붙습니다.), 예. `07`\n`:i_day` | 일을 생성합니다. (0이 붙지 않습니다.), 예. `7`\n\n### Draft\n\n이전에, 우리는 Hexo의 특별한 레이아웃에 대해 언급한 적이 있습니다. 바로 `draft`입니다. 이 레이아웃으로 초기화된 포스트는 `source/_drafts`폴더에 저장됩니다. 당신은 `publish` 명령어를 통해 draft를 `source/_posts`폴더로 옮길 수 있습니다. `publish`는 `new` 명령어와 비슷하게 동작합니다.\n\n``` bash\n$ hexo publish [layout] <title>\n```\n\n기본적으로 Draft는 표시되지 않습니다. Hexo 실행 시 `--draft` 옵션을 추가하거나 `_config.yml`파일에서 `render_drafts`를 활성화 하면 draft를 렌더링할 수 있습니다.\n\n### Scaffold\n\n포스트 생성 시 Hexo는 `scaffolds` 폴더 내의 적당한 파일을 기반으로 구성합니다.\n\n``` bash\n$ hexo new photo \"My Gallery\"\n```\n\n이 명령어가 수행되면 Hexo는 `scaffolds` 폴더 내에서 `photo.md`를 찾기 시작하고 이를 기반으로 한 포스트를 구성합니다. Scaffolds 내에서는 아래의 placeholder를 사용할 수 있습니다.\n\nPlaceholder | 설명\n--- | ---\n`layout` | 레이아웃\n`title` | 제목\n`date` | 파일 생성일\n",
				"html": "<p>새 포스트나 페이지를 생성하기 위해 아래 명령어를 입력하세요.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p><code>post</code> 는 기본 <code>layout</code>입니다. 하지만 <code>_config.yml</code> 파일의 <code>default_layout</code> 설정을 변경하여 당신이 만든 것으로 변경할 수 있습니다.</p>\n<h3 id=\"레이아웃\"><a href=\"#레이아웃\" class=\"headerlink\" title=\"레이아웃\"></a>레이아웃</h3><p>Hexo에는 세 개의 기본 레이아웃이 존재합니다. <code>post</code>, <code>page</code>, <code>draft</code> 입니다. 이 각각의 레이아웃에 의해 생성된 파일들은 서로 다른 경로에 저장됩니다. 새롭게 생성된 포스트는 <code>source/_posts</code> 폴더에 저장됩니다.</p>\n<table>\n<thead>\n<tr>\n<th>레이아웃</th>\n<th>경로</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post</code></td>\n<td><code>source/_posts</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>draft</code></td>\n<td><code>source/_drafts</code></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note tip\"><strong class=\"note-title\">Don't process my posts!</strong><p>당신의 post가 처리되는 것을 원치 않는다면 front-matter에 <code>layout: false</code>를 선언하면 됩니다.</p>\n</blockquote>\n<h3 id=\"파일명\"><a href=\"#파일명\" class=\"headerlink\" title=\"파일명\"></a>파일명</h3><p>기본적으로, Hexo는 post의 제목을 파일명과 동일하게 사용합니다. <code>_config.yml</code> 파일의 <code>new_post_name</code> 설정을 변경하여 기본 파일명을 바꿀 수 있습니다. 예를 들어, <code>:year-:month-:day-:title.md</code>는 포스트가 생성된 날짜를 파일명의 접두사로 사용하게 합니다. 당신은 아래와 같은 placeholder를 사용할 수 있습니다.</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:title</code></td>\n<td>Post 제목 (소문자, 공백은 ‘-‘하이픈으로 변경됩니다.)</td>\n</tr>\n<tr>\n<td><code>:year</code></td>\n<td>연도를 생성합니다. 예. <code>2015</code></td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>월을 생성합니다. (0이 붙습니다.), 예. <code>04</code></td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>월을 생성합니다. (0이 붙지 않습니다.), 예. <code>4</code></td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>일을 생성합니다. (0이 붙습니다.), 예. <code>07</code></td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>일을 생성합니다. (0이 붙지 않습니다.), 예. <code>7</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Draft\"><a href=\"#Draft\" class=\"headerlink\" title=\"Draft\"></a>Draft</h3><p>이전에, 우리는 Hexo의 특별한 레이아웃에 대해 언급한 적이 있습니다. 바로 <code>draft</code>입니다. 이 레이아웃으로 초기화된 포스트는 <code>source/_drafts</code>폴더에 저장됩니다. 당신은 <code>publish</code> 명령어를 통해 draft를 <code>source/_posts</code>폴더로 옮길 수 있습니다. <code>publish</code>는 <code>new</code> 명령어와 비슷하게 동작합니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>기본적으로 Draft는 표시되지 않습니다. Hexo 실행 시 <code>--draft</code> 옵션을 추가하거나 <code>_config.yml</code>파일에서 <code>render_drafts</code>를 활성화 하면 draft를 렌더링할 수 있습니다.</p>\n<h3 id=\"Scaffold\"><a href=\"#Scaffold\" class=\"headerlink\" title=\"Scaffold\"></a>Scaffold</h3><p>포스트 생성 시 Hexo는 <code>scaffolds</code> 폴더 내의 적당한 파일을 기반으로 구성합니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new photo <span class=\"string\">\"My Gallery\"</span></span><br></pre></td></tr></table></figure>\n<p>이 명령어가 수행되면 Hexo는 <code>scaffolds</code> 폴더 내에서 <code>photo.md</code>를 찾기 시작하고 이를 기반으로 한 포스트를 구성합니다. Scaffolds 내에서는 아래의 placeholder를 사용할 수 있습니다.</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>레이아웃</td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>제목</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>파일 생성일</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68x002hkoeoxzzxsm56",
				"title": "Variables",
				"markdown": "### 전역 변수\n\n변수 | 설명\n--- | ---\n`site` | 사이트 전체의 정보.\n`page` | 페이지 정보와 front-matter의 사용자 정의 변수 집합.\n`config` | 사이트 환경설정\n`theme` | 테마 환경설정. 사이트 환경설정을 상속합니다.\n`_` (하나의 underscore) | [Lodash](https://lodash.com/  \"Lodash\" target=\"_blank\") 라이브러리\n`path` | 현재 페이지의 경로\n`url` | 현재 페이지의 전체 경로\n`env` | 환경설정 변수\n\n### 사이트 변수\n\n변수 | 설명\n--- | ---\n`site.posts` | 모든 포스트\n`site.pages` | 모든 페이지\n`site.categories` | 모든 카테고리\n`site.tags` | 모든 태그\n\n### 페이지 변수\n\n**Article (page)**\n\n변수 | 설명\n--- | ---\n`page.title` | 게시글 제목\n`page.date` | 게시글 생성 날짜 ([Moment.js] object)\n`page.updated` | 게시글이 마지막으로 갱신된 날짜 ([Moment.js] object)\n`page.comments` | 코멘트를 활성화 할지 여부\n`page.layout` | 레이아웃명\n`page.content` | 게시글에서 full 처리될 컨텐츠\n`page.excerpt` | 게시글 발췌\n`page.more` | 게시글 발췌를 제외한 컨텐츠\n`page.source` | 소스 파일의 경로\n`page.full_source` | 소스 파일의 전체 경로\n`page.path` | 루트 URL을 제외한 게시글의 URL. 테마에서는 `url_for(page.path)`를 자주 사용합니다.\n`page.permalink` | 게시글의 전체 URL\n`page.prev` | 이전 포스트, 현재 포스트가 첫 포스트라면 `null`입니다.\n`page.next` | 다음 포스트, 현재 포스트가 마지막 포스트라면 `null`입니다.\n`page.raw` | 게시글의 raw 데이터\n`page.photos` | 게시글의 사진들 (Gallery post를 사용한 것들)\n`page.link` | 게시글의 외부 링크 (Link post를 사용한 것들)\n\n**Post (post):** `page` 레이아웃과 동일하지만 아래의 변수를 추가로 갖습니다.\n\n변수 | 설명\n--- | ---\n`page.published` | Post가 draft상태가 아니라면 true를 반환합니다.\n`page.categories` | Post의 모든 카테고리\n`page.tags` | Post의 모든 태그\n\n**Home (index)**\n\n변수 | 설명\n--- | ---\n`page.per_page` | 한 페이지에 보여질 포스트의 수\n`page.total` | 페이지의 전체 개수\n`page.current` | 현재 페이지의 번호\n`page.current_url` | 현재 페이지의 URL\n`page.posts` | 이 페이지에 있는 포스트들 ([Data Model])\n`page.prev` | 이전 페이지 번호. 현재 페이지가 첫 페이지라면 `0`입니다.\n`page.prev_link` | 이전 페이지의 URL. 현재 페이지가 첫 페이지라면 `''`입니다.\n`page.next` | 다음 페이지 번호. 현재 페이지가 마지막 페이지라면 `0`입니다.\n`page.next_link` | 다음 페이지의 URL. 현재 페이지가 마지막 페이지라면 `''`입니다.\n`page.path` | 루트 URL을 제외한 현재 페이지의 URL. 테마에서는 `url_for(page.path)`를 자주 사용합니다.\n\n**Archive (archive):** `index` 레이아웃과 동일하지만 아래의 변수를 추가로 갖습니다.\n\n변수 | 설명\n--- | ---\n`page.archive` | `true`와 동일합니다.\n`page.year` | 아카이브 연도 (4자리 숫자)\n`page.month` | 아카이브 월 (0을 제외한 2자리 숫자)\n\n**Category (category):** `index` 레이아웃과 동일하지만 아래의 변수를 추가로 갖습니다.\n\n변수 | 설명\n--- | ---\n`page.category` | 카테고리명\n\n**Tag (tag):** `index` 레이아웃과 동일하지만 아래의 변수를 추가로 갖습니다.\n\n변수 | 설명\n--- | ---\n`page.tag` | 태그명\n\n[Moment.js]: http://momentjs.com/\n",
				"html": "<h3 id=\"전역-변수\"><a href=\"#전역-변수\" class=\"headerlink\" title=\"전역 변수\"></a>전역 변수</h3><table>\n<thead>\n<tr>\n<th>변수</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site</code></td>\n<td>사이트 전체의 정보.</td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>페이지 정보와 front-matter의 사용자 정의 변수 집합.</td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>사이트 환경설정</td>\n</tr>\n<tr>\n<td><code>theme</code></td>\n<td>테마 환경설정. 사이트 환경설정을 상속합니다.</td>\n</tr>\n<tr>\n<td><code>_</code> (하나의 underscore)</td>\n<td><a href=\"https://lodash.com/\" title=\"Lodash&quot; target=&quot;_blank\" target=\"_blank\" rel=\"noopener\">Lodash</a> 라이브러리</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>현재 페이지의 경로</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>현재 페이지의 전체 경로</td>\n</tr>\n<tr>\n<td><code>env</code></td>\n<td>환경설정 변수</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"사이트-변수\"><a href=\"#사이트-변수\" class=\"headerlink\" title=\"사이트 변수\"></a>사이트 변수</h3><table>\n<thead>\n<tr>\n<th>변수</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site.posts</code></td>\n<td>모든 포스트</td>\n</tr>\n<tr>\n<td><code>site.pages</code></td>\n<td>모든 페이지</td>\n</tr>\n<tr>\n<td><code>site.categories</code></td>\n<td>모든 카테고리</td>\n</tr>\n<tr>\n<td><code>site.tags</code></td>\n<td>모든 태그</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"페이지-변수\"><a href=\"#페이지-변수\" class=\"headerlink\" title=\"페이지 변수\"></a>페이지 변수</h3><p><strong>Article (page)</strong></p>\n<table>\n<thead>\n<tr>\n<th>변수</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.title</code></td>\n<td>게시글 제목</td>\n</tr>\n<tr>\n<td><code>page.date</code></td>\n<td>게시글 생성 날짜 (<a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object)</td>\n</tr>\n<tr>\n<td><code>page.updated</code></td>\n<td>게시글이 마지막으로 갱신된 날짜 (<a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object)</td>\n</tr>\n<tr>\n<td><code>page.comments</code></td>\n<td>코멘트를 활성화 할지 여부</td>\n</tr>\n<tr>\n<td><code>page.layout</code></td>\n<td>레이아웃명</td>\n</tr>\n<tr>\n<td><code>page.content</code></td>\n<td>게시글에서 full 처리될 컨텐츠</td>\n</tr>\n<tr>\n<td><code>page.excerpt</code></td>\n<td>게시글 발췌</td>\n</tr>\n<tr>\n<td><code>page.more</code></td>\n<td>게시글 발췌를 제외한 컨텐츠</td>\n</tr>\n<tr>\n<td><code>page.source</code></td>\n<td>소스 파일의 경로</td>\n</tr>\n<tr>\n<td><code>page.full_source</code></td>\n<td>소스 파일의 전체 경로</td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>루트 URL을 제외한 게시글의 URL. 테마에서는 <code>url_for(page.path)</code>를 자주 사용합니다.</td>\n</tr>\n<tr>\n<td><code>page.permalink</code></td>\n<td>게시글의 전체 URL</td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>이전 포스트, 현재 포스트가 첫 포스트라면 <code>null</code>입니다.</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>다음 포스트, 현재 포스트가 마지막 포스트라면 <code>null</code>입니다.</td>\n</tr>\n<tr>\n<td><code>page.raw</code></td>\n<td>게시글의 raw 데이터</td>\n</tr>\n<tr>\n<td><code>page.photos</code></td>\n<td>게시글의 사진들 (Gallery post를 사용한 것들)</td>\n</tr>\n<tr>\n<td><code>page.link</code></td>\n<td>게시글의 외부 링크 (Link post를 사용한 것들)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Post (post):</strong> <code>page</code> 레이아웃과 동일하지만 아래의 변수를 추가로 갖습니다.</p>\n<table>\n<thead>\n<tr>\n<th>변수</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.published</code></td>\n<td>Post가 draft상태가 아니라면 true를 반환합니다.</td>\n</tr>\n<tr>\n<td><code>page.categories</code></td>\n<td>Post의 모든 카테고리</td>\n</tr>\n<tr>\n<td><code>page.tags</code></td>\n<td>Post의 모든 태그</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Home (index)</strong></p>\n<table>\n<thead>\n<tr>\n<th>변수</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.per_page</code></td>\n<td>한 페이지에 보여질 포스트의 수</td>\n</tr>\n<tr>\n<td><code>page.total</code></td>\n<td>페이지의 전체 개수</td>\n</tr>\n<tr>\n<td><code>page.current</code></td>\n<td>현재 페이지의 번호</td>\n</tr>\n<tr>\n<td><code>page.current_url</code></td>\n<td>현재 페이지의 URL</td>\n</tr>\n<tr>\n<td><code>page.posts</code></td>\n<td>이 페이지에 있는 포스트들 ([Data Model])</td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>이전 페이지 번호. 현재 페이지가 첫 페이지라면 <code>0</code>입니다.</td>\n</tr>\n<tr>\n<td><code>page.prev_link</code></td>\n<td>이전 페이지의 URL. 현재 페이지가 첫 페이지라면 <code>&#39;&#39;</code>입니다.</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>다음 페이지 번호. 현재 페이지가 마지막 페이지라면 <code>0</code>입니다.</td>\n</tr>\n<tr>\n<td><code>page.next_link</code></td>\n<td>다음 페이지의 URL. 현재 페이지가 마지막 페이지라면 <code>&#39;&#39;</code>입니다.</td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>루트 URL을 제외한 현재 페이지의 URL. 테마에서는 <code>url_for(page.path)</code>를 자주 사용합니다.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Archive (archive):</strong> <code>index</code> 레이아웃과 동일하지만 아래의 변수를 추가로 갖습니다.</p>\n<table>\n<thead>\n<tr>\n<th>변수</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.archive</code></td>\n<td><code>true</code>와 동일합니다.</td>\n</tr>\n<tr>\n<td><code>page.year</code></td>\n<td>아카이브 연도 (4자리 숫자)</td>\n</tr>\n<tr>\n<td><code>page.month</code></td>\n<td>아카이브 월 (0을 제외한 2자리 숫자)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Category (category):</strong> <code>index</code> 레이아웃과 동일하지만 아래의 변수를 추가로 갖습니다.</p>\n<table>\n<thead>\n<tr>\n<th>변수</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.category</code></td>\n<td>카테고리명</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Tag (tag):</strong> <code>index</code> 레이아웃과 동일하지만 아래의 변수를 추가로 갖습니다.</p>\n<table>\n<thead>\n<tr>\n<th>변수</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.tag</code></td>\n<td>태그명</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68x002ikoeos67adck2",
				"title": "Box",
				"markdown": "\nBox é um container usado para processar arquivos em um diretório específico. O Hexo usa dois Boxes diferentes: `hexo.source` e` hexo.theme`. O primeiro é usado para processar o diretório `source` e o segundo para processar o diretório `theme`.\n\n## Carregar Arquivos\n\nO Box fornece dois métodos para carregar arquivos: `process` e` watch`. `process` carrega todos os arquivos no diretório. `watch` faz o mesmo, mas também começa a assistir as mudanças nos arquivos.\n\n``` js\nbox.process().then(function(){\n  // ...\n});\n\nbox.watch().then(function(){\n  // You can call box.unwatch() later to stop watching.\n});\n```\n\n## Correspondência Caminho (Path Matching)\n\nO Box fornece muitas maneiras para a correspondência de caminho. Você pode usar uma expressão regular, uma função ou uma string no padrão Express-style. Por exemplo:\n\n``` plain\nposts/:id => posts/89\nposts/*path => posts/2015/title\n```\n\nVeja [util.Pattern] para mais informações.\n\n## Processors\n\nUm `processor` é um elemento essencial do Box e é usado para processar arquivos. Você pode usar o path matching conforme descrito acima para restringir o que exatamente o `processor` deve processar. Registre um novo `processor` com o método `addProcessor`.\n\n``` js\nbox.addProcessor('posts/:id', function(file){\n  //\n});\n```\n\nO Box passa o conteúdo dos arquivos correspondentes aos processadores. Esta informação pode então ser lida diretamente do argumento `file` no retorno do callback:\n\nAtributo | Descrição\n--- | ---\n`source` | Caminho completo do arquivo.\n`path` | Caminho relativo para o Box do arquivo.\n`type` | Tipo de arquivo. O valor pode ser `create`, `update`, `skip` ou `delete`.\n`params` | A informação do caminho correspondente.\n\nO Box também fornece alguns métodos para que você não precise fazer o IO (entrada e saída) de arquivo por conta própria.\n\nMétodo | Descrição\n--- | ---\n`read` | Ler um arquivo.\n`readSync` | Ler um arquivo de forma síncrona.\n`stat` | Ler o status de um arquivo.\n`statSync` | Ler o status de um arquivo de forma síncrona.\n`render` | Renderizar um arquivo.\n`renderSync` | Renderizar um arquivo de forma síncrona.\n\n[util.Pattern]: https://github.com/hexojs/hexo-util#patternrule\n",
				"html": "<p>Box é um container usado para processar arquivos em um diretório específico. O Hexo usa dois Boxes diferentes: <code>hexo.source</code> e<code>hexo.theme</code>. O primeiro é usado para processar o diretório <code>source</code> e o segundo para processar o diretório <code>theme</code>.</p>\n<h2 id=\"Carregar-Arquivos\"><a href=\"#Carregar-Arquivos\" class=\"headerlink\" title=\"Carregar Arquivos\"></a>Carregar Arquivos</h2><p>O Box fornece dois métodos para carregar arquivos: <code>process</code> e<code>watch</code>. <code>process</code> carrega todos os arquivos no diretório. <code>watch</code> faz o mesmo, mas também começa a assistir as mudanças nos arquivos.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.process().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">box.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// You can call box.unwatch() later to stop watching.</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Correspondencia-Caminho-Path-Matching\"><a href=\"#Correspondencia-Caminho-Path-Matching\" class=\"headerlink\" title=\"Correspondência Caminho (Path Matching)\"></a>Correspondência Caminho (Path Matching)</h2><p>O Box fornece muitas maneiras para a correspondência de caminho. Você pode usar uma expressão regular, uma função ou uma string no padrão Express-style. Por exemplo:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">posts/:id =&gt; posts/89</span><br><span class=\"line\">posts/*path =&gt; posts/2015/title</span><br></pre></td></tr></table></figure>\n<p>Veja <a href=\"https://github.com/hexojs/hexo-util#patternrule\" target=\"_blank\" rel=\"noopener\">util.Pattern</a> para mais informações.</p>\n<h2 id=\"Processors\"><a href=\"#Processors\" class=\"headerlink\" title=\"Processors\"></a>Processors</h2><p>Um <code>processor</code> é um elemento essencial do Box e é usado para processar arquivos. Você pode usar o path matching conforme descrito acima para restringir o que exatamente o <code>processor</code> deve processar. Registre um novo <code>processor</code> com o método <code>addProcessor</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.addProcessor(<span class=\"string\">'posts/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>O Box passa o conteúdo dos arquivos correspondentes aos processadores. Esta informação pode então ser lida diretamente do argumento <code>file</code> no retorno do callback:</p>\n<table>\n<thead>\n<tr>\n<th>Atributo</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>Caminho completo do arquivo.</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Caminho relativo para o Box do arquivo.</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Tipo de arquivo. O valor pode ser <code>create</code>, <code>update</code>, <code>skip</code> ou <code>delete</code>.</td>\n</tr>\n<tr>\n<td><code>params</code></td>\n<td>A informação do caminho correspondente.</td>\n</tr>\n</tbody>\n</table>\n<p>O Box também fornece alguns métodos para que você não precise fazer o IO (entrada e saída) de arquivo por conta própria.</p>\n<table>\n<thead>\n<tr>\n<th>Método</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>read</code></td>\n<td>Ler um arquivo.</td>\n</tr>\n<tr>\n<td><code>readSync</code></td>\n<td>Ler um arquivo de forma síncrona.</td>\n</tr>\n<tr>\n<td><code>stat</code></td>\n<td>Ler o status de um arquivo.</td>\n</tr>\n<tr>\n<td><code>statSync</code></td>\n<td>Ler o status de um arquivo de forma síncrona.</td>\n</tr>\n<tr>\n<td><code>render</code></td>\n<td>Renderizar um arquivo.</td>\n</tr>\n<tr>\n<td><code>renderSync</code></td>\n<td>Renderizar um arquivo de forma síncrona.</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68x002jkoeofwi2rwk4",
				"title": "Deployer",
				"markdown": "\nUm `deployer` ajuda os usuários a implantar o seu site rapidamente em um servidor remoto sem comandos complicados.\n\n## Resumo\n\n``` js\nhexo.extend.deployer.register(name, function(args){\n  // ...\n});\n```\n\nUm argumento `args` será passado para a função. Ele contém o valor `deploy` definido no arquivo `_config.yml`, bem como as entradas exatas digitadas pelo usuário no terminal.\n",
				"html": "<p>Um <code>deployer</code> ajuda os usuários a implantar o seu site rapidamente em um servidor remoto sem comandos complicados.</p>\n<h2 id=\"Resumo\"><a href=\"#Resumo\" class=\"headerlink\" title=\"Resumo\"></a>Resumo</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.deployer.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Um argumento <code>args</code> será passado para a função. Ele contém o valor <code>deploy</code> definido no arquivo <code>_config.yml</code>, bem como as entradas exatas digitadas pelo usuário no terminal.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68y002kkoeo7b391nc6",
				"title": "Console",
				"markdown": "\nO `console` forma a ponte entre o Hexo e os usuários. Ele registra e descreve os comandos disponíveis para o terminal.\n\n## Resumo\n\n``` js\nhexo.extend.console.register(name, desc, options, function(args){\n  // ...\n});\n```\n\nArgumento | Descrição\n--- | ---\n`name` | Nome\n`desc` | Descrição\n`options`| Opções\n\nUm argumento `args` será passado para a função. Este é o argumento que os usuários digitam no terminal. Ele é analisado pelo [Minimist].\n\n## Opções\n\n### usage\n\nO uso de um comando de terminal. Por exemplo:\n\n``` js\n{usage: '[layout] <title>'}\n// hexo new [layout] <title>\n```\n\n### arguments\n\nA descrição de cada argumento de um comando de terminal. Por exemplo:\n\n``` js\n{\n  arguments: [\n    {name: 'layout', desc: 'Post layout'},\n    {name: 'title', desc: 'Post title'}\n  ]\n}\n```\n\n### options\n\nA descrição de cada opção de um comando de terminal. Por exemplo:\n\n``` js\n{\n  options: [\n    {name: '-r, --replace', desc: 'Replace existing files'}\n  ]\n}\n```\n\n### desc\n\nInformações mais detalhadas sobre um comando de terminal.\n\n## Exemplo\n\n``` js\nhexo.extend.console.register('config', 'Display configuration', function(args){\n  console.log(hexo.config);\n});\n```\n\n[Minimist]: https://github.com/substack/minimist\n",
				"html": "<p>O <code>console</code> forma a ponte entre o Hexo e os usuários. Ele registra e descreve os comandos disponíveis para o terminal.</p>\n<h2 id=\"Resumo\"><a href=\"#Resumo\" class=\"headerlink\" title=\"Resumo\"></a>Resumo</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(name, desc, options, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argumento</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>Nome</td>\n</tr>\n<tr>\n<td><code>desc</code></td>\n<td>Descrição</td>\n</tr>\n<tr>\n<td><code>options</code></td>\n<td>Opções</td>\n</tr>\n</tbody>\n</table>\n<p>Um argumento <code>args</code> será passado para a função. Este é o argumento que os usuários digitam no terminal. Ele é analisado pelo <a href=\"https://github.com/substack/minimist\" target=\"_blank\" rel=\"noopener\">Minimist</a>.</p>\n<h2 id=\"Opcoes\"><a href=\"#Opcoes\" class=\"headerlink\" title=\"Opções\"></a>Opções</h2><h3 id=\"usage\"><a href=\"#usage\" class=\"headerlink\" title=\"usage\"></a>usage</h3><p>O uso de um comando de terminal. Por exemplo:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">usage</span>: <span class=\"string\">'[layout] &lt;title&gt;'</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">// hexo new [layout] &lt;title&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"arguments\"><a href=\"#arguments\" class=\"headerlink\" title=\"arguments\"></a>arguments</h3><p>A descrição de cada argumento de um comando de terminal. Por exemplo:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"built_in\">arguments</span>: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'layout'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post layout'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'title'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post title'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"options\"><a href=\"#options\" class=\"headerlink\" title=\"options\"></a>options</h3><p>A descrição de cada opção de um comando de terminal. Por exemplo:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  options: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'-r, --replace'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Replace existing files'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"desc\"><a href=\"#desc\" class=\"headerlink\" title=\"desc\"></a>desc</h3><p>Informações mais detalhadas sobre um comando de terminal.</p>\n<h2 id=\"Exemplo\"><a href=\"#Exemplo\" class=\"headerlink\" title=\"Exemplo\"></a>Exemplo</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(<span class=\"string\">'config'</span>, <span class=\"string\">'Display configuration'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(hexo.config);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68z002lkoeo2zgtbu24",
				"title": "Events",
				"markdown": "\nO Hexo herda de [EventEmitter]. Use o método `on` para ouvir os eventos emitidos pelo Hexo, e use o método `emit` para emitir eventos. Para obter mais informações, consulte a documentação da API do Node.js.\n\n### deployBefore\n\nEmitido antes do deployment começar.\n\n### deployAfter\n\nEmitido depois do deployment finalizado.\n\n### exit\n\nEmitido antes de Hexo sair.\n\n### generateBefore\n\nEmitido antes da geração começar.\n\n### generateAfter\n\nEmitido depois da geração finalizada.\n\n### new\n\nEmitido depois de uma nova postagem ter sido criada. Este evento retorna os dados da postagem:\n\n``` js\nhexo.on('new', function(post){\n  //\n});\n```\n\nDados | Descrição\n--- | ---\n`post.path` | Caminho completo do arquivo da postagem\n`post.content` | Conteúdo do arquivo da postagem\n\n### processBefore\n\nEmitido antes do início do processamento. Este evento retorna um caminho que representa o diretório raiz do box.\n\n### processAfter\n\nEmitido depois do processamento finalizado. Este evento retorna um caminho que representa o diretório raiz do `box`.\n\n### ready\n\nEmitido depois da inicialização terminar.\n\n[EventEmitter]: http://nodejs.org/api/events.html\n",
				"html": "<p>O Hexo herda de <a href=\"http://nodejs.org/api/events.html\" target=\"_blank\" rel=\"noopener\">EventEmitter</a>. Use o método <code>on</code> para ouvir os eventos emitidos pelo Hexo, e use o método <code>emit</code> para emitir eventos. Para obter mais informações, consulte a documentação da API do Node.js.</p>\n<h3 id=\"deployBefore\"><a href=\"#deployBefore\" class=\"headerlink\" title=\"deployBefore\"></a>deployBefore</h3><p>Emitido antes do deployment começar.</p>\n<h3 id=\"deployAfter\"><a href=\"#deployAfter\" class=\"headerlink\" title=\"deployAfter\"></a>deployAfter</h3><p>Emitido depois do deployment finalizado.</p>\n<h3 id=\"exit\"><a href=\"#exit\" class=\"headerlink\" title=\"exit\"></a>exit</h3><p>Emitido antes de Hexo sair.</p>\n<h3 id=\"generateBefore\"><a href=\"#generateBefore\" class=\"headerlink\" title=\"generateBefore\"></a>generateBefore</h3><p>Emitido antes da geração começar.</p>\n<h3 id=\"generateAfter\"><a href=\"#generateAfter\" class=\"headerlink\" title=\"generateAfter\"></a>generateAfter</h3><p>Emitido depois da geração finalizada.</p>\n<h3 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h3><p>Emitido depois de uma nova postagem ter sido criada. Este evento retorna os dados da postagem:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.on(<span class=\"string\">'new'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Dados</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post.path</code></td>\n<td>Caminho completo do arquivo da postagem</td>\n</tr>\n<tr>\n<td><code>post.content</code></td>\n<td>Conteúdo do arquivo da postagem</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"processBefore\"><a href=\"#processBefore\" class=\"headerlink\" title=\"processBefore\"></a>processBefore</h3><p>Emitido antes do início do processamento. Este evento retorna um caminho que representa o diretório raiz do box.</p>\n<h3 id=\"processAfter\"><a href=\"#processAfter\" class=\"headerlink\" title=\"processAfter\"></a>processAfter</h3><p>Emitido depois do processamento finalizado. Este evento retorna um caminho que representa o diretório raiz do <code>box</code>.</p>\n<h3 id=\"ready\"><a href=\"#ready\" class=\"headerlink\" title=\"ready\"></a>ready</h3><p>Emitido depois da inicialização terminar.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68z002mkoeo5k8araul",
				"title": "Helper",
				"markdown": "\nUm helper facilita a adição de snippets (trechos de código) aos seus templates. Recomendamos usar helpers em vez de templates quando estiver lidando com código mais complicado.\n\nOs Helpers não podem ser acessados nos arquivos de `source`.\n\n## Resumo\n\n``` js\nhexo.extend.helper.register(name, function(){\n  // ...\n});\n```\n\n## Exemplo\n\n``` js\nhexo.extend.helper.register('js', function(path){\n  return '<script type=\"text/javascript\" src=\"' + path + '\"></script>';\n});\n```\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"script.js\"></script>\n```\n\n## FAQ\n\n### Onde pôr um helper personalizado?\n\nColoque-o dentro de `themes/<yourtheme>/scripts`\n",
				"html": "<p>Um helper facilita a adição de snippets (trechos de código) aos seus templates. Recomendamos usar helpers em vez de templates quando estiver lidando com código mais complicado.</p>\n<p>Os Helpers não podem ser acessados nos arquivos de <code>source</code>.</p>\n<h2 id=\"Resumo\"><a href=\"#Resumo\" class=\"headerlink\" title=\"Resumo\"></a>Resumo</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Exemplo\"><a href=\"#Exemplo\" class=\"headerlink\" title=\"Exemplo\"></a>Exemplo</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(<span class=\"string\">'js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script type=\"text/javascript\" src=\"'</span> + path + <span class=\"string\">'\"&gt;&lt;/script&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><h3 id=\"Onde-por-um-helper-personalizado\"><a href=\"#Onde-por-um-helper-personalizado\" class=\"headerlink\" title=\"Onde pôr um helper personalizado?\"></a>Onde pôr um helper personalizado?</h3><p>Coloque-o dentro de <code>themes/&lt;yourtheme&gt;/scripts</code></p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y690002nkoeo9ehm7wbz",
				"title": "Filter",
				"markdown": "\nUm `filter` (filtro) pode ser utilizado para modificar alguns dados. O Hexo passa os dados para filtros em sequência e os filtros, então, modificam esses dados um após o outro. Este é o mesmo conceito utilizado pelo [WordPress](http://codex.wordpress.org/Plugin_API#Filters).\n\n## Resumo\n\n``` js\nhexo.extend.filter.register(type, function(){\n  // ...\n}, priority);\n```\n\nVocê pode definir uma prioridade específica para cada filtro (parâmetro `priority` no exemplo acima). Uma prioridade mais baixa significa que o filtro será executado primeiro. A prioridade padrão é 10.\n\n## Executar Filtros\n\n``` js\nhexo.extend.filter.exec(type, data, options);\nhexo.extend.filter.execSync(type, data, options);\n```\n\nOpção | Descrição\n--- | ---\n`context` | Contexto\n`args` | Argumentos. Deve ser um array.\n\nO primeiro argumento passado para cada filtro é `data`. O próximo filtro da sequência pode receber o argumento `data` modificado ao se retornar um novo valor. Se nada for retornado, `data` continua intacto. Você ainda pode utilizar `args` para especificar outros argumentos dentro dos filtros. Por exemplo:\n\n``` js\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'some data'\n  // arg1 === 'foo'\n  // arg2 === 'bar'\n\n  return 'something';\n});\n\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'something'\n});\n\nhexo.extend.filter.exec('test', 'some data', {\n  args: ['foo', 'bar']\n});\n```\n\nVocê também pode utilizar os seguintes métodos para executar filtros:\n\n``` js\nhexo.execFilter(type, data, options);\nhexo.execFilterSync(type, data, options);\n```\n\n## Remover Filtros\n\n``` js\nhexo.extend.filter.unregister(type, filter);\n```\n\n## Lista de Filtros\n\nAbaixo são listados os filtros utilizados pelo Hexo.\n\n### before_post_render\n\nExecutado antes de uma postagem ser renderizada. Verificar a seção [Renderizar](posts.html#Renderizar) para saber mais sobre as etapas de execução.\n\nPor exemplo, para se transformar um título em _caixa baixa_:\n\n``` js\nhexo.extend.filter.register('before_post_render', function(data){\n  data.title = data.title.toLowerCase();\n  return data;\n});\n```\n\n### after_post_render\n\nExecutado após a postagem ser renderizado. Verificar a seção [Renderizar](posts.html#Renderizar) para saber mais sobre as etapas de execução.\n\nPor exemplo, para substituir `@username` por um link para o perfil do Twitter:\n\n``` js\nhexo.extend.filter.register('after_post_render', function(data){\n  data.content = data.content.replace(/@(\\d+)/, '<a href=\"http://twitter.com/$1\">#$1</a>');\n  return data;\n});\n```\n\n### before_exit\n\nExecutado quando o Hexo está prestes a ser terminado -- isso será executado logo após `hexo.exit` ser chamado.\n\n``` js\nhexo.extend.filter.register('before_exit', function(){\n  // ...\n});\n```\n\n### before_generate\n\nExecutado antes do processo de geração ser iniciado.\n\n``` js\nhexo.extend.filter.register('before_generate', function(){\n  // ...\n});\n```\n\n### after_generate\n\nExecutado após o processo de geração ser concluído.\n\n``` js\nhexo.extend.filter.register('after_generate', function(){\n  // ...\n});\n```\n\n### template_locals\n\nModifica as [variáveis locais](../docs/variables.html) nos templates.\n\nPor exemplo, para adicionar a hora atual às variáveis locais dos templates:\n\n``` js\nhexo.extend.filter.register('template_locals', function(locals){\n  locals.now = Date.now();\n  return locals;\n});\n```\n\n### after_init\n\nExecutado após a inicialização do Hexo -- este será executado logo após `hexo.init` ser concluído.\n\n``` js\nhexo.extend.filter.register('after_init', function(){\n  // ...\n});\n```\n\n### new_post_path\n\nExecutado ao criar uma postagem para determinar o caminho das novas postagens.\n\n``` js\nhexo.extend.filter.register('new_post_path', function(data, replace){\n  // ...\n});\n```\n\n### post_permalink\n\nUsado para determinar os links permanentes das postagens.\n\n``` js\nhexo.extend.filter.register('post_permalink', function(data){\n  // ...\n});\n```\n\n### after_render\n\nExecutado após a renderização ser terminada. Mais informações podem ser encontradas na seção de [renderização](rendering.html#Filtros-after-render).\n\n### after_clean\n\nExecutados após os arquivos serem gerados e o cache ser removido com o comando `hexo clean`.\n\n``` js\nhexo.extend.filter.register('after_clean', function(){\n  // remove some other temporary files\n});\n```\n\n### server_middleware\n\nAdiciona um middleware ao servidor. `app` é uma instância de [Connect].\n\nPor exemplo, para adicionar `X-Powered-By: Hexo` ao cabeçalho de resposta:\n\n``` js\nhexo.extend.filter.register('server_middleware', function(app){\n  app.use(function(req, res, next){\n    res.setHeader('X-Powered-By', 'Hexo');\n    next();\n  });\n});\n```\n\n[Connect]: https://github.com/senchalabs/connect\n",
				"html": "<p>Um <code>filter</code> (filtro) pode ser utilizado para modificar alguns dados. O Hexo passa os dados para filtros em sequência e os filtros, então, modificam esses dados um após o outro. Este é o mesmo conceito utilizado pelo <a href=\"http://codex.wordpress.org/Plugin_API#Filters\" target=\"_blank\" rel=\"noopener\">WordPress</a>.</p>\n<h2 id=\"Resumo\"><a href=\"#Resumo\" class=\"headerlink\" title=\"Resumo\"></a>Resumo</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(type, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, priority);</span><br></pre></td></tr></table></figure>\n<p>Você pode definir uma prioridade específica para cada filtro (parâmetro <code>priority</code> no exemplo acima). Uma prioridade mais baixa significa que o filtro será executado primeiro. A prioridade padrão é 10.</p>\n<h2 id=\"Executar-Filtros\"><a href=\"#Executar-Filtros\" class=\"headerlink\" title=\"Executar Filtros\"></a>Executar Filtros</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.exec(type, data, options);</span><br><span class=\"line\">hexo.extend.filter.execSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>context</code></td>\n<td>Contexto</td>\n</tr>\n<tr>\n<td><code>args</code></td>\n<td>Argumentos. Deve ser um array.</td>\n</tr>\n</tbody>\n</table>\n<p>O primeiro argumento passado para cada filtro é <code>data</code>. O próximo filtro da sequência pode receber o argumento <code>data</code> modificado ao se retornar um novo valor. Se nada for retornado, <code>data</code> continua intacto. Você ainda pode utilizar <code>args</code> para especificar outros argumentos dentro dos filtros. Por exemplo:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'some data'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg1 === 'foo'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg2 === 'bar'</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'something'</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'something'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.exec(<span class=\"string\">'test'</span>, <span class=\"string\">'some data'</span>, &#123;</span><br><span class=\"line\">  args: [<span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span>]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Você também pode utilizar os seguintes métodos para executar filtros:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.execFilter(type, data, options);</span><br><span class=\"line\">hexo.execFilterSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Remover-Filtros\"><a href=\"#Remover-Filtros\" class=\"headerlink\" title=\"Remover Filtros\"></a>Remover Filtros</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.unregister(type, filter);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Lista-de-Filtros\"><a href=\"#Lista-de-Filtros\" class=\"headerlink\" title=\"Lista de Filtros\"></a>Lista de Filtros</h2><p>Abaixo são listados os filtros utilizados pelo Hexo.</p>\n<h3 id=\"before-post-render\"><a href=\"#before-post-render\" class=\"headerlink\" title=\"before_post_render\"></a>before_post_render</h3><p>Executado antes de uma postagem ser renderizada. Verificar a seção <a href=\"posts.html#Renderizar\">Renderizar</a> para saber mais sobre as etapas de execução.</p>\n<p>Por exemplo, para se transformar um título em <em>caixa baixa</em>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.title = data.title.toLowerCase();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-post-render\"><a href=\"#after-post-render\" class=\"headerlink\" title=\"after_post_render\"></a>after_post_render</h3><p>Executado após a postagem ser renderizado. Verificar a seção <a href=\"posts.html#Renderizar\">Renderizar</a> para saber mais sobre as etapas de execução.</p>\n<p>Por exemplo, para substituir <code>@username</code> por um link para o perfil do Twitter:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.content = data.content.replace(<span class=\"regexp\">/@(\\d+)/</span>, <span class=\"string\">'&lt;a href=\"http://twitter.com/$1\"&gt;#$1&lt;/a&gt;'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-exit\"><a href=\"#before-exit\" class=\"headerlink\" title=\"before_exit\"></a>before_exit</h3><p>Executado quando o Hexo está prestes a ser terminado – isso será executado logo após <code>hexo.exit</code> ser chamado.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_exit'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-generate\"><a href=\"#before-generate\" class=\"headerlink\" title=\"before_generate\"></a>before_generate</h3><p>Executado antes do processo de geração ser iniciado.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-generate\"><a href=\"#after-generate\" class=\"headerlink\" title=\"after_generate\"></a>after_generate</h3><p>Executado após o processo de geração ser concluído.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"template-locals\"><a href=\"#template-locals\" class=\"headerlink\" title=\"template_locals\"></a>template_locals</h3><p>Modifica as <a href=\"../docs/variables.html\">variáveis locais</a> nos templates.</p>\n<p>Por exemplo, para adicionar a hora atual às variáveis locais dos templates:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'template_locals'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  locals.now = <span class=\"built_in\">Date</span>.now();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-init\"><a href=\"#after-init\" class=\"headerlink\" title=\"after_init\"></a>after_init</h3><p>Executado após a inicialização do Hexo – este será executado logo após <code>hexo.init</code> ser concluído.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_init'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"new-post-path\"><a href=\"#new-post-path\" class=\"headerlink\" title=\"new_post_path\"></a>new_post_path</h3><p>Executado ao criar uma postagem para determinar o caminho das novas postagens.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'new_post_path'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, replace</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"post-permalink\"><a href=\"#post-permalink\" class=\"headerlink\" title=\"post_permalink\"></a>post_permalink</h3><p>Usado para determinar os links permanentes das postagens.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'post_permalink'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-render\"><a href=\"#after-render\" class=\"headerlink\" title=\"after_render\"></a>after_render</h3><p>Executado após a renderização ser terminada. Mais informações podem ser encontradas na seção de <a href=\"rendering.html#Filtros-after-render\">renderização</a>.</p>\n<h3 id=\"after-clean\"><a href=\"#after-clean\" class=\"headerlink\" title=\"after_clean\"></a>after_clean</h3><p>Executados após os arquivos serem gerados e o cache ser removido com o comando <code>hexo clean</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_clean'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// remove some other temporary files</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"server-middleware\"><a href=\"#server-middleware\" class=\"headerlink\" title=\"server_middleware\"></a>server_middleware</h3><p>Adiciona um middleware ao servidor. <code>app</code> é uma instância de <a href=\"https://github.com/senchalabs/connect\" target=\"_blank\" rel=\"noopener\">Connect</a>.</p>\n<p>Por exemplo, para adicionar <code>X-Powered-By: Hexo</code> ao cabeçalho de resposta:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'server_middleware'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>)</span>&#123;</span><br><span class=\"line\">  app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;</span><br><span class=\"line\">    res.setHeader(<span class=\"string\">'X-Powered-By'</span>, <span class=\"string\">'Hexo'</span>);</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y690002okoeoiw1nvof5",
				"title": "Generator",
				"markdown": "\nUm `generator` constrói rotas a partir de arquivos processados.\n\n## Resumo\n\n``` js\nhexo.extend.generator.register(name, function(locals){\n  // ...\n});\n```\n\nUm argumento `locals` será passado para dentro da função, contendo as [variáveis do site](../docs/variables.html#Variaveis-do-Site). Você deve utilizar esse argumento para obter os dados do site, evitando assim, acessar a base de dados diretamente.\n\n## Atualizar Rotas\n\n``` js\nhexo.extend.generator.register('test', function(locals){\n  // Object\n  return {\n    path: 'foo',\n    data: 'foo'\n  };\n\n  // Array\n  return [\n    {path: 'foo', data: 'foo'},\n    {path: 'bar', data: 'bar'}\n  ];\n});\n```\n\nAtributo | Descrição\n--- | ---\n`path` | Caminho, sem incluir o prefixo `/`.\n`data` | Dados\n`layout` | Layout. Especifica os layouts para renderização. O valor pode ser uma string ou um array. Se ignorado, a rota retornará `data` diretamente.\n\nQuando os arquivos fonte são atualizados, o Hexo executará todos os geradores e recriará as rotas. **Atenção: Retornar os dados em vez de acessar o roteador diretamente!**\n\n## Exemplo\n\n### Páginas de Arquivo\n\nCrie uma página de arquivo em `archives/index.html`. Iremos passar uma lista com todos as postagens como `data` para os templates. Assim, `data` é equivalente à variável `page` nos templates.\n\nApós isso, defina o atributo `layout` para renderizar a página com os templates do tema. Nesse exemplo são definidos dois layouts: se o layout de `archive` não existir, o layout de `index` será utilizado em seu lugar.\n\n``` js\nhexo.extend.generator.register('archive', function(locals){\n  return {\n    path: 'archives/index.html',\n    data: locals,\n    layout: ['archive', 'index']\n  }\n});\n```\n\n### Páginas de Arquivo com Paginação\n\nVocê pode utilizar uma ótima ferramenta oficial chamada [hexo-pagination] para criar facilmente uma página de arquivos com paginação.\n\n``` js\nvar pagination = require('hexo-pagination');\n\nhexo.extend.generator.register('archive', function(locals){\n  // hexo-pagination makes an index.html for the /archives route\n  return pagination('archives', locals.posts, {\n    perPage: 10,\n    layout: ['archive', 'index'],\n    data: {}\n  });\n});\n```\n\n### Gerar Todas as Postagens\n\nPercorra a lista de postagens em `locals.posts` e crie rotas para cada um.\n\n``` js\nhexo.extend.generator.register('post', function(locals){\n  return locals.posts.map(function(post){\n    return {\n      path: post.path,\n      data: post,\n      layout: 'post'\n    };\n  });\n});\n```\n\n### Copiar Arquivos\n\nDessa vez não iremos retornar `data` explicitamente, mas atribuir uma função para que a rota construa `fs.ReadStream` apenas quando necessário.\n\n``` js\nvar fs = require('hexo-fs');\n\nhexo.extend.generator.register  ('asset', function(locals){\n  return {\n    path: 'file.txt',\n    data: function(){\n      return fs.createReadStream('path/to/file.txt')\n    }\n  };\n});\n```\n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n",
				"html": "<p>Um <code>generator</code> constrói rotas a partir de arquivos processados.</p>\n<h2 id=\"Resumo\"><a href=\"#Resumo\" class=\"headerlink\" title=\"Resumo\"></a>Resumo</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Um argumento <code>locals</code> será passado para dentro da função, contendo as <a href=\"../docs/variables.html#Variaveis-do-Site\">variáveis do site</a>. Você deve utilizar esse argumento para obter os dados do site, evitando assim, acessar a base de dados diretamente.</p>\n<h2 id=\"Atualizar-Rotas\"><a href=\"#Atualizar-Rotas\" class=\"headerlink\" title=\"Atualizar Rotas\"></a>Atualizar Rotas</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Object</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'foo'</span>,</span><br><span class=\"line\">    data: <span class=\"string\">'foo'</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Array</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> [</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'foo'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'foo'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'bar'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'bar'</span>&#125;</span><br><span class=\"line\">  ];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Atributo</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>path</code></td>\n<td>Caminho, sem incluir o prefixo <code>/</code>.</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>Dados</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Especifica os layouts para renderização. O valor pode ser uma string ou um array. Se ignorado, a rota retornará <code>data</code> diretamente.</td>\n</tr>\n</tbody>\n</table>\n<p>Quando os arquivos fonte são atualizados, o Hexo executará todos os geradores e recriará as rotas. <strong>Atenção: Retornar os dados em vez de acessar o roteador diretamente!</strong></p>\n<h2 id=\"Exemplo\"><a href=\"#Exemplo\" class=\"headerlink\" title=\"Exemplo\"></a>Exemplo</h2><h3 id=\"Paginas-de-Arquivo\"><a href=\"#Paginas-de-Arquivo\" class=\"headerlink\" title=\"Páginas de Arquivo\"></a>Páginas de Arquivo</h3><p>Crie uma página de arquivo em <code>archives/index.html</code>. Iremos passar uma lista com todos as postagens como <code>data</code> para os templates. Assim, <code>data</code> é equivalente à variável <code>page</code> nos templates.</p>\n<p>Após isso, defina o atributo <code>layout</code> para renderizar a página com os templates do tema. Nesse exemplo são definidos dois layouts: se o layout de <code>archive</code> não existir, o layout de <code>index</code> será utilizado em seu lugar.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'archives/index.html'</span>,</span><br><span class=\"line\">    data: locals,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Paginas-de-Arquivo-com-Paginacao\"><a href=\"#Paginas-de-Arquivo-com-Paginacao\" class=\"headerlink\" title=\"Páginas de Arquivo com Paginação\"></a>Páginas de Arquivo com Paginação</h3><p>Você pode utilizar uma ótima ferramenta oficial chamada <a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a> para criar facilmente uma página de arquivos com paginação.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// hexo-pagination makes an index.html for the /archives route</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> pagination(<span class=\"string\">'archives'</span>, locals.posts, &#123;</span><br><span class=\"line\">    perPage: <span class=\"number\">10</span>,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>],</span><br><span class=\"line\">    data: &#123;&#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Gerar-Todas-as-Postagens\"><a href=\"#Gerar-Todas-as-Postagens\" class=\"headerlink\" title=\"Gerar Todas as Postagens\"></a>Gerar Todas as Postagens</h3><p>Percorra a lista de postagens em <code>locals.posts</code> e crie rotas para cada um.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'post'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals.posts.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      path: post.path,</span><br><span class=\"line\">      data: post,</span><br><span class=\"line\">      layout: <span class=\"string\">'post'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Copiar-Arquivos\"><a href=\"#Copiar-Arquivos\" class=\"headerlink\" title=\"Copiar Arquivos\"></a>Copiar Arquivos</h3><p>Dessa vez não iremos retornar <code>data</code> explicitamente, mas atribuir uma função para que a rota construa <code>fs.ReadStream</code> apenas quando necessário.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register  (<span class=\"string\">'asset'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'file.txt'</span>,</span><br><span class=\"line\">    data: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> fs.createReadStream(<span class=\"string\">'path/to/file.txt'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y690002pkoeo6bo6y90c",
				"title": "API",
				"markdown": "\nEssa documentação fornece informações mais detalhadas sobre a API e será útil para pessoas que desejam modificar o código-fonte do Hexo ou escrever novos plugins. Se você está interessado em um uso mais básico do Hexo, consulte a [documentação](../docs).\n\nPor favor, note que essa documentação é válida apenas para o Hexo 3 ou superior.\n\n## Inicializar\n\nPrimeiro, temos que criar uma instancia do Hexo. Uma nova instancia recebe dois argumentos: o diretório raiz do site, `base_dir`, e um objeto com as opções de inicialização. Em seguida, inicializamos essa instância chamando o método `init`, que irá carregar as configurações e plugins do Hexo.\n\n``` js\nvar Hexo = require('hexo');\nvar hexo = new Hexo(process.cwd(), {});\n\nhexo.init().then(function(){\n  // ...\n});\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`debug` | Habilita o modo debug. Mostra as mensagens de debug no terminal e cria o arquivo `debug.log` no diretório raiz. | `false`\n`safe` | Habilita o modo seguro. Não carrega nenhum plugin. | `false`\n`silent` | Habilita o modo silencioso. Não mostra nenhuma mensagem no terminal. | `false`\n`config` | Especifica o caminho do arquivo de configuração. | `_config.yml`\n\n## Carregar Arquivos\n\nO Hexo fornece dois métodos para carregar arquivos: `load` e `watch`. O método `load` é usado para carregador todos os arquivos do diretório `source` e também os dados do tema. O método `watch` faz a mesma coisa que o `load`, mas também assiste por mudanças nos arquivos continuamente.\n\nAmbos os métodos irão carregar a lista de arquivos e passá-los para os processadores correspondentes. Depois de todos os arquivos terem sido processados, eles irão chamar os geradores para criar as rotas.\n\n``` js\nhexo.load().then(function(){\n  // ...\n});\n\nhexo.watch().then(function(){\n  // You can call hexo.unwatch() later to stop watching.\n});\n```\n\n## Executar Comandos\n\nQualquer comando de console pode ser chamado explicitamente usando o método `call` na instancia do Hexo. Cada chamada recebe dois argumentos: o nome do comando do console, e um argumento de opções. Existem diferentes opções disponíveis para os diferentes comandos.\n\n``` js\nhexo.call('generate', {}).then(function(){\n  // ...\n});\n```\n\n## Sair\n\nVocê deve chamar o método `exit` após a conclusão bem sucedida ou mal sucedida de um comando. Isso permite que o Hexo saia e termine coisas importantes, como salvar o banco de dados.\n\n``` js\nhexo.call('generate').then(function(){\n  return hexo.exit();\n}).catch(function(err){\n  return hexo.exit(err);\n});\n```\n",
				"html": "<p>Essa documentação fornece informações mais detalhadas sobre a API e será útil para pessoas que desejam modificar o código-fonte do Hexo ou escrever novos plugins. Se você está interessado em um uso mais básico do Hexo, consulte a <a href=\"../docs\">documentação</a>.</p>\n<p>Por favor, note que essa documentação é válida apenas para o Hexo 3 ou superior.</p>\n<h2 id=\"Inicializar\"><a href=\"#Inicializar\" class=\"headerlink\" title=\"Inicializar\"></a>Inicializar</h2><p>Primeiro, temos que criar uma instancia do Hexo. Uma nova instancia recebe dois argumentos: o diretório raiz do site, <code>base_dir</code>, e um objeto com as opções de inicialização. Em seguida, inicializamos essa instância chamando o método <code>init</code>, que irá carregar as configurações e plugins do Hexo.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Hexo = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> hexo = <span class=\"keyword\">new</span> Hexo(process.cwd(), &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.init().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>debug</code></td>\n<td>Habilita o modo debug. Mostra as mensagens de debug no terminal e cria o arquivo <code>debug.log</code> no diretório raiz.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>safe</code></td>\n<td>Habilita o modo seguro. Não carrega nenhum plugin.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>silent</code></td>\n<td>Habilita o modo silencioso. Não mostra nenhuma mensagem no terminal.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>Especifica o caminho do arquivo de configuração.</td>\n<td><code>_config.yml</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Carregar-Arquivos\"><a href=\"#Carregar-Arquivos\" class=\"headerlink\" title=\"Carregar Arquivos\"></a>Carregar Arquivos</h2><p>O Hexo fornece dois métodos para carregar arquivos: <code>load</code> e <code>watch</code>. O método <code>load</code> é usado para carregador todos os arquivos do diretório <code>source</code> e também os dados do tema. O método <code>watch</code> faz a mesma coisa que o <code>load</code>, mas também assiste por mudanças nos arquivos continuamente.</p>\n<p>Ambos os métodos irão carregar a lista de arquivos e passá-los para os processadores correspondentes. Depois de todos os arquivos terem sido processados, eles irão chamar os geradores para criar as rotas.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.load().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// You can call hexo.unwatch() later to stop watching.</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Executar-Comandos\"><a href=\"#Executar-Comandos\" class=\"headerlink\" title=\"Executar Comandos\"></a>Executar Comandos</h2><p>Qualquer comando de console pode ser chamado explicitamente usando o método <code>call</code> na instancia do Hexo. Cada chamada recebe dois argumentos: o nome do comando do console, e um argumento de opções. Existem diferentes opções disponíveis para os diferentes comandos.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>, &#123;&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Sair\"><a href=\"#Sair\" class=\"headerlink\" title=\"Sair\"></a>Sair</h2><p>Você deve chamar o método <code>exit</code> após a conclusão bem sucedida ou mal sucedida de um comando. Isso permite que o Hexo saia e termine coisas importantes, como salvar o banco de dados.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit();</span><br><span class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit(err);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y691002qkoeokzxwh184",
				"title": "Migrator",
				"markdown": "\nUm `migrator` ajuda os usuários a migrarem seus sistemas para o Hexo.\n\n## Sinopse\n\n``` js\nhexo.extend.migrator.register(name, function(args){\n  // ...\n});\n```\n\nO argumento `args` será passado na função. Esse argumento conterá as entradas do usuário no terminal.\n",
				"html": "<p>Um <code>migrator</code> ajuda os usuários a migrarem seus sistemas para o Hexo.</p>\n<h2 id=\"Sinopse\"><a href=\"#Sinopse\" class=\"headerlink\" title=\"Sinopse\"></a>Sinopse</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.migrator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>O argumento <code>args</code> será passado na função. Esse argumento conterá as entradas do usuário no terminal.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y691002rkoeogt5thrqj",
				"title": "Variáveis Locais",
				"markdown": "\nAs variáveis locais são usadas para renderização de template, que é a variável `site` em templates.\n\n## Variáveis Padrão\n\nVariável | Descrição\n--- | ---\n`posts` | Todas as postagens\n`pages` | Todas as páginas\n`categories` | Todas as categorias\n`tags` | Todas as tags\n\n## Obter uma Variável\n\n``` js\nhexo.locals.get('posts')\n```\n\n## Atribuir uma Variável\n\n``` js\nhexo.locals.set('posts', function(){\n  return ...\n});\n```\n\n## Remover uma Variável\n\n``` js\nhexo.locals.remove('posts');\n```\n\n## Obter Todos as Variáveis\n\n``` js\nhexo.locals.toObject();\n```\n\n## Invalidar o Cache\n\n``` js\nhexo.locals.invalidate();\n```\n",
				"html": "<p>As variáveis locais são usadas para renderização de template, que é a variável <code>site</code> em templates.</p>\n<h2 id=\"Variaveis-Padrao\"><a href=\"#Variaveis-Padrao\" class=\"headerlink\" title=\"Variáveis Padrão\"></a>Variáveis Padrão</h2><table>\n<thead>\n<tr>\n<th>Variável</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>posts</code></td>\n<td>Todas as postagens</td>\n</tr>\n<tr>\n<td><code>pages</code></td>\n<td>Todas as páginas</td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>Todas as categorias</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>Todas as tags</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Obter-uma-Variavel\"><a href=\"#Obter-uma-Variavel\" class=\"headerlink\" title=\"Obter uma Variável\"></a>Obter uma Variável</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.get(<span class=\"string\">'posts'</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Atribuir-uma-Variavel\"><a href=\"#Atribuir-uma-Variavel\" class=\"headerlink\" title=\"Atribuir uma Variável\"></a>Atribuir uma Variável</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.set(<span class=\"string\">'posts'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Remover-uma-Variavel\"><a href=\"#Remover-uma-Variavel\" class=\"headerlink\" title=\"Remover uma Variável\"></a>Remover uma Variável</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.remove(<span class=\"string\">'posts'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Obter-Todos-as-Variaveis\"><a href=\"#Obter-Todos-as-Variaveis\" class=\"headerlink\" title=\"Obter Todos as Variáveis\"></a>Obter Todos as Variáveis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.toObject();</span><br></pre></td></tr></table></figure>\n<h2 id=\"Invalidar-o-Cache\"><a href=\"#Invalidar-o-Cache\" class=\"headerlink\" title=\"Invalidar o Cache\"></a>Invalidar o Cache</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.invalidate();</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y692002skoeodu62pfme",
				"title": "Processor",
				"markdown": "\nUm `processor` é utilizado para processar os arquivos fontes contidos no diretório `source`.\n\n## Resumo\n\n``` js\nhexo.extend.processor.register(rule, function(file){\n // ...\n});\n```\n\nMais informações podem ser encontradas em [box](box.html).\n",
				"html": "<p>Um <code>processor</code> é utilizado para processar os arquivos fontes contidos no diretório <code>source</code>.</p>\n<h2 id=\"Resumo\"><a href=\"#Resumo\" class=\"headerlink\" title=\"Resumo\"></a>Resumo</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.processor.register(rule, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Mais informações podem ser encontradas em <a href=\"box.html\">box</a>.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y692002tkoeoyrnqhhox",
				"title": "Renderer",
				"markdown": "\nUm `renderer` é utilizado para renderizar conteúdos.\n\n## Resumo\n\n``` js\nhexo.extend.renderer.register(name, output, function(data, options){\n  // ...\n}, sync);\n```\n\nArgumento | Descrição\n--- | ---\n`name` | Extensão do arquivo de entrada (caixa baixa, sem o `.` inicial)\n`output` | Extensão do arquivo de saída (caixa baixa, sem o `.` inicial)\n`sync` | Modo de sincronização\n\nDois argumentos devem ser passados para a função renderer:\n\nArgumento | Descrição\n--- | ---\n`data` | Inclui dois atributos: Caminho do arquivo (`path`) e o conteúdo do arquivo (`text`). Não é necessário que `path` exista.\n`option` | Opções\n\n## Exemplo\n\n### Modo Assíncrono\n\n``` js\nvar stylus = require('stylus');\n\n// Callback\nhexo.extend.renderer.register('styl', 'css', function(data, options, callback){\n  stylus(data.text).set('filename', data.path).render(callback);\n});\n\n// Promise\nhexo.extend.renderer.register('styl', 'css', function(data, options){\n  return new Promise(function(resolve, reject){\n    resolve('test');\n  });\n});\n```\n\n### Modo Síncrono\n\n``` js\nvar ejs = require('ejs');\n\nhexo.extend.renderer.register('ejs', 'html', function(data, options){\n  options.filename = data.path;\n  return ejs.render(data.text, options);\n}, true);\n```\n",
				"html": "<p>Um <code>renderer</code> é utilizado para renderizar conteúdos.</p>\n<h2 id=\"Resumo\"><a href=\"#Resumo\" class=\"headerlink\" title=\"Resumo\"></a>Resumo</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.renderer.register(name, output, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, sync);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argumento</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>Extensão do arquivo de entrada (caixa baixa, sem o <code>.</code> inicial)</td>\n</tr>\n<tr>\n<td><code>output</code></td>\n<td>Extensão do arquivo de saída (caixa baixa, sem o <code>.</code> inicial)</td>\n</tr>\n<tr>\n<td><code>sync</code></td>\n<td>Modo de sincronização</td>\n</tr>\n</tbody>\n</table>\n<p>Dois argumentos devem ser passados para a função renderer:</p>\n<table>\n<thead>\n<tr>\n<th>Argumento</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Inclui dois atributos: Caminho do arquivo (<code>path</code>) e o conteúdo do arquivo (<code>text</code>). Não é necessário que <code>path</code> exista.</td>\n</tr>\n<tr>\n<td><code>option</code></td>\n<td>Opções</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Exemplo\"><a href=\"#Exemplo\" class=\"headerlink\" title=\"Exemplo\"></a>Exemplo</h2><h3 id=\"Modo-Assincrono\"><a href=\"#Modo-Assincrono\" class=\"headerlink\" title=\"Modo Assíncrono\"></a>Modo Assíncrono</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> stylus = <span class=\"built_in\">require</span>(<span class=\"string\">'stylus'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Callback</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options, callback</span>)</span>&#123;</span><br><span class=\"line\">  stylus(data.text).set(<span class=\"string\">'filename'</span>, data.path).render(callback);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Promise</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'test'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Modo-Sincrono\"><a href=\"#Modo-Sincrono\" class=\"headerlink\" title=\"Modo Síncrono\"></a>Modo Síncrono</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'ejs'</span>, <span class=\"string\">'html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  options.filename = data.path;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, options);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y692002ukoeo0eivczzc",
				"title": "Postagens",
				"markdown": "\n## Criar uma Postagem\n\n``` js\nhexo.post.create(data, replace);\n```\n\nArgumento | Descrição\n--- | ---\n`data` | Dados\n`replace` | Substitui arquivos existentes\n\nOs atributos de uma postagem podem ser definidos em `data`. A tabela abaixo inclui as informações mais importantes. Atributos adicionais podem vir a ser adicionados no [front-matter](front-matter.html).\n\nVariável | Descrição\n--- | ---\n`title` | Título\n`slug` | URL\n`layout` | Layout. Usa a configuração `default_layout` como padrão.\n`path` | Caminho. Por padrão, o Hexo constrói o caminho da postagem de acordo com a definição `new_post_path`.\n`date` | Data. Utiliza a data atual como padrão.\n\n## Publicar um Rascunho\n\n``` js\nhexo.post.publish(data, replace);\n```\n\nArgumento | Descrição\n--- | ---\n`data` | Dados\n`replace` | Substitui arquivos existentes\n\nOs atributos de uma postagem podem ser definidos em `data`. A tabela abaixo inclui as informações mais importantes. Atributos adicionais podem vir a ser adicionados no front-matter.\n\nDados | Descrição\n--- | ---\n`slug` | Nome do arquivo (Campo obrigatório)\n`layout` | Layout. Usa a definição `default_layout` como padrão.\n\n## Renderizar\n\n``` js\nhexo.post.render(source, data);\n```\n\nArgumento | Descrição\n--- | ---\n`source` | Caminho completo de um arquivo (Opcional)\n`data` | Dados\n\nO argumento `data` deve conter o atributo `content`. Caso não inclua, o Hexo tentará carregar o arquivo inicial. As etapas de execução dessa função são listadas abaixo:\n\n- Executa os filtros de `before_post_render`\n- Renderiza utilizando Markdown ou outros renderizadores (dependendo da extensão do arquivo)\n- Renderiza utilizando [Nunjucks]\n- Executa os filtros de `after_post_render`\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n",
				"html": "<h2 id=\"Criar-uma-Postagem\"><a href=\"#Criar-uma-Postagem\" class=\"headerlink\" title=\"Criar uma Postagem\"></a>Criar uma Postagem</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.create(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argumento</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Dados</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>Substitui arquivos existentes</td>\n</tr>\n</tbody>\n</table>\n<p>Os atributos de uma postagem podem ser definidos em <code>data</code>. A tabela abaixo inclui as informações mais importantes. Atributos adicionais podem vir a ser adicionados no <a href=\"front-matter.html\">front-matter</a>.</p>\n<table>\n<thead>\n<tr>\n<th>Variável</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Título</td>\n</tr>\n<tr>\n<td><code>slug</code></td>\n<td>URL</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Usa a configuração <code>default_layout</code> como padrão.</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Caminho. Por padrão, o Hexo constrói o caminho da postagem de acordo com a definição <code>new_post_path</code>.</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Data. Utiliza a data atual como padrão.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Publicar-um-Rascunho\"><a href=\"#Publicar-um-Rascunho\" class=\"headerlink\" title=\"Publicar um Rascunho\"></a>Publicar um Rascunho</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.publish(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argumento</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Dados</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>Substitui arquivos existentes</td>\n</tr>\n</tbody>\n</table>\n<p>Os atributos de uma postagem podem ser definidos em <code>data</code>. A tabela abaixo inclui as informações mais importantes. Atributos adicionais podem vir a ser adicionados no front-matter.</p>\n<table>\n<thead>\n<tr>\n<th>Dados</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>slug</code></td>\n<td>Nome do arquivo (Campo obrigatório)</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Usa a definição <code>default_layout</code> como padrão.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Renderizar\"><a href=\"#Renderizar\" class=\"headerlink\" title=\"Renderizar\"></a>Renderizar</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.render(source, data);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argumento</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>Caminho completo de um arquivo (Opcional)</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>Dados</td>\n</tr>\n</tbody>\n</table>\n<p>O argumento <code>data</code> deve conter o atributo <code>content</code>. Caso não inclua, o Hexo tentará carregar o arquivo inicial. As etapas de execução dessa função são listadas abaixo:</p>\n<ul>\n<li>Executa os filtros de <code>before_post_render</code></li>\n<li>Renderiza utilizando Markdown ou outros renderizadores (dependendo da extensão do arquivo)</li>\n<li>Renderiza utilizando <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a></li>\n<li>Executa os filtros de <code>after_post_render</code></li>\n</ul>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y693002vkoeobfoh7h8x",
				"title": "Router",
				"markdown": "\nO `router` salva todos os caminhos usados no site.\n\n## Obter um Caminho\n\nO método `get` retorna uma [Stream]. Por exemplo, para salvar os dados do caminho para um destino especificado:\n\n``` js\nvar data = hexo.route.get('index.html');\nvar dest = fs.createWriteStream('somewhere');\n\ndata.pipe(dest);\n```\n\n## Definir um Caminho\n\nO método `set` recebe uma string, um [Buffer] ou uma função.\n\n``` js\n// String\nhexo.route.set('index.html', 'index')\n\n// Buffer\nhexo.route.set('index.html', new Buffer('index'));\n\n// Function (Promise)\nhexo.route.set('index.html', function(){\n  return new Promise(function(resolve, reject){\n    resolve('index');\n  });\n});\n\n// Function (Callback)\nhexo.route.set('index.html', function(callback){\n  callback(null, 'index');\n});\n```\n\nVocê também pode definir um booleano para indicar se um caminho foi modificado ou não. Isso pode acelerar a geração de arquivos, pois permite ignorar os arquivos não modificados.\n\n``` js\nhexo.route.set('index.html', {\n    data: 'index',\n    modified: false\n});\n\n// hexo.route.isModified('index.html') => false\n```\n\n## Remover um Caminho\n\n``` js\nhexo.route.remove('index.html');\n```\n\n## Obter a Lista de Rotas\n\n``` js\nhexo.route.list();\n```\n\n## Formatar o Caminho\n\nO método `format` transforma uma string em um caminho válido.\n\n``` js\nhexo.route.format('archives/');\n// archives/index.html\n```\n\n[Stream]: http://nodejs.org/api/stream.html\n[Buffer]: http://nodejs.org/api/buffer.html\n",
				"html": "<p>O <code>router</code> salva todos os caminhos usados no site.</p>\n<h2 id=\"Obter-um-Caminho\"><a href=\"#Obter-um-Caminho\" class=\"headerlink\" title=\"Obter um Caminho\"></a>Obter um Caminho</h2><p>O método <code>get</code> retorna uma <a href=\"http://nodejs.org/api/stream.html\" target=\"_blank\" rel=\"noopener\">Stream</a>. Por exemplo, para salvar os dados do caminho para um destino especificado:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = hexo.route.get(<span class=\"string\">'index.html'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dest = fs.createWriteStream(<span class=\"string\">'somewhere'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">data.pipe(dest);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Definir-um-Caminho\"><a href=\"#Definir-um-Caminho\" class=\"headerlink\" title=\"Definir um Caminho\"></a>Definir um Caminho</h2><p>O método <code>set</code> recebe uma string, um <a href=\"http://nodejs.org/api/buffer.html\" target=\"_blank\" rel=\"noopener\">Buffer</a> ou uma função.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// String</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"string\">'index'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Buffer</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"keyword\">new</span> Buffer(<span class=\"string\">'index'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Function (Promise)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'index'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Function (Callback)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">callback</span>)</span>&#123;</span><br><span class=\"line\">  callback(<span class=\"literal\">null</span>, <span class=\"string\">'index'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Você também pode definir um booleano para indicar se um caminho foi modificado ou não. Isso pode acelerar a geração de arquivos, pois permite ignorar os arquivos não modificados.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, &#123;</span><br><span class=\"line\">    data: <span class=\"string\">'index'</span>,</span><br><span class=\"line\">    modified: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// hexo.route.isModified('index.html') =&gt; false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Remover-um-Caminho\"><a href=\"#Remover-um-Caminho\" class=\"headerlink\" title=\"Remover um Caminho\"></a>Remover um Caminho</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.remove(<span class=\"string\">'index.html'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Obter-a-Lista-de-Rotas\"><a href=\"#Obter-a-Lista-de-Rotas\" class=\"headerlink\" title=\"Obter a Lista de Rotas\"></a>Obter a Lista de Rotas</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.list();</span><br></pre></td></tr></table></figure>\n<h2 id=\"Formatar-o-Caminho\"><a href=\"#Formatar-o-Caminho\" class=\"headerlink\" title=\"Formatar o Caminho\"></a>Formatar o Caminho</h2><p>O método <code>format</code> transforma uma string em um caminho válido.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.format(<span class=\"string\">'archives/'</span>);</span><br><span class=\"line\"><span class=\"comment\">// archives/index.html</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y693002wkoeoewbvvdfy",
				"title": "Renderização",
				"markdown": "\nExistem dois métodos para renderizar arquivos ou strings no Hexo: o método assíncrono `hexo.render.render` e o método síncrono `hexo.render.renderSync`. Os dois métodos são bastante semelhantes, desta forma, apenas o método `hexo.render.render` assíncrono será um pouco mais discutido nos parágrafos abaixo.\n\n## Renderizar uma String\n\nAo renderizar uma string, você deve especificar uma `engine` para permitir que o Hexo conheça o mecanismo de renderização que deverá ser  usado.\n\n``` js\nhexo.render.render({text: 'example', engine: 'swig'}).then(function(result){\n  // ...\n});\n```\n\n## Renderizar um Arquivo\n\nAo renderizar um arquivo, não é necessário especificar uma `engine` porque o Hexo detectará automaticamente o mecanismo de renderização mais apropriado com base na extensão do arquivo. Mas se for a caso, você também pode definir explicitamente a `engine`.\n\n``` js\nhexo.render.render({path: 'path/to/file.swig'}).then(function(result){\n  // ...\n});\n```\n\n## Opções de Renderização\n\nVocê pode passar um conjunto de opções em formato de objeto no segundo argumento.\n\n``` js\nhexo.render.render({text: ''}, {foo: 'foo'}).then(function(result){\n  // ...\n});\n```\n\n## Filtros after_render\n\nQuando a renderização estiver completa, o Hexo executará os filtros `after_render` correspondentes. Por exemplo, podemos usar este recurso para implementar um minificador para arquivos JavaScript.\n\n``` js\nvar UglifyJS = require('uglify-js');\n\nhexo.extend.filter.register('after_render:js', function(str, data){\n  var result = UglifyJS.minify(str);\n  return result.code;\n});\n```\n\n## Verificar se um Arquivo é Renderizável\n\nVocê pode usar o método `isRenderable` ou `isRenderableSync` para verificar se um caminho de arquivo é renderizável. O retorno do método será `true` apenas se um renderizador correspondente for registrado.\n\n``` js\nhexo.render.isRenderable('layout.swig') // true\nhexo.render.isRenderable('image.png') // false\n```\n\n## Obter a Extensão de Saída\n\nUse o método `getOutput` para obter a extensão da saída renderizada. Se um arquivo não foi renderizado, o método retornará uma string vazia.\n\n``` js\nhexo.render.getOutput('layout.swig') // html\nhexo.render.getOutput('image.png') // '''\n```\n",
				"html": "<p>Existem dois métodos para renderizar arquivos ou strings no Hexo: o método assíncrono <code>hexo.render.render</code> e o método síncrono <code>hexo.render.renderSync</code>. Os dois métodos são bastante semelhantes, desta forma, apenas o método <code>hexo.render.render</code> assíncrono será um pouco mais discutido nos parágrafos abaixo.</p>\n<h2 id=\"Renderizar-uma-String\"><a href=\"#Renderizar-uma-String\" class=\"headerlink\" title=\"Renderizar uma String\"></a>Renderizar uma String</h2><p>Ao renderizar uma string, você deve especificar uma <code>engine</code> para permitir que o Hexo conheça o mecanismo de renderização que deverá ser  usado.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">'example'</span>, <span class=\"attr\">engine</span>: <span class=\"string\">'swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Renderizar-um-Arquivo\"><a href=\"#Renderizar-um-Arquivo\" class=\"headerlink\" title=\"Renderizar um Arquivo\"></a>Renderizar um Arquivo</h2><p>Ao renderizar um arquivo, não é necessário especificar uma <code>engine</code> porque o Hexo detectará automaticamente o mecanismo de renderização mais apropriado com base na extensão do arquivo. Mas se for a caso, você também pode definir explicitamente a <code>engine</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">path</span>: <span class=\"string\">'path/to/file.swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Opcoes-de-Renderizacao\"><a href=\"#Opcoes-de-Renderizacao\" class=\"headerlink\" title=\"Opções de Renderização\"></a>Opções de Renderização</h2><p>Você pode passar um conjunto de opções em formato de objeto no segundo argumento.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">''</span>&#125;, &#123;<span class=\"attr\">foo</span>: <span class=\"string\">'foo'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Filtros-after-render\"><a href=\"#Filtros-after-render\" class=\"headerlink\" title=\"Filtros after_render\"></a>Filtros after_render</h2><p>Quando a renderização estiver completa, o Hexo executará os filtros <code>after_render</code> correspondentes. Por exemplo, podemos usar este recurso para implementar um minificador para arquivos JavaScript.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> UglifyJS = <span class=\"built_in\">require</span>(<span class=\"string\">'uglify-js'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_render:js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str, data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = UglifyJS.minify(str);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result.code;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Verificar-se-um-Arquivo-e-Renderizavel\"><a href=\"#Verificar-se-um-Arquivo-e-Renderizavel\" class=\"headerlink\" title=\"Verificar se um Arquivo é Renderizável\"></a>Verificar se um Arquivo é Renderizável</h2><p>Você pode usar o método <code>isRenderable</code> ou <code>isRenderableSync</code> para verificar se um caminho de arquivo é renderizável. O retorno do método será <code>true</code> apenas se um renderizador correspondente for registrado.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Obter-a-Extensao-de-Saida\"><a href=\"#Obter-a-Extensao-de-Saida\" class=\"headerlink\" title=\"Obter a Extensão de Saída\"></a>Obter a Extensão de Saída</h2><p>Use o método <code>getOutput</code> para obter a extensão da saída renderizada. Se um arquivo não foi renderizado, o método retornará uma string vazia.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// html</span></span><br><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// '''</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y693002xkoeod0vtkr00",
				"title": "Scaffolds",
				"markdown": "## Obter um Scaffold\n\n``` js\nhexo.scaffold.get(name);\n```\n\n## Definir um Scaffold\n\n``` js\nhexo.scaffold.set(name, content);\n```\n\n## Remover um Scaffold\n\n``` js\nhexo.scaffold.remove(name);\n```",
				"html": "<h2 id=\"Obter-um-Scaffold\"><a href=\"#Obter-um-Scaffold\" class=\"headerlink\" title=\"Obter um Scaffold\"></a>Obter um Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.get(name);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Definir-um-Scaffold\"><a href=\"#Definir-um-Scaffold\" class=\"headerlink\" title=\"Definir um Scaffold\"></a>Definir um Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.set(name, content);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Remover-um-Scaffold\"><a href=\"#Remover-um-Scaffold\" class=\"headerlink\" title=\"Remover um Scaffold\"></a>Remover um Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.remove(name);</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y694002ykoeoxqvzwdiv",
				"title": "Diretórios de Recursos (Asset)",
				"markdown": "## Diretório Global de Recursos\n\nOs recursos, ou assets, são arquivos (imagens, CSS, JavaScript e etc) usados para compor as páginas do site. No Hexo, os recursos ficam dentro do diretório `source`. Por exemplo, se você só vai ter algumas imagens no projeto Hexo, então a maneira mais fácil é mantê-las em um diretório como `source/images`. Então, você pode acessá-las usando algo como `![](images/image.jpg)`.\n\n## Diretório de Recursos por Postagem\n\n{% youtube feIDVQ2tz0o %}\n\nPara os usuários que esperam exibir imagens e/ou outros recursos regularmente, e para aqueles que preferem separar seus recursos por publicação, o Hexo também fornece uma maneira mais organizada de fazer este gerenciamento. Para ativar o gerenciamento de recursos por publicação, defina a configuração `post_asset_folder` no arquivo `_config.yml` como o valor `true`.\n\n``` yaml _config.yml\npost_asset_folder: true\n```\n\nCom o gerenciamento de recursos habilitado, o Hexo criará um diretório sempre que você fizer uma nova postagem com o comando `hexo new [layout] <title>`. Este diretório de recursos terá o mesmo nome que o arquivo markdown associado à postagem. Coloque todos os recursos relacionados à sua postagem no diretório associado, e você poderá fazer referência a eles usando um caminho relativo, tornando mais fácil e conveniente o fluxo de trabalho.\n\n## Tag Plugins para Referência ao Caminho Relativo\n\nReferenciar imagens, ou outros recursos, usando a sintaxe normal do markdown e com caminhos relativos pode fazer com que elas sejam exibidas incorretamente em páginas de arquivo (archive) ou índice. Alguns plugins foram criados pela comunidade para abordar esta questão no Hexo 2. No entanto, com o lançamento do Hexo 3, várias novas tag plugins foram adicionadas ao seu núcleo. Estas permitem que você faça referência aos seus recursos nas postagens de formas mais facilitada:\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\nPor exemplo, com os diretórios de recursos de postagem ativados, se você colocar uma imagem `example.jpg` no seu diretório de recursos, ela *não* aparecerá na página de índice se você fizer referência a ela usando um caminho relativo com a expressão `![](/example.jpg)` da sintaxe do markdown (no entanto, isto funcionará como esperado na publicação em si).\n\nA maneira correta de fazer referência à imagem será usando a sintaxe de tag plugin em vez do markdown:\n\n```\n{% asset_img example.jpg This is an example image %}\n{% asset_img \"spaced asset.jpg\" \"spaced title\" %}\n```\nDesta forma, a imagem aparecerá dentro da publicação e nas páginas de índice e arquivo.\n",
				"html": "<h2 id=\"Diretorio-Global-de-Recursos\"><a href=\"#Diretorio-Global-de-Recursos\" class=\"headerlink\" title=\"Diretório Global de Recursos\"></a>Diretório Global de Recursos</h2><p>Os recursos, ou assets, são arquivos (imagens, CSS, JavaScript e etc) usados para compor as páginas do site. No Hexo, os recursos ficam dentro do diretório <code>source</code>. Por exemplo, se você só vai ter algumas imagens no projeto Hexo, então a maneira mais fácil é mantê-las em um diretório como <code>source/images</code>. Então, você pode acessá-las usando algo como <code>![](images/image.jpg)</code>.</p>\n<h2 id=\"Diretorio-de-Recursos-por-Postagem\"><a href=\"#Diretorio-de-Recursos-por-Postagem\" class=\"headerlink\" title=\"Diretório de Recursos por Postagem\"></a>Diretório de Recursos por Postagem</h2><div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/feIDVQ2tz0o\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>Para os usuários que esperam exibir imagens e/ou outros recursos regularmente, e para aqueles que preferem separar seus recursos por publicação, o Hexo também fornece uma maneira mais organizada de fazer este gerenciamento. Para ativar o gerenciamento de recursos por publicação, defina a configuração <code>post_asset_folder</code> no arquivo <code>_config.yml</code> como o valor <code>true</code>.</p>\n<figure class=\"highlight yaml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>Com o gerenciamento de recursos habilitado, o Hexo criará um diretório sempre que você fizer uma nova postagem com o comando <code>hexo new [layout] &lt;title&gt;</code>. Este diretório de recursos terá o mesmo nome que o arquivo markdown associado à postagem. Coloque todos os recursos relacionados à sua postagem no diretório associado, e você poderá fazer referência a eles usando um caminho relativo, tornando mais fácil e conveniente o fluxo de trabalho.</p>\n<h2 id=\"Tag-Plugins-para-Referencia-ao-Caminho-Relativo\"><a href=\"#Tag-Plugins-para-Referencia-ao-Caminho-Relativo\" class=\"headerlink\" title=\"Tag Plugins para Referência ao Caminho Relativo\"></a>Tag Plugins para Referência ao Caminho Relativo</h2><p>Referenciar imagens, ou outros recursos, usando a sintaxe normal do markdown e com caminhos relativos pode fazer com que elas sejam exibidas incorretamente em páginas de arquivo (archive) ou índice. Alguns plugins foram criados pela comunidade para abordar esta questão no Hexo 2. No entanto, com o lançamento do Hexo 3, várias novas tag plugins foram adicionadas ao seu núcleo. Estas permitem que você faça referência aos seus recursos nas postagens de formas mais facilitada:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<p>Por exemplo, com os diretórios de recursos de postagem ativados, se você colocar uma imagem <code>example.jpg</code> no seu diretório de recursos, ela <em>não</em> aparecerá na página de índice se você fizer referência a ela usando um caminho relativo com a expressão <code>![](/example.jpg)</code> da sintaxe do markdown (no entanto, isto funcionará como esperado na publicação em si).</p>\n<p>A maneira correta de fazer referência à imagem será usando a sintaxe de tag plugin em vez do markdown:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</span><br><span class=\"line\">&#123;% asset_img &quot;spaced asset.jpg&quot; &quot;spaced title&quot; %&#125;</span><br></pre></td></tr></table></figure>\n<p>Desta forma, a imagem aparecerá dentro da publicação e nas páginas de índice e arquivo.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y694002zkoeo3caa5x8t",
				"title": "Tag",
				"markdown": "\nUma tag permite que os usuários insiram, de forma rápida e fácil, snippets (trechos de código) dentro de suas postagens.\n\n## Resumo\n\n``` js\nhexo.extend.tag.register(name, function(args, content){\n  // ...\n}, options);\n```\n\nDois argumentos serão passados para dentro da função: `args` e `content`. `args` contém os argumentos passados para o tag plugin e `content` é o conteúdo envolvido do tag plugin.\n\nDesde a introdução da renderização assíncrona, na versão 3 do Hexo, estamos usando o [Nunjucks] para renderização. O comportamento pode ser um pouco diferente do [Swig].\n\n## Opções\n\n### ends\n\nUse as tags end. Esta opção é `false` por padrão.\n\n### async\n\nHabilite o modo assíncrono. Esta opção é `false` por padrão.\n\n## Exemplos\n\n### Sem a Tag End\n\nInsira um vídeo do Youtube.\n\n``` js\nhexo.extend.tag.register('youtube', function(args){\n  var id = args[0];\n  return '<div class=\"video-container\"><iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/' + id + '\" frameborder=\"0\" allowfullscreen></iframe></div>';\n});\n```\n\n### Com a Tag End\n\nInsira uma citação.\n\n``` js\nhexo.extend.tag.register('pullquote', function(args, content){\n  var className =  args.join(' ');\n  return '<blockquote class=\"pullquote' + className + '\">' + content + '</blockquote>';\n}, {ends: true});\n```\n\n### Renderização Assíncrona\n\nInsira um arquivo.\n\n``` js\nvar fs = require('hexo-fs');\nvar pathFn = require('path');\n\nhexo.extend.tag.register('include_code', function(args){\n  var filename = args[0];\n  var path = pathFn.join(hexo.source_dir, filename);\n\n  return fs.readFile(path).then(function(content){\n    return '<pre><code>' + content + '</code></pre>';\n  });\n}, {async: true});\n```\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n[Swig]: http://paularmstrong.github.io/swig/\n",
				"html": "<p>Uma tag permite que os usuários insiram, de forma rápida e fácil, snippets (trechos de código) dentro de suas postagens.</p>\n<h2 id=\"Resumo\"><a href=\"#Resumo\" class=\"headerlink\" title=\"Resumo\"></a>Resumo</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, options);</span><br></pre></td></tr></table></figure>\n<p>Dois argumentos serão passados para dentro da função: <code>args</code> e <code>content</code>. <code>args</code> contém os argumentos passados para o tag plugin e <code>content</code> é o conteúdo envolvido do tag plugin.</p>\n<p>Desde a introdução da renderização assíncrona, na versão 3 do Hexo, estamos usando o <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> para renderização. O comportamento pode ser um pouco diferente do <a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a>.</p>\n<h2 id=\"Opcoes\"><a href=\"#Opcoes\" class=\"headerlink\" title=\"Opções\"></a>Opções</h2><h3 id=\"ends\"><a href=\"#ends\" class=\"headerlink\" title=\"ends\"></a>ends</h3><p>Use as tags end. Esta opção é <code>false</code> por padrão.</p>\n<h3 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h3><p>Habilite o modo assíncrono. Esta opção é <code>false</code> por padrão.</p>\n<h2 id=\"Exemplos\"><a href=\"#Exemplos\" class=\"headerlink\" title=\"Exemplos\"></a>Exemplos</h2><h3 id=\"Sem-a-Tag-End\"><a href=\"#Sem-a-Tag-End\" class=\"headerlink\" title=\"Sem a Tag End\"></a>Sem a Tag End</h3><p>Insira um vídeo do Youtube.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'youtube'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> id = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;div class=\"video-container\"&gt;&lt;iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/'</span> + id + <span class=\"string\">'\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Com-a-Tag-End\"><a href=\"#Com-a-Tag-End\" class=\"headerlink\" title=\"Com a Tag End\"></a>Com a Tag End</h3><p>Insira uma citação.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'pullquote'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> className =  args.join(<span class=\"string\">' '</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;blockquote class=\"pullquote'</span> + className + <span class=\"string\">'\"&gt;'</span> + content + <span class=\"string\">'&lt;/blockquote&gt;'</span>;</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">ends</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Renderizacao-Assincrona\"><a href=\"#Renderizacao-Assincrona\" class=\"headerlink\" title=\"Renderização Assíncrona\"></a>Renderização Assíncrona</h3><p>Insira um arquivo.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> pathFn = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'include_code'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> filename = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> path = pathFn.join(hexo.source_dir, filename);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> fs.readFile(path).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">content</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;pre&gt;&lt;code&gt;'</span> + content + <span class=\"string\">'&lt;/code&gt;&lt;/pre&gt;'</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">async</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6940030koeomyzwyc24",
				"title": "Temas",
				"markdown": "\nO `hexo.theme` herda de [Box](box.html) e também guarda os templates.\n\n## Obter uma View\n\n``` js\nhexo.theme.getView(path);\n```\n\n## Definir uma View\n\n``` js\nhexo.theme.setView(path, data);\n```\n\n## Remover uma View\n\n``` js\nhexo.theme.removeView(path);\n```\n\n## View\n\nAs Views têm dois métodos: `render` e `renderSync`. Esses dois métodos são idênticos, mas o primeiro é assíncrono e o segundo é síncrono. Por uma questão de simplicidade, só discutiremos `render` aqui.\n\n``` js\nvar view = hexo.theme.getView('layout.swig');\n\nview.render({foo: 1, bar: 2}).then(function(result){\n  // ...\n});\n```\n\nVocê pode passar opções para o método `render` e ele tentará processar o template com o renderizador correspondente e carregar os [helpers](helper.html). Quando a renderização estiver completa, ele tentará descobrir se existe um layout. Se `layout` for `false` ou se não existir, o resultado será retornado diretamente.\n",
				"html": "<p>O <code>hexo.theme</code> herda de <a href=\"box.html\">Box</a> e também guarda os templates.</p>\n<h2 id=\"Obter-uma-View\"><a href=\"#Obter-uma-View\" class=\"headerlink\" title=\"Obter uma View\"></a>Obter uma View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.getView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Definir-uma-View\"><a href=\"#Definir-uma-View\" class=\"headerlink\" title=\"Definir uma View\"></a>Definir uma View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.setView(path, data);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Remover-uma-View\"><a href=\"#Remover-uma-View\" class=\"headerlink\" title=\"Remover uma View\"></a>Remover uma View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.removeView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h2><p>As Views têm dois métodos: <code>render</code> e <code>renderSync</code>. Esses dois métodos são idênticos, mas o primeiro é assíncrono e o segundo é síncrono. Por uma questão de simplicidade, só discutiremos <code>render</code> aqui.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> view = hexo.theme.getView(<span class=\"string\">'layout.swig'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">view.render(&#123;<span class=\"attr\">foo</span>: <span class=\"number\">1</span>, <span class=\"attr\">bar</span>: <span class=\"number\">2</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Você pode passar opções para o método <code>render</code> e ele tentará processar o template com o renderizador correspondente e carregar os <a href=\"helper.html\">helpers</a>. Quando a renderização estiver completa, ele tentará descobrir se existe um layout. Se <code>layout</code> for <code>false</code> ou se não existir, o resultado será retornado diretamente.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6950031koeorep63n0w",
				"title": "Configuração",
				"markdown": "\nVocê pode modificar as configurações do site em `_config.yml` ou em um [arquivo de configuração alternativo](#Usando-uma-Configuracao-Alternativa).\n\n### Site\n\nConfiguração | Descrição\n--- | ---\n`title` | O título do seu site\n`subtitle` | O subtítulo do seu site\n`description` | A descrição do seu site\n`author` | Seu nome\n`language` | O idioma do seu site. Use a [2-lettter ISO-639-1 code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes). O padrão é `en`.\n`timezone` | O fuso horário do seu site. O Hexo usa a configuração do seu computador por padrão. Você pode encontrar a lista de fusos horários disponíveis [aqui](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). Alguns exemplos são `America/New_York`, `Japan` e `UTC`.\n\n### URL\n\nConfiguração | Descrição | Padrão\n--- | --- | ---\n`url` | A URL do seu site |\n`root` | O diretório raiz do seu site |\n`permalink` | O formato de [permalink](permalinks.html) dos artigos | `:year/:month/:day/:title/`\n`permalink_defaults` | Valores padrão de cada segmento no permalink |\n\n{% note info Site em subdiretório %}\nSe o seu site estiver em um subdiretório (como por exemplo `http://example.org/blog`) defina `url` para `http://example.org/blog` e defina `root` para `/blog/`.\n{% endnote %}\n\n### Diretório\n\nConfiguração | Descrição | Padrão\n--- | --- | ---\n`source_dir` | Diretório dos fonte. Onde seu conteúdo está armazenado | `source`\n`public_dir` | Diretório dos arquivos públicos. Onde o site estático será gerado | `public`\n`tag_dir` | Diretório de tags | `tags`\n`archive_dir` | Diretório de archives | `archives`\n`category_dir` | Diretório de categorias | `categories`\n`code_dir` | Diretório de código (subdiretório de `source_dir`) | `downloads/code`\n`i18n_dir` | Diretório de internacionalização (i18n) | `:lang`\n`skip_render` | Caminhos que não devem ser renderizados. Você pode usar [expressões globais](https://github.com/isaacs/minimatch) para fazer correspondência de caminho |\n\n### Escrita\n\nConfiguração | Descrição | Padrão\n--- | --- | ---\n`new_post_name` | O formato do nome do arquivo para novas postagens | `:title.md`\n`default_layout` | Layout padrão | `post`\n`titlecase` | Transformar títulos em maiúsculo? | `false`\n`external_link` | Abrir links externos em uma nova aba? | `true`\n`filename_case` | Converter nomes de arquivos para minúsculos `1`; maiúsculos `2` | `0`\n`render_drafts` | Exibir rascunhos? | `false`\n`post_asset_folder` | Ativar o [diretório de Asset](asset-folders.html)? | `false`\n`relative_link` | Links para o diretório raiz? | `false`\n`future` | Exibir postagens futuras? | `true`\n`highlight` | Configurações de bloco de código |\n\n### Categoria & Tag\n\nConfiguração | Descrição | Padrão\n--- | --- | ---\n`default_category` | Categoria padrão | `uncategorized`\n`category_map` | Mapa de Categoria |\n`tag_map` | Mapa de Tag |\n\n### Formato de Data / Hora\n\nHexo usa [Moment.js](http://momentjs.com/) para processar datas.\n\nConfiguração | Descrição | Padrão\n--- | --- | ---\n`date_format` | Formato de data | `YYYY-MM-DD`\n`time_format` | Formado de hora | `HH:mm:ss`\n\n### Paginação\n\nConfiguração | Descrição | Padrão\n--- | --- | ---\n`per_page` | A quantidade de postagens exibidas em uma única página. `0` desabilita paginação | `10`\n`pagination_dir` | Diretório de paginação | `page`\n\n### Extensões\n\nConfiguração | Descrição\n--- | ---\n`theme` | Nome do tema. `false` desabilita o tema\n`theme_config` | Configuração do tema. Inclui quaisquer configurações de tema personalizado sob esta chave para substituir os padrões do tema.\n`deploy` | Configurações de implantação\n\n### Incluir/Excluir Arquivos ou Diretórios\n\nNo arquivo de configuração, defina a chave de include/exclude para que o hexo processe ou ignore, explicitamente, determinados arquivos/diretórios.\n\nConfiguração | Descrição\n--- | ---\n`include` | Por padrão, o Hexo ignora os arquivos e diretórios ocultos, mas configurar este campo fará com que o Hexo os processe também\n`exclude` | O Hexo irá ignorar os arquivos e diretórios listados abaixo deste campo\n\nExemplo:\n```yaml\n# Incluir/Excluir Arquivos/Diretórios\ninclude:\n  - .nojekyll\nexclude:\n  - .DS_Store\n```\n\n### Usando uma Configuração Alternativa\n\nUm arquivo de configuração personalizado pode ser especificado adicionando o sinalizador `--config` aos comandos do `hexo` com o caminho para o arquivo alternativo de configuração YAML ou JSON, ou até mesmo uma lista separada por vírgulas (sem espaços) de múltiplos arquivos YAML ou JSON.\n\n``` bash\n# usando 'custom.yml' no lugar de '_config.yml'\n$ hexo server --config custom.yml\n\n# usando 'custom.yml' e 'custom2.json', priorizando 'custom2.json'\n$ hexo server --config custom.yml,custom2.json\n```\n\nO uso de vários arquivos combina todos os arquivos de configuração e salva as configurações mescladas para `_multiconfig.yml`. Os valores posteriores prevalecem. Este recurso funciona com qualquer quantidade de arquivos JSON e YAML com objetos arbitrariamente profundos. Observe que **nenhum espaço é permitido na lista**.\n\nPor exemplo, no exemplo acima se `foo: bar` estiver em `custom.yml`, mas `\"foo\": \"dinosaur\"` estiver em `custom2.json`, `_multiconfig.yml` irá conter `foo: dinosaur`.\n\n### Sobrescrevendo as Configurações do Tema\n\nOs temas do Hexo são projetos independentes, com arquivos `_config.yml` separados.\n\nEm vez de dar fork em um tema e manter uma branch personalizada com suas configurações, você pode configurá-lo a partir do arquivo de configuração principal do seu site.\n\nExemplo de configuração:\n\n```yml\n# _config.yml\ntheme_config:\n  bio: \"My awesome bio\"\n```\n\n```yml\n# themes/my-theme/_config.yml\nbio: \"Some generic bio\"\nlogo: \"a-cool-image.png\"\n```\n\nResultado da configuração do tema:\n\n```json\n{\n  bio: \"My awesome bio\",\n  logo: \"a-cool-image.png\"\n}\n```\n",
				"html": "<p>Você pode modificar as configurações do site em <code>_config.yml</code> ou em um <a href=\"#Usando-uma-Configuracao-Alternativa\">arquivo de configuração alternativo</a>.</p>\n<h3 id=\"Site\"><a href=\"#Site\" class=\"headerlink\" title=\"Site\"></a>Site</h3><table>\n<thead>\n<tr>\n<th>Configuração</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>O título do seu site</td>\n</tr>\n<tr>\n<td><code>subtitle</code></td>\n<td>O subtítulo do seu site</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>A descrição do seu site</td>\n</tr>\n<tr>\n<td><code>author</code></td>\n<td>Seu nome</td>\n</tr>\n<tr>\n<td><code>language</code></td>\n<td>O idioma do seu site. Use a <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"_blank\" rel=\"noopener\">2-lettter ISO-639-1 code</a>. O padrão é <code>en</code>.</td>\n</tr>\n<tr>\n<td><code>timezone</code></td>\n<td>O fuso horário do seu site. O Hexo usa a configuração do seu computador por padrão. Você pode encontrar a lista de fusos horários disponíveis <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" target=\"_blank\" rel=\"noopener\">aqui</a>. Alguns exemplos são <code>America/New_York</code>, <code>Japan</code> e <code>UTC</code>.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h3><table>\n<thead>\n<tr>\n<th>Configuração</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>url</code></td>\n<td>A URL do seu site</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>O diretório raiz do seu site</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>O formato de <a href=\"permalinks.html\">permalink</a> dos artigos</td>\n<td><code>:year/:month/:day/:title/</code></td>\n</tr>\n<tr>\n<td><code>permalink_defaults</code></td>\n<td>Valores padrão de cada segmento no permalink</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note info\"><strong class=\"note-title\">Site em subdiretório</strong><p>Se o seu site estiver em um subdiretório (como por exemplo <code>http://example.org/blog</code>) defina <code>url</code> para <code>http://example.org/blog</code> e defina <code>root</code> para <code>/blog/</code>.</p>\n</blockquote>\n<h3 id=\"Diretorio\"><a href=\"#Diretorio\" class=\"headerlink\" title=\"Diretório\"></a>Diretório</h3><table>\n<thead>\n<tr>\n<th>Configuração</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source_dir</code></td>\n<td>Diretório dos fonte. Onde seu conteúdo está armazenado</td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>public_dir</code></td>\n<td>Diretório dos arquivos públicos. Onde o site estático será gerado</td>\n<td><code>public</code></td>\n</tr>\n<tr>\n<td><code>tag_dir</code></td>\n<td>Diretório de tags</td>\n<td><code>tags</code></td>\n</tr>\n<tr>\n<td><code>archive_dir</code></td>\n<td>Diretório de archives</td>\n<td><code>archives</code></td>\n</tr>\n<tr>\n<td><code>category_dir</code></td>\n<td>Diretório de categorias</td>\n<td><code>categories</code></td>\n</tr>\n<tr>\n<td><code>code_dir</code></td>\n<td>Diretório de código (subdiretório de <code>source_dir</code>)</td>\n<td><code>downloads/code</code></td>\n</tr>\n<tr>\n<td><code>i18n_dir</code></td>\n<td>Diretório de internacionalização (i18n)</td>\n<td><code>:lang</code></td>\n</tr>\n<tr>\n<td><code>skip_render</code></td>\n<td>Caminhos que não devem ser renderizados. Você pode usar <a href=\"https://github.com/isaacs/minimatch\" target=\"_blank\" rel=\"noopener\">expressões globais</a> para fazer correspondência de caminho</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Escrita\"><a href=\"#Escrita\" class=\"headerlink\" title=\"Escrita\"></a>Escrita</h3><table>\n<thead>\n<tr>\n<th>Configuração</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>new_post_name</code></td>\n<td>O formato do nome do arquivo para novas postagens</td>\n<td><code>:title.md</code></td>\n</tr>\n<tr>\n<td><code>default_layout</code></td>\n<td>Layout padrão</td>\n<td><code>post</code></td>\n</tr>\n<tr>\n<td><code>titlecase</code></td>\n<td>Transformar títulos em maiúsculo?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>external_link</code></td>\n<td>Abrir links externos em uma nova aba?</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>filename_case</code></td>\n<td>Converter nomes de arquivos para minúsculos <code>1</code>; maiúsculos <code>2</code></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>render_drafts</code></td>\n<td>Exibir rascunhos?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>post_asset_folder</code></td>\n<td>Ativar o <a href=\"asset-folders.html\">diretório de Asset</a>?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>relative_link</code></td>\n<td>Links para o diretório raiz?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>future</code></td>\n<td>Exibir postagens futuras?</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>highlight</code></td>\n<td>Configurações de bloco de código</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Categoria-amp-Tag\"><a href=\"#Categoria-amp-Tag\" class=\"headerlink\" title=\"Categoria &amp; Tag\"></a>Categoria &amp; Tag</h3><table>\n<thead>\n<tr>\n<th>Configuração</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>default_category</code></td>\n<td>Categoria padrão</td>\n<td><code>uncategorized</code></td>\n</tr>\n<tr>\n<td><code>category_map</code></td>\n<td>Mapa de Categoria</td>\n<td></td>\n</tr>\n<tr>\n<td><code>tag_map</code></td>\n<td>Mapa de Tag</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Formato-de-Data-Hora\"><a href=\"#Formato-de-Data-Hora\" class=\"headerlink\" title=\"Formato de Data / Hora\"></a>Formato de Data / Hora</h3><p>Hexo usa <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> para processar datas.</p>\n<table>\n<thead>\n<tr>\n<th>Configuração</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>date_format</code></td>\n<td>Formato de data</td>\n<td><code>YYYY-MM-DD</code></td>\n</tr>\n<tr>\n<td><code>time_format</code></td>\n<td>Formado de hora</td>\n<td><code>HH:mm:ss</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Paginacao\"><a href=\"#Paginacao\" class=\"headerlink\" title=\"Paginação\"></a>Paginação</h3><table>\n<thead>\n<tr>\n<th>Configuração</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>per_page</code></td>\n<td>A quantidade de postagens exibidas em uma única página. <code>0</code> desabilita paginação</td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td><code>pagination_dir</code></td>\n<td>Diretório de paginação</td>\n<td><code>page</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Extensoes\"><a href=\"#Extensoes\" class=\"headerlink\" title=\"Extensões\"></a>Extensões</h3><table>\n<thead>\n<tr>\n<th>Configuração</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>theme</code></td>\n<td>Nome do tema. <code>false</code> desabilita o tema</td>\n</tr>\n<tr>\n<td><code>theme_config</code></td>\n<td>Configuração do tema. Inclui quaisquer configurações de tema personalizado sob esta chave para substituir os padrões do tema.</td>\n</tr>\n<tr>\n<td><code>deploy</code></td>\n<td>Configurações de implantação</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Incluir-Excluir-Arquivos-ou-Diretorios\"><a href=\"#Incluir-Excluir-Arquivos-ou-Diretorios\" class=\"headerlink\" title=\"Incluir/Excluir Arquivos ou Diretórios\"></a>Incluir/Excluir Arquivos ou Diretórios</h3><p>No arquivo de configuração, defina a chave de include/exclude para que o hexo processe ou ignore, explicitamente, determinados arquivos/diretórios.</p>\n<table>\n<thead>\n<tr>\n<th>Configuração</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>include</code></td>\n<td>Por padrão, o Hexo ignora os arquivos e diretórios ocultos, mas configurar este campo fará com que o Hexo os processe também</td>\n</tr>\n<tr>\n<td><code>exclude</code></td>\n<td>O Hexo irá ignorar os arquivos e diretórios listados abaixo deste campo</td>\n</tr>\n</tbody>\n</table>\n<p>Exemplo:<br><figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Incluir/Excluir Arquivos/Diretórios</span></span><br><span class=\"line\"><span class=\"attr\">include:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">.nojekyll</span></span><br><span class=\"line\"><span class=\"attr\">exclude:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">.DS_Store</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Usando-uma-Configuracao-Alternativa\"><a href=\"#Usando-uma-Configuracao-Alternativa\" class=\"headerlink\" title=\"Usando uma Configuração Alternativa\"></a>Usando uma Configuração Alternativa</h3><p>Um arquivo de configuração personalizado pode ser especificado adicionando o sinalizador <code>--config</code> aos comandos do <code>hexo</code> com o caminho para o arquivo alternativo de configuração YAML ou JSON, ou até mesmo uma lista separada por vírgulas (sem espaços) de múltiplos arquivos YAML ou JSON.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># usando 'custom.yml' no lugar de '_config.yml'</span></span><br><span class=\"line\">$ hexo server --config custom.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># usando 'custom.yml' e 'custom2.json', priorizando 'custom2.json'</span></span><br><span class=\"line\">$ hexo server --config custom.yml,custom2.json</span><br></pre></td></tr></table></figure>\n<p>O uso de vários arquivos combina todos os arquivos de configuração e salva as configurações mescladas para <code>_multiconfig.yml</code>. Os valores posteriores prevalecem. Este recurso funciona com qualquer quantidade de arquivos JSON e YAML com objetos arbitrariamente profundos. Observe que <strong>nenhum espaço é permitido na lista</strong>.</p>\n<p>Por exemplo, no exemplo acima se <code>foo: bar</code> estiver em <code>custom.yml</code>, mas <code>&quot;foo&quot;: &quot;dinosaur&quot;</code> estiver em <code>custom2.json</code>, <code>_multiconfig.yml</code> irá conter <code>foo: dinosaur</code>.</p>\n<h3 id=\"Sobrescrevendo-as-Configuracoes-do-Tema\"><a href=\"#Sobrescrevendo-as-Configuracoes-do-Tema\" class=\"headerlink\" title=\"Sobrescrevendo as Configurações do Tema\"></a>Sobrescrevendo as Configurações do Tema</h3><p>Os temas do Hexo são projetos independentes, com arquivos <code>_config.yml</code> separados.</p>\n<p>Em vez de dar fork em um tema e manter uma branch personalizada com suas configurações, você pode configurá-lo a partir do arquivo de configuração principal do seu site.</p>\n<p>Exemplo de configuração:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># _config.yml</span></span><br><span class=\"line\"><span class=\"attr\">theme_config:</span></span><br><span class=\"line\"><span class=\"attr\">  bio:</span> <span class=\"string\">\"My awesome bio\"</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># themes/my-theme/_config.yml</span></span><br><span class=\"line\"><span class=\"attr\">bio:</span> <span class=\"string\">\"Some generic bio\"</span></span><br><span class=\"line\"><span class=\"attr\">logo:</span> <span class=\"string\">\"a-cool-image.png\"</span></span><br></pre></td></tr></table></figure>\n<p>Resultado da configuração do tema:</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  bio: \"My awesome bio\",</span><br><span class=\"line\">  logo: \"a-cool-image.png\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6950032koeosxo29mwf",
				"title": "Comandos",
				"markdown": "## init\n\n``` bash\n$ hexo init [folder]\n```\n\nInicializa um website. Se não existir o diretório `folder`, o Hexo irá configurar o site no diretório atual.\n\n## new\n\n``` bash\n$ hexo new [layout] <title>\n```\n\nCria um novo artigo. Se nenhum `layout` for fornecido, o Hexo usará o `default_layout` de [_config.yml](configuration.html). Se o `title` contiver espaços, rode-o com aspas.\n\n## generate\n\n``` bash\n$ hexo generate\n```\n\nGera os arquivos estáticos.\n\nOpção | Descrição\n--- | ---\n`-d`, `--deploy` | Faz o deploy após os arquivos estáticos serem gerados\n`-w`, `--watch` | Assiste alterações no aquivo\n`-b`, `--bail` | Levanta um erro se qualquer exceção não tratada for lançada durante o processo de geração dos arquivos\n`-f`, `--force` | Regeneração forçada\n\n## publish\n\n``` bash\n$ hexo publish [layout] <filename>\n```\n\nPublica um rascunho.\n\n## server\n\n``` bash\n$ hexo server\n```\n\nInicia um servidor local. Por padrão, o local é `http://localhost:4000/`.\n\nOpção | Descrição\n--- | ---\n`-p`, `--port` | Substituir a porta padrão\n`-s`, `--static` | Somente serve arquivos estáticos\n`-l`, `--log` | Ativar o logger. Substitui o formato do logger.\n\n## deploy\n\n``` bash\n$ hexo deploy\n```\n\nImplanta o site.\n\nOpção | Descrição\n--- | ---\n`-g`, `--generate` | Gerar os arquivos estáticos antes do deploy\n\n## render\n\n``` bash\n$ hexo render <file1> [file2] ...\n```\n\nRenderiza arquivos.\n\nOpção | Descrição\n--- | ---\n`-o`, `--output` | Destino de saída\n\n## migrate\n\n``` bash\n$ hexo migrate <type>\n```\n\n[Migração](migration.html) de conteúdo de outros sistemas de blog.\n\n## clean\n\n``` bash\n$ hexo clean\n```\n\nLimpa o arquivo de cache (`db.json`) e os arquivos gerados (`public`).\n\n## list\n\n``` bash\n$ hexo list <type>\n```\n\nLista todas as rotas\n\n## version\n\n``` bash\n$ hexo version\n```\n\nExibe informações de versão.\n\n## Opções\n\n### Modo safe\n\n``` bash\n$ hexo --safe\n```\n\nDesativa o carregamento de plugins e scripts. Tente isso se você encontrar problemas depois de instalar um novo plugin.\n\n### Modo debug\n\n``` bash\n$ hexo --debug\n```\n\nRegistra mensagens detalhadas para o terminal e para o arquivo `debug.log`. Tente isso se você tiver algum problema com o Hexo. Se você encontrar erros, por favor [crie uma issue no GitHub](https://github.com/hexojs/hexo/issues/new).\n\n### Modo silent\n\n``` bash\n$ hexo --silent\n```\n\nSilencia a saída para no terminal.\n\n### Caminho do arquivo de configuração personalizado\n\n``` bash\n$ hexo --config custom.yml\n```\n\nUsa um arquivo de configuração personalizado (em vez de `_config.yml`). Também aceita uma lista separada por vírgulas (sem espaços) de arquivos de configuração JSON ou YAML que combinará os arquivos em um único `_multiconfig.yml`.\n\n``` bash\n$ hexo --config custom.yml,custom2.json\n```\n\n### Mostra rascunhos\n\n``` bash\n$ hexo --draft\n```\n\nExibe os rascunhos (armazenados no diretório `source/_drafts`).\n\n### Customizando CWD\n\n``` bash\n$ hexo --cwd /path/to/cwd\n```\n\nPersonaliza o caminho do diretório de trabalho atual.\n",
				"html": "<h2 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init [folder]</span><br></pre></td></tr></table></figure>\n<p>Inicializa um website. Se não existir o diretório <code>folder</code>, o Hexo irá configurar o site no diretório atual.</p>\n<h2 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>Cria um novo artigo. Se nenhum <code>layout</code> for fornecido, o Hexo usará o <code>default_layout</code> de <a href=\"configuration.html\">_config.yml</a>. Se o <code>title</code> contiver espaços, rode-o com aspas.</p>\n<h2 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>Gera os arquivos estáticos.</p>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-d</code>, <code>--deploy</code></td>\n<td>Faz o deploy após os arquivos estáticos serem gerados</td>\n</tr>\n<tr>\n<td><code>-w</code>, <code>--watch</code></td>\n<td>Assiste alterações no aquivo</td>\n</tr>\n<tr>\n<td><code>-b</code>, <code>--bail</code></td>\n<td>Levanta um erro se qualquer exceção não tratada for lançada durante o processo de geração dos arquivos</td>\n</tr>\n<tr>\n<td><code>-f</code>, <code>--force</code></td>\n<td>Regeneração forçada</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"publish\"><a href=\"#publish\" class=\"headerlink\" title=\"publish\"></a>publish</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<p>Publica um rascunho.</p>\n<h2 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>Inicia um servidor local. Por padrão, o local é <code>http://localhost:4000/</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-p</code>, <code>--port</code></td>\n<td>Substituir a porta padrão</td>\n</tr>\n<tr>\n<td><code>-s</code>, <code>--static</code></td>\n<td>Somente serve arquivos estáticos</td>\n</tr>\n<tr>\n<td><code>-l</code>, <code>--log</code></td>\n<td>Ativar o logger. Substitui o formato do logger.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>Implanta o site.</p>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-g</code>, <code>--generate</code></td>\n<td>Gerar os arquivos estáticos antes do deploy</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>\n<p>Renderiza arquivos.</p>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-o</code>, <code>--output</code></td>\n<td>Destino de saída</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"migrate\"><a href=\"#migrate\" class=\"headerlink\" title=\"migrate\"></a>migrate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p><a href=\"migration.html\">Migração</a> de conteúdo de outros sistemas de blog.</p>\n<h2 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>Limpa o arquivo de cache (<code>db.json</code>) e os arquivos gerados (<code>public</code>).</p>\n<h2 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo list &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>Lista todas as rotas</p>\n<h2 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n<p>Exibe informações de versão.</p>\n<h2 id=\"Opcoes\"><a href=\"#Opcoes\" class=\"headerlink\" title=\"Opções\"></a>Opções</h2><h3 id=\"Modo-safe\"><a href=\"#Modo-safe\" class=\"headerlink\" title=\"Modo safe\"></a>Modo safe</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --safe</span><br></pre></td></tr></table></figure>\n<p>Desativa o carregamento de plugins e scripts. Tente isso se você encontrar problemas depois de instalar um novo plugin.</p>\n<h3 id=\"Modo-debug\"><a href=\"#Modo-debug\" class=\"headerlink\" title=\"Modo debug\"></a>Modo debug</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --debug</span><br></pre></td></tr></table></figure>\n<p>Registra mensagens detalhadas para o terminal e para o arquivo <code>debug.log</code>. Tente isso se você tiver algum problema com o Hexo. Se você encontrar erros, por favor <a href=\"https://github.com/hexojs/hexo/issues/new\" target=\"_blank\" rel=\"noopener\">crie uma issue no GitHub</a>.</p>\n<h3 id=\"Modo-silent\"><a href=\"#Modo-silent\" class=\"headerlink\" title=\"Modo silent\"></a>Modo silent</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --silent</span><br></pre></td></tr></table></figure>\n<p>Silencia a saída para no terminal.</p>\n<h3 id=\"Caminho-do-arquivo-de-configuracao-personalizado\"><a href=\"#Caminho-do-arquivo-de-configuracao-personalizado\" class=\"headerlink\" title=\"Caminho do arquivo de configuração personalizado\"></a>Caminho do arquivo de configuração personalizado</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure>\n<p>Usa um arquivo de configuração personalizado (em vez de <code>_config.yml</code>). Também aceita uma lista separada por vírgulas (sem espaços) de arquivos de configuração JSON ou YAML que combinará os arquivos em um único <code>_multiconfig.yml</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --config custom.yml,custom2.json</span><br></pre></td></tr></table></figure>\n<h3 id=\"Mostra-rascunhos\"><a href=\"#Mostra-rascunhos\" class=\"headerlink\" title=\"Mostra rascunhos\"></a>Mostra rascunhos</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --draft</span><br></pre></td></tr></table></figure>\n<p>Exibe os rascunhos (armazenados no diretório <code>source/_drafts</code>).</p>\n<h3 id=\"Customizando-CWD\"><a href=\"#Customizando-CWD\" class=\"headerlink\" title=\"Customizando CWD\"></a>Customizando CWD</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure>\n<p>Personaliza o caminho do diretório de trabalho atual.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6950033koeoa48j0wgo",
				"title": "Contribuindo",
				"markdown": "## Desenvolvimento\n\nNós damos o parabéns a você por se juntar ao desenvolvimento do Hexo. Este documento irá ajudá-lo através do processo.\n\n### Antes de Você Começar\n\nPor favor, siga o estilo de codificação:\n\n- Siga o [Guia de Estilo de Código JavaScript do Google](https://google.github.io/styleguide/jsguide.html).\n- Use soft-tabs com um recuo de dois espaços.\n- Não coloque vírgulas primeiro.\n\n### Fluxo de Trabalho\n\n1. Faça um fork [hexojs/hexo].\n2. Clone o repositório no seu computador e instale as dependências.\n\n    ```\n    $ git clone https://github.com/<username>/hexo.git\n    $ cd hexo\n    $ npm install\n    $ git submodule update --init\n    ```\n\n3. Crie um branch para a feature a ser desenvolvida.\n\n    ```\n    $ git checkout -b new_feature\n    ```\n\n4. Comece a implementação.\n5. Faça o push da branch para seu repositório remoto:\n\n    ```\n    $ git push origin new_feature\n    ```\n\n6. Crie um pull request e descreva as mudanças.\n\n### Aviso Prévio\n\n- Não modifique o número da versão no arquivo `package.json`.\n- Seu pedido de pull request só será aceito quando os testes tiverem passado. Não se esqueça de executar testes antes da submissão.\n\n    ```\n    $ npm test\n    ```\n\n## Atualizando a Documentação\n\nA documentação do Hexo é de código aberto e você pode encontrar o código-fonte em [hexojs/site].\n\n### Fluxo de trabalho\n\n1. Faça um fork [hexojs/site]\n2. Clone o repositório no seu computador e instale as dependências.\n\n    ```\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    ```\n\n3. Comece a editar a documentação. Você pode iniciar o servidor para a visualização das mudanças em tempo real.\n\n    ```\n    $ hexo server\n    ```\n\n4. Faça o push da branch para seu repositório remoto:\n5. Crie um pull request e descreva as mudanças.\n\n### Traduzindo\n\n1. Adicione um diretório para o novo idioma dentro do repositório `source`. (Todas as letras minúsculas)\n2. Copie os arquivos de template e Markdown que estão no `source` para o diretório do novo idioma.\n3. Adicione o novo idioma a `source/_data/language.yml`.\n4. Copie o arquivo `en.yml` em `themes/navy/languages` e o renomeie para o nome do novo idioma (todas as minúsculas).\n\n## Reportando Issues\n\nQuando você encontra alguns problemas ao usar o Hexo, você pode encontrar as soluções em [Solução de problemas](troubleshooting.html) ou nos perguntar no [GitHub](https://github.com/hexojs/hexo/issues) ou [Google Group](https://groups.google.com/group/hexo). Se você não conseguir encontrar a resposta, abra uma nova issue no GitHub.\n\n1. Reproduza o problema em [modo de depuração](commands.html#Debug_mode).\n2. Execute `hexo version` e verifique as informações da versão.\n3. Poste todas as mensagem de depuração e a versão de sua instância do Hexo no GitHub.\n\n[hexojs/hexo]: https://github.com/hexojs/hexo\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<h2 id=\"Desenvolvimento\"><a href=\"#Desenvolvimento\" class=\"headerlink\" title=\"Desenvolvimento\"></a>Desenvolvimento</h2><p>Nós damos o parabéns a você por se juntar ao desenvolvimento do Hexo. Este documento irá ajudá-lo através do processo.</p>\n<h3 id=\"Antes-de-Voce-Comecar\"><a href=\"#Antes-de-Voce-Comecar\" class=\"headerlink\" title=\"Antes de Você Começar\"></a>Antes de Você Começar</h3><p>Por favor, siga o estilo de codificação:</p>\n<ul>\n<li>Siga o <a href=\"https://google.github.io/styleguide/jsguide.html\" target=\"_blank\" rel=\"noopener\">Guia de Estilo de Código JavaScript do Google</a>.</li>\n<li>Use soft-tabs com um recuo de dois espaços.</li>\n<li>Não coloque vírgulas primeiro.</li>\n</ul>\n<h3 id=\"Fluxo-de-Trabalho\"><a href=\"#Fluxo-de-Trabalho\" class=\"headerlink\" title=\"Fluxo de Trabalho\"></a>Fluxo de Trabalho</h3><ol>\n<li>Faça um fork <a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">hexojs/hexo</a>.</li>\n<li><p>Clone o repositório no seu computador e instale as dependências.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/hexo.git</span><br><span class=\"line\">$ cd hexo</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">$ git submodule update --init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Crie um branch para a feature a ser desenvolvida.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout -b new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Comece a implementação.</p>\n</li>\n<li><p>Faça o push da branch para seu repositório remoto:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push origin new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Crie um pull request e descreva as mudanças.</p>\n</li>\n</ol>\n<h3 id=\"Aviso-Previo\"><a href=\"#Aviso-Previo\" class=\"headerlink\" title=\"Aviso Prévio\"></a>Aviso Prévio</h3><ul>\n<li>Não modifique o número da versão no arquivo <code>package.json</code>.</li>\n<li><p>Seu pedido de pull request só será aceito quando os testes tiverem passado. Não se esqueça de executar testes antes da submissão.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm test</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Atualizando-a-Documentacao\"><a href=\"#Atualizando-a-Documentacao\" class=\"headerlink\" title=\"Atualizando a Documentação\"></a>Atualizando a Documentação</h2><p>A documentação do Hexo é de código aberto e você pode encontrar o código-fonte em <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a>.</p>\n<h3 id=\"Fluxo-de-trabalho\"><a href=\"#Fluxo-de-trabalho\" class=\"headerlink\" title=\"Fluxo de trabalho\"></a>Fluxo de trabalho</h3><ol>\n<li>Faça um fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>Clone o repositório no seu computador e instale as dependências.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Comece a editar a documentação. Você pode iniciar o servidor para a visualização das mudanças em tempo real.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Faça o push da branch para seu repositório remoto:</p>\n</li>\n<li>Crie um pull request e descreva as mudanças.</li>\n</ol>\n<h3 id=\"Traduzindo\"><a href=\"#Traduzindo\" class=\"headerlink\" title=\"Traduzindo\"></a>Traduzindo</h3><ol>\n<li>Adicione um diretório para o novo idioma dentro do repositório <code>source</code>. (Todas as letras minúsculas)</li>\n<li>Copie os arquivos de template e Markdown que estão no <code>source</code> para o diretório do novo idioma.</li>\n<li>Adicione o novo idioma a <code>source/_data/language.yml</code>.</li>\n<li>Copie o arquivo <code>en.yml</code> em <code>themes/navy/languages</code> e o renomeie para o nome do novo idioma (todas as minúsculas).</li>\n</ol>\n<h2 id=\"Reportando-Issues\"><a href=\"#Reportando-Issues\" class=\"headerlink\" title=\"Reportando Issues\"></a>Reportando Issues</h2><p>Quando você encontra alguns problemas ao usar o Hexo, você pode encontrar as soluções em <a href=\"troubleshooting.html\">Solução de problemas</a> ou nos perguntar no <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> ou <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a>. Se você não conseguir encontrar a resposta, abra uma nova issue no GitHub.</p>\n<ol>\n<li>Reproduza o problema em <a href=\"commands.html#Debug_mode\">modo de depuração</a>.</li>\n<li>Execute <code>hexo version</code> e verifique as informações da versão.</li>\n<li>Poste todas as mensagem de depuração e a versão de sua instância do Hexo no GitHub.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6960034koeo5m9ht1bc",
				"title": "Arquivos de Dados",
				"markdown": "Às vezes, você pode precisar usar alguns dados em templates que não estão diretamente disponíveis em suas postagens, ou ainda, você deseja reutilizar os dados em um outro lugar. Para esses casos de uso, o Hexo 3 introduziu os novos **Data files** (arquivos de dados). Este recurso carrega arquivos YAML ou JSON no diretório `source/_data` para que você possa usá-los em seu site.\n\n{% youtube CN31plHbI-w %}\n\nPor exemplo, adicione `menu.yml` no diretório `source/_data`.\n\n``` yaml\nHome: /\nGallery: /gallery/\nArchives: /archives/\n```\n\nE você pode usá-los nos templates:\n\n```\n<% for (var link in site.data.menu) { %>\n  <a href=\"<%= site.data.menu[link] %>\"> <%= link %> </a>\n<% } %>\n```\n\nRenderizado assim:\n\n```\n<a href=\"/\"> Home </a>\n<a href=\"/gallery/\"> Gallery </a>\n<a href=\"/archives/\"> Archives </a>\n```\n",
				"html": "<p>Às vezes, você pode precisar usar alguns dados em templates que não estão diretamente disponíveis em suas postagens, ou ainda, você deseja reutilizar os dados em um outro lugar. Para esses casos de uso, o Hexo 3 introduziu os novos <strong>Data files</strong> (arquivos de dados). Este recurso carrega arquivos YAML ou JSON no diretório <code>source/_data</code> para que você possa usá-los em seu site.</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/CN31plHbI-w\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>Por exemplo, adicione <code>menu.yml</code> no diretório <code>source/_data</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Home:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">Gallery:</span> <span class=\"string\">/gallery/</span></span><br><span class=\"line\"><span class=\"attr\">Archives:</span> <span class=\"string\">/archives/</span></span><br></pre></td></tr></table></figure>\n<p>E você pode usá-los nos templates:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;% for (var link in site.data.menu) &#123; %&gt;</span><br><span class=\"line\">  &lt;a href=&quot;&lt;%= site.data.menu[link] %&gt;&quot;&gt; &lt;%= link %&gt; &lt;/a&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>Renderizado assim:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;/&quot;&gt; Home &lt;/a&gt;</span><br><span class=\"line\">&lt;a href=&quot;/gallery/&quot;&gt; Gallery &lt;/a&gt;</span><br><span class=\"line\">&lt;a href=&quot;/archives/&quot;&gt; Archives &lt;/a&gt;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6960035koeoet78axvi",
				"title": "Gerando",
				"markdown": "\nGerar arquivos estáticos com o Hexo é bastante fácil e rápido.\n\n``` bash\n$ hexo generate\n```\n\n{% youtube viEJQPVCoLU %}\n\n### Observando Alterações em Arquivo\n\nO Hexo pode ficar observando as alterações nos arquivos e regerar arquivos imediatamente. O hexo compara a hash (SHA1) dos seus arquivos e somente regenera aqueles que sofreram modificações.\n\n``` bash\n$ hexo generate --watch\n```\n\n### Deploy Depois da Geração\n\nPara fazer o deploy depois de gerar os arquivos, você pode executar um dos seguintes comandos. Não há diferença entre os dois.\n\n``` bash\n$ hexo generate --deploy\n$ hexo deploy --generate\n```\n",
				"html": "<p>Gerar arquivos estáticos com o Hexo é bastante fácil e rápido.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/viEJQPVCoLU\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h3 id=\"Observando-Alteracoes-em-Arquivo\"><a href=\"#Observando-Alteracoes-em-Arquivo\" class=\"headerlink\" title=\"Observando Alterações em Arquivo\"></a>Observando Alterações em Arquivo</h3><p>O Hexo pode ficar observando as alterações nos arquivos e regerar arquivos imediatamente. O hexo compara a hash (SHA1) dos seus arquivos e somente regenera aqueles que sofreram modificações.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --watch</span><br></pre></td></tr></table></figure>\n<h3 id=\"Deploy-Depois-da-Geracao\"><a href=\"#Deploy-Depois-da-Geracao\" class=\"headerlink\" title=\"Deploy Depois da Geração\"></a>Deploy Depois da Geração</h3><p>Para fazer o deploy depois de gerar os arquivos, você pode executar um dos seguintes comandos. Não há diferença entre os dois.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --deploy</span><br><span class=\"line\">$ hexo deploy --generate</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6960036koeorsq9wh74",
				"title": "Implantação",
				"markdown": "O Hexo fornece uma estratégia de implantação (deployment) rápida e fácil. Você só precisa de um único comando para implantar seu site no servidor.\n\n``` bash\n$ hexo deploy\n```\n\nAntes da sua primeira implantação, você terá que modificar algumas configurações em `_config.yml`. Uma configuração de implantação válida deve ter um campo `type`. Por exemplo:\n\n``` yaml\ndeploy:\n  type: git\n```\n\nVocê pode implantar o site em mais de um servidor. O Hexo executará cada implantação na ordem da declaração.\n\n``` yaml\ndeploy:\n- type: git\n  repo:\n- type: heroku\n  repo:\n```\n\n## Git\n\nInstale o pacote [hexo-deployer-git].\n\n``` bash\n$ npm install hexo-deployer-git --save\n```\n\nEditando as configurações.\n\n``` yaml\ndeploy:\n  type: git\n  repo: <repository url>\n  branch: [branch]\n  message: [message]\n```\n\nOpção | Descrição\n--- | ---\n`repo` | URL do repositório GitHub/Bitbucket/Coding/GitLab\n`branch` | Nome do branch. O implantador detectará o branch automaticamente se estiver usando o GitHub ou GitCafe.\n`message` | Customiza a mensagem de commit (O padrão é `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## Heroku\n\nInstale o pacote [hexo-deployer-heroku].\n\n``` bash\n$ npm install hexo-deployer-heroku --save\n```\n\nEditando as configurações.\n\n``` yaml\ndeploy:\n  type: heroku\n  repo: <repository url>\n  message: [message]\n```\n\nOpção | Descrição\n--- | ---\n`repo`, `repository` | URL do repositório no Heroku\n`message` | Customiza a mensagem de commit (O padão é: `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## Rsync\n\nInstale o pacote [hexo-deployer-rsync].\n\n``` bash\n$ npm install hexo-deployer-rsync --save\n```\n\nEditando as configurações.\n\n``` yaml\ndeploy:\n  type: rsync\n  host: <host>\n  user: <user>\n  root: <root>\n  port: [port]\n  delete: [true|false]\n  verbose: [true|false]\n  ignore_errors: [true|false]\n```\n\nOpção | Descrição | Padão\n--- | --- | ---\n`host` | Endereço do host remoto |\n`user` | Nome de usuário |\n`root` | Diretório raiz do host remoto |\n`port` | Porta | 22\n`delete` | Exclui arquivos antigos no host remoto | true\n`verbose` | Exibi mensagens detalhadas | true\n`ignore_errors` | Ignora erros | false\n\n## OpenShift\n\nInstale o pacote [hexo-deployer-openshift].\n\n``` bash\n$ npm install hexo-deployer-openshift --save\n```\n\nEditando as configurações.\n\n``` yaml\ndeploy:\n  type: openshift\n  repo: <repository url>\n  message: [message]\n```\n\nOpção | Descrição\n--- | ---\n`repo` | URL do repositório no OpenShift\n`message` | Customiza a mensagem de commit (O padrão é `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## FTPSync\n\nInstale o pacote [hexo-deployer-ftpsync].\n\n``` bash\n$ npm install hexo-deployer-ftpsync --save\n```\n\nEditando as configurações.\n\n``` yaml\ndeploy:\n  type: ftpsync\n  host: <host>\n  user: <user>\n  pass: <password>\n  remote: [remote]\n  port: [port]\n  ignore: [ignore]\n  connections: [connections]\n  verbose: [true|false]\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`host` | Endereço do host remoto |\n`user` | Nome de usuário |\n`pass` | Senha |\n`remote` | Diretório raiz do host remoto | `/`\n`port` | Porta | 21\n`ignore` | Ignora os arquivos no host remoto |\n`connections` | Número de conexões | 1\n`verbose` | Exibi mensagens detalhadas | false\n\n## SFTP\n\nInstale o pacote [hexo-deployer-sftp]. Implantação do site via SFTP, permitindo conexões sem senhas usando \"ssh-agent\".\n\n``` bash\n$ npm install hexo-deployer-sftp --save\n```\n\nEditando as configurações.\n\n``` yaml\ndeploy:\n  type: sftp\n  host: <host>\n  user: <user>\n  pass: <password>\n  remotePath: [remote path]\n  port: [port]\n  privateKey: [path/to/privateKey]\n  passphrase: [passphrase]\n  agent: [path/to/agent/socket]\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`host` | Endereço do host remoto |\n`user` | Nome de usuário |\n`pass` | Senha |\n`remotePath` | Diretório raiz do host remoto | `/`\n`port` | Porta | 22\n`privateKey` | Caminho para uma chave ssh privada |\n`passphrase` | Frase secreta opcional para a chave privada |\n`agent` | Caminho para o socket do agente ssh | `$SSH_AUTH_SOCK`\n\n## Outros Métodos\n\nTodos os arquivos gerados são salvos no diretório `public`. Você pode copiá-los para onde quiser.\n\n[hexo-deployer-git]: https://github.com/hexojs/hexo-deployer-git\n[hexo-deployer-heroku]: https://github.com/hexojs/hexo-deployer-heroku\n[hexo-deployer-rsync]: https://github.com/hexojs/hexo-deployer-rsync\n[hexo-deployer-openshift]: https://github.com/hexojs/hexo-deployer-openshift\n[hexo-deployer-ftpsync]: https://github.com/hexojs/hexo-deployer-ftpsync\n[hexo-deployer-sftp]: https://github.com/lucascaro/hexo-deployer-sftp\n",
				"html": "<p>O Hexo fornece uma estratégia de implantação (deployment) rápida e fácil. Você só precisa de um único comando para implantar seu site no servidor.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>Antes da sua primeira implantação, você terá que modificar algumas configurações em <code>_config.yml</code>. Uma configuração de implantação válida deve ter um campo <code>type</code>. Por exemplo:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br></pre></td></tr></table></figure>\n<p>Você pode implantar o site em mais de um servidor. O Hexo executará cada implantação na ordem da declaração.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><p>Instale o pacote <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>Editando as configurações.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">[branch]</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>URL do repositório GitHub/Bitbucket/Coding/GitLab</td>\n</tr>\n<tr>\n<td><code>branch</code></td>\n<td>Nome do branch. O implantador detectará o branch automaticamente se estiver usando o GitHub ou GitCafe.</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customiza a mensagem de commit (O padrão é <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Heroku\"><a href=\"#Heroku\" class=\"headerlink\" title=\"Heroku\"></a>Heroku</h2><p>Instale o pacote <a href=\"https://github.com/hexojs/hexo-deployer-heroku\" target=\"_blank\" rel=\"noopener\">hexo-deployer-heroku</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-heroku --save</span><br></pre></td></tr></table></figure>\n<p>Editando as configurações.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code>, <code>repository</code></td>\n<td>URL do repositório no Heroku</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customiza a mensagem de commit (O padão é: <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Rsync\"><a href=\"#Rsync\" class=\"headerlink\" title=\"Rsync\"></a>Rsync</h2><p>Instale o pacote <a href=\"https://github.com/hexojs/hexo-deployer-rsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-rsync</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-rsync --save</span><br></pre></td></tr></table></figure>\n<p>Editando as configurações.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">rsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  root:</span> <span class=\"string\">&lt;root&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  delete:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore_errors:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Endereço do host remoto</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Nome de usuário</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>Diretório raiz do host remoto</td>\n<td></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Porta</td>\n<td>22</td>\n</tr>\n<tr>\n<td><code>delete</code></td>\n<td>Exclui arquivos antigos no host remoto</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Exibi mensagens detalhadas</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>ignore_errors</code></td>\n<td>Ignora erros</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"OpenShift\"><a href=\"#OpenShift\" class=\"headerlink\" title=\"OpenShift\"></a>OpenShift</h2><p>Instale o pacote <a href=\"https://github.com/hexojs/hexo-deployer-openshift\" target=\"_blank\" rel=\"noopener\">hexo-deployer-openshift</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-openshift --save</span><br></pre></td></tr></table></figure>\n<p>Editando as configurações.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">openshift</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>URL do repositório no OpenShift</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customiza a mensagem de commit (O padrão é <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"FTPSync\"><a href=\"#FTPSync\" class=\"headerlink\" title=\"FTPSync\"></a>FTPSync</h2><p>Instale o pacote <a href=\"https://github.com/hexojs/hexo-deployer-ftpsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-ftpsync</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-ftpsync --save</span><br></pre></td></tr></table></figure>\n<p>Editando as configurações.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">ftpsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  pass:</span> <span class=\"string\">&lt;password&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  remote:</span> <span class=\"string\">[remote]</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore:</span> <span class=\"string\">[ignore]</span></span><br><span class=\"line\"><span class=\"attr\">  connections:</span> <span class=\"string\">[connections]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Endereço do host remoto</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Nome de usuário</td>\n<td></td>\n</tr>\n<tr>\n<td><code>pass</code></td>\n<td>Senha</td>\n<td></td>\n</tr>\n<tr>\n<td><code>remote</code></td>\n<td>Diretório raiz do host remoto</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Porta</td>\n<td>21</td>\n</tr>\n<tr>\n<td><code>ignore</code></td>\n<td>Ignora os arquivos no host remoto</td>\n<td></td>\n</tr>\n<tr>\n<td><code>connections</code></td>\n<td>Número de conexões</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Exibi mensagens detalhadas</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"SFTP\"><a href=\"#SFTP\" class=\"headerlink\" title=\"SFTP\"></a>SFTP</h2><p>Instale o pacote <a href=\"https://github.com/lucascaro/hexo-deployer-sftp\" target=\"_blank\" rel=\"noopener\">hexo-deployer-sftp</a>. Implantação do site via SFTP, permitindo conexões sem senhas usando “ssh-agent”.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-sftp --save</span><br></pre></td></tr></table></figure>\n<p>Editando as configurações.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">sftp</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  pass:</span> <span class=\"string\">&lt;password&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  remotePath:</span> <span class=\"string\">[remote</span> <span class=\"string\">path]</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  privateKey:</span> <span class=\"string\">[path/to/privateKey]</span></span><br><span class=\"line\"><span class=\"attr\">  passphrase:</span> <span class=\"string\">[passphrase]</span></span><br><span class=\"line\"><span class=\"attr\">  agent:</span> <span class=\"string\">[path/to/agent/socket]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Endereço do host remoto</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Nome de usuário</td>\n<td></td>\n</tr>\n<tr>\n<td><code>pass</code></td>\n<td>Senha</td>\n<td></td>\n</tr>\n<tr>\n<td><code>remotePath</code></td>\n<td>Diretório raiz do host remoto</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Porta</td>\n<td>22</td>\n</tr>\n<tr>\n<td><code>privateKey</code></td>\n<td>Caminho para uma chave ssh privada</td>\n<td></td>\n</tr>\n<tr>\n<td><code>passphrase</code></td>\n<td>Frase secreta opcional para a chave privada</td>\n<td></td>\n</tr>\n<tr>\n<td><code>agent</code></td>\n<td>Caminho para o socket do agente ssh</td>\n<td><code>$SSH_AUTH_SOCK</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Outros-Metodos\"><a href=\"#Outros-Metodos\" class=\"headerlink\" title=\"Outros Métodos\"></a>Outros Métodos</h2><p>Todos os arquivos gerados são salvos no diretório <code>public</code>. Você pode copiá-los para onde quiser.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6970037koeo48agpx1t",
				"title": "Front-matter",
				"markdown": "\n{% youtube pfD6FCZdW4Q %}\n\nFront-matter é um bloco de YAML ou JSON no início do arquivo que é usado para definir configurações para o conteúdo que será escrito (como páginas ou postagens). O Front-matter é terminado por três traços quando escrito em YAML ou três ponto e vírgula quando escrito em JSON.\n\n**YAML**\n``` yaml\ntitle: Hello World\ndate: 2013/7/13 20:46:25\n---\n```\n\n**JSON**\n``` json\n\"title\": \"Hello World\",\n\"date\": \"2013/7/13 20:46:25\"\n;;;\n```\n\n### Configurações e Seus Valores Padrão\n\nConfiguração | Descrição | Padrão\n--- | --- | ---\n`layout` | Layout |\n`title` | Título |\n`date` | Data de publicação | Data de criação do arquivo\n`updated` | Data de atualização | Data de atualização do arquivo\n`comments` | Habilita o recurso de comentário para a postagem | true\n`tags` | Tags (Não disponível para páginas) |\n`categories` | Categorias (Não disponível para páginas) |\n`permalink` | Substitui o permalink padrão da postagem |\n\n#### Categorias & Tags\n\nSomente postagens aceitam o uso de categorias e tags. As categorias aplicam-se à postagens em ordem, resultando em uma hierarquia de classificações e subclassificações. As tags são todas definidas no mesmo nível hierárquico, de modo que a ordem em que aparecem não é importante.\n\n**Exemplo**\n\n``` yaml\ncategories:\n- Sports\n- Baseball\ntags:\n- Injury\n- Fight\n- Shocking\n```\n\nSe você quiser aplicar várias hierarquias de categorias, use uma lista de nomes em vez de um único nome. Se o Hexo encontar qualquer categoria definida dessa forma em uma postagem, ele tratará cada categoria para essa postagem com sua própria hierarquia independente.\n\n**Exemplo**\n\n``` yaml\ncategories:\n- [Sports, Baseball]\n- [MLB, American League, Boston Red Sox]\n- [MLB, American League, New York Yankees]\n- Rivalries\n```\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/pfD6FCZdW4Q\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>Front-matter é um bloco de YAML ou JSON no início do arquivo que é usado para definir configurações para o conteúdo que será escrito (como páginas ou postagens). O Front-matter é terminado por três traços quando escrito em YAML ou três ponto e vírgula quando escrito em JSON.</p>\n<p><strong>YAML</strong><br><figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"string\">/7/13</span> <span class=\"number\">20</span><span class=\"string\">:46:25</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>JSON</strong><br><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"title\": \"Hello World\",</span><br><span class=\"line\">\"date\": \"2013/7/13 20:46:25\"</span><br><span class=\"line\">;;;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Configuracoes-e-Seus-Valores-Padrao\"><a href=\"#Configuracoes-e-Seus-Valores-Padrao\" class=\"headerlink\" title=\"Configurações e Seus Valores Padrão\"></a>Configurações e Seus Valores Padrão</h3><table>\n<thead>\n<tr>\n<th>Configuração</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>Layout</td>\n<td></td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>Título</td>\n<td></td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Data de publicação</td>\n<td>Data de criação do arquivo</td>\n</tr>\n<tr>\n<td><code>updated</code></td>\n<td>Data de atualização</td>\n<td>Data de atualização do arquivo</td>\n</tr>\n<tr>\n<td><code>comments</code></td>\n<td>Habilita o recurso de comentário para a postagem</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>Tags (Não disponível para páginas)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>Categorias (Não disponível para páginas)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>Substitui o permalink padrão da postagem</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Categorias-amp-Tags\"><a href=\"#Categorias-amp-Tags\" class=\"headerlink\" title=\"Categorias &amp; Tags\"></a>Categorias &amp; Tags</h4><p>Somente postagens aceitam o uso de categorias e tags. As categorias aplicam-se à postagens em ordem, resultando em uma hierarquia de classificações e subclassificações. As tags são todas definidas no mesmo nível hierárquico, de modo que a ordem em que aparecem não é importante.</p>\n<p><strong>Exemplo</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Sports</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Baseball</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Injury</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Fight</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Shocking</span></span><br></pre></td></tr></table></figure>\n<p>Se você quiser aplicar várias hierarquias de categorias, use uma lista de nomes em vez de um único nome. Se o Hexo encontar qualquer categoria definida dessa forma em uma postagem, ele tratará cada categoria para essa postagem com sua própria hierarquia independente.</p>\n<p><strong>Exemplo</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">[Sports,</span> <span class=\"string\">Baseball]</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">[MLB,</span> <span class=\"string\">American</span> <span class=\"string\">League,</span> <span class=\"string\">Boston</span> <span class=\"string\">Red</span> <span class=\"string\">Sox]</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">[MLB,</span> <span class=\"string\">American</span> <span class=\"string\">League,</span> <span class=\"string\">New</span> <span class=\"string\">York</span> <span class=\"string\">Yankees]</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Rivalries</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6970038koeo2xrgjzud",
				"title": "Documentação",
				"markdown": "\nBem-vindo à documentação do Hexo. Se você encontrar algum problema ao usar o Hexo, dê uma olhada no  [guia de solução de problemas](troubleshooting.html), abra uma issue no [GitHub](https://github.com/hexojs/hexo/issues) ou inicie um tópico no [Google Group](https://groups.google.com/group/hexo).\n\n## O que é o Hexo?\n\nO Hexo é uma ferramenta simples, rápida e poderosa para criação blog. Você escreve postagens em [Markdown](http://daringfireball.net/projects/markdown/) (ou outras linguagens) e o Hexo gera arquivos estáticos com um lindo tema em segundos.\n\n## Instalação\n\nDemora apenas alguns minutos para configurar o Hexo. Se você encontrar um problema e não conseguir encontrar a solução aqui, por favor [abra uma issue no GitHub](https://github.com/hexojs/hexo/issues) e vamos tentar resolvê-lo.\n\n{% youtube ARted4RniaU %}\n\n### Requerimentos\n\nInstalar o Hexo é bastante fácil. No entanto, você precisa ter algumas outras coisas instaladas primeiro:\n\n- [Node.js](http://nodejs.org/)\n- [Git](http://git-scm.com/)\n\nSe o seu computador já possui estes, parabéns! Basta instalar o Hexo com o npm:\n\n``` bash\n$ npm install -g hexo-cli\n```\n\nCaso contrário, siga as instruções a seguir para instalar todos os requisitos.\n\n{% note warn Para usuários Mac %}\nVocê pode encontrar alguns problemas ao compilar. Instale o Xcode da App Store primeiro. Depois que o Xcode estiver instalado, abra o Xcode e vá para **Preferences -> Download -> Command Line Tools -> Install** para instalar as ferramentas de linhas de comandos.\n{% endnote %}\n\n### Instalando o Git\n\n- Windows: Download e instalação do [Git](https://git-scm.com/download/win).\n- Mac: Intalação com o [Homebrew](http://mxcl.github.com/homebrew/), [MacPorts](http://www.macports.org/) ou [installer](http://sourceforge.net/projects/git-osx-installer/).\n- Linux (Ubuntu, Debian): `sudo apt-get install git-core`\n- Linux (Fedora, Red Hat, CentOS): `sudo yum install git-core`\n\n### Instalando o Node.js\n\nA melhor maneira de instalar o Node.js é com o [Node Version Manager](https://github.com/creationix/nvm).\nFelizmente, os criadores do nvm fornecem um script simples que instala automaticamente o nvm:\n\ncURL:\n\n``` bash\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n\nWget:\n\n``` bash\n$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n\nUma vez que o nvm esteja instalado, reinicie o terminal e execute o seguinte comando para instalar o Node.js:\n\n``` bash\n$ nvm install stable\n```\n\nAlternativamente, é possível baixar e executar [o instalador do Node.js](http://nodejs.org/).\n\n### Instalando Hexo\n\nUma vez que todos os requisitos estão instalados, você pode instalar o Hexo com npm:\n\n``` bash\n$ npm install -g hexo-cli\n```\n",
				"html": "<p>Bem-vindo à documentação do Hexo. Se você encontrar algum problema ao usar o Hexo, dê uma olhada no  <a href=\"troubleshooting.html\">guia de solução de problemas</a>, abra uma issue no <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> ou inicie um tópico no <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a>.</p>\n<h2 id=\"O-que-e-o-Hexo\"><a href=\"#O-que-e-o-Hexo\" class=\"headerlink\" title=\"O que é o Hexo?\"></a>O que é o Hexo?</h2><p>O Hexo é uma ferramenta simples, rápida e poderosa para criação blog. Você escreve postagens em <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a> (ou outras linguagens) e o Hexo gera arquivos estáticos com um lindo tema em segundos.</p>\n<h2 id=\"Instalacao\"><a href=\"#Instalacao\" class=\"headerlink\" title=\"Instalação\"></a>Instalação</h2><p>Demora apenas alguns minutos para configurar o Hexo. Se você encontrar um problema e não conseguir encontrar a solução aqui, por favor <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">abra uma issue no GitHub</a> e vamos tentar resolvê-lo.</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/ARted4RniaU\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h3 id=\"Requerimentos\"><a href=\"#Requerimentos\" class=\"headerlink\" title=\"Requerimentos\"></a>Requerimentos</h3><p>Instalar o Hexo é bastante fácil. No entanto, você precisa ter algumas outras coisas instaladas primeiro:</p>\n<ul>\n<li><a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node.js</a></li>\n<li><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></li>\n</ul>\n<p>Se o seu computador já possui estes, parabéns! Basta instalar o Hexo com o npm:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>Caso contrário, siga as instruções a seguir para instalar todos os requisitos.</p>\n<blockquote class=\"note warn\"><strong class=\"note-title\">Para usuários Mac</strong><p>Você pode encontrar alguns problemas ao compilar. Instale o Xcode da App Store primeiro. Depois que o Xcode estiver instalado, abra o Xcode e vá para <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> para instalar as ferramentas de linhas de comandos.</p>\n</blockquote>\n<h3 id=\"Instalando-o-Git\"><a href=\"#Instalando-o-Git\" class=\"headerlink\" title=\"Instalando o Git\"></a>Instalando o Git</h3><ul>\n<li>Windows: Download e instalação do <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">Git</a>.</li>\n<li>Mac: Intalação com o <a href=\"http://mxcl.github.com/homebrew/\" target=\"_blank\" rel=\"noopener\">Homebrew</a>, <a href=\"http://www.macports.org/\" target=\"_blank\" rel=\"noopener\">MacPorts</a> ou <a href=\"http://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"noopener\">installer</a>.</li>\n<li>Linux (Ubuntu, Debian): <code>sudo apt-get install git-core</code></li>\n<li>Linux (Fedora, Red Hat, CentOS): <code>sudo yum install git-core</code></li>\n</ul>\n<h3 id=\"Instalando-o-Node-js\"><a href=\"#Instalando-o-Node-js\" class=\"headerlink\" title=\"Instalando o Node.js\"></a>Instalando o Node.js</h3><p>A melhor maneira de instalar o Node.js é com o <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">Node Version Manager</a>.<br>Felizmente, os criadores do nvm fornecem um script simples que instala automaticamente o nvm:</p>\n<p>cURL:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<p>Wget:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<p>Uma vez que o nvm esteja instalado, reinicie o terminal e execute o seguinte comando para instalar o Node.js:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ nvm install stable</span><br></pre></td></tr></table></figure>\n<p>Alternativamente, é possível baixar e executar <a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">o instalador do Node.js</a>.</p>\n<h3 id=\"Instalando-Hexo\"><a href=\"#Instalando-Hexo\" class=\"headerlink\" title=\"Instalando Hexo\"></a>Instalando Hexo</h3><p>Uma vez que todos os requisitos estão instalados, você pode instalar o Hexo com npm:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6980039koeold103rh3",
				"title": "Internacionalização (i18n)",
				"markdown": "Você pode usar a internacionalização para apresentar seu site em diferentes idiomas. O idioma padrão é definido modificando a configuração `language` em `_config.yml`. Você também pode definir vários idiomas e modificar a ordem dos idiomas padrão.\n\n``` yaml\nlanguage: zh-tw\n\nlanguage:\n- zh-tw\n- en\n```\n\n### Arquivo de Idiomas\n\nOs arquivos de idioma podem ser arquivos YAML ou JSON. Você deve inseri-los no diretório `languages` de `theme`. Há suporte para o [printf format](https://github.com/alexei/sprintf.js) nos arquivos de idioma.\n\n### Templates\n\nUse os helpers `__` ou `_p` nos templates para traduzir as strings. O primeiro é para uso normal e o segundo é para strings no plural. Por exemplo:\n\n``` yaml en.yml\nindex:\n  title: Home\n  add: Add\n  video:\n    zero: No videos\n    one: One video\n    other: %d videos\n```\n\n``` js\n<%= __('index.title') %>\n// Home\n\n<%= _p('index.video', 3) %>\n// 3 videos\n```\n\n### Caminhos\n\nVocê pode definir o idioma das páginas no front-matter ou modificar a configuração `i18n_dir` no arquivo `_config.yml` para habilitar a detecção automática pelo Hexo.\n\n``` yaml\ni18n_dir: :lang\n```\n\nO valor padrão da configuração `i18n_dir` é `:lang`, o que significa que o Hexo detectará o idioma dentro do primeiro segmento de URL. Por exemplo:\n\n``` plain\n/index.html => en\n/archives/index.html => en\n/zh-tw/index.html => zh-tw\n```\n\nA string só será servida como um idioma quando o arquivo de idioma existir. Então, `archives` em `/archives/index.html` (exemplo 2) não será servida como um idioma.\n",
				"html": "<p>Você pode usar a internacionalização para apresentar seu site em diferentes idiomas. O idioma padrão é definido modificando a configuração <code>language</code> em <code>_config.yml</code>. Você também pode definir vários idiomas e modificar a ordem dos idiomas padrão.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-tw</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">language:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">zh-tw</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Arquivo-de-Idiomas\"><a href=\"#Arquivo-de-Idiomas\" class=\"headerlink\" title=\"Arquivo de Idiomas\"></a>Arquivo de Idiomas</h3><p>Os arquivos de idioma podem ser arquivos YAML ou JSON. Você deve inseri-los no diretório <code>languages</code> de <code>theme</code>. Há suporte para o <a href=\"https://github.com/alexei/sprintf.js\" target=\"_blank\" rel=\"noopener\">printf format</a> nos arquivos de idioma.</p>\n<h3 id=\"Templates\"><a href=\"#Templates\" class=\"headerlink\" title=\"Templates\"></a>Templates</h3><p>Use os helpers <code>__</code> ou <code>_p</code> nos templates para traduzir as strings. O primeiro é para uso normal e o segundo é para strings no plural. Por exemplo:</p>\n<figure class=\"highlight yaml\"><figcaption><span>en.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">index:</span></span><br><span class=\"line\"><span class=\"attr\">  title:</span> <span class=\"string\">Home</span></span><br><span class=\"line\"><span class=\"attr\">  add:</span> <span class=\"string\">Add</span></span><br><span class=\"line\"><span class=\"attr\">  video:</span></span><br><span class=\"line\"><span class=\"attr\">    zero:</span> <span class=\"literal\">No</span> <span class=\"string\">videos</span></span><br><span class=\"line\"><span class=\"attr\">    one:</span> <span class=\"string\">One</span> <span class=\"string\">video</span></span><br><span class=\"line\"><span class=\"attr\">    other:</span> <span class=\"string\">%d</span> <span class=\"string\">videos</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%= __(<span class=\"string\">'index.title'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Home</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%= _p(<span class=\"string\">'index.video'</span>, <span class=\"number\">3</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 3 videos</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Caminhos\"><a href=\"#Caminhos\" class=\"headerlink\" title=\"Caminhos\"></a>Caminhos</h3><p>Você pode definir o idioma das páginas no front-matter ou modificar a configuração <code>i18n_dir</code> no arquivo <code>_config.yml</code> para habilitar a detecção automática pelo Hexo.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">i18n_dir:</span> <span class=\"string\">:lang</span></span><br></pre></td></tr></table></figure>\n<p>O valor padrão da configuração <code>i18n_dir</code> é <code>:lang</code>, o que significa que o Hexo detectará o idioma dentro do primeiro segmento de URL. Por exemplo:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">/index.html =&gt; en</span><br><span class=\"line\">/archives/index.html =&gt; en</span><br><span class=\"line\">/zh-tw/index.html =&gt; zh-tw</span><br></pre></td></tr></table></figure>\n<p>A string só será servida como um idioma quando o arquivo de idioma existir. Então, <code>archives</code> em <code>/archives/index.html</code> (exemplo 2) não será servida como um idioma.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y698003akoeorrrzkeuc",
				"title": "Links Permanentes (Permalinks)",
				"markdown": "\nVocê pode especificar os links permanentes (permalinks) para o seu site em `_config.yml` ou no [front-matter](front-matter.html) de cada postagem.\n\n### Variáveis\n\nAlém das seguintes variáveis, você pode usar quaisquer atributos no permalink.\n\nVariável | Descrição\n--- | ---\n`:year` | Ano da publicação da postagem (4 dígitos)\n`:month` | Mês da publicação da postagem (2 dígitos)\n`:i_month` | Mês da publicação da postagem (sem zero à esquerda)\n`:day` | Dia da publicação da postagem (2 dígitos)\n`:i_day` | Dia da publicação da postagem (sem zero à esquerda)\n`:title` | Nome do arquivo (sem sua extensão)\n`:post_title` | Título da postagem\n`:id` | ID da postagem\n`:category` | Categorias. Se a postagem não possuir uma categoria, será usado o valor de `default_category`.\n\nVocê pode definir o valor padrão de cada variável do permalink através da definição `permalink_defaults`:\n\n``` yaml\npermalink_defaults:\n  lang: en\n```\n\n### Exemplos\n\nDado uma postagem nomeada `hello-world.md` no diretório `source/_posts` com o seguinte conteúdo:\n\n``` yaml\ntitle: Hello World\ndate: 2013-07-14 17:01:34\ncategories:\n- foo\n- bar\n```\n\nDefinição | Resultado\n--- | ---\n`:year/:month/:day/:title/` | 2013/07/14/hello-world\n`:year-:month-:day-:title.html` | 2013-07-14-hello-world.html\n`:category/:title` | foo/bar/hello-world\n\n### Suporte Multi-idioma\n\nPara criar um site multi-idioma, você pode modificar as definições de `new_post_name` e `permalink` da seguinte forma:\n\n``` yaml\nnew_post_name: :lang/:title.md\npermalink: :lang/:title/\n```\n\nQuando você criar uma nova postagem, esta será salva em:\n\n``` bash\n$ hexo new \"Hello World\" --lang tw\n# => source/_posts/tw/Hello-World.md\n```\n\ne a URL será:\n\n``` plain\nhttp://localhost:4000/tw/hello-world/\n```\n",
				"html": "<p>Você pode especificar os links permanentes (permalinks) para o seu site em <code>_config.yml</code> ou no <a href=\"front-matter.html\">front-matter</a> de cada postagem.</p>\n<h3 id=\"Variaveis\"><a href=\"#Variaveis\" class=\"headerlink\" title=\"Variáveis\"></a>Variáveis</h3><p>Além das seguintes variáveis, você pode usar quaisquer atributos no permalink.</p>\n<table>\n<thead>\n<tr>\n<th>Variável</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year</code></td>\n<td>Ano da publicação da postagem (4 dígitos)</td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>Mês da publicação da postagem (2 dígitos)</td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>Mês da publicação da postagem (sem zero à esquerda)</td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>Dia da publicação da postagem (2 dígitos)</td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>Dia da publicação da postagem (sem zero à esquerda)</td>\n</tr>\n<tr>\n<td><code>:title</code></td>\n<td>Nome do arquivo (sem sua extensão)</td>\n</tr>\n<tr>\n<td><code>:post_title</code></td>\n<td>Título da postagem</td>\n</tr>\n<tr>\n<td><code>:id</code></td>\n<td>ID da postagem</td>\n</tr>\n<tr>\n<td><code>:category</code></td>\n<td>Categorias. Se a postagem não possuir uma categoria, será usado o valor de <code>default_category</code>.</td>\n</tr>\n</tbody>\n</table>\n<p>Você pode definir o valor padrão de cada variável do permalink através da definição <code>permalink_defaults</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">permalink_defaults:</span></span><br><span class=\"line\"><span class=\"attr\">  lang:</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Exemplos\"><a href=\"#Exemplos\" class=\"headerlink\" title=\"Exemplos\"></a>Exemplos</h3><p>Dado uma postagem nomeada <code>hello-world.md</code> no diretório <code>source/_posts</code> com o seguinte conteúdo:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"bullet\">-07</span><span class=\"bullet\">-14</span> <span class=\"number\">17</span><span class=\"string\">:01:34</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">foo</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">bar</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Definição</th>\n<th>Resultado</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year/:month/:day/:title/</code></td>\n<td>2013/07/14/hello-world</td>\n</tr>\n<tr>\n<td><code>:year-:month-:day-:title.html</code></td>\n<td>2013-07-14-hello-world.html</td>\n</tr>\n<tr>\n<td><code>:category/:title</code></td>\n<td>foo/bar/hello-world</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Suporte-Multi-idioma\"><a href=\"#Suporte-Multi-idioma\" class=\"headerlink\" title=\"Suporte Multi-idioma\"></a>Suporte Multi-idioma</h3><p>Para criar um site multi-idioma, você pode modificar as definições de <code>new_post_name</code> e <code>permalink</code> da seguinte forma:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:lang/:title.md</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:lang/:title/</span></span><br></pre></td></tr></table></figure>\n<p>Quando você criar uma nova postagem, esta será salva em:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"Hello World\"</span> --lang tw</span><br><span class=\"line\"><span class=\"comment\"># =&gt; source/_posts/tw/Hello-World.md</span></span><br></pre></td></tr></table></figure>\n<p>e a URL será:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://localhost:4000/tw/hello-world/</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y698003bkoeo1aw7gizk",
				"title": "Migração",
				"markdown": "## RSS\n\nPrimeiramente, instale o plugin `hexo-migrator-rss`.\n\n``` bash\n$ npm install hexo-migrator-rss --save\n```\n\nUma vez que o plugin esteja instalado, execute o seguinte comando para migrar todas as postagens do RSS. A opção `source` pode ser um caminho de arquivo ou uma URL.\n\n``` bash\n$ hexo migrate rss <source>\n```\n\n## Jekyll\n\nMova todos os arquivos no diretório `_posts` do Jekyll para o diretório `source/_posts`.\n\nModifique a configuração `new_post_name` no arquivo `_config.yml`:\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## Octopress\n\nMova todos os arquivos do diretório `source/_posts` do Octopress para o diretório `source/_posts`.\n\nModifique a configuração `new_post_name` no arquivo `_config.yml`:\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## WordPress\n\nPrimeiro, instale o plugin `hexo-migrator-wordpress`.\n\n``` bash\n$ npm install hexo-migrator-wordpress --save\n```\n\nExporte o seu site WordPress indo para \"Tools\" → \"Export\" → \"WordPress\" (ou passos equivalentes para sites em WordPress configurados em um idioma diferente do inglês) no painel do WordPress (veja a [página de suporte do WordPress](http://en.support.wordpress.com/export/) para mais detalhes).\n\nAgora execute:\n\n``` bash\n$ hexo migrate wordpress <source>\n```\n\nOnde `source` é o caminho do arquivo ou URL para o arquivo de exportação do WordPress.\n\n## Joomla\n\nPrimeiro, instale o plugin `hexo-migrator-joomla`.\n\n```bash\n$ npm install hexo-migrator-joomla --save\n```\n\nExporte seus artigos no Joomla usando o componente [J2XML](http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D).\n\nAgora execute:\n\n```bash\n$ hexo migrate joomla <source>\n```\n\nOnde `source` é o caminho do arquivo ou URL para o arquivo de exportação do Joomla.\n",
				"html": "<h2 id=\"RSS\"><a href=\"#RSS\" class=\"headerlink\" title=\"RSS\"></a>RSS</h2><p>Primeiramente, instale o plugin <code>hexo-migrator-rss</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-rss --save</span><br></pre></td></tr></table></figure>\n<p>Uma vez que o plugin esteja instalado, execute o seguinte comando para migrar todas as postagens do RSS. A opção <code>source</code> pode ser um caminho de arquivo ou uma URL.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate rss &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Jekyll\"><a href=\"#Jekyll\" class=\"headerlink\" title=\"Jekyll\"></a>Jekyll</h2><p>Mova todos os arquivos no diretório <code>_posts</code> do Jekyll para o diretório <code>source/_posts</code>.</p>\n<p>Modifique a configuração <code>new_post_name</code> no arquivo <code>_config.yml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Octopress\"><a href=\"#Octopress\" class=\"headerlink\" title=\"Octopress\"></a>Octopress</h2><p>Mova todos os arquivos do diretório <code>source/_posts</code> do Octopress para o diretório <code>source/_posts</code>.</p>\n<p>Modifique a configuração <code>new_post_name</code> no arquivo <code>_config.yml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"WordPress\"><a href=\"#WordPress\" class=\"headerlink\" title=\"WordPress\"></a>WordPress</h2><p>Primeiro, instale o plugin <code>hexo-migrator-wordpress</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-wordpress --save</span><br></pre></td></tr></table></figure>\n<p>Exporte o seu site WordPress indo para “Tools” → “Export” → “WordPress” (ou passos equivalentes para sites em WordPress configurados em um idioma diferente do inglês) no painel do WordPress (veja a <a href=\"http://en.support.wordpress.com/export/\" target=\"_blank\" rel=\"noopener\">página de suporte do WordPress</a> para mais detalhes).</p>\n<p>Agora execute:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate wordpress &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>Onde <code>source</code> é o caminho do arquivo ou URL para o arquivo de exportação do WordPress.</p>\n<h2 id=\"Joomla\"><a href=\"#Joomla\" class=\"headerlink\" title=\"Joomla\"></a>Joomla</h2><p>Primeiro, instale o plugin <code>hexo-migrator-joomla</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-joomla --save</span><br></pre></td></tr></table></figure>\n<p>Exporte seus artigos no Joomla usando o componente <a href=\"http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D\" target=\"_blank\" rel=\"noopener\">J2XML</a>.</p>\n<p>Agora execute:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate joomla &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>Onde <code>source</code> é o caminho do arquivo ou URL para o arquivo de exportação do Joomla.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y699003ckoeo4kr2tif5",
				"title": "Servidor",
				"markdown": "\n## [hexo-server]\n\nCom o lançamento do Hexo 3, o servidor foi separado do módulo principal. Para começar a usar o servidor, primeiro você deve instalar o pacote [hexo-server].\n\n``` bash\n$ npm install hexo-server --save\n```\n\nUma vez instalado o servidor, execute o comando a seguir para iniciar o servidor. Seu site será acessível em `http://localhost:4000` por padrão. Quando o servidor estiver sendo executado, o Hexo assistirá por alterações nos arquivos do projeto e atualizará automaticamente a página, por isso não é necessário reiniciar manualmente o servidor.\n\n``` bash\n$ hexo server\n```\n\nSe você quiser mudar a porta ou se estiver encontrando erros `EADDRINUSE`, use a opção `-p` para configurar uma porta diferente.\n\n``` bash\n$ hexo server -p 5000\n```\n\n### Modo Estático\n\nNo modo estático, somente arquivos do diretório `public` serão servidos e nenhum arquivo será assistido por mudanças. Você deve executar `hexo generate` antes de iniciar o servidor. Em geral, é desta forma que o site é servido em produção.\n\n``` bash\n$ hexo server -s\n```\n\n### Ip Customizado\n\nO Hexo executa o servidor em `0.0.0.0` por padrão. Você pode substituir a configuração de IP padrão.\n\n``` bash\n$ hexo server -i 192.168.1.1\n```\n\n## Pow\n\n[Pow] é um servidor Rack sem configuração para Mac.\n\n### Instalaçãos\n\n``` bash\n$ curl get.pow.cx | sh\n```\n\n### Configuração\n\nLink simbólico no diretório `~/.pow`\n\n``` bash\n$ cd ~/.pow\n$ ln -s /path/to/myapp\n```\n\nSeu site estará funcionando em `http://myapp.dev`. A URL é baseada no nome do link simbólico.\n\n[hexo-server]: https://github.com/hexojs/hexo-server\n[Pow]: http://pow.cx/\n",
				"html": "<h2 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo-server\"></a><a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a></h2><p>Com o lançamento do Hexo 3, o servidor foi separado do módulo principal. Para começar a usar o servidor, primeiro você deve instalar o pacote <a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure>\n<p>Uma vez instalado o servidor, execute o comando a seguir para iniciar o servidor. Seu site será acessível em <code>http://localhost:4000</code> por padrão. Quando o servidor estiver sendo executado, o Hexo assistirá por alterações nos arquivos do projeto e atualizará automaticamente a página, por isso não é necessário reiniciar manualmente o servidor.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>Se você quiser mudar a porta ou se estiver encontrando erros <code>EADDRINUSE</code>, use a opção <code>-p</code> para configurar uma porta diferente.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h3 id=\"Modo-Estatico\"><a href=\"#Modo-Estatico\" class=\"headerlink\" title=\"Modo Estático\"></a>Modo Estático</h3><p>No modo estático, somente arquivos do diretório <code>public</code> serão servidos e nenhum arquivo será assistido por mudanças. Você deve executar <code>hexo generate</code> antes de iniciar o servidor. Em geral, é desta forma que o site é servido em produção.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -s</span><br></pre></td></tr></table></figure>\n<h3 id=\"Ip-Customizado\"><a href=\"#Ip-Customizado\" class=\"headerlink\" title=\"Ip Customizado\"></a>Ip Customizado</h3><p>O Hexo executa o servidor em <code>0.0.0.0</code> por padrão. Você pode substituir a configuração de IP padrão.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -i 192.168.1.1</span><br></pre></td></tr></table></figure>\n<h2 id=\"Pow\"><a href=\"#Pow\" class=\"headerlink\" title=\"Pow\"></a>Pow</h2><p><a href=\"http://pow.cx/\" target=\"_blank\" rel=\"noopener\">Pow</a> é um servidor Rack sem configuração para Mac.</p>\n<h3 id=\"Instalacaos\"><a href=\"#Instalacaos\" class=\"headerlink\" title=\"Instalaçãos\"></a>Instalaçãos</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl get.pow.cx | sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"Configuracao\"><a href=\"#Configuracao\" class=\"headerlink\" title=\"Configuração\"></a>Configuração</h3><p>Link simbólico no diretório <code>~/.pow</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/.pow</span><br><span class=\"line\">$ ln -s /path/to/myapp</span><br></pre></td></tr></table></figure>\n<p>Seu site estará funcionando em <code>http://myapp.dev</code>. A URL é baseada no nome do link simbólico.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y699003dkoeolvza123c",
				"title": "Plugins",
				"markdown": "O Hexo possui um poderoso sistema de plugins, o que facilita a extensão das funcionalidades sem modificar o código-fonte do módulo central. Existem dois tipos de plugins no Hexo:\n\n### Script\n\nSe o seu plugin for relativamente simples, recomenda-se usar um script. Tudo o que você precisa fazer é colocar seus arquivos JavaScript no diretório `scripts` e o Hexo irá carregá-los durante a inicialização.\n\n### Plugin\n\nSe seu código é complicado ou se você deseja publicá-lo no registro do NPM, recomendamos usar um plugin. Primeiro, crie um diretório dentro do diretório `node_modules`. O nome desse diretório deve começar com `hexo-` ou o Hexo irá ignorá-lo.\n\nSeu novo diretório deve conter pelo menos dois arquivos: um contendo o código JavaScript e um arquivo `package.json` que descreve a finalidade do plugin e define suas dependências.\n\n``` plain\n.\n├── index.js\n└── package.json\n```\n\nNo mínimo, você deve definir as entradas `name`, `version` e `main` no `package.json`. Por exemplo:\n\n``` json package.json\n{\n  \"name\": \"hexo-my-plugin\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index\"\n}\n```\n\nVocê também precisará listar seu plugin como uma dependência no arquivo `package.json` da raiz de sua instância do Hexo para que o Hexo a detecte e carregue.\n\n### Ferramentas\n\nVocê pode usar as ferramentas oficiais fornecidas pelo Hexo para acelerar o desenvolvimento:\n\n- [hexo-fs]: Entrada/Saída (I/O) de arquivo\n- [hexo-util]: Utilitários\n- [hexo-i18n]: Internacionalização (i18n)\n- [hexo-pagination]: Gerar dados de paginação\n\n### Publicando\n\nQuando o seu plug-in estiver pronto, você pode considerar publicá-lo na [lista de plugins](/plugins) para que outras pessoas possam conhecê-lo e usá-lo. Publicar seus próprios plugins é bastante parecido com [atualizar a documentação](contributing.html#Updating_Documentation).\n\n1. Fork [hexojs/site]\n2. Clone o repositório no seu computador e instale as dependências.\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. Edite `source/_data/plugins.yml` e adicione seu plugin. Por exemplo:\n\n    {% code %}\n    - name: hexo-server\n      description: Server module for Hexo.\n      link: https://github.com/hexojs/hexo-server\n      tags:\n        - official\n        - server\n        - console\n    {% endcode %}\n\n4. Push para a branch.\n5. Crie um pull request e descreva as modificações.\n\n[hexo-fs]: https://github.com/hexojs/hexo-fs\n[hexo-util]: https://github.com/hexojs/hexo-util\n[hexo-i18n]: https://github.com/hexojs/hexo-i18n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<p>O Hexo possui um poderoso sistema de plugins, o que facilita a extensão das funcionalidades sem modificar o código-fonte do módulo central. Existem dois tipos de plugins no Hexo:</p>\n<h3 id=\"Script\"><a href=\"#Script\" class=\"headerlink\" title=\"Script\"></a>Script</h3><p>Se o seu plugin for relativamente simples, recomenda-se usar um script. Tudo o que você precisa fazer é colocar seus arquivos JavaScript no diretório <code>scripts</code> e o Hexo irá carregá-los durante a inicialização.</p>\n<h3 id=\"Plugin\"><a href=\"#Plugin\" class=\"headerlink\" title=\"Plugin\"></a>Plugin</h3><p>Se seu código é complicado ou se você deseja publicá-lo no registro do NPM, recomendamos usar um plugin. Primeiro, crie um diretório dentro do diretório <code>node_modules</code>. O nome desse diretório deve começar com <code>hexo-</code> ou o Hexo irá ignorá-lo.</p>\n<p>Seu novo diretório deve conter pelo menos dois arquivos: um contendo o código JavaScript e um arquivo <code>package.json</code> que descreve a finalidade do plugin e define suas dependências.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── index.js</span><br><span class=\"line\">└── package.json</span><br></pre></td></tr></table></figure>\n<p>No mínimo, você deve definir as entradas <code>name</code>, <code>version</code> e <code>main</code> no <code>package.json</code>. Por exemplo:</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-my-plugin\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Você também precisará listar seu plugin como uma dependência no arquivo <code>package.json</code> da raiz de sua instância do Hexo para que o Hexo a detecte e carregue.</p>\n<h3 id=\"Ferramentas\"><a href=\"#Ferramentas\" class=\"headerlink\" title=\"Ferramentas\"></a>Ferramentas</h3><p>Você pode usar as ferramentas oficiais fornecidas pelo Hexo para acelerar o desenvolvimento:</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-fs\" target=\"_blank\" rel=\"noopener\">hexo-fs</a>: Entrada/Saída (I/O) de arquivo</li>\n<li><a href=\"https://github.com/hexojs/hexo-util\" target=\"_blank\" rel=\"noopener\">hexo-util</a>: Utilitários</li>\n<li><a href=\"https://github.com/hexojs/hexo-i18n\" target=\"_blank\" rel=\"noopener\">hexo-i18n</a>: Internacionalização (i18n)</li>\n<li><a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a>: Gerar dados de paginação</li>\n</ul>\n<h3 id=\"Publicando\"><a href=\"#Publicando\" class=\"headerlink\" title=\"Publicando\"></a>Publicando</h3><p>Quando o seu plug-in estiver pronto, você pode considerar publicá-lo na <a href=\"/plugins\">lista de plugins</a> para que outras pessoas possam conhecê-lo e usá-lo. Publicar seus próprios plugins é bastante parecido com <a href=\"contributing.html#Updating_Documentation\">atualizar a documentação</a>.</p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>Clone o repositório no seu computador e instale as dependências.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Edite <code>source/_data/plugins.yml</code> e adicione seu plugin. Por exemplo:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">- name: hexo-server</span><br><span class=\"line\">  description: Server module for Hexo.</span><br><span class=\"line\">  link: https://github.com/hexojs/hexo-server</span><br><span class=\"line\">  tags:</span><br><span class=\"line\">    - official</span><br><span class=\"line\">    - server</span><br><span class=\"line\">    - console</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Push para a branch.</p>\n</li>\n<li>Crie um pull request e descreva as modificações.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69a003ekoeolwk5hn0k",
				"title": "Setup",
				"markdown": "\n{% youtube 0m2HnATkHOk %}\n\nUma vez instalado o Hexo, execute os seguintes comandos para inicializar um site com Hexo em um diretório `<folder>`.\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\nApós inicializado, o diretório do seu projeto ficará com a seguinte estrutura:\n\n``` plain\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\nArquivo de [configuração](configuration.html) do site. Você pode definir a maioria das configurações aqui.\n\n### package.json\n\nArquivo de dados da aplicação. Os renderizadores [Markdown](http://daringfireball.net/projects/markdown/), [EJS](http://embeddedjs.com/) e [Stylus](http://learnboost.github.io/stylus/) são instalados por padrão. Se desejar, você pode desinstalá-los posteriormente.\n\n``` json package.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### scaffolds\n\nDiretório de [Scaffold](writing.html#Scaffolds). Quando você cria uma nova postagem, o Hexo cria um arquivo baseado no scaffold.\n\n### source\n\nDiretório de conteúdo. É aqui que você coloca o conteúdo do seu site. O Hexo ignora arquivos ocultos e arquivos ou diretórios cujos nomes são prefixados com `_` (sublinhado) - exceto o diretório `_posts`. Os arquivos renderizáveis (arquivos Markdown e HTML por exemplo) serão processados e colocados no diretório `public`, enquanto outros arquivos serão simplesmente copiados.\n\n### themes\n\nDiretório de [Temas](themes.html). O Hexo gera um site estático combinando o conteúdo do site com o tema.\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/0m2HnATkHOk\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>Uma vez instalado o Hexo, execute os seguintes comandos para inicializar um site com Hexo em um diretório <code>&lt;folder&gt;</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>Após inicializado, o diretório do seu projeto ficará com a seguinte estrutura:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Arquivo de <a href=\"configuration.html\">configuração</a> do site. Você pode definir a maioria das configurações aqui.</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>Arquivo de dados da aplicação. Os renderizadores <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a>, <a href=\"http://embeddedjs.com/\" target=\"_blank\" rel=\"noopener\">EJS</a> e <a href=\"http://learnboost.github.io/stylus/\" target=\"_blank\" rel=\"noopener\">Stylus</a> são instalados por padrão. Se desejar, você pode desinstalá-los posteriormente.</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-site\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"private\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"hexo\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-archive\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-category\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-index\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-tag\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-ejs\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-stylus\"</span>: <span class=\"string\">\"^0.2.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-marked\"</span>: <span class=\"string\">\"^0.2.4\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-server\"</span>: <span class=\"string\">\"^0.1.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p>Diretório de <a href=\"writing.html#Scaffolds\">Scaffold</a>. Quando você cria uma nova postagem, o Hexo cria um arquivo baseado no scaffold.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Diretório de conteúdo. É aqui que você coloca o conteúdo do seu site. O Hexo ignora arquivos ocultos e arquivos ou diretórios cujos nomes são prefixados com <code>_</code> (sublinhado) - exceto o diretório <code>_posts</code>. Os arquivos renderizáveis (arquivos Markdown e HTML por exemplo) serão processados e colocados no diretório <code>public</code>, enquanto outros arquivos serão simplesmente copiados.</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p>Diretório de <a href=\"themes.html\">Temas</a>. O Hexo gera um site estático combinando o conteúdo do site com o tema.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69a003fkoeo4ds3e0nb",
				"title": "Tag Plugins",
				"markdown": "\nAs Tag Plugins são diferentes das tags de postagem. Elas são portadas pela Octopress e fornecem uma maneira útil para você adicionar rapidamente conteúdo específico às suas postagens.\n\n{% youtube I07XMi7MHd4 %}\n\n## Bloco de Citação\n\nPerfeito para adicionar citações à sua postagem, com informações opcionais de autor, fontes e título.\n\n**Alias:** quote (citação)\n\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\nconteúdo\n{% endblockquote %}\n```\n\n### Exemplos\n\n**Sem argumentos. Bloco de citação simples.**\n\n```\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n```\n\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n\n**Citação de um livro**\n\n```\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n```\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n**Citação de um twitter**\n\n```\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n```\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n**Citação de um artigo da web**\n\n```\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n```\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n## Bloco de Código\n\nFuncionalidade útil para adicionar trechos de código à sua postagem.\n\n**Alias:** code (Código-fonte)\n\n```\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n\n### Exemplos\n\n**Um bloco de código simples**\n\n```\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**Em uma linguagem específica**\n\n```\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n```\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n\n**Adicionando uma legenda ao código**\n\n```\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n```\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n\n**Adicionando uma legenda e uma URL**\n\n```\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n```\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n## Bloco de Código com Backtick\n\nIsso é idêntico ao usar um bloco de código, mas usa três backticks (acentos grave) para delimitar o bloco.\n\n{% raw %}\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n{% endraw %}\n\n## Pull Quote\n\nPara adicionar pull quotes (citações destacadas) em sua postagem:\n\n```\n{% pullquote [class] %}\ncontent\n{% endpullquote %}\n```\n\n## jsFiddle\n\nPara incorporar um snippet (trecho de código) do jsFiddle:\n\n```\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\n\n## Gist\n\nPara incorporar um snippet (trecho de código) do Gist:\n\n```\n{% gist gist_id [filename] %}\n```\n\n## iframe\n\nPara incorporar um iframe:\n\n```\n{% iframe url [width] [height] %}\n```\n\n## Imagem\n\nInsere uma imagem com tamanho especificado.\n\n```\n{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}\n```\n\n## Link\n\nInsere um link com o atributo `target=\"_blank\"`.\n\n```\n{% link text url [external] [title] %}\n```\n\n## Incluir Código\n\nInsere trechos de código no diretório `source/downloads/code`.\n\n```\n{% include_code [title] [lang:language] path/to/file %}\n```\n\n## YouTube\n\nInsere um vídeo do YouTube.\n\n```\n{% youtube video_id %}\n```\n\n## Vimeo\n\nInsere um vídeo do Vimeo.\n\n```\n{% vimeo video_id %}\n```\n\n## Incluir Postagens\n\nIncluir links para outras postagens.\n\n```\n{% post_path slug %}\n{% post_link slug [title] %}\n```\n\n## Incluir Assets\n\nIncluir assets de postagem.\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n## Raw\n\nSe determinado conteúdo estiver causando problemas de processamento em suas postagens, envolva-o com a tag `raw` para evitar erros de renderização.\n\n```\n{% raw %}\ncontent\n{% endraw %}\n```\n\n## Trecho de Postagem\n\nUse o texto colocado antes da marcação `<!-- more -->` como um trecho da publicação.\n\n**Exemplo:**\n\n```\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n<!-- more -->\nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n```\n",
				"html": "<p>As Tag Plugins são diferentes das tags de postagem. Elas são portadas pela Octopress e fornecem uma maneira útil para você adicionar rapidamente conteúdo específico às suas postagens.</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/I07XMi7MHd4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h2 id=\"Bloco-de-Citacao\"><a href=\"#Bloco-de-Citacao\" class=\"headerlink\" title=\"Bloco de Citação\"></a>Bloco de Citação</h2><p>Perfeito para adicionar citações à sua postagem, com informações opcionais de autor, fontes e título.</p>\n<p><strong>Alias:</strong> quote (citação)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class=\"line\">conteúdo</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Exemplos\"><a href=\"#Exemplos\" class=\"headerlink\" title=\"Exemplos\"></a>Exemplos</h3><p><strong>Sem argumentos. Bloco de citação simples.</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote %&#125;</span><br><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>\n</blockquote>\n<p><strong>Citação de um livro</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class=\"line\">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n<p><strong>Citação de um twitter</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;</span><br><span class=\"line\">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\" target=\"_blank\" rel=\"noopener\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\" target=\"_blank\" rel=\"noopener\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<p><strong>Citação de um artigo da web</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</span><br><span class=\"line\">Every interaction is both precious and an opportunity to delight.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\" target=\"_blank\" rel=\"noopener\">Welcome to Island Marketing</a></cite></footer></blockquote>\n<h2 id=\"Bloco-de-Codigo\"><a href=\"#Bloco-de-Codigo\" class=\"headerlink\" title=\"Bloco de Código\"></a>Bloco de Código</h2><p>Funcionalidade útil para adicionar trechos de código à sua postagem.</p>\n<p><strong>Alias:</strong> code (Código-fonte)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class=\"line\">code snippet</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Exemplos-1\"><a href=\"#Exemplos-1\" class=\"headerlink\" title=\"Exemplos\"></a>Exemplos</h3><p><strong>Um bloco de código simples</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock %&#125;</span><br><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br></pre></td></tr></table></figure>\n<p><strong>Em uma linguagem específica</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock lang:objc %&#125;</span><br><span class=\"line\">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"code\"><pre><span class=\"line\">[rectangle setX: <span class=\"number\">10</span> y: <span class=\"number\">10</span> width: <span class=\"number\">20</span> height: <span class=\"number\">20</span>];</span><br></pre></td></tr></table></figure>\n<p><strong>Adicionando uma legenda ao código</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock Array.map %&#125;</span><br><span class=\"line\">array.map(callback[, thisArg])</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>\n<p><strong>Adicionando uma legenda e uma URL</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock _.compact http://underscorejs.org/#compact Underscore.js %&#125;</span><br><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>_.compact</span><a href=\"http://underscorejs.org/#compact\" target=\"_blank\" rel=\"noopener\">Underscore.js</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>\n<h2 id=\"Bloco-de-Codigo-com-Backtick\"><a href=\"#Bloco-de-Codigo-com-Backtick\" class=\"headerlink\" title=\"Bloco de Código com Backtick\"></a>Bloco de Código com Backtick</h2><p>Isso é idêntico ao usar um bloco de código, mas usa três backticks (acentos grave) para delimitar o bloco.</p>\n\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n\n<h2 id=\"Pull-Quote\"><a href=\"#Pull-Quote\" class=\"headerlink\" title=\"Pull Quote\"></a>Pull Quote</h2><p>Para adicionar pull quotes (citações destacadas) em sua postagem:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% pullquote [class] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"jsFiddle\"><a href=\"#jsFiddle\" class=\"headerlink\" title=\"jsFiddle\"></a>jsFiddle</h2><p>Para incorporar um snippet (trecho de código) do jsFiddle:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h2><p>Para incorporar um snippet (trecho de código) do Gist:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"iframe\"><a href=\"#iframe\" class=\"headerlink\" title=\"iframe\"></a>iframe</h2><p>Para incorporar um iframe:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Imagem\"><a href=\"#Imagem\" class=\"headerlink\" title=\"Imagem\"></a>Imagem</h2><p>Insere uma imagem com tamanho especificado.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><p>Insere um link com o atributo <code>target=&quot;_blank&quot;</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Incluir-Codigo\"><a href=\"#Incluir-Codigo\" class=\"headerlink\" title=\"Incluir Código\"></a>Incluir Código</h2><p>Insere trechos de código no diretório <code>source/downloads/code</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% include_code [title] [lang:language] path/to/file %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"YouTube\"><a href=\"#YouTube\" class=\"headerlink\" title=\"YouTube\"></a>YouTube</h2><p>Insere um vídeo do YouTube.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% youtube video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Vimeo\"><a href=\"#Vimeo\" class=\"headerlink\" title=\"Vimeo\"></a>Vimeo</h2><p>Insere um vídeo do Vimeo.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% vimeo video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Incluir-Postagens\"><a href=\"#Incluir-Postagens\" class=\"headerlink\" title=\"Incluir Postagens\"></a>Incluir Postagens</h2><p>Incluir links para outras postagens.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% post_path slug %&#125;</span><br><span class=\"line\">&#123;% post_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Incluir-Assets\"><a href=\"#Incluir-Assets\" class=\"headerlink\" title=\"Incluir Assets\"></a>Incluir Assets</h2><p>Incluir assets de postagem.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Raw\"><a href=\"#Raw\" class=\"headerlink\" title=\"Raw\"></a>Raw</h2><p>Se determinado conteúdo estiver causando problemas de processamento em suas postagens, envolva-o com a tag <code>raw</code> para evitar erros de renderização.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Trecho-de-Postagem\"><a href=\"#Trecho-de-Postagem\" class=\"headerlink\" title=\"Trecho de Postagem\"></a>Trecho de Postagem</h2><p>Use o texto colocado antes da marcação <code>&lt;!-- more --&gt;</code> como um trecho da publicação.</p>\n<p><strong>Exemplo:</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class=\"line\">&lt;!-- more --&gt;</span><br><span class=\"line\">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69b003gkoeoudiuofgt",
				"title": "Temas",
				"markdown": "\n{% youtube 5ROIU_9dYe4 %}\n\nÉ fácil construir um tema para o Hexo - você só precisa criar um no diretório. Para começar a usar o seu tema, modifique a configuração `theme` do arquivo `_config.yml` do seu site. Um tema deve ter a seguinte estrutura:\n\n``` plain\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n### _config.yml\n\nArquivo de configuração do tema. Modificações neste arquivo não requerem uma reinicialização do servidor.\n\n### languages\n\nDiretório de idiomas. Veja [internacionalização (i18n)](internationalization.html) para obter mais informações.\n\n### layout\n\nDiretório de layouts. Este diretório contém os arquivos de template do tema, que definem a aparência do seu site. O Hexo fornece o mecanismo de template [Swig] por padrão, mas você pode instalar plugins adicionais para suportar mecanismos alternativos, como [EJS], [Haml], [Jade] ou [Pug]. O Hexo escolhe o mecanismo de template com base na extensão do arquivo deste. Por exemplo:\n\n``` plain\nlayout.ejs   - uses EJS\nlayout.swig  - uses Swig\n```\n\nVeja [templates](templates.html) para obter mais informações.\n\n### scripts\n\nDiretório de scripts. O Hexo carregará automaticamente todos os arquivos JavaScript deste diretório durante a inicialização. Para mais informações, veja [plugins](plugins.html).\n\n### source\n\nDiretório com os fontes do tema. Os assets (arquivos CSS e JavaScript por exemplo) ficam aqui. O Hexo ignora arquivos ocultos e arquivos ou diretórios com prefixo `_` (sublinhado).\n\nO Hexo processará e salvará todos os arquivos renderizáveis no diretório `public`. Os arquivos não renderizáveis serão copiados diretamente para o diretório `public`.\n\n### Publicando\n\nQuando você terminar de criar seu tema, você pode publicá-lo na [lista de temas](/themes). Antes de fazer isso, você deve executar o [teste da unidade do tema](https://github.com/hexojs/hexo-theme-unit-test) para ter certeza de que tudo está funcionando corretamente. As etapas para publicar um tema são muito semelhantes às de [atualizar a documentação](contributing.html#Updating_Documentation).\n\n1. Faça um fork [hexojs/site]\n2. Clone o repositório no seu computador e instale dependências.\n\n    ```shell\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    ```\n\n3. Edite o arquivo `source/_data/themes.yml` e adicione seu tema. Por exemplo:\n\n    ```yaml\n    - name: landscape\n      description: A brand new default theme for Hexo.\n      link: https://github.com/hexojs/hexo-theme-landscape\n      preview: http://hexo.io/hexo-theme-landscape\n      tags:\n        - official\n        - responsive\n        - widget\n        - two_column\n        - one_column\n    ```\n\n4. Adicione um print de tela (com o mesmo nome do tema) no diretório `source/themes/screenshots`. Deve ser um arquivo PNG com resolução de 800x500 pixels.\n5. Faça um push para o seu repositório remoto.\n6. Crie um pull request e descreva as mudanças.\n\n[EJS]: https://github.com/hexojs/hexo-renderer-ejs\n[Swig]: https://github.com/paularmstrong/swig\n[Haml]: https://github.com/hexojs/hexo-renderer-haml\n[Jade]: https://github.com/hexojs/hexo-renderer-jade\n[Pug]: https://github.com/maxknee/hexo-render-pug\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/5ROIU_9dYe4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>É fácil construir um tema para o Hexo - você só precisa criar um no diretório. Para começar a usar o seu tema, modifique a configuração <code>theme</code> do arquivo <code>_config.yml</code> do seu site. Um tema deve ter a seguinte estrutura:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── languages</span><br><span class=\"line\">├── layout</span><br><span class=\"line\">├── scripts</span><br><span class=\"line\">└── source</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Arquivo de configuração do tema. Modificações neste arquivo não requerem uma reinicialização do servidor.</p>\n<h3 id=\"languages\"><a href=\"#languages\" class=\"headerlink\" title=\"languages\"></a>languages</h3><p>Diretório de idiomas. Veja <a href=\"internationalization.html\">internacionalização (i18n)</a> para obter mais informações.</p>\n<h3 id=\"layout\"><a href=\"#layout\" class=\"headerlink\" title=\"layout\"></a>layout</h3><p>Diretório de layouts. Este diretório contém os arquivos de template do tema, que definem a aparência do seu site. O Hexo fornece o mecanismo de template <a href=\"https://github.com/paularmstrong/swig\" target=\"_blank\" rel=\"noopener\">Swig</a> por padrão, mas você pode instalar plugins adicionais para suportar mecanismos alternativos, como <a href=\"https://github.com/hexojs/hexo-renderer-ejs\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"https://github.com/hexojs/hexo-renderer-haml\" target=\"_blank\" rel=\"noopener\">Haml</a>, <a href=\"https://github.com/hexojs/hexo-renderer-jade\" target=\"_blank\" rel=\"noopener\">Jade</a> ou <a href=\"https://github.com/maxknee/hexo-render-pug\" target=\"_blank\" rel=\"noopener\">Pug</a>. O Hexo escolhe o mecanismo de template com base na extensão do arquivo deste. Por exemplo:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">layout.ejs   - uses EJS</span><br><span class=\"line\">layout.swig  - uses Swig</span><br></pre></td></tr></table></figure>\n<p>Veja <a href=\"templates.html\">templates</a> para obter mais informações.</p>\n<h3 id=\"scripts\"><a href=\"#scripts\" class=\"headerlink\" title=\"scripts\"></a>scripts</h3><p>Diretório de scripts. O Hexo carregará automaticamente todos os arquivos JavaScript deste diretório durante a inicialização. Para mais informações, veja <a href=\"plugins.html\">plugins</a>.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Diretório com os fontes do tema. Os assets (arquivos CSS e JavaScript por exemplo) ficam aqui. O Hexo ignora arquivos ocultos e arquivos ou diretórios com prefixo <code>_</code> (sublinhado).</p>\n<p>O Hexo processará e salvará todos os arquivos renderizáveis no diretório <code>public</code>. Os arquivos não renderizáveis serão copiados diretamente para o diretório <code>public</code>.</p>\n<h3 id=\"Publicando\"><a href=\"#Publicando\" class=\"headerlink\" title=\"Publicando\"></a>Publicando</h3><p>Quando você terminar de criar seu tema, você pode publicá-lo na <a href=\"/themes\">lista de temas</a>. Antes de fazer isso, você deve executar o <a href=\"https://github.com/hexojs/hexo-theme-unit-test\" target=\"_blank\" rel=\"noopener\">teste da unidade do tema</a> para ter certeza de que tudo está funcionando corretamente. As etapas para publicar um tema são muito semelhantes às de <a href=\"contributing.html#Updating_Documentation\">atualizar a documentação</a>.</p>\n<ol>\n<li>Faça um fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>Clone o repositório no seu computador e instale dependências.</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> https://github.com/&lt;username&gt;/site.git</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> site</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Edite o arquivo <code>source/_data/themes.yml</code> e adicione seu tema. Por exemplo:</p>\n <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">- name:</span> <span class=\"string\">landscape</span></span><br><span class=\"line\"><span class=\"attr\">  description:</span> <span class=\"string\">A</span> <span class=\"string\">brand</span> <span class=\"string\">new</span> <span class=\"string\">default</span> <span class=\"string\">theme</span> <span class=\"string\">for</span> <span class=\"string\">Hexo.</span></span><br><span class=\"line\"><span class=\"attr\">  link:</span> <span class=\"attr\">https://github.com/hexojs/hexo-theme-landscape</span></span><br><span class=\"line\"><span class=\"attr\">  preview:</span> <span class=\"attr\">http://hexo.io/hexo-theme-landscape</span></span><br><span class=\"line\"><span class=\"attr\">  tags:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">official</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">responsive</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">widget</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">two_column</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">one_column</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Adicione um print de tela (com o mesmo nome do tema) no diretório <code>source/themes/screenshots</code>. Deve ser um arquivo PNG com resolução de 800x500 pixels.</p>\n</li>\n<li>Faça um push para o seu repositório remoto.</li>\n<li>Crie um pull request e descreva as mudanças.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69b003hkoeon49qoz7i",
				"title": "Templates",
				"markdown": "\nOs templates definem a apresentação do seu site, descrevendo o que cada página deve ter de semelhante. A tabela abaixo mostra o modelo correspondente para cada página disponível. No mínimo, um tema deve conter um template de `index`.\n\n{% youtube mb65bQ4iUc4 %}\n\nTemplate | Página | Fallback\n--- | --- | ---\n`index` | Página Home |\n`post` | Postagens | `index`\n`page` | Páginas | `index`\n`archive` | Arquivos (archives) | `index`\n`category` | Categorias | `archive`\n`tag` | Tags | `archive`\n\n## Layouts\n\nQuando as páginas compartilham uma estrutura semelhante - por exemplo, quando dois templates possuem um cabeçalho e um rodapé - você pode considerar usar um `layout` para declarar essas semelhanças estruturais. Todo arquivo de layout deve conter uma variável `body` para exibir o conteúdo do template em questão. Por exemplo:\n\n``` html index.ejs\nindex\n```\n\n``` html layout.ejs\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n```\n\nyields:\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>index</body>\n</html>\n```\n\nPor padrão, o template de `layout` é usado por todos os outros templates. Você pode especificar layouts adicionais no [front-matter](front-matter.html) ou configurá-lo como `false` para desativá-lo. É até possível criar uma estrutura aninhada complexa ao incluir mais templates de layout no seu layout principal.\n\n## Partials\n\nOs partials são úteis para compartilhar componentes entre seus templates. Um exemplo típico inclui cabeçalhos (header), rodapés (footer) ou barras laterais (sidebar). Você pode querer colocar seus partials em arquivos separados para tornar a manutenção do seu site significativamente mais conveniente. Por exemplo:\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\nyields:\n\n``` html\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n```\n\n## Variáveis Locais\n\nVocê pode definir variáveis locais em um template e usá-las em outros templates.\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\nyields:\n\n``` html\n<h1 id=\"logo\">Hello World</h1>\n<div id=\"content\">Home page</div>\n```\n\n## Otimização\n\nSe o seu tema for extremamente complexo ou se o número de arquivos a serem gerados for muito grande, o desempenho da geração de arquivos do Hexo pode começar a diminuir consideravelmente. Além de simplificar o seu tema, você também pode tentar usar o `Fragment Caching`, que foi introduzido no Hexo 2.7.\n\nEste recurso foi emprestado do [Ruby on Rails](http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching). Isso faz com que o conteúdo seja salvo de forma fragmentada e cacheado para quando requisições adicionais forem feitas. Isso pode reduzir o número de consultas no banco de dados e também pode acelerar a geração de arquivos.\n\nO recurso de `Fragment Caching` é melhor aproveitado em cabeçalhos, rodapés, barras laterais e outros conteúdos estáticos, onde sejam feitas pouquíssimas mudanças de um template para outro. Por exemplo:\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\nEmbora seja mais fácil usar partials:\n\n``` js\n<%- partial('header', {}, {cache: true});\n```\n\nNão use o `Fragment Caching` quando a configuração de `relative_link` estiver habilitada. Isso pode causar problemas porque os links relativos podem e provavelmente serão diferentes dependendo das páginas em que aparecem.\n",
				"html": "<p>Os templates definem a apresentação do seu site, descrevendo o que cada página deve ter de semelhante. A tabela abaixo mostra o modelo correspondente para cada página disponível. No mínimo, um tema deve conter um template de <code>index</code>.</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/mb65bQ4iUc4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<table>\n<thead>\n<tr>\n<th>Template</th>\n<th>Página</th>\n<th>Fallback</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>index</code></td>\n<td>Página Home</td>\n<td></td>\n</tr>\n<tr>\n<td><code>post</code></td>\n<td>Postagens</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>Páginas</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>archive</code></td>\n<td>Arquivos (archives)</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>Categorias</td>\n<td><code>archive</code></td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td>Tags</td>\n<td><code>archive</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Layouts\"><a href=\"#Layouts\" class=\"headerlink\" title=\"Layouts\"></a>Layouts</h2><p>Quando as páginas compartilham uma estrutura semelhante - por exemplo, quando dois templates possuem um cabeçalho e um rodapé - você pode considerar usar um <code>layout</code> para declarar essas semelhanças estruturais. Todo arquivo de layout deve conter uma variável <code>body</code> para exibir o conteúdo do template em questão. Por exemplo:</p>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">index</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Por padrão, o template de <code>layout</code> é usado por todos os outros templates. Você pode especificar layouts adicionais no <a href=\"front-matter.html\">front-matter</a> ou configurá-lo como <code>false</code> para desativá-lo. É até possível criar uma estrutura aninhada complexa ao incluir mais templates de layout no seu layout principal.</p>\n<h2 id=\"Partials\"><a href=\"#Partials\" class=\"headerlink\" title=\"Partials\"></a>Partials</h2><p>Os partials são úteis para compartilhar componentes entre seus templates. Um exemplo típico inclui cabeçalhos (header), rodapés (footer) ou barras laterais (sidebar). Você pode querer colocar seus partials em arquivos separados para tornar a manutenção do seu site significativamente mais conveniente. Por exemplo:</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>') %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>My Site<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Variaveis-Locais\"><a href=\"#Variaveis-Locais\" class=\"headerlink\" title=\"Variáveis Locais\"></a>Variáveis Locais</h2><p>Você pode definir variáveis locais em um template e usá-las em outros templates.</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>', &#123;<span class=\"attr\">title:</span> '<span class=\"attr\">Hello</span> <span class=\"attr\">World</span>'&#125;) %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Otimizacao\"><a href=\"#Otimizacao\" class=\"headerlink\" title=\"Otimização\"></a>Otimização</h2><p>Se o seu tema for extremamente complexo ou se o número de arquivos a serem gerados for muito grande, o desempenho da geração de arquivos do Hexo pode começar a diminuir consideravelmente. Além de simplificar o seu tema, você também pode tentar usar o <code>Fragment Caching</code>, que foi introduzido no Hexo 2.7.</p>\n<p>Este recurso foi emprestado do <a href=\"http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\" target=\"_blank\" rel=\"noopener\">Ruby on Rails</a>. Isso faz com que o conteúdo seja salvo de forma fragmentada e cacheado para quando requisições adicionais forem feitas. Isso pode reduzir o número de consultas no banco de dados e também pode acelerar a geração de arquivos.</p>\n<p>O recurso de <code>Fragment Caching</code> é melhor aproveitado em cabeçalhos, rodapés, barras laterais e outros conteúdos estáticos, onde sejam feitas pouquíssimas mudanças de um template para outro. Por exemplo:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Embora seja mais fácil usar partials:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p>Não use o <code>Fragment Caching</code> quando a configuração de <code>relative_link</code> estiver habilitada. Isso pode causar problemas porque os links relativos podem e provavelmente serão diferentes dependendo das páginas em que aparecem.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69b003ikoeojvv4ua0u",
				"title": "Escrevendo",
				"markdown": "\n{% youtube AIqBubK6ZLc %}\n\nPara criar uma nova postagem ou uma nova página, você pode rodar o seguinte comando:\n\n``` bash\n$ hexo new [layout] <title>\n```\n\nO `layout` padrão é o `post`, mas você pode fornecer o seu próprio. Você pode alterar o layout padrão editando a configuração `default_layout` em `_config.yml`.\n\n### Layout\n\nExistem três layouts padrões no Hexo: `post`, `page` e `draft`. Os arquivos criados por cada um deles são salvos em um caminho diferente. As postagens criadas recentemente são salvas no diretório `source/_posts`.\n\nLayout | Caminho\n--- | ---\n`post` | `source/_posts`\n`page` | `source`\n`draft` | `source/_drafts`\n\n{% note tip Não processe minhas postagens! %}\nSe você não quer que suas postagens sejam processadas, você pode definir `layout: false` no front-matter.\n{% endnote %}\n\n### Nome de Arquivo\n\nPor padrão, o Hexo usa o título da postagem como seu nome de arquivo. Você pode editar a configuração `new_post_name` em `_config.yml` para alterar o nome do arquivo padrão. Por exemplo, `:year-:month-:day-:title.md` prefixará nomes de arquivos com a data de criação de postagem. Você pode usar os seguintes placeholders:\n\nPlaceholder | Descrição\n--- | ---\n`:title` | Título do post (minúsculas, com espaços substituídos por hifens)\n`:year` | Ano de criação, ex: `2015`\n`:month` | Mês de criação (com zero à esquerda), ex: `04`\n`:i_month` | Mês de criação (sem zero à esquerda), ex: `4`\n`:day` | Dia de criação (com zero à esquerda), ex: `07`\n`:i_day` | Dia de criação (sem zero à esquerda), ex: `7`\n\n### Rascunhos\n\nAnteriormente, mencionamos um layout especial no Hexo: `draft`. As postagens inicializadas com este layout são salvas no diretório `source/_drafts`. Você pode usar o comando `publish` para mover os rascunhos para o diretório `source/_posts`. O comando `publish` funciona de forma semelhante ao comando `new`.\n\n``` bash\n$ hexo publish [layout] <title>\n```\n\nOs rascunhos não são exibidos por padrão. Você pode adicionar a opção `--draft` ao executar o Hexo ou habilitar a configuração `render_drafts` em `_config.yml` para renderizar rascunhos.\n\n### Scaffolds\n\nAo criar postagens, o Hexo irá construir arquivos com base no arquivo correspondente no diretório `scaffolds`. Por exemplo:\n\n``` bash\n$ hexo new photo \"My Gallery\"\n```\n\nQuando você executa este comando, o Hexo tentará encontrar `photo.md` no diretório `scaffolds` e criar a postagem com base nele. Os seguintes placeholders estão disponíveis em scaffolds:\n\nPlaceholder | Descrição\n--- | ---\n`layout` | Layout\n`title` | Título\n`date` | Data de criação do arquivo\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/AIqBubK6ZLc\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>Para criar uma nova postagem ou uma nova página, você pode rodar o seguinte comando:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>O <code>layout</code> padrão é o <code>post</code>, mas você pode fornecer o seu próprio. Você pode alterar o layout padrão editando a configuração <code>default_layout</code> em <code>_config.yml</code>.</p>\n<h3 id=\"Layout\"><a href=\"#Layout\" class=\"headerlink\" title=\"Layout\"></a>Layout</h3><p>Existem três layouts padrões no Hexo: <code>post</code>, <code>page</code> e <code>draft</code>. Os arquivos criados por cada um deles são salvos em um caminho diferente. As postagens criadas recentemente são salvas no diretório <code>source/_posts</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Layout</th>\n<th>Caminho</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post</code></td>\n<td><code>source/_posts</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>draft</code></td>\n<td><code>source/_drafts</code></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note tip\"><strong class=\"note-title\">Não processe minhas postagens!</strong><p>Se você não quer que suas postagens sejam processadas, você pode definir <code>layout: false</code> no front-matter.</p>\n</blockquote>\n<h3 id=\"Nome-de-Arquivo\"><a href=\"#Nome-de-Arquivo\" class=\"headerlink\" title=\"Nome de Arquivo\"></a>Nome de Arquivo</h3><p>Por padrão, o Hexo usa o título da postagem como seu nome de arquivo. Você pode editar a configuração <code>new_post_name</code> em <code>_config.yml</code> para alterar o nome do arquivo padrão. Por exemplo, <code>:year-:month-:day-:title.md</code> prefixará nomes de arquivos com a data de criação de postagem. Você pode usar os seguintes placeholders:</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:title</code></td>\n<td>Título do post (minúsculas, com espaços substituídos por hifens)</td>\n</tr>\n<tr>\n<td><code>:year</code></td>\n<td>Ano de criação, ex: <code>2015</code></td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>Mês de criação (com zero à esquerda), ex: <code>04</code></td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>Mês de criação (sem zero à esquerda), ex: <code>4</code></td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>Dia de criação (com zero à esquerda), ex: <code>07</code></td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>Dia de criação (sem zero à esquerda), ex: <code>7</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Rascunhos\"><a href=\"#Rascunhos\" class=\"headerlink\" title=\"Rascunhos\"></a>Rascunhos</h3><p>Anteriormente, mencionamos um layout especial no Hexo: <code>draft</code>. As postagens inicializadas com este layout são salvas no diretório <code>source/_drafts</code>. Você pode usar o comando <code>publish</code> para mover os rascunhos para o diretório <code>source/_posts</code>. O comando <code>publish</code> funciona de forma semelhante ao comando <code>new</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>Os rascunhos não são exibidos por padrão. Você pode adicionar a opção <code>--draft</code> ao executar o Hexo ou habilitar a configuração <code>render_drafts</code> em <code>_config.yml</code> para renderizar rascunhos.</p>\n<h3 id=\"Scaffolds\"><a href=\"#Scaffolds\" class=\"headerlink\" title=\"Scaffolds\"></a>Scaffolds</h3><p>Ao criar postagens, o Hexo irá construir arquivos com base no arquivo correspondente no diretório <code>scaffolds</code>. Por exemplo:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new photo <span class=\"string\">\"My Gallery\"</span></span><br></pre></td></tr></table></figure>\n<p>Quando você executa este comando, o Hexo tentará encontrar <code>photo.md</code> no diretório <code>scaffolds</code> e criar a postagem com base nele. Os seguintes placeholders estão disponíveis em scaffolds:</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>Layout</td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>Título</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Data de criação do arquivo</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69c003jkoeofqjncv8g",
				"title": "Soluções de Problemas",
				"markdown": "No caso de você ter problemas com o uso do Hexo, aqui está uma lista de soluções para alguns dos problemas mais frequentes. Se esta página não ajudar a resolver seu problema, tente fazer uma pesquisa no nosso [GitHub](https://github.com/hexojs/hexo/issues) ou no nosso [Google Group](https://groups.google.com/group/hexo).\n\n## YAML Parsing Error\n\n``` plain\nJS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:\n      last_updated: Last updated: %s\n```\n\nDelimite a string com aspas duplas se ela contiver dois pontos (:).\n\n``` plain\nJS-YAML: bad indentation of a mapping entry at line 18, column 31:\n      last_updated:\"Last updated: %s\"\n```\n\nCertifique-se de que está usando indentação por espaço (soft tabs) e adicione um espaço após os dois pontos.\n\nPara mais informações, veja [YAML Spec](http://www.yaml.org/spec/1.2/spec.html).\n\n## EMFILE Error\n\n``` plain\nError: EMFILE, too many open files\n```\n\nEmbora o Node.js tenha I/O não bloqueante, o número máximo de I/O síncronas ainda é limitado pelo sistema. Você pode encontrar um erro EMFILE ao tentar gerar uma grande quantidade de arquivos. Você pode tentar executar o seguinte comando para aumentar o número de operações de I/O síncronas permitidas.\n\n``` bash\n$ ulimit -n 10000\n```\n\n## Processos com Pouca Memória\n\nQuando você encontrar esse erro durante a geração:\n```\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory\n```\n\nAumente o tamanho da memória heap do Node.js alterando a primeira linha de `hexo-cli` (o comando `which hexo` encontra o arquivo).\n```\n#!/usr/bin/env node --max_old_space_size=8192\n```\n\n[Out of memory while generating a huge blog · Issue #1735 · hexojs/hexo](https://github.com/hexojs/hexo/issues/1735)\n\n## Problemas de Deploy com Git\n\n``` plain\nerror: RPC failed; result=22, HTTP code = 403\n\nfatal: 'username.github.io' does not appear to be a git repository\n```\n\nCertifique-se de ter [configurado o git](https://help.github.com/articles/set-up-git) corretamente no seu computador ou tente usar a URL HTTPS do repositório ao invés da URL SSH.\n\n## Problemas de Servidor\n\n``` plain\nError: listen EADDRINUSE\n```\n\nVocê pode ter iniciado dois servidores do Hexo ao mesmo tempo ou pode haver outro aplicativo usando a mesma porta. Tente modificar a configuração `port` ou iniciar o servidor do Hexo com o argumento `-p`.\n\n``` bash\n$ hexo server -p 5000\n```\n\n## Problemas na Instalação de Plugins\n\n``` plain\nnpm ERR! node-waf configure build\n```\n\nEste erro pode ocorrer ao tentar instalar um plugin escrito em C, C++ ou outra linguagem diferente de JavaScript. Verifique se você instalou o compilador correto em seu computador.\n\n## Error com DTrace (Mac OS X)\n\n```plain\n{ [Error: Cannot find module './build/Release/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/default/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/Debug/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n```\n\nA instalação do DTrace pode ter problemas, use isso:\n```sh\n$ npm install hexo --no-optional\n```\nVeja a issue [#1326](https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796) no Github.\n\n## Iterando o Modelo de Dados em Jade ou Swig\n\nA Hexo usa [Warehouse] para o seu modelo de dados. Ele não é um array, então você pode ter que transformar objetos em iteráveis.\n\n```\n{% for post in site.posts.toArray() %}\n{% endfor %}\n```\n\n## Dados não Atualizados\n\nAlguns dados não podem ser atualizados ou os arquivos recém-gerados são idênticos aos da última versão. Limpe o cache e tente novamente.\n\n``` bash\n$ hexo clean\n```\n\n## Nenhum Comando é Executado\n\nQuando você não consegue executar nenhum comando do Hexo, com exceção de `help`, `init` e `version`, isso pode estar acontecendo pela falta do `hexo` no `package.json`:\n\n```json\n{\n  \"hexo\": {\n    \"version\": \"3.2.2\"\n  }\n}\n```\n\n## Conteúdo Escapando\n\nO Hexo usa [Nunjucks] para renderizar posts ([Swig] foi usado na versão mais antiga, que compartilha uma sintaxe semelhante). O conteúdo delimitado com `{% raw %}{{ }}{% endraw %}` ou `{% raw %}{% %}{% endraw %}` será \"parseado\" e pode causar problemas. Você pode empacotar um conteúdo sensível com a [tag plugin `raw`](tag-plugins.html#Raw).\n\n```\n{% raw %}\nHello {{ sensitive }}\n{% endraw %}\n```\n\n## ENOSPC Error (Linux)\n\nÀs vezes, ao executar o comando `$ hexo server` é retornado o seguinte erro:\n```\nError: watch ENOSPC ...\n```\nIsto pode ser consertado através do comando `$ npm dedupe` ou, se isso não funcionar, tente o seguinte comando no terminal do Linux:\n``` bash\n$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\nIsso aumentará o limite do número de arquivos que você pode assistir.\n\n## EMPERM Error (Windows Subsystem for Linux)\n\nAo executar `$ hexo server` em um ambiente BashOnWindows, ele retorna o seguinte erro:\n```\nError: watch /path/to/hexo/theme/ EMPERM\n```\nInfelizmente, o WSL (Windows Subsystem for Linux) atualmente não suporta os observadores (watchers) do sistema de arquivos. Portanto, o recurso de atualização em tempo real do servidor do Hexo não está disponível no momento. Contudo, ainda é possível executar o servidor a partir de um ambiente WSL, primeiro gere os arquivos e depois execute servidor em modo estático:\n``` sh\n$ hexo generate\n$ hexo server -s\n```\nEste é [um problema no BashOnWindows conhecido](https://github.com/Microsoft/BashOnWindows/issues/216), e em 15 de agosto de 2016, a equipe do Windows disse que eles trabalhariam nisso. Você pode obter atualizações de progresso e encorajá-los a priorizá-lo na [página UserVoice do problema](https://wpdev.uservoice.com/forums/266908-command-prompt-console-bash-on-ubuntu-on-windo/suggestions/13469097-support-for-filesystem-watchers-like-inotify).\n\n## Erro de Renderização de Template\n\nÀs vezes, ao executar o comando `$ hexo generate`, ele retorna um erro:\n```\nFATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html\nTemplate render error: (unknown path)\n```\nIsso significa que existem algumas palavras irreconhecíveis no seu arquivo. Existem duas possibilidades, uma é seu novo page/post, a outra é o `_config.yml`.\nEm `_config.yml`, não esqueça de adicionar espaços em branco antes de uma lista no hash. Existe uma página wiki sobre [YAML](https://en.wikipedia.org/wiki/YAML).\n\nForma errada:\n```\nplugins:\n- hexo-generator-feed\n- hexo-generator-sitemap\n```\nForma correta:\n```\nplugins:\n  - hexo-generator-feed\n  - hexo-generator-sitemap\n```\n\n[Warehouse]: https://github.com/hexojs/warehouse\n[Swig]: http://paularmstrong.github.io/swig/\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n",
				"html": "<p>No caso de você ter problemas com o uso do Hexo, aqui está uma lista de soluções para alguns dos problemas mais frequentes. Se esta página não ajudar a resolver seu problema, tente fazer uma pesquisa no nosso <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> ou no nosso <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a>.</p>\n<h2 id=\"YAML-Parsing-Error\"><a href=\"#YAML-Parsing-Error\" class=\"headerlink\" title=\"YAML Parsing Error\"></a>YAML Parsing Error</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:</span><br><span class=\"line\">      last_updated: Last updated: %s</span><br></pre></td></tr></table></figure>\n<p>Delimite a string com aspas duplas se ela contiver dois pontos (:).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: bad indentation of a mapping entry at line 18, column 31:</span><br><span class=\"line\">      last_updated:&quot;Last updated: %s&quot;</span><br></pre></td></tr></table></figure>\n<p>Certifique-se de que está usando indentação por espaço (soft tabs) e adicione um espaço após os dois pontos.</p>\n<p>Para mais informações, veja <a href=\"http://www.yaml.org/spec/1.2/spec.html\" target=\"_blank\" rel=\"noopener\">YAML Spec</a>.</p>\n<h2 id=\"EMFILE-Error\"><a href=\"#EMFILE-Error\" class=\"headerlink\" title=\"EMFILE Error\"></a>EMFILE Error</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: EMFILE, too many open files</span><br></pre></td></tr></table></figure>\n<p>Embora o Node.js tenha I/O não bloqueante, o número máximo de I/O síncronas ainda é limitado pelo sistema. Você pode encontrar um erro EMFILE ao tentar gerar uma grande quantidade de arquivos. Você pode tentar executar o seguinte comando para aumentar o número de operações de I/O síncronas permitidas.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ulimit</span> -n 10000</span><br></pre></td></tr></table></figure>\n<h2 id=\"Processos-com-Pouca-Memoria\"><a href=\"#Processos-com-Pouca-Memoria\" class=\"headerlink\" title=\"Processos com Pouca Memória\"></a>Processos com Pouca Memória</h2><p>Quando você encontrar esse erro durante a geração:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory</span><br></pre></td></tr></table></figure></p>\n<p>Aumente o tamanho da memória heap do Node.js alterando a primeira linha de <code>hexo-cli</code> (o comando <code>which hexo</code> encontra o arquivo).<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env node --max_old_space_size=8192</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/hexojs/hexo/issues/1735\" target=\"_blank\" rel=\"noopener\">Out of memory while generating a huge blog · Issue #1735 · hexojs/hexo</a></p>\n<h2 id=\"Problemas-de-Deploy-com-Git\"><a href=\"#Problemas-de-Deploy-com-Git\" class=\"headerlink\" title=\"Problemas de Deploy com Git\"></a>Problemas de Deploy com Git</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">error: RPC failed; result=22, HTTP code = 403</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: &apos;username.github.io&apos; does not appear to be a git repository</span><br></pre></td></tr></table></figure>\n<p>Certifique-se de ter <a href=\"https://help.github.com/articles/set-up-git\" target=\"_blank\" rel=\"noopener\">configurado o git</a> corretamente no seu computador ou tente usar a URL HTTPS do repositório ao invés da URL SSH.</p>\n<h2 id=\"Problemas-de-Servidor\"><a href=\"#Problemas-de-Servidor\" class=\"headerlink\" title=\"Problemas de Servidor\"></a>Problemas de Servidor</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: listen EADDRINUSE</span><br></pre></td></tr></table></figure>\n<p>Você pode ter iniciado dois servidores do Hexo ao mesmo tempo ou pode haver outro aplicativo usando a mesma porta. Tente modificar a configuração <code>port</code> ou iniciar o servidor do Hexo com o argumento <code>-p</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h2 id=\"Problemas-na-Instalacao-de-Plugins\"><a href=\"#Problemas-na-Instalacao-de-Plugins\" class=\"headerlink\" title=\"Problemas na Instalação de Plugins\"></a>Problemas na Instalação de Plugins</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm ERR! node-waf configure build</span><br></pre></td></tr></table></figure>\n<p>Este erro pode ocorrer ao tentar instalar um plugin escrito em C, C++ ou outra linguagem diferente de JavaScript. Verifique se você instalou o compilador correto em seu computador.</p>\n<h2 id=\"Error-com-DTrace-Mac-OS-X\"><a href=\"#Error-com-DTrace-Mac-OS-X\" class=\"headerlink\" title=\"Error com DTrace (Mac OS X)\"></a>Error com DTrace (Mac OS X)</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/default/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Debug/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br></pre></td></tr></table></figure>\n<p>A instalação do DTrace pode ter problemas, use isso:<br><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo --no-optional</span><br></pre></td></tr></table></figure></p>\n<p>Veja a issue <a href=\"https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796\" target=\"_blank\" rel=\"noopener\">#1326</a> no Github.</p>\n<h2 id=\"Iterando-o-Modelo-de-Dados-em-Jade-ou-Swig\"><a href=\"#Iterando-o-Modelo-de-Dados-em-Jade-ou-Swig\" class=\"headerlink\" title=\"Iterando o Modelo de Dados em Jade ou Swig\"></a>Iterando o Modelo de Dados em Jade ou Swig</h2><p>A Hexo usa <a href=\"https://github.com/hexojs/warehouse\" target=\"_blank\" rel=\"noopener\">Warehouse</a> para o seu modelo de dados. Ele não é um array, então você pode ter que transformar objetos em iteráveis.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% for post in site.posts.toArray() %&#125;</span><br><span class=\"line\">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Dados-nao-Atualizados\"><a href=\"#Dados-nao-Atualizados\" class=\"headerlink\" title=\"Dados não Atualizados\"></a>Dados não Atualizados</h2><p>Alguns dados não podem ser atualizados ou os arquivos recém-gerados são idênticos aos da última versão. Limpe o cache e tente novamente.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<h2 id=\"Nenhum-Comando-e-Executado\"><a href=\"#Nenhum-Comando-e-Executado\" class=\"headerlink\" title=\"Nenhum Comando é Executado\"></a>Nenhum Comando é Executado</h2><p>Quando você não consegue executar nenhum comando do Hexo, com exceção de <code>help</code>, <code>init</code> e <code>version</code>, isso pode estar acontecendo pela falta do <code>hexo</code> no <code>package.json</code>:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.2.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Conteudo-Escapando\"><a href=\"#Conteudo-Escapando\" class=\"headerlink\" title=\"Conteúdo Escapando\"></a>Conteúdo Escapando</h2><p>O Hexo usa <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> para renderizar posts (<a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a> foi usado na versão mais antiga, que compartilha uma sintaxe semelhante). O conteúdo delimitado com <code>{{ }}</code> ou <code>{% %}</code> será “parseado” e pode causar problemas. Você pode empacotar um conteúdo sensível com a <a href=\"tag-plugins.html#Raw\">tag plugin <code>raw</code></a>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">Hello &#123;&#123; sensitive &#125;&#125;</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ENOSPC-Error-Linux\"><a href=\"#ENOSPC-Error-Linux\" class=\"headerlink\" title=\"ENOSPC Error (Linux)\"></a>ENOSPC Error (Linux)</h2><p>Às vezes, ao executar o comando <code>$ hexo server</code> é retornado o seguinte erro:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: watch ENOSPC ...</span><br></pre></td></tr></table></figure></p>\n<p>Isto pode ser consertado através do comando <code>$ npm dedupe</code> ou, se isso não funcionar, tente o seguinte comando no terminal do Linux:<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure></p>\n<p>Isso aumentará o limite do número de arquivos que você pode assistir.</p>\n<h2 id=\"EMPERM-Error-Windows-Subsystem-for-Linux\"><a href=\"#EMPERM-Error-Windows-Subsystem-for-Linux\" class=\"headerlink\" title=\"EMPERM Error (Windows Subsystem for Linux)\"></a>EMPERM Error (Windows Subsystem for Linux)</h2><p>Ao executar <code>$ hexo server</code> em um ambiente BashOnWindows, ele retorna o seguinte erro:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: watch /path/to/hexo/theme/ EMPERM</span><br></pre></td></tr></table></figure></p>\n<p>Infelizmente, o WSL (Windows Subsystem for Linux) atualmente não suporta os observadores (watchers) do sistema de arquivos. Portanto, o recurso de atualização em tempo real do servidor do Hexo não está disponível no momento. Contudo, ainda é possível executar o servidor a partir de um ambiente WSL, primeiro gere os arquivos e depois execute servidor em modo estático:<br><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">$ hexo server -s</span><br></pre></td></tr></table></figure></p>\n<p>Este é <a href=\"https://github.com/Microsoft/BashOnWindows/issues/216\" target=\"_blank\" rel=\"noopener\">um problema no BashOnWindows conhecido</a>, e em 15 de agosto de 2016, a equipe do Windows disse que eles trabalhariam nisso. Você pode obter atualizações de progresso e encorajá-los a priorizá-lo na <a href=\"https://wpdev.uservoice.com/forums/266908-command-prompt-console-bash-on-ubuntu-on-windo/suggestions/13469097-support-for-filesystem-watchers-like-inotify\" target=\"_blank\" rel=\"noopener\">página UserVoice do problema</a>.</p>\n<h2 id=\"Erro-de-Renderizacao-de-Template\"><a href=\"#Erro-de-Renderizacao-de-Template\" class=\"headerlink\" title=\"Erro de Renderização de Template\"></a>Erro de Renderização de Template</h2><p>Às vezes, ao executar o comando <code>$ hexo generate</code>, ele retorna um erro:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class=\"line\">Template render error: (unknown path)</span><br></pre></td></tr></table></figure></p>\n<p>Isso significa que existem algumas palavras irreconhecíveis no seu arquivo. Existem duas possibilidades, uma é seu novo page/post, a outra é o <code>_config.yml</code>.<br>Em <code>_config.yml</code>, não esqueça de adicionar espaços em branco antes de uma lista no hash. Existe uma página wiki sobre <a href=\"https://en.wikipedia.org/wiki/YAML\" target=\"_blank\" rel=\"noopener\">YAML</a>.</p>\n<p>Forma errada:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">plugins:</span><br><span class=\"line\">- hexo-generator-feed</span><br><span class=\"line\">- hexo-generator-sitemap</span><br></pre></td></tr></table></figure></p>\n<p>Forma correta:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">plugins:</span><br><span class=\"line\">  - hexo-generator-feed</span><br><span class=\"line\">  - hexo-generator-sitemap</span><br></pre></td></tr></table></figure></p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69c003kkoeo6l0kyxl0",
				"title": "Модуль",
				"markdown": "Модуль представляет собой контейнер, используемый для обработки файлов в указанной папке. Hexo использует два модуля: `hexo.source` и `hexo.theme`. Первый используется для обработки папки с исходниками `source` с последующим применением указанной темы из папки `themes`.\n\n## Обработка файлов (Load Files)\n\nМодули используют два способа загрузки файлов: `process` и `watch`. `process` обрабатывает все файлы в папке по команде. `watch` обрабатывает файлы при их изменении.\n\n``` js\nbox.process().then(function(){\n  // ...\n});\n\nbox.watch().then(function(){\n  // Можно вызвать команду box.unwatch() после, чтобы остановить отслеживание файлов.\n});\n```\n\n## Сопоставление папок (Path Matching)\n\nМодули поддерживают много способов для нахождения обрабатываемых папок. Можно использовать регулярные выражения, функции или строки шаблонов Express-style. Например:\n\n``` plain\nposts/:id => posts/89\nposts/*path => posts/2015/title\n```\n\nПодробная информация (eng): [util.Pattern].\n\n## Обработчики\n\nОбработчик является важнейшим элементом модуля и служит для преобразования файлов. Можно использовать сопоставление папок как описано выше для ограничения обрабатываемых файлов. Новый обработчик добавляется методом `addProcessor`\n\n``` js\nbox.addProcessor('posts/:id', function(file){\n  //\n});\n```\n\nМодуль передаёт содержимое соответствующих файлов обработчикам. Информацию можно читать прямо из аргумента `file` в обратный вызов (callback):\n\nСвойство | Описание\n--- | ---\n`source` | Полный путь к файлу\n`path` | Относительный путь к файлу модуля\n`type` | Тип файла. Возможные значения `create`, `update`, `skip`, `delete`.\n`params` | Информация о сопоставлении путей.\n\nМодуль содержит и другие методы, не нужно делать прямые вызовы к файлу самостоятельно.\n\nМетод | Описание\n--- | ---\n`read` | Чтение файла\n`readSync` | Синхронное чтение файла\n`stat` | Получение статуса файла\n`statSync` | Синхронное получение статуса файла\n`render` | Обработка файла\n`renderSync` | Синхронная обработка файла\n\n[util.Pattern]: https://github.com/hexojs/hexo-util#patternrule\n",
				"html": "<p>Модуль представляет собой контейнер, используемый для обработки файлов в указанной папке. Hexo использует два модуля: <code>hexo.source</code> и <code>hexo.theme</code>. Первый используется для обработки папки с исходниками <code>source</code> с последующим применением указанной темы из папки <code>themes</code>.</p>\n<h2 id=\"Обработка-файлов-Load-Files\"><a href=\"#Обработка-файлов-Load-Files\" class=\"headerlink\" title=\"Обработка файлов (Load Files)\"></a>Обработка файлов (Load Files)</h2><p>Модули используют два способа загрузки файлов: <code>process</code> и <code>watch</code>. <code>process</code> обрабатывает все файлы в папке по команде. <code>watch</code> обрабатывает файлы при их изменении.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.process().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">box.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Можно вызвать команду box.unwatch() после, чтобы остановить отслеживание файлов.</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Сопоставление-папок-Path-Matching\"><a href=\"#Сопоставление-папок-Path-Matching\" class=\"headerlink\" title=\"Сопоставление папок (Path Matching)\"></a>Сопоставление папок (Path Matching)</h2><p>Модули поддерживают много способов для нахождения обрабатываемых папок. Можно использовать регулярные выражения, функции или строки шаблонов Express-style. Например:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">posts/:id =&gt; posts/89</span><br><span class=\"line\">posts/*path =&gt; posts/2015/title</span><br></pre></td></tr></table></figure>\n<p>Подробная информация (eng): <a href=\"https://github.com/hexojs/hexo-util#patternrule\" target=\"_blank\" rel=\"noopener\">util.Pattern</a>.</p>\n<h2 id=\"Обработчики\"><a href=\"#Обработчики\" class=\"headerlink\" title=\"Обработчики\"></a>Обработчики</h2><p>Обработчик является важнейшим элементом модуля и служит для преобразования файлов. Можно использовать сопоставление папок как описано выше для ограничения обрабатываемых файлов. Новый обработчик добавляется методом <code>addProcessor</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.addProcessor(<span class=\"string\">'posts/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Модуль передаёт содержимое соответствующих файлов обработчикам. Информацию можно читать прямо из аргумента <code>file</code> в обратный вызов (callback):</p>\n<table>\n<thead>\n<tr>\n<th>Свойство</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>Полный путь к файлу</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Относительный путь к файлу модуля</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Тип файла. Возможные значения <code>create</code>, <code>update</code>, <code>skip</code>, <code>delete</code>.</td>\n</tr>\n<tr>\n<td><code>params</code></td>\n<td>Информация о сопоставлении путей.</td>\n</tr>\n</tbody>\n</table>\n<p>Модуль содержит и другие методы, не нужно делать прямые вызовы к файлу самостоятельно.</p>\n<table>\n<thead>\n<tr>\n<th>Метод</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>read</code></td>\n<td>Чтение файла</td>\n</tr>\n<tr>\n<td><code>readSync</code></td>\n<td>Синхронное чтение файла</td>\n</tr>\n<tr>\n<td><code>stat</code></td>\n<td>Получение статуса файла</td>\n</tr>\n<tr>\n<td><code>statSync</code></td>\n<td>Синхронное получение статуса файла</td>\n</tr>\n<tr>\n<td><code>render</code></td>\n<td>Обработка файла</td>\n</tr>\n<tr>\n<td><code>renderSync</code></td>\n<td>Синхронная обработка файла</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69c003lkoeosecvxtpa",
				"title": "Variáveis",
				"markdown": "\n{% youtube T9oAax-IRw0 %}\n\n### Variáveis Globais\n\nVariável | Descrição | Tipo\n--- | --- | ---\n`site` | Informações do site. | `object`; veja [Variáveis do Site]\n`page` | Informações específicas da página e  variáveis personalizadas definidas no front-matter. | `object`; veja [Variáveis da Página]\n`config` | Configuração do site. | `object` (arquivo `_config` do seu site)\n`theme` | Configuração do tema. Herda a configuração do site. | `object` (arquivo `_config` do seu tema)\n`_` (sublinhado) | Biblioteca Lodash | veja a documentação do [Lodash](https://lodash.com/  \"Lodash\" target=\"_blank\")\n`path` | Caminho da página atual | `string`\n`url` | URL completa da página atual | `string`\n`env` | Variáveis de ambiente | ???\n\n### Variáveis do Site\n\nVariável | Descrição | Tipo\n--- | --- | ---\n`site.posts` | Todos as postagens | `array` de objetos `post`\n`site.pages` | Todas as páginas | `array` de objetos `page`\n`site.categories` | Todas as categorias | `array` de ???\n`site.tags` | Todas as tags | `array` de ???\n\n### Variáveis da Página\n\n**Artigo (`page`)**\n\nVariável | Descrição | Tipo\n--- | --- | ---\n`page.title` | Título do artigo | `string`\n`page.date` | Data de criação do artigo | [Moment.js] objeto\n`page.updated` | Data da última atualização do artigo | [Moment.js] object\n`page.comments` | Comentário habilitado ou não | `boolean`\n`page.layout` | Nome do layout | `string`\n`page.content` | O conteúdo completo processado do artigo | `string`\n`page.excerpt` | Trecho do artigo| `string`\n`page.more` | Conteúdo exceto trecho do artigo | `string`\n`page.source` | O caminho do arquivo de fontes | `string`\n`page.full_source` | Caminho completo do arquivo de fontes | `string`\n`page.path` | A URL do artigo sem a URL raiz. Usamos geralmente `url_for(page.path)` no tema. | `string`\n`page.permalink` | URL completa do artigo | `string`\n`page.prev` | A postagem anterior, `null` se for a primeira postagem | ???\n`page.next` | A próxima postagem, `null` se for a última postagem | ???\n`page.raw` | Os dados brutos do artigo | ???\n`page.photos` | As fotos do artigo (Usado em postagens de galeria) | array de ???\n`page.link` | O link externo do artigo (Usado em postagens de link) | `string`\n\n**Post (`post`):** O mesmo que o layout `page` mas adicione as seguintes variáveis.\n\nVariável | Descrição | Tipo\n--- | --- | ---\n`page.published` | Verdadeiro se a postagem não for um rascunho | `boolean`\n`page.categories` | Todas as categorias da postagem | `array` de ???\n`page.tags` | Todas as tags da postagem | `array` de ???\n\n**Home (`index`)**\n\nVariável | Descrição | Tipo\n--- | --- | ---\n`page.per_page` | Postagens exibidas por página | `number`\n`page.total` | Número total de páginas | `number`\n`page.current` | Número da página atual | `number`\n`page.current_url` | A URL da página atual | `string`\n`page.posts` | Posts in this page ([Data Model](https://hexojs.github.io/warehouse/)) | \n`page.prev` | Número da página anterior. `0` se a página atual for a primeira. | `number`\n`page.prev_link` | A URL da página anterior. `''` se a página atual for a primeira. | `string`\n`page.next` | Número da próxima página. `0` se a página atual for a última. | `number`\n`page.next_link` | A URL da próxima página. `''` se a página atual for a última. | `string`\n`page.path` | A URL da página atual sem URL raiz. Costumamos usar `url_for(page.path)` no tema. | `string`\n\n**Arquivo (`archive`):** O mesmo que o layout do `index`, mas adicione as seguintes variáveis.\n\nVariável | Descrição | Tipo\n--- | --- | ---\n`page.archive` | Igual a `true` | `boolean`\n`page.year` | Ano do arquivo (4 - dígitos) | `number`\n`page.month` | Mês do arquivo (2 dígitos sem zeros à esquerda) | `number`\n\n**Categoria (`category`):** O mesmo que o layout do `index` mas adicione as seguintes variáveis.\n\nVariável | Descrição | Tipo\n--- | --- | ---\n`page.category` | Nome da categoria | `string`\n\n**Tag (`tag`):** O mesmo que o layout do `index` mas adicione as seguintes variáveis.\n\nVariável | Descrição | Tipo\n--- | --- | ---\n`page.tag` | Nome da tag | `string`\n\n[Moment.js]: http://momentjs.com/\n[Variáveis do Site]: #Variaveis-do-Site\n[Variáveis da Página]: #Variaveis-da-Pagina\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/T9oAax-IRw0\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h3 id=\"Variaveis-Globais\"><a href=\"#Variaveis-Globais\" class=\"headerlink\" title=\"Variáveis Globais\"></a>Variáveis Globais</h3><table>\n<thead>\n<tr>\n<th>Variável</th>\n<th>Descrição</th>\n<th>Tipo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site</code></td>\n<td>Informações do site.</td>\n<td><code>object</code>; veja <a href=\"#Variaveis-do-Site\">Variáveis do Site</a></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>Informações específicas da página e  variáveis personalizadas definidas no front-matter.</td>\n<td><code>object</code>; veja <a href=\"#Variaveis-da-Pagina\">Variáveis da Página</a></td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>Configuração do site.</td>\n<td><code>object</code> (arquivo <code>_config</code> do seu site)</td>\n</tr>\n<tr>\n<td><code>theme</code></td>\n<td>Configuração do tema. Herda a configuração do site.</td>\n<td><code>object</code> (arquivo <code>_config</code> do seu tema)</td>\n</tr>\n<tr>\n<td><code>_</code> (sublinhado)</td>\n<td>Biblioteca Lodash</td>\n<td>veja a documentação do <a href=\"https://lodash.com/\" title=\"Lodash&quot; target=&quot;_blank\" target=\"_blank\" rel=\"noopener\">Lodash</a></td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Caminho da página atual</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>URL completa da página atual</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>env</code></td>\n<td>Variáveis de ambiente</td>\n<td>???</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Variaveis-do-Site\"><a href=\"#Variaveis-do-Site\" class=\"headerlink\" title=\"Variáveis do Site\"></a>Variáveis do Site</h3><table>\n<thead>\n<tr>\n<th>Variável</th>\n<th>Descrição</th>\n<th>Tipo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site.posts</code></td>\n<td>Todos as postagens</td>\n<td><code>array</code> de objetos <code>post</code></td>\n</tr>\n<tr>\n<td><code>site.pages</code></td>\n<td>Todas as páginas</td>\n<td><code>array</code> de objetos <code>page</code></td>\n</tr>\n<tr>\n<td><code>site.categories</code></td>\n<td>Todas as categorias</td>\n<td><code>array</code> de ???</td>\n</tr>\n<tr>\n<td><code>site.tags</code></td>\n<td>Todas as tags</td>\n<td><code>array</code> de ???</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Variaveis-da-Pagina\"><a href=\"#Variaveis-da-Pagina\" class=\"headerlink\" title=\"Variáveis da Página\"></a>Variáveis da Página</h3><p><strong>Artigo (<code>page</code>)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Variável</th>\n<th>Descrição</th>\n<th>Tipo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.title</code></td>\n<td>Título do artigo</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.date</code></td>\n<td>Data de criação do artigo</td>\n<td><a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> objeto</td>\n</tr>\n<tr>\n<td><code>page.updated</code></td>\n<td>Data da última atualização do artigo</td>\n<td><a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object</td>\n</tr>\n<tr>\n<td><code>page.comments</code></td>\n<td>Comentário habilitado ou não</td>\n<td><code>boolean</code></td>\n</tr>\n<tr>\n<td><code>page.layout</code></td>\n<td>Nome do layout</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.content</code></td>\n<td>O conteúdo completo processado do artigo</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.excerpt</code></td>\n<td>Trecho do artigo</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.more</code></td>\n<td>Conteúdo exceto trecho do artigo</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.source</code></td>\n<td>O caminho do arquivo de fontes</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.full_source</code></td>\n<td>Caminho completo do arquivo de fontes</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>A URL do artigo sem a URL raiz. Usamos geralmente <code>url_for(page.path)</code> no tema.</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.permalink</code></td>\n<td>URL completa do artigo</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>A postagem anterior, <code>null</code> se for a primeira postagem</td>\n<td>???</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>A próxima postagem, <code>null</code> se for a última postagem</td>\n<td>???</td>\n</tr>\n<tr>\n<td><code>page.raw</code></td>\n<td>Os dados brutos do artigo</td>\n<td>???</td>\n</tr>\n<tr>\n<td><code>page.photos</code></td>\n<td>As fotos do artigo (Usado em postagens de galeria)</td>\n<td>array de ???</td>\n</tr>\n<tr>\n<td><code>page.link</code></td>\n<td>O link externo do artigo (Usado em postagens de link)</td>\n<td><code>string</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Post (<code>post</code>):</strong> O mesmo que o layout <code>page</code> mas adicione as seguintes variáveis.</p>\n<table>\n<thead>\n<tr>\n<th>Variável</th>\n<th>Descrição</th>\n<th>Tipo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.published</code></td>\n<td>Verdadeiro se a postagem não for um rascunho</td>\n<td><code>boolean</code></td>\n</tr>\n<tr>\n<td><code>page.categories</code></td>\n<td>Todas as categorias da postagem</td>\n<td><code>array</code> de ???</td>\n</tr>\n<tr>\n<td><code>page.tags</code></td>\n<td>Todas as tags da postagem</td>\n<td><code>array</code> de ???</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Home (<code>index</code>)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Variável</th>\n<th>Descrição</th>\n<th>Tipo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.per_page</code></td>\n<td>Postagens exibidas por página</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.total</code></td>\n<td>Número total de páginas</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.current</code></td>\n<td>Número da página atual</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.current_url</code></td>\n<td>A URL da página atual</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.posts</code></td>\n<td>Posts in this page (<a href=\"https://hexojs.github.io/warehouse/\" target=\"_blank\" rel=\"noopener\">Data Model</a>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>Número da página anterior. <code>0</code> se a página atual for a primeira.</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.prev_link</code></td>\n<td>A URL da página anterior. <code>&#39;&#39;</code> se a página atual for a primeira.</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>Número da próxima página. <code>0</code> se a página atual for a última.</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.next_link</code></td>\n<td>A URL da próxima página. <code>&#39;&#39;</code> se a página atual for a última.</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>A URL da página atual sem URL raiz. Costumamos usar <code>url_for(page.path)</code> no tema.</td>\n<td><code>string</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Arquivo (<code>archive</code>):</strong> O mesmo que o layout do <code>index</code>, mas adicione as seguintes variáveis.</p>\n<table>\n<thead>\n<tr>\n<th>Variável</th>\n<th>Descrição</th>\n<th>Tipo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.archive</code></td>\n<td>Igual a <code>true</code></td>\n<td><code>boolean</code></td>\n</tr>\n<tr>\n<td><code>page.year</code></td>\n<td>Ano do arquivo (4 - dígitos)</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.month</code></td>\n<td>Mês do arquivo (2 dígitos sem zeros à esquerda)</td>\n<td><code>number</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Categoria (<code>category</code>):</strong> O mesmo que o layout do <code>index</code> mas adicione as seguintes variáveis.</p>\n<table>\n<thead>\n<tr>\n<th>Variável</th>\n<th>Descrição</th>\n<th>Tipo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.category</code></td>\n<td>Nome da categoria</td>\n<td><code>string</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Tag (<code>tag</code>):</strong> O mesmo que o layout do <code>index</code> mas adicione as seguintes variáveis.</p>\n<table>\n<thead>\n<tr>\n<th>Variável</th>\n<th>Descrição</th>\n<th>Tipo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.tag</code></td>\n<td>Nome da tag</td>\n<td><code>string</code></td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69d003mkoeo8p9xulxp",
				"title": "События",
				"markdown": "Hexo унаследован от сборщика событий [EventEmitter]. Используйте метод `on` для просмотра событий Hexo, и метод `emit` для генерации событий. Более подробную информацию смотрите в документации Node.js API.\n\n### deployBefore\n\nВызывается перед началом развёртывания.\n\n### deployAfter\n\nВызывается после окончания развёртывания.\n\n### exit\n\nВызывается перед закрытием Hexo.\n\n### generateBefore\n\nВызывается перед началом генерации.\n\n### generateAfter\n\nВызывается после окончания генерации.\n\n### new\n\nВызывается после того, как пост создан. Событие возвращает данные поста:\n\n``` js\nhexo.on('new', function(post){\n  //\n});\n```\n\nДанные | Описание\n--- | ---\n`post.path` | Полный путь к файлу поста\n`post.content` | Содержание файла поста\n\n### processBefore\n\nГенерируется перед началом процесса. Событие возвращает корневой каталог модуля.\n\n### processAfter\n\nГенерируется после окончания процесса. Событие возвращает корневой каталог модуля.\n\n### ready\n\nГенерируется после инициализации.\n\n[EventEmitter]: http://nodejs.org/api/events.html\n",
				"html": "<p>Hexo унаследован от сборщика событий <a href=\"http://nodejs.org/api/events.html\" target=\"_blank\" rel=\"noopener\">EventEmitter</a>. Используйте метод <code>on</code> для просмотра событий Hexo, и метод <code>emit</code> для генерации событий. Более подробную информацию смотрите в документации Node.js API.</p>\n<h3 id=\"deployBefore\"><a href=\"#deployBefore\" class=\"headerlink\" title=\"deployBefore\"></a>deployBefore</h3><p>Вызывается перед началом развёртывания.</p>\n<h3 id=\"deployAfter\"><a href=\"#deployAfter\" class=\"headerlink\" title=\"deployAfter\"></a>deployAfter</h3><p>Вызывается после окончания развёртывания.</p>\n<h3 id=\"exit\"><a href=\"#exit\" class=\"headerlink\" title=\"exit\"></a>exit</h3><p>Вызывается перед закрытием Hexo.</p>\n<h3 id=\"generateBefore\"><a href=\"#generateBefore\" class=\"headerlink\" title=\"generateBefore\"></a>generateBefore</h3><p>Вызывается перед началом генерации.</p>\n<h3 id=\"generateAfter\"><a href=\"#generateAfter\" class=\"headerlink\" title=\"generateAfter\"></a>generateAfter</h3><p>Вызывается после окончания генерации.</p>\n<h3 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h3><p>Вызывается после того, как пост создан. Событие возвращает данные поста:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.on(<span class=\"string\">'new'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Данные</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post.path</code></td>\n<td>Полный путь к файлу поста</td>\n</tr>\n<tr>\n<td><code>post.content</code></td>\n<td>Содержание файла поста</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"processBefore\"><a href=\"#processBefore\" class=\"headerlink\" title=\"processBefore\"></a>processBefore</h3><p>Генерируется перед началом процесса. Событие возвращает корневой каталог модуля.</p>\n<h3 id=\"processAfter\"><a href=\"#processAfter\" class=\"headerlink\" title=\"processAfter\"></a>processAfter</h3><p>Генерируется после окончания процесса. Событие возвращает корневой каталог модуля.</p>\n<h3 id=\"ready\"><a href=\"#ready\" class=\"headerlink\" title=\"ready\"></a>ready</h3><p>Генерируется после инициализации.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69d003nkoeocrq47lw7",
				"title": "Консоль",
				"markdown": "Консоль служит для взаимодействия пользователей с Hexo. Регистрирует и описывает доступные консольные команды.\n\n## Краткий обзор\n\n``` js\nhexo.extend.console.register(name, desc, options, function(args){\n  // ...\n});\n```\n\nСвойство | Описание\n--- | ---\n`name` | Имя\n`desc` | Описание\n`options`| Опции\n\nЗначение из аргумента `args` передаётся в функцию. Свойство описывает вводимые через терминал данные. Анализируется с помощью [Minimist].\n\n## Опции\n\n### usage\n\nДобавление используемых команд в консоль. Например:\n\n``` js\n{usage: '[layout] <title>'}\n// hexo new [layout] <title>\n```\n\n### arguments\n\nОписание аргументов в консоли. Например:\n\n``` js\n{\n  arguments: [\n    {name: 'layout', desc: 'Post layout'},\n    {name: 'title', desc: 'Post title'}\n  ]\n}\n```\n\n### options\n\nОписание опций в консоли. Например:\n\n``` js\n{\n  options: [\n    {name: '-r, --replace', desc: 'Replace existing files'}\n  ]\n}\n```\n\n### desc\n\nПодробная информация о консольной команде.\n\n## Пример\n\n``` js\nhexo.extend.console.register('config', 'Display configuration', function(args){\n  console.log(hexo.config);\n});\n```\n\n[Minimist]: https://github.com/substack/minimist\n",
				"html": "<p>Консоль служит для взаимодействия пользователей с Hexo. Регистрирует и описывает доступные консольные команды.</p>\n<h2 id=\"Краткий-обзор\"><a href=\"#Краткий-обзор\" class=\"headerlink\" title=\"Краткий обзор\"></a>Краткий обзор</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(name, desc, options, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Свойство</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>Имя</td>\n</tr>\n<tr>\n<td><code>desc</code></td>\n<td>Описание</td>\n</tr>\n<tr>\n<td><code>options</code></td>\n<td>Опции</td>\n</tr>\n</tbody>\n</table>\n<p>Значение из аргумента <code>args</code> передаётся в функцию. Свойство описывает вводимые через терминал данные. Анализируется с помощью <a href=\"https://github.com/substack/minimist\" target=\"_blank\" rel=\"noopener\">Minimist</a>.</p>\n<h2 id=\"Опции\"><a href=\"#Опции\" class=\"headerlink\" title=\"Опции\"></a>Опции</h2><h3 id=\"usage\"><a href=\"#usage\" class=\"headerlink\" title=\"usage\"></a>usage</h3><p>Добавление используемых команд в консоль. Например:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">usage</span>: <span class=\"string\">'[layout] &lt;title&gt;'</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">// hexo new [layout] &lt;title&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"arguments\"><a href=\"#arguments\" class=\"headerlink\" title=\"arguments\"></a>arguments</h3><p>Описание аргументов в консоли. Например:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"built_in\">arguments</span>: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'layout'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post layout'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'title'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post title'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"options\"><a href=\"#options\" class=\"headerlink\" title=\"options\"></a>options</h3><p>Описание опций в консоли. Например:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  options: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'-r, --replace'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Replace existing files'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"desc\"><a href=\"#desc\" class=\"headerlink\" title=\"desc\"></a>desc</h3><p>Подробная информация о консольной команде.</p>\n<h2 id=\"Пример\"><a href=\"#Пример\" class=\"headerlink\" title=\"Пример\"></a>Пример</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(<span class=\"string\">'config'</span>, <span class=\"string\">'Display configuration'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(hexo.config);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69d003okoeo4j9i99ws",
				"title": "Фильтры",
				"markdown": "Фильтры используются для изменения указанных данных. Hexo передает данные для фильтров в определенной последовательности и фильтров изменения данных один за другим. Эта концепция была заимствована из [WordPress](http://codex.wordpress.org/Plugin_API#Filters)\n\n## Краткий обзор\n\n``` js\nhexo.extend.filter.register(type, function(){\n  // ...\n}, priority);\n```\n\nВы можете определить приоритет. Низкий приоритет означает, что он будет выполняться в первую очередь. Приоритет по умолчанию равен 10\n\n## Использование фильтров\n\n``` js\nhexo.extend.filter.exec(type, data, options);\nhexo.extend.filter.execSync(type, data, options);\n```\n\nОпция | Описание\n--- | ---\n`context` | Контекст\n`args` | Аргументы. Должны быть в виде массива.\n\nПервый аргумент, передаваемый в каждый фильтр - `data`. Данные `data`, передаваемые в следующий фильтр могут быть изменены путем возврата нового значения. Если же ничего не возвращается, данные остаются без изменений. Вы даже можете использовать аргументы, чтобы указать другие аргументы в фильтрах. Например:\n\n``` js\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'some data'\n  // arg1 === 'foo'\n  // arg2 === 'bar'\n\n  return 'something';\n});\n\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'something'\n});\n\nhexo.extend.filter.exec('test', 'some data', {\n  args: ['foo', 'bar']\n});\n```\n\nТакже можно использовать следующие методы для выполнения фильтров:\n\n``` js\nhexo.execFilter(type, data, options);\nhexo.execFilterSync(type, data, options);\n```\n\n## Отмена фильтров\n\n``` js\nhexo.extend.filter.unregister(type, filter);\n```\n\n## Список фильтров\n\nЗдесь находится список фильтров, используемых в Hexo.\n\n### before_post_render\n\nВыполняется перед началом обработки поста. См. [post rendering](posts.html#Render) для изучения этапов обработки.\n\nНапример, перевести название в Нижний регистр:\n\n``` js\nhexo.extend.filter.register('before_post_render', function(data){\n  data.title = data.title.toLowerCase();\n  return data;\n});\n```\n\n### after_post_render\n\nВыполняется после завершения обработки поста. См. [post rendering](posts.html#Обработка) для изучения этапов выполнения.\n\nНапример, чтобы заменить `@username` ссылкой на профиль в Twitter:\n\n``` js\nhexo.extend.filter.register('after_post_render', function(data){\n  data.content = data.content.replace(/@(\\d+)/, '<a href=\"http://twitter.com/$1\">#$1</a>');\n  return data;\n});\n```\n\n### before_exit\n\nВыполняется перед выходом из Hexo. Срабатывает сразу после выполнения `hexo.exit`.\n\n``` js\nhexo.extend.filter.register('before_exit', function(){\n  // ...\n});\n```\n\n### before_generate\n\nВыполнится перед началом генерации.\n\n``` js\nhexo.extend.filter.register('before_generate', function(){\n  // ...\n});\n```\n\n### after_generate\n\nВыполнится после окончания генерации.\n\n``` js\nhexo.extend.filter.register('after_generate', function(){\n  // ...\n});\n```\n\n### template_locals\n\nПозволяет изменять [локальные переменные](../docs/variables.html) в шаблонах.\n\nНапример, чтобы добавить переменную текущего времени в шаблон:\n\n``` js\nhexo.extend.filter.register('template_locals', function(locals){\n  locals.now = Date.now();\n  return locals;\n});\n```\n\n### after_init\n\nВыполнится после начала инициализации Hexo - запустится только после того, как полностью отработает команда `hexo.init`.\n\n``` js\nhexo.extend.filter.register('after_init', function(){\n  // ...\n});\n```\n\n### new_post_path\n\nИспользуется при создании поста для определения пути постоянной ссылки.\n\n``` js\nhexo.extend.filter.register('new_post_path', function(data, replace){\n  // ...\n});\n```\n\n### post_permalink\n\nВыполняется при создании поста, для определения пути постоянной ссылки.\n\n``` js\nhexo.extend.filter.register('post_permalink', function(data){\n  // ...\n});\n```\n\n### after_render\n\nВыполнится после завершения обработки. См. [рендеринг](rendering.html#after_render_Filters) для подробностей.\n\n### server_middleware\n\nДобавляет промежуточные задачи для сервера. `app` является экземпляром [Connect].\n\nНапример, чтобы добавить `X-Powered-By: Hexo` в заголовке ответа:\n\n``` js\nhexo.extend.filter.register('server_middleware', function(app){\n  app.use(function(req, res, next){\n    res.setHeader('X-Powered-By', 'Hexo');\n    next();\n  });\n});\n```\n\n[Connect]: https://github.com/senchalabs/connect\n",
				"html": "<p>Фильтры используются для изменения указанных данных. Hexo передает данные для фильтров в определенной последовательности и фильтров изменения данных один за другим. Эта концепция была заимствована из <a href=\"http://codex.wordpress.org/Plugin_API#Filters\" target=\"_blank\" rel=\"noopener\">WordPress</a></p>\n<h2 id=\"Краткий-обзор\"><a href=\"#Краткий-обзор\" class=\"headerlink\" title=\"Краткий обзор\"></a>Краткий обзор</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(type, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, priority);</span><br></pre></td></tr></table></figure>\n<p>Вы можете определить приоритет. Низкий приоритет означает, что он будет выполняться в первую очередь. Приоритет по умолчанию равен 10</p>\n<h2 id=\"Использование-фильтров\"><a href=\"#Использование-фильтров\" class=\"headerlink\" title=\"Использование фильтров\"></a>Использование фильтров</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.exec(type, data, options);</span><br><span class=\"line\">hexo.extend.filter.execSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>context</code></td>\n<td>Контекст</td>\n</tr>\n<tr>\n<td><code>args</code></td>\n<td>Аргументы. Должны быть в виде массива.</td>\n</tr>\n</tbody>\n</table>\n<p>Первый аргумент, передаваемый в каждый фильтр - <code>data</code>. Данные <code>data</code>, передаваемые в следующий фильтр могут быть изменены путем возврата нового значения. Если же ничего не возвращается, данные остаются без изменений. Вы даже можете использовать аргументы, чтобы указать другие аргументы в фильтрах. Например:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'some data'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg1 === 'foo'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg2 === 'bar'</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'something'</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'something'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.exec(<span class=\"string\">'test'</span>, <span class=\"string\">'some data'</span>, &#123;</span><br><span class=\"line\">  args: [<span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span>]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Также можно использовать следующие методы для выполнения фильтров:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.execFilter(type, data, options);</span><br><span class=\"line\">hexo.execFilterSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Отмена-фильтров\"><a href=\"#Отмена-фильтров\" class=\"headerlink\" title=\"Отмена фильтров\"></a>Отмена фильтров</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.unregister(type, filter);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Список-фильтров\"><a href=\"#Список-фильтров\" class=\"headerlink\" title=\"Список фильтров\"></a>Список фильтров</h2><p>Здесь находится список фильтров, используемых в Hexo.</p>\n<h3 id=\"before-post-render\"><a href=\"#before-post-render\" class=\"headerlink\" title=\"before_post_render\"></a>before_post_render</h3><p>Выполняется перед началом обработки поста. См. <a href=\"posts.html#Render\">post rendering</a> для изучения этапов обработки.</p>\n<p>Например, перевести название в Нижний регистр:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.title = data.title.toLowerCase();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-post-render\"><a href=\"#after-post-render\" class=\"headerlink\" title=\"after_post_render\"></a>after_post_render</h3><p>Выполняется после завершения обработки поста. См. <a href=\"posts.html#Обработка\">post rendering</a> для изучения этапов выполнения.</p>\n<p>Например, чтобы заменить <code>@username</code> ссылкой на профиль в Twitter:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.content = data.content.replace(<span class=\"regexp\">/@(\\d+)/</span>, <span class=\"string\">'&lt;a href=\"http://twitter.com/$1\"&gt;#$1&lt;/a&gt;'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-exit\"><a href=\"#before-exit\" class=\"headerlink\" title=\"before_exit\"></a>before_exit</h3><p>Выполняется перед выходом из Hexo. Срабатывает сразу после выполнения <code>hexo.exit</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_exit'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-generate\"><a href=\"#before-generate\" class=\"headerlink\" title=\"before_generate\"></a>before_generate</h3><p>Выполнится перед началом генерации.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-generate\"><a href=\"#after-generate\" class=\"headerlink\" title=\"after_generate\"></a>after_generate</h3><p>Выполнится после окончания генерации.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"template-locals\"><a href=\"#template-locals\" class=\"headerlink\" title=\"template_locals\"></a>template_locals</h3><p>Позволяет изменять <a href=\"../docs/variables.html\">локальные переменные</a> в шаблонах.</p>\n<p>Например, чтобы добавить переменную текущего времени в шаблон:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'template_locals'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  locals.now = <span class=\"built_in\">Date</span>.now();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-init\"><a href=\"#after-init\" class=\"headerlink\" title=\"after_init\"></a>after_init</h3><p>Выполнится после начала инициализации Hexo - запустится только после того, как полностью отработает команда <code>hexo.init</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_init'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"new-post-path\"><a href=\"#new-post-path\" class=\"headerlink\" title=\"new_post_path\"></a>new_post_path</h3><p>Используется при создании поста для определения пути постоянной ссылки.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'new_post_path'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, replace</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"post-permalink\"><a href=\"#post-permalink\" class=\"headerlink\" title=\"post_permalink\"></a>post_permalink</h3><p>Выполняется при создании поста, для определения пути постоянной ссылки.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'post_permalink'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-render\"><a href=\"#after-render\" class=\"headerlink\" title=\"after_render\"></a>after_render</h3><p>Выполнится после завершения обработки. См. <a href=\"rendering.html#after_render_Filters\">рендеринг</a> для подробностей.</p>\n<h3 id=\"server-middleware\"><a href=\"#server-middleware\" class=\"headerlink\" title=\"server_middleware\"></a>server_middleware</h3><p>Добавляет промежуточные задачи для сервера. <code>app</code> является экземпляром <a href=\"https://github.com/senchalabs/connect\" target=\"_blank\" rel=\"noopener\">Connect</a>.</p>\n<p>Например, чтобы добавить <code>X-Powered-By: Hexo</code> в заголовке ответа:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'server_middleware'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>)</span>&#123;</span><br><span class=\"line\">  app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;</span><br><span class=\"line\">    res.setHeader(<span class=\"string\">'X-Powered-By'</span>, <span class=\"string\">'Hexo'</span>);</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69d003pkoeombhifl73",
				"title": "Инструмент размещения",
				"markdown": "Позволяет быстро развернуть свой сайт на удалённом сервере без сложных команд.\n\n## Краткий обзор\n\n``` js\nhexo.extend.deployer.register(name, function(args){\n  // ...\n});\n```\n\nВ аргумент `args` передаётся функция, которая содержит развернутое значение, взятое из `_config.yml`. Дополнительно нужно ввести через терминал данные для входа.\n",
				"html": "<p>Позволяет быстро развернуть свой сайт на удалённом сервере без сложных команд.</p>\n<h2 id=\"Краткий-обзор\"><a href=\"#Краткий-обзор\" class=\"headerlink\" title=\"Краткий обзор\"></a>Краткий обзор</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.deployer.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>В аргумент <code>args</code> передаётся функция, которая содержит развернутое значение, взятое из <code>_config.yml</code>. Дополнительно нужно ввести через терминал данные для входа.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69e003qkoeogp2j57ya",
				"title": "Генератор",
				"markdown": "Генератор создаёт ссылки на основе обработанных файлов.\n\n## Краткий обзор\n\n``` js\nhexo.extend.generator.register(name, function(locals){\n  // ...\n});\n```\n\nАргумент `locals` передается в функцию, содержащую переменные сайта. Нужно использовать этот аргумент, чтобы получить [переменные сайта](../docs/variables.html#Переменные-сайта), тем самым убирается необходимость обращаться к базе данных напрямую.\n\n## Обновление путей\n\n``` js\nhexo.extend.generator.register('test', function(locals){\n  // Object\n  return {\n    path: 'foo',\n    data: 'foo'\n  };\n\n  // Array\n  return [\n    {path: 'foo', data: 'foo'},\n    {path: 'bar', data: 'bar'}\n  ];\n});\n```\n\nАтрибут | Описание\n--- | ---\n`path` | Путь не включает префикс `/`.\n`data` | Данные\n`layout` | Макет. Укажите макеты для рендеринга. Значение может быть строкой или массивом. Если это проигнорировать, то путь будет возвращать данные `data` напрямую.\n\nКогда исходные файлы обновляются, Hexo выполняет генерацию и пересоздаёт ссылки. **Пожалуйста, генерируйте данные, а не создавайте ссылки напрямую.**\n\n## Примеры\n\n### Страница архива\n\nСоздаёт страницу архива в `archives/index.html`. Проходит по данным всех постов, указанных в шаблонах. Эти данные соответствуют переменной `page` в шаблонах.\n\nДалее, устанавливается атрибут `layout` для рендеринга шаблонов. В этом примере два варианта: если макета для `archive` нет, будет использоваться макет `index`.\n\n``` js\nhexo.extend.generator.register('archive', function(locals){\n  return {\n    path: 'archives/index.html',\n    data: locals.posts,\n    layout: ['archive', 'index']\n  }\n});\n```\n\n### Страница архива с постраничным разбиением\n\nМожно использовать удобный официальный инструмент [hexo-pagination], для легкого создания страниц с постраничной нумерацией.\n\n``` js\nvar pagination = require('hexo-pagination');\n\nhexo.extend.generator.register('archive', function(locals){\n  return pagination('archives/index.html', locals.posts, {\n    perPage: 10,\n    layout: ['archive', 'index'],\n    data: {}\n  });\n});\n```\n\n### Генерация всех постов\n\nПеребирает все посты из переменной `locals.posts` и создаёт пути для всех найденных.\n\n``` js\nhexo.extend.generator.register('post', function(locals){\n  return locals.posts.map(function(post){\n    return {\n      path: post.path,\n      data: post,\n      layout: 'post'\n    };\n  });\n});\n```\n\n### Копирование файлов\n\nНа этот раз не обойтись без явного возврата данных, но вместо отправки `data` в функцию, используется `fs.ReadStream`. Но только при необходимости.\n\n``` js\nvar fs = require('hexo-fs');\n\nhexo.extend.generator.register('asset', function(locals){\n  return {\n    path: 'file.txt',\n    data: function(){\n      return fs.createReadStream('path/to/file.txt')\n    }\n  };\n});\n```\n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n",
				"html": "<p>Генератор создаёт ссылки на основе обработанных файлов.</p>\n<h2 id=\"Краткий-обзор\"><a href=\"#Краткий-обзор\" class=\"headerlink\" title=\"Краткий обзор\"></a>Краткий обзор</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Аргумент <code>locals</code> передается в функцию, содержащую переменные сайта. Нужно использовать этот аргумент, чтобы получить <a href=\"../docs/variables.html#Переменные-сайта\">переменные сайта</a>, тем самым убирается необходимость обращаться к базе данных напрямую.</p>\n<h2 id=\"Обновление-путей\"><a href=\"#Обновление-путей\" class=\"headerlink\" title=\"Обновление путей\"></a>Обновление путей</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Object</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'foo'</span>,</span><br><span class=\"line\">    data: <span class=\"string\">'foo'</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Array</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> [</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'foo'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'foo'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'bar'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'bar'</span>&#125;</span><br><span class=\"line\">  ];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Атрибут</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>path</code></td>\n<td>Путь не включает префикс <code>/</code>.</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>Данные</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Макет. Укажите макеты для рендеринга. Значение может быть строкой или массивом. Если это проигнорировать, то путь будет возвращать данные <code>data</code> напрямую.</td>\n</tr>\n</tbody>\n</table>\n<p>Когда исходные файлы обновляются, Hexo выполняет генерацию и пересоздаёт ссылки. <strong>Пожалуйста, генерируйте данные, а не создавайте ссылки напрямую.</strong></p>\n<h2 id=\"Примеры\"><a href=\"#Примеры\" class=\"headerlink\" title=\"Примеры\"></a>Примеры</h2><h3 id=\"Страница-архива\"><a href=\"#Страница-архива\" class=\"headerlink\" title=\"Страница архива\"></a>Страница архива</h3><p>Создаёт страницу архива в <code>archives/index.html</code>. Проходит по данным всех постов, указанных в шаблонах. Эти данные соответствуют переменной <code>page</code> в шаблонах.</p>\n<p>Далее, устанавливается атрибут <code>layout</code> для рендеринга шаблонов. В этом примере два варианта: если макета для <code>archive</code> нет, будет использоваться макет <code>index</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'archives/index.html'</span>,</span><br><span class=\"line\">    data: locals.posts,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Страница-архива-с-постраничным-разбиением\"><a href=\"#Страница-архива-с-постраничным-разбиением\" class=\"headerlink\" title=\"Страница архива с постраничным разбиением\"></a>Страница архива с постраничным разбиением</h3><p>Можно использовать удобный официальный инструмент <a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a>, для легкого создания страниц с постраничной нумерацией.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pagination(<span class=\"string\">'archives/index.html'</span>, locals.posts, &#123;</span><br><span class=\"line\">    perPage: <span class=\"number\">10</span>,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>],</span><br><span class=\"line\">    data: &#123;&#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Генерация-всех-постов\"><a href=\"#Генерация-всех-постов\" class=\"headerlink\" title=\"Генерация всех постов\"></a>Генерация всех постов</h3><p>Перебирает все посты из переменной <code>locals.posts</code> и создаёт пути для всех найденных.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'post'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals.posts.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      path: post.path,</span><br><span class=\"line\">      data: post,</span><br><span class=\"line\">      layout: <span class=\"string\">'post'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Копирование-файлов\"><a href=\"#Копирование-файлов\" class=\"headerlink\" title=\"Копирование файлов\"></a>Копирование файлов</h3><p>На этот раз не обойтись без явного возврата данных, но вместо отправки <code>data</code> в функцию, используется <code>fs.ReadStream</code>. Но только при необходимости.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'asset'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'file.txt'</span>,</span><br><span class=\"line\">    data: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> fs.createReadStream(<span class=\"string\">'path/to/file.txt'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69e003rkoeomjxlv8xz",
				"title": "Помощник",
				"markdown": "Помощник позволяет легко и быстро добавлять фрагменты кода в шаблоны. Мы рекомендуем использовать помощников в шаблонах, когда вы имеете дело со сложным кодом.\n\n## Краткий обзор\n\n``` js\nhexo.extend.helper.register(name, function(){\n  // ...\n});\n```\n\n## Пример\n\n``` js\nhexo.extend.helper.register('js', function(path){\n  return '<script type=\"text/javascript\" src=\"' + path + '\"></script>';\n});\n```\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"script.js\"></script>\n```\n",
				"html": "<p>Помощник позволяет легко и быстро добавлять фрагменты кода в шаблоны. Мы рекомендуем использовать помощников в шаблонах, когда вы имеете дело со сложным кодом.</p>\n<h2 id=\"Краткий-обзор\"><a href=\"#Краткий-обзор\" class=\"headerlink\" title=\"Краткий обзор\"></a>Краткий обзор</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Пример\"><a href=\"#Пример\" class=\"headerlink\" title=\"Пример\"></a>Пример</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(<span class=\"string\">'js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script type=\"text/javascript\" src=\"'</span> + path + <span class=\"string\">'\"&gt;&lt;/script&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69e003skoeou77okpwp",
				"title": "API",
				"markdown": "Эта документация содержит подробную информацию об API и будет особенно полезна для людей, желающих изменить исходный код Hexo или писать новые плагины. Если Вас интересуют основы использования Hexo, пожалуйста, используйте [документацию](../docs).\n\nОбратите внимание, эта документация действительна только для Hexo 3 и выше.\n\n## Инициализация\n\nВо-первых, нужно создать экземпляр Hexo. Он принимает два аргумента: корневой каталог сайта `base_dir` и объект, содержащий параметры инициализации. Далее для инициализации выполняется метод `init`, он вызывает Hexo и загружает настройки и плагины.\n\n``` js\nvar Hexo = require('hexo');\nvar hexo = new Hexo(process.cwd(), {});\n\nhexo.init().then(function(){\n  // ...\n});\n```\n\nОпция | Описание | По умолчанию\n--- | --- | ---\n`debug` | Включает режим отладки. Отображает отладочные сообщения в консоль и сохраняет в файл `debug.log`, находящийся в корневой директории. | `false`\n`safe` | Включает безопасный режим. Пропускается загрузка всех плагинов. | `false`\n`silent` | Включает тихий режим. Скрывает отображение любых сообщений в терминале. | `false`\n`config` | Указывает путь к файлу конфигурации. | `_config.yml`\n\n## Загрузка файлов\n\nHexo предусмотривает два способа загрузки файлов: `load` и `watch`. `load` используется для загрузки всех файлов из исходной папки и данных темы. `watch` делает то же самое, а также следит за файлами и запускает обработку при их изменении.\n\nОба метода позволяют загрузить список файлов и передать их в соответствующие обработчики. После того как все файлы будут обработаны, они вызывут генератор создания ссылок.\n\n``` js\nhexo.load().then(function(){\n  // ...\n});\n\nhexo.watch().then(function(){\n  // Можно использовать hexo.unwatch() позже для отмены отслеживания изменений в файлах.\n});\n```\n\n## Выполнение команд\n\nЛюбую консольную команду можно вызвать явно с помощью метода `call` в экземпляре Hexo. Такой вызов принимает два аргумента: команду, и её опции. Для каждой команды доступны свои опции.\n\n``` js\nhexo.call('generate', {}).then(function(){\n  // ...\n});\n```\n\n## Выход\n\nПосле успешного или неудачного завершения команд в консоли нужно вызывать метод `exit`. Это позволяет Hexo корректно завершить и закончить важные задачи, например сохранение базы данных.\n\n``` js\nhexo.call('generate').then(function(){\n  return hexo.exit();\n}).catch(function(err){\n  return hexo.exit(err);\n});\n```\n",
				"html": "<p>Эта документация содержит подробную информацию об API и будет особенно полезна для людей, желающих изменить исходный код Hexo или писать новые плагины. Если Вас интересуют основы использования Hexo, пожалуйста, используйте <a href=\"../docs\">документацию</a>.</p>\n<p>Обратите внимание, эта документация действительна только для Hexo 3 и выше.</p>\n<h2 id=\"Инициализация\"><a href=\"#Инициализация\" class=\"headerlink\" title=\"Инициализация\"></a>Инициализация</h2><p>Во-первых, нужно создать экземпляр Hexo. Он принимает два аргумента: корневой каталог сайта <code>base_dir</code> и объект, содержащий параметры инициализации. Далее для инициализации выполняется метод <code>init</code>, он вызывает Hexo и загружает настройки и плагины.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Hexo = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> hexo = <span class=\"keyword\">new</span> Hexo(process.cwd(), &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.init().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n<th>По умолчанию</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>debug</code></td>\n<td>Включает режим отладки. Отображает отладочные сообщения в консоль и сохраняет в файл <code>debug.log</code>, находящийся в корневой директории.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>safe</code></td>\n<td>Включает безопасный режим. Пропускается загрузка всех плагинов.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>silent</code></td>\n<td>Включает тихий режим. Скрывает отображение любых сообщений в терминале.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>Указывает путь к файлу конфигурации.</td>\n<td><code>_config.yml</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Загрузка-файлов\"><a href=\"#Загрузка-файлов\" class=\"headerlink\" title=\"Загрузка файлов\"></a>Загрузка файлов</h2><p>Hexo предусмотривает два способа загрузки файлов: <code>load</code> и <code>watch</code>. <code>load</code> используется для загрузки всех файлов из исходной папки и данных темы. <code>watch</code> делает то же самое, а также следит за файлами и запускает обработку при их изменении.</p>\n<p>Оба метода позволяют загрузить список файлов и передать их в соответствующие обработчики. После того как все файлы будут обработаны, они вызывут генератор создания ссылок.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.load().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Можно использовать hexo.unwatch() позже для отмены отслеживания изменений в файлах.</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Выполнение-команд\"><a href=\"#Выполнение-команд\" class=\"headerlink\" title=\"Выполнение команд\"></a>Выполнение команд</h2><p>Любую консольную команду можно вызвать явно с помощью метода <code>call</code> в экземпляре Hexo. Такой вызов принимает два аргумента: команду, и её опции. Для каждой команды доступны свои опции.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>, &#123;&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Выход\"><a href=\"#Выход\" class=\"headerlink\" title=\"Выход\"></a>Выход</h2><p>После успешного или неудачного завершения команд в консоли нужно вызывать метод <code>exit</code>. Это позволяет Hexo корректно завершить и закончить важные задачи, например сохранение базы данных.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit();</span><br><span class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit(err);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69f003tkoeo1lcqktqu",
				"title": "Локальные переменные",
				"markdown": "Локальные переменные используются для рендеринга шаблона, они доступны через переменную `site` в шаблоне.\n\n## Переменные по умолчанию\n\nПеременная | Описание\n--- | ---\n`posts` | Все посты\n`pages` | Все страницы\n`categories` | Все категории\n`tags` | Все тэги\n\n## Получение переменной\n\n``` js\nhexo.locals.get('posts')\n```\n\n## Установка переменной\n\n``` js\nhexo.locals.set('posts', function(){\n  return ...\n});\n```\n\n## Удаление переменной\n\n``` js\nhexo.locals.remove('posts');\n```\n\n## Получение всех переменных\n\n``` js\nhexo.locals.toObject();\n```\n\n## Очистка кэша\n\n``` js\nhexo.locals.invalidate();\n```",
				"html": "<p>Локальные переменные используются для рендеринга шаблона, они доступны через переменную <code>site</code> в шаблоне.</p>\n<h2 id=\"Переменные-по-умолчанию\"><a href=\"#Переменные-по-умолчанию\" class=\"headerlink\" title=\"Переменные по умолчанию\"></a>Переменные по умолчанию</h2><table>\n<thead>\n<tr>\n<th>Переменная</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>posts</code></td>\n<td>Все посты</td>\n</tr>\n<tr>\n<td><code>pages</code></td>\n<td>Все страницы</td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>Все категории</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>Все тэги</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Получение-переменной\"><a href=\"#Получение-переменной\" class=\"headerlink\" title=\"Получение переменной\"></a>Получение переменной</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.get(<span class=\"string\">'posts'</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Установка-переменной\"><a href=\"#Установка-переменной\" class=\"headerlink\" title=\"Установка переменной\"></a>Установка переменной</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.set(<span class=\"string\">'posts'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Удаление-переменной\"><a href=\"#Удаление-переменной\" class=\"headerlink\" title=\"Удаление переменной\"></a>Удаление переменной</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.remove(<span class=\"string\">'posts'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Получение-всех-переменных\"><a href=\"#Получение-всех-переменных\" class=\"headerlink\" title=\"Получение всех переменных\"></a>Получение всех переменных</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.toObject();</span><br></pre></td></tr></table></figure>\n<h2 id=\"Очистка-кэша\"><a href=\"#Очистка-кэша\" class=\"headerlink\" title=\"Очистка кэша\"></a>Очистка кэша</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.invalidate();</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69f003ukoeomjrvaxx5",
				"title": "Посты",
				"markdown": "## Создание поста\n\n``` js\nhexo.post.create(data, replace);\n```\n\nАргумент | Описание\n--- | ---\n`data` | Данные\n`replace` | Заменять существующие файлы\n\nАтрибуты поста можно установить в переменной `data`. Таблица ниже, не является полной. Дополнительные атрибуты могут быть добавлены в шапке поста.\n\nДанные | Описание\n--- | ---\n`title` | Заголовок\n`slug` | Ссылка\n`layout` | Шаблон. По умолчанию в настройках указано `default_layout`.\n`path` | Путь. По умолчанию Hexo строит пути на основе переменной `new_post_path`, указанной в настройках.\n`date` | Дата. По умолчанию - текущая дата.\n\n## Публикация черновиков\n\n``` js\nhexo.post.publish(data, replace);\n```\n\nАргумент | Описание\n--- | ---\n`data` | Дата\n`replace` | Заменять существующие файлы\n\nАтрибуты поста можно установить в переменной `data`. Таблица ниже, не является полной. Дополнительные атрибуты могут быть добавлены в шапке поста.\n\nДанные | Описание\n--- | ---\n`slug` | Имя файла (Обязательно)\n`layout` | Шаблон. По умолчанию берется из переменной `default_layout` указанной в настройках.\n\n## Обработка\n\n``` js\nhexo.post.render(source, data);\n```\n\nАргумент | Описание\n--- | ---\n`source` | Полный путь к файлу (Необязательно)\n`data` | Данные\n\nДанные должны содержать атрибут `content`. Если нет, Hexo постарается прочитать исходный файл. Этапы выполнения этой функции следующие:\n\n- Предобработка фильтрами `before_post_render`\n- Обработка с помощью Markdown или другого обработчика (выбирается в зависимости от расширения)\n- Обработка [Nunjucks]\n- Постобработка фильтрами `after_post_render`\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n",
				"html": "<h2 id=\"Создание-поста\"><a href=\"#Создание-поста\" class=\"headerlink\" title=\"Создание поста\"></a>Создание поста</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.create(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Аргумент</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Данные</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>Заменять существующие файлы</td>\n</tr>\n</tbody>\n</table>\n<p>Атрибуты поста можно установить в переменной <code>data</code>. Таблица ниже, не является полной. Дополнительные атрибуты могут быть добавлены в шапке поста.</p>\n<table>\n<thead>\n<tr>\n<th>Данные</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Заголовок</td>\n</tr>\n<tr>\n<td><code>slug</code></td>\n<td>Ссылка</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Шаблон. По умолчанию в настройках указано <code>default_layout</code>.</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Путь. По умолчанию Hexo строит пути на основе переменной <code>new_post_path</code>, указанной в настройках.</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Дата. По умолчанию - текущая дата.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Публикация-черновиков\"><a href=\"#Публикация-черновиков\" class=\"headerlink\" title=\"Публикация черновиков\"></a>Публикация черновиков</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.publish(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Аргумент</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Дата</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>Заменять существующие файлы</td>\n</tr>\n</tbody>\n</table>\n<p>Атрибуты поста можно установить в переменной <code>data</code>. Таблица ниже, не является полной. Дополнительные атрибуты могут быть добавлены в шапке поста.</p>\n<table>\n<thead>\n<tr>\n<th>Данные</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>slug</code></td>\n<td>Имя файла (Обязательно)</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Шаблон. По умолчанию берется из переменной <code>default_layout</code> указанной в настройках.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Обработка\"><a href=\"#Обработка\" class=\"headerlink\" title=\"Обработка\"></a>Обработка</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.render(source, data);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Аргумент</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>Полный путь к файлу (Необязательно)</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>Данные</td>\n</tr>\n</tbody>\n</table>\n<p>Данные должны содержать атрибут <code>content</code>. Если нет, Hexo постарается прочитать исходный файл. Этапы выполнения этой функции следующие:</p>\n<ul>\n<li>Предобработка фильтрами <code>before_post_render</code></li>\n<li>Обработка с помощью Markdown или другого обработчика (выбирается в зависимости от расширения)</li>\n<li>Обработка <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a></li>\n<li>Постобработка фильтрами <code>after_post_render</code></li>\n</ul>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69f003vkoeot9o5upng",
				"title": "Обработчик",
				"markdown": "Обработчик используется для обработки исходных файлов в папке `source`.\n\n## Краткий обзор\n\n``` js\nhexo.extend.processor.register(rule, function(file){\n // ...\n});\n```\n\nБолее подробная информация: [Модуль](box.html).\n",
				"html": "<p>Обработчик используется для обработки исходных файлов в папке <code>source</code>.</p>\n<h2 id=\"Краткий-обзор\"><a href=\"#Краткий-обзор\" class=\"headerlink\" title=\"Краткий обзор\"></a>Краткий обзор</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.processor.register(rule, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Более подробная информация: <a href=\"box.html\">Модуль</a>.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69g003wkoeo7vjtm8bj",
				"title": "Рендер",
				"markdown": "Рендер используется для создания содержимого.\n\n## Краткий обзор\n\n``` js\nhexo.extend.renderer.register(name, output, function(data, options){\n  // ...\n}, sync);\n```\n\nАргумент | Описание\n--- | ---\n`name` | Вводится расширение входного файла (нижний регистр, без ведущей `.`)\n`output` | Выводится расширение входного файла (нижний регистр, без ведущей `.`)\n`sync` | Режим синхронизации\n\nВ функцию рендера передаются два аргумента:\n\nАргумент | Описание\n--- | ---\n`data` | Включает два атрибута: путь к файлу `path` и содержимое файла  `text`. Переменная `path` не является обязательной.\n`option` | Опции\n\n## Пример\n\n### Асинхронный режим\n\n``` js\nvar stylus = require('stylus');\n\n// Обратный вызов\nhexo.extend.renderer.register('styl', 'css', function(data, options, callback){\n  stylus(data.text).set('filename', data.path).render(callback);\n});\n\n// Запрос\nhexo.extend.renderer.register('styl', 'css', function(data, options){\n  return new Promise(function(resolve, reject){\n    resolve('test');\n  });\n});\n```\n\n### Синхронный режим\n\n``` js\nvar ejs = require('ejs');\n\nhexo.extend.renderer.register('ejs', 'html', function(data, options){\n  options.filename = data.path;\n  return ejs.render(data.text, options);\n}, true);\n```\n",
				"html": "<p>Рендер используется для создания содержимого.</p>\n<h2 id=\"Краткий-обзор\"><a href=\"#Краткий-обзор\" class=\"headerlink\" title=\"Краткий обзор\"></a>Краткий обзор</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.renderer.register(name, output, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, sync);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Аргумент</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>Вводится расширение входного файла (нижний регистр, без ведущей <code>.</code>)</td>\n</tr>\n<tr>\n<td><code>output</code></td>\n<td>Выводится расширение входного файла (нижний регистр, без ведущей <code>.</code>)</td>\n</tr>\n<tr>\n<td><code>sync</code></td>\n<td>Режим синхронизации</td>\n</tr>\n</tbody>\n</table>\n<p>В функцию рендера передаются два аргумента:</p>\n<table>\n<thead>\n<tr>\n<th>Аргумент</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Включает два атрибута: путь к файлу <code>path</code> и содержимое файла  <code>text</code>. Переменная <code>path</code> не является обязательной.</td>\n</tr>\n<tr>\n<td><code>option</code></td>\n<td>Опции</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Пример\"><a href=\"#Пример\" class=\"headerlink\" title=\"Пример\"></a>Пример</h2><h3 id=\"Асинхронный-режим\"><a href=\"#Асинхронный-режим\" class=\"headerlink\" title=\"Асинхронный режим\"></a>Асинхронный режим</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> stylus = <span class=\"built_in\">require</span>(<span class=\"string\">'stylus'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Обратный вызов</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options, callback</span>)</span>&#123;</span><br><span class=\"line\">  stylus(data.text).set(<span class=\"string\">'filename'</span>, data.path).render(callback);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Запрос</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'test'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Синхронный-режим\"><a href=\"#Синхронный-режим\" class=\"headerlink\" title=\"Синхронный режим\"></a>Синхронный режим</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'ejs'</span>, <span class=\"string\">'html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  options.filename = data.path;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, options);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69g003xkoeowxw70mls",
				"title": "Мигратор",
				"markdown": "Мигратор позволяет переходить на Hexo из других систем.\n\n## Краткий обзор\n\n``` js\nhexo.extend.migrator.register(name, function(args){\n  // ...\n});\n```\n\nАргумент `args` передаётся в функцию. Этот аргумент будет содержать данные пользователя введённые в терминал.\n",
				"html": "<p>Мигратор позволяет переходить на Hexo из других систем.</p>\n<h2 id=\"Краткий-обзор\"><a href=\"#Краткий-обзор\" class=\"headerlink\" title=\"Краткий обзор\"></a>Краткий обзор</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.migrator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Аргумент <code>args</code> передаётся в функцию. Этот аргумент будет содержать данные пользователя введённые в терминал.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69g003ykoeo8948z4rf",
				"title": "Рендеринг",
				"markdown": "Существует два метода обработки файлов или строк для рендеринга: асинхронный `hexo.render.render` и синхронный `hexo.render.renderSync`. Нет ничего удивительного в похожести этих методов. Ниже описываются только асинхронные методы.\n\n## Обработка строки\n\nПри рендеринге строки Hexo необходимо указать каким обработчиком (`engine`) её обрабатывать.\n\n``` js\nhexo.render.render({text: 'example', engine: 'swig'}).then(function(result){\n  // ...\n});\n```\n\n## Обработка файла\n\nПри обработке файла, не нужно указывать `engine`, потому что Hexo сам обнаружит соответствующий рендер автоматически в зависимости от расширения файла. Конечно, возможно и явно задать обработчик.\n\n``` js\nhexo.render.render({path: 'path/to/file.swig'}).then(function(result){\n  // ...\n});\n```\n\n## Опции обработчика\n\nМожно задать опции в качестве второго аргумента.\n\n``` js\nhexo.render.render({text: ''}, {foo: 'foo'}).then(function(result){\n  // ...\n});\n```\n\n## Фильтр after_render\n\nПри окончании обработки Hexo выполнит соответствующие фильтры, заданные в переменной `after_render`. Например эта функция запустит минификацию JavaScript'а.\n\n``` js\nvar UglifyJS = require('uglify-js');\n\nhexo.extend.filter.register('after_render:js', function(str, data){\n  var result = UglifyJS.minify(str);\n  return result.code;\n});\n```\n\n## Проверка существует ли обработчик для типа файла\n\nМожно использовать метод `isRenderable` или `isRenderableSync` для проверки зарегистрирован ли обработчик для типа файла. Только когда соответствующий обработчик был зарегистрирован будет возвращёно true.\n\n``` js\nhexo.render.isRenderable('layout.swig') // true\nhexo.render.isRenderable('image.png') // false\n```\n\n## Определение расширения на выходе\n\nМетод `getOutput` получает расширение на выходе обработчика. Если передать необрабатываемый файл, то обработчик вернёт пустую строку.\n\n``` js\nhexo.render.getOutput('layout.swig') // html\nhexo.render.getOutput('image.png') // '''\n```\n",
				"html": "<p>Существует два метода обработки файлов или строк для рендеринга: асинхронный <code>hexo.render.render</code> и синхронный <code>hexo.render.renderSync</code>. Нет ничего удивительного в похожести этих методов. Ниже описываются только асинхронные методы.</p>\n<h2 id=\"Обработка-строки\"><a href=\"#Обработка-строки\" class=\"headerlink\" title=\"Обработка строки\"></a>Обработка строки</h2><p>При рендеринге строки Hexo необходимо указать каким обработчиком (<code>engine</code>) её обрабатывать.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">'example'</span>, <span class=\"attr\">engine</span>: <span class=\"string\">'swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Обработка-файла\"><a href=\"#Обработка-файла\" class=\"headerlink\" title=\"Обработка файла\"></a>Обработка файла</h2><p>При обработке файла, не нужно указывать <code>engine</code>, потому что Hexo сам обнаружит соответствующий рендер автоматически в зависимости от расширения файла. Конечно, возможно и явно задать обработчик.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">path</span>: <span class=\"string\">'path/to/file.swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Опции-обработчика\"><a href=\"#Опции-обработчика\" class=\"headerlink\" title=\"Опции обработчика\"></a>Опции обработчика</h2><p>Можно задать опции в качестве второго аргумента.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">''</span>&#125;, &#123;<span class=\"attr\">foo</span>: <span class=\"string\">'foo'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Фильтр-after-render\"><a href=\"#Фильтр-after-render\" class=\"headerlink\" title=\"Фильтр after_render\"></a>Фильтр after_render</h2><p>При окончании обработки Hexo выполнит соответствующие фильтры, заданные в переменной <code>after_render</code>. Например эта функция запустит минификацию JavaScript’а.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> UglifyJS = <span class=\"built_in\">require</span>(<span class=\"string\">'uglify-js'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_render:js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str, data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = UglifyJS.minify(str);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result.code;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Проверка-существует-ли-обработчик-для-типа-файла\"><a href=\"#Проверка-существует-ли-обработчик-для-типа-файла\" class=\"headerlink\" title=\"Проверка существует ли обработчик для типа файла\"></a>Проверка существует ли обработчик для типа файла</h2><p>Можно использовать метод <code>isRenderable</code> или <code>isRenderableSync</code> для проверки зарегистрирован ли обработчик для типа файла. Только когда соответствующий обработчик был зарегистрирован будет возвращёно true.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Определение-расширения-на-выходе\"><a href=\"#Определение-расширения-на-выходе\" class=\"headerlink\" title=\"Определение расширения на выходе\"></a>Определение расширения на выходе</h2><p>Метод <code>getOutput</code> получает расширение на выходе обработчика. Если передать необрабатываемый файл, то обработчик вернёт пустую строку.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// html</span></span><br><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// '''</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69g003zkoeo7n9sz4cz",
				"title": "Маршрутизатор",
				"markdown": "Маршрутизатор сохраняет все ссылки используемые на сайте.\n\n## Получение пути\n\nМетод `get` возвращает поток [Stream]. Пример, для сохранения данных о ссылках в указанное место:\n\n``` js\nvar data = hexo.route.get('index.html');\nvar dest = fs.createWriteStream('somewhere');\n\ndata.pipe(dest);\n```\n\n## Установка пути\n\nМетод `set` принимает строку, [Buffer] или функцию.\n\n``` js\n// Строка\nhexo.route.set('index.html', 'index')\n\n// Buffer\nhexo.route.set('index.html', new Buffer('index'));\n\n// Функция (Запрос)\nhexo.route.set('index.html', function(){\n  return new Promise(function(resolve, reject){\n    resolve('index');\n  });\n});\n\n// Функция (Обратный вызов)\nhexo.route.set('index.html', function(callback){\n  callback(null, 'index');\n});\n```\n\nМожно, также, установить логическое значение была ли изменён путь. Это позволяет увеличить скорость создания файлов, поскольку игнорируются неизменённые ссылки.\n\n``` js\nhexo.route.set('index.html', {\n    data: 'index',\n    modified: false\n});\n\n// hexo.route.isModified('index.html') => false\n```\n\n## Удаление ссылки\n\n``` js\nhexo.route.remove('index.html');\n```\n\n## Получение списка ссылок\n\n``` js\nhexo.route.list();\n```\n\n## Формат пути\n\nМетод `format` преобразует строку в правильную ссылку.\n\n``` js\nhexo.route.format('archives/');\n// archives/index.html\n```\n\n[Stream]: http://nodejs.org/api/stream.html\n[Buffer]: http://nodejs.org/api/buffer.html\n",
				"html": "<p>Маршрутизатор сохраняет все ссылки используемые на сайте.</p>\n<h2 id=\"Получение-пути\"><a href=\"#Получение-пути\" class=\"headerlink\" title=\"Получение пути\"></a>Получение пути</h2><p>Метод <code>get</code> возвращает поток <a href=\"http://nodejs.org/api/stream.html\" target=\"_blank\" rel=\"noopener\">Stream</a>. Пример, для сохранения данных о ссылках в указанное место:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = hexo.route.get(<span class=\"string\">'index.html'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dest = fs.createWriteStream(<span class=\"string\">'somewhere'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">data.pipe(dest);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Установка-пути\"><a href=\"#Установка-пути\" class=\"headerlink\" title=\"Установка пути\"></a>Установка пути</h2><p>Метод <code>set</code> принимает строку, <a href=\"http://nodejs.org/api/buffer.html\" target=\"_blank\" rel=\"noopener\">Buffer</a> или функцию.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Строка</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"string\">'index'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Buffer</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"keyword\">new</span> Buffer(<span class=\"string\">'index'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Функция (Запрос)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'index'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Функция (Обратный вызов)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">callback</span>)</span>&#123;</span><br><span class=\"line\">  callback(<span class=\"literal\">null</span>, <span class=\"string\">'index'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Можно, также, установить логическое значение была ли изменён путь. Это позволяет увеличить скорость создания файлов, поскольку игнорируются неизменённые ссылки.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, &#123;</span><br><span class=\"line\">    data: <span class=\"string\">'index'</span>,</span><br><span class=\"line\">    modified: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// hexo.route.isModified('index.html') =&gt; false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Удаление-ссылки\"><a href=\"#Удаление-ссылки\" class=\"headerlink\" title=\"Удаление ссылки\"></a>Удаление ссылки</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.remove(<span class=\"string\">'index.html'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Получение-списка-ссылок\"><a href=\"#Получение-списка-ссылок\" class=\"headerlink\" title=\"Получение списка ссылок\"></a>Получение списка ссылок</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.list();</span><br></pre></td></tr></table></figure>\n<h2 id=\"Формат-пути\"><a href=\"#Формат-пути\" class=\"headerlink\" title=\"Формат пути\"></a>Формат пути</h2><p>Метод <code>format</code> преобразует строку в правильную ссылку.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.format(<span class=\"string\">'archives/'</span>);</span><br><span class=\"line\"><span class=\"comment\">// archives/index.html</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69h0040koeo3hgv5m74",
				"title": "Тэг",
				"markdown": "Тэг позволяет легко и быстро вставлять фрагменты в свои посты.\n\n## Краткий обзор\n\n``` js\nhexo.extend.tag.register(name, function(args, content){\n  // ...\n}, options);\n```\n\nВ функцию тэга передаются два аргумента: `args` и `content`. `args` содержит аргументы передаваемые плагину. `content` оборачивается содержанием с помощью плагина тэга.\n\nС момента введения в асинхронное отображение Hexo 3 использует [Nunjucks] для обработки. Его поведение несколько отличается от применяемого в [Swig].\n\n## Опции\n\n### ends\n\n\nИспользовать закрывающие тэги. По умолчанию установлено в `false`.\n\n### async\n\nВключает асинхронный режим. По умолчанию установлено в `false`.\n\n## Примеры\n\n### Без закрывающих тэгов\n\nВставка видео с YouTube.\n\n``` js\nhexo.extend.tag.register('youtube', function(args){\n  var id = args[0];\n  return '<div class=\"video-container\"><iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/' + id + '\" frameborder=\"0\" allowfullscreen></iframe></div>';\n});\n```\n\n### С закрывающими тэгами\n\nВставка цитаты.\n\n``` js\nhexo.extend.tag.register('pullquote', function(args, content){\n  var className =  args.join(' ');\n  return '<blockquote class=\"pullquote' + className + '\">' + content + '</blockquote>';\n}, {ends: true});\n```\n\n### Асинхронная обработка\n\nВставка файла.\n\n``` js\nvar fs = require('hexo-fs');\nvar pathFn = require('path');\n\nhexo.extend.tag.register('include_code', function(args){\n  var filename = args[0];\n  var path = pathFn.join(hexo.source_dir, filename);\n\n  return fs.readFile(path).then(function(content){\n    return '<pre><code>' + content + '</code></pre>';\n  });\n}, {async: true});\n```\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n[Swig]: http://paularmstrong.github.io/swig/\n",
				"html": "<p>Тэг позволяет легко и быстро вставлять фрагменты в свои посты.</p>\n<h2 id=\"Краткий-обзор\"><a href=\"#Краткий-обзор\" class=\"headerlink\" title=\"Краткий обзор\"></a>Краткий обзор</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, options);</span><br></pre></td></tr></table></figure>\n<p>В функцию тэга передаются два аргумента: <code>args</code> и <code>content</code>. <code>args</code> содержит аргументы передаваемые плагину. <code>content</code> оборачивается содержанием с помощью плагина тэга.</p>\n<p>С момента введения в асинхронное отображение Hexo 3 использует <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> для обработки. Его поведение несколько отличается от применяемого в <a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a>.</p>\n<h2 id=\"Опции\"><a href=\"#Опции\" class=\"headerlink\" title=\"Опции\"></a>Опции</h2><h3 id=\"ends\"><a href=\"#ends\" class=\"headerlink\" title=\"ends\"></a>ends</h3><p>Использовать закрывающие тэги. По умолчанию установлено в <code>false</code>.</p>\n<h3 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h3><p>Включает асинхронный режим. По умолчанию установлено в <code>false</code>.</p>\n<h2 id=\"Примеры\"><a href=\"#Примеры\" class=\"headerlink\" title=\"Примеры\"></a>Примеры</h2><h3 id=\"Без-закрывающих-тэгов\"><a href=\"#Без-закрывающих-тэгов\" class=\"headerlink\" title=\"Без закрывающих тэгов\"></a>Без закрывающих тэгов</h3><p>Вставка видео с YouTube.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'youtube'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> id = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;div class=\"video-container\"&gt;&lt;iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/'</span> + id + <span class=\"string\">'\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"С-закрывающими-тэгами\"><a href=\"#С-закрывающими-тэгами\" class=\"headerlink\" title=\"С закрывающими тэгами\"></a>С закрывающими тэгами</h3><p>Вставка цитаты.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'pullquote'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> className =  args.join(<span class=\"string\">' '</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;blockquote class=\"pullquote'</span> + className + <span class=\"string\">'\"&gt;'</span> + content + <span class=\"string\">'&lt;/blockquote&gt;'</span>;</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">ends</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Асинхронная-обработка\"><a href=\"#Асинхронная-обработка\" class=\"headerlink\" title=\"Асинхронная обработка\"></a>Асинхронная обработка</h3><p>Вставка файла.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> pathFn = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'include_code'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> filename = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> path = pathFn.join(hexo.source_dir, filename);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> fs.readFile(path).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">content</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;pre&gt;&lt;code&gt;'</span> + content + <span class=\"string\">'&lt;/code&gt;&lt;/pre&gt;'</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">async</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69h0041koeoyerjfe2c",
				"title": "Scaffolds",
				"markdown": "## Get a Scaffold\n\n``` js\nhexo.scaffold.get(name);\n```\n\n## Set a Scaffold\n\n``` js\nhexo.scaffold.set(name, content);\n```\n\n## Remove a Scaffold\n\n``` js\nhexo.scaffold.remove(name);\n```",
				"html": "<h2 id=\"Get-a-Scaffold\"><a href=\"#Get-a-Scaffold\" class=\"headerlink\" title=\"Get a Scaffold\"></a>Get a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.get(name);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Set-a-Scaffold\"><a href=\"#Set-a-Scaffold\" class=\"headerlink\" title=\"Set a Scaffold\"></a>Set a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.set(name, content);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-Scaffold\"><a href=\"#Remove-a-Scaffold\" class=\"headerlink\" title=\"Remove a Scaffold\"></a>Remove a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.remove(name);</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y66r0002koeo0yuvtllv",
				"title": "About",
				"markdown": "\nHexo was originally created and maintained by [Tommy Chen](https://github.com/tommy351) in 2012, now it becomes a project with 16k stars (still increasing) and 35k downloads monthly (data from 2017-May). It already helps thousands of people to build their dream website/blog. \n\n## Join us\n\nWe are the passionate people behind the Hexo. We are loving, using, and building Hexo. If you would like to join Hexo, you should have at least one approved PR. If you have already contributed to Hexo, simply shot out an issue in any Hexo repos.\n\nIf you have any questions regarding joining Hexo, feel free to contact the maintainer [Abner Chou](https://github.com/NoahDragon) or simply publish an issue to ask.\n\n## Contribute\n\nDon't know where to start? Pick up any item in [Hexo 4.0 Road Map](https://github.com/hexojs/hexo/issues/2492), and start from there. Don't hesitate to ask questions, we are glad to help.\n\n## Donate\n\n{% note info Bitcoin %}\n<p align=\"center\">\n![QR Code](bitcoin_qr.png)\n[3M9wCDjRCSkj2ecwuZc3ReJETWRow43UYg](bitcoin:3M9wCDjRCSkj2ecwuZc3ReJETWRow43UYg)\n</p>\n{% endnote %}\n\n#### Why?\n\nFirst of all, many people have asked about donation, so here it is!\n\nSecond, in all good conscience, the most of the visible costs are covered by us, like the domain name. We also spend a tremendous time to make Hexo running and functioning. This is the real cost and also invisible. \n\n#### Benefits?!\n\nWe thank for every penny donations, here is a list of benefits you and us can achieve:\n\n1. Covers our cost.\n2. Motivate and admit our work.\n3. List your name on Hexo.io website (2.5k users and 10k pageviews per day)!\n\nThere are two tiers of donation: \n  * Less than $100, your name and website link will be on the donator list.\n  * More than $100, your name, icon, and website link will be on the home page for at least one month (depend on the amount).\n  \n** Again, thanks for your support! **\n",
				"html": "<p>Hexo was originally created and maintained by <a href=\"https://github.com/tommy351\" target=\"_blank\" rel=\"noopener\">Tommy Chen</a> in 2012, now it becomes a project with 16k stars (still increasing) and 35k downloads monthly (data from 2017-May). It already helps thousands of people to build their dream website/blog. </p>\n<h2 id=\"Join-us\"><a href=\"#Join-us\" class=\"headerlink\" title=\"Join us\"></a>Join us</h2><p>We are the passionate people behind the Hexo. We are loving, using, and building Hexo. If you would like to join Hexo, you should have at least one approved PR. If you have already contributed to Hexo, simply shot out an issue in any Hexo repos.</p>\n<p>If you have any questions regarding joining Hexo, feel free to contact the maintainer <a href=\"https://github.com/NoahDragon\" target=\"_blank\" rel=\"noopener\">Abner Chou</a> or simply publish an issue to ask.</p>\n<h2 id=\"Contribute\"><a href=\"#Contribute\" class=\"headerlink\" title=\"Contribute\"></a>Contribute</h2><p>Don’t know where to start? Pick up any item in <a href=\"https://github.com/hexojs/hexo/issues/2492\" target=\"_blank\" rel=\"noopener\">Hexo 4.0 Road Map</a>, and start from there. Don’t hesitate to ask questions, we are glad to help.</p>\n<h2 id=\"Donate\"><a href=\"#Donate\" class=\"headerlink\" title=\"Donate\"></a>Donate</h2><blockquote class=\"note info\"><strong class=\"note-title\">Bitcoin</strong><p align=\"center\"><br><img src=\"bitcoin_qr.png\" alt=\"QR Code\"><br><a href=\"bitcoin:3M9wCDjRCSkj2ecwuZc3ReJETWRow43UYg\" target=\"_blank\" rel=\"noopener\">3M9wCDjRCSkj2ecwuZc3ReJETWRow43UYg</a><br></p></blockquote>\n<h4 id=\"Why\"><a href=\"#Why\" class=\"headerlink\" title=\"Why?\"></a>Why?</h4><p>First of all, many people have asked about donation, so here it is!</p>\n<p>Second, in all good conscience, the most of the visible costs are covered by us, like the domain name. We also spend a tremendous time to make Hexo running and functioning. This is the real cost and also invisible. </p>\n<h4 id=\"Benefits\"><a href=\"#Benefits\" class=\"headerlink\" title=\"Benefits?!\"></a>Benefits?!</h4><p>We thank for every penny donations, here is a list of benefits you and us can achieve:</p>\n<ol>\n<li>Covers our cost.</li>\n<li>Motivate and admit our work.</li>\n<li>List your name on Hexo.io website (2.5k users and 10k pageviews per day)!</li>\n</ol>\n<p>There are two tiers of donation: </p>\n<ul>\n<li>Less than $100, your name and website link will be on the donator list.</li>\n<li>More than $100, your name, icon, and website link will be on the home page for at least one month (depend on the amount).</li>\n</ul>\n<p><strong> Again, thanks for your support! </strong></p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69i0043koeo8ru8q7x2",
				"title": "Темы",
				"markdown": "`hexo.theme` я вляется наследником [модулей](box.html) и сохраняет шаблоны.\n\n## Получить визуализацию\n\n``` js\nhexo.theme.getView(path);\n```\n\n## Установить визуализацию\n\n``` js\nhexo.theme.setView(path, data);\n```\n\n## Удалить визуализацию\n\n``` js\nhexo.theme.removeView(path);\n```\n\n## Визуализация\n\nВизуализация использует два метода: `render` и `renderSync`. Они идентичны. Асинхронный `renderSync` является устаревшим, а `render`более новым. Для простоты будет рассмотрен только метод `render`.\n\n``` js\nvar view = hexo.theme.getView('layout.swig');\n\nview.render({foo: 1, bar: 2}).then(function(result){\n  // ...\n});\n```\n\nМожно передать параметры в метод `render` и он попытается обработать шаблон соответствующим обработчиком и загрузить [помощников](helper.html). Когда обработка завершена ищется макет. Если макет `layout` установлен в значение `false` или не существует, результат возвращается напрямую.\n",
				"html": "<p><code>hexo.theme</code> я вляется наследником <a href=\"box.html\">модулей</a> и сохраняет шаблоны.</p>\n<h2 id=\"Получить-визуализацию\"><a href=\"#Получить-визуализацию\" class=\"headerlink\" title=\"Получить визуализацию\"></a>Получить визуализацию</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.getView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Установить-визуализацию\"><a href=\"#Установить-визуализацию\" class=\"headerlink\" title=\"Установить визуализацию\"></a>Установить визуализацию</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.setView(path, data);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Удалить-визуализацию\"><a href=\"#Удалить-визуализацию\" class=\"headerlink\" title=\"Удалить визуализацию\"></a>Удалить визуализацию</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.removeView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Визуализация\"><a href=\"#Визуализация\" class=\"headerlink\" title=\"Визуализация\"></a>Визуализация</h2><p>Визуализация использует два метода: <code>render</code> и <code>renderSync</code>. Они идентичны. Асинхронный <code>renderSync</code> является устаревшим, а <code>render</code>более новым. Для простоты будет рассмотрен только метод <code>render</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> view = hexo.theme.getView(<span class=\"string\">'layout.swig'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">view.render(&#123;<span class=\"attr\">foo</span>: <span class=\"number\">1</span>, <span class=\"attr\">bar</span>: <span class=\"number\">2</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Можно передать параметры в метод <code>render</code> и он попытается обработать шаблон соответствующим обработчиком и загрузить <a href=\"helper.html\">помощников</a>. Когда обработка завершена ищется макет. Если макет <code>layout</code> установлен в значение <code>false</code> или не существует, результат возвращается напрямую.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69j0044koeoc82p5d61",
				"title": "Конфигурация",
				"markdown": "Можно изменить настройки в файле `_config.yml`.\n\n### Сайт\n\nНастройки | Описание\n--- | ---\n`title` | Название сайта\n`subtitle` | Подзаголовок сайта\n`description` | Описание сайта\n`author` | Ваше имя\n`language` | Язык сайта. Используйте [2-значный код ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes). По умолчанию: `en`.\n`timezone` | Временной пояс. Hexo использует настройки компьютера по умолчанию. Список доступных часовых поясов можно найти [здесь](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). Несколько примеров: `America/New_York`, `Japan` и `UTC`.\n\n### URL\n\nПараметр | Описание | Умолчание\n--- | --- | ---\n`url` | URL-адрес сайта |\n`root` | Корневая папка сайта |\n`permalink` | [Постоянная ссылка](permalinks.html) используются ссылки на статьи | `:year/:month/:day/:title/`\n`permalink_defaults` | Значение по умолчанию для каждого сегмента постоянной ссылки |\n\n{% note info Сайт в подпапке %}\nЕсли ваш сайт располагается в поддиректории (к примеру `http://example.org/blog`) поменяйте значение `url` на `http://example.org/blog` и установите переменной `root` значение `/blog/`.\n{% endnote %}\n\n### Папки\n\nПараметр | Описание | Умолчание\n--- | --- | ---\n`source_dir` | Папка с исходниками. Здесь хранится контент | `source`\n`public_dir` | Папка публикации. Здесь хранится сгенерированный сайт | `public`\n`tag_dir` | Папка с тэгами | `tags`\n`archive_dir` | Папка с архивами | `archives`\n`category_dir` | Папка с категориями | `categories`\n`code_dir` | Папка с кодом | `downloads/code`\n`i18n_dir` | Папка  i18n | `:lang`\n`skip_render` | Пути, которые исключены из обработки. Можно использовать [глобальные выражения](https://github.com/isaacs/minimatch) для определения путей |\n\n### Написание\n\nПараметр | Описание | Умолчание\n--- | --- | ---\n`new_post_name` | Имя файла для создания новых постов | `:title.md`\n`default_layout` | Макет по умолчанию | `post`\n`titlecase` | Преобразовать текст в заглавные? | `false`\n`external_link` | Открывать внешние ссылки в новой вкладке? | `true`\n`filename_case` | Преобразовать имена файлов в `1` нижний регистр; `2` верхний регистр | `0`\n`render_drafts` | Отображать черновики? | `false`\n`post_asset_folder` | Включать [папку с материалами](asset-folders.html)? | `false`\n`relative_link` | Создание ссылок относительно корневой папки? | `false`\n`future` | Отображать будущие посты? | `true`\n`highlight` | Настройки блоков кода |\n\n### Категории и тэги\n\nПараметр | Описание | Умолчание\n--- | --- | ---\n`default_category` | Категория по умолчанию | `uncategorized`\n`category_map` | Карта категорий |\n`tag_map` | Карта тэгов |\n\n### Даты / Времени формат\n\nHexo использует [Moment.js](http://momentjs.com/) Для работы с датами.\n\nПараметр | Описание | Умолчание\n--- | --- | ---\n`date_format` | Формат даты | `YYYY-MM-DD`\n`time_format` | Формат времени | `H:mm:ss`\n\n### Разбивка на страницы\n\nПараметр | Описание | Умолчание\n--- | --- | ---\n`per_page` | Количество постов, отображаемых на странице. `0` отключает разбивку. | `10`\n`pagination_dir` | Каталог разбивки | `page`\n\n### Расширения\n\nПараметр | Описание\n--- | ---\n`theme` | Имя темы. `false` отключает применение тем\n`deploy` | Параметры публикации\n",
				"html": "<p>Можно изменить настройки в файле <code>_config.yml</code>.</p>\n<h3 id=\"Сайт\"><a href=\"#Сайт\" class=\"headerlink\" title=\"Сайт\"></a>Сайт</h3><table>\n<thead>\n<tr>\n<th>Настройки</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Название сайта</td>\n</tr>\n<tr>\n<td><code>subtitle</code></td>\n<td>Подзаголовок сайта</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>Описание сайта</td>\n</tr>\n<tr>\n<td><code>author</code></td>\n<td>Ваше имя</td>\n</tr>\n<tr>\n<td><code>language</code></td>\n<td>Язык сайта. Используйте <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"_blank\" rel=\"noopener\">2-значный код ISO-639-1</a>. По умолчанию: <code>en</code>.</td>\n</tr>\n<tr>\n<td><code>timezone</code></td>\n<td>Временной пояс. Hexo использует настройки компьютера по умолчанию. Список доступных часовых поясов можно найти <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" target=\"_blank\" rel=\"noopener\">здесь</a>. Несколько примеров: <code>America/New_York</code>, <code>Japan</code> и <code>UTC</code>.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h3><table>\n<thead>\n<tr>\n<th>Параметр</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>url</code></td>\n<td>URL-адрес сайта</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>Корневая папка сайта</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td><a href=\"permalinks.html\">Постоянная ссылка</a> используются ссылки на статьи</td>\n<td><code>:year/:month/:day/:title/</code></td>\n</tr>\n<tr>\n<td><code>permalink_defaults</code></td>\n<td>Значение по умолчанию для каждого сегмента постоянной ссылки</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note info\"><strong class=\"note-title\">Сайт в подпапке</strong><p>Если ваш сайт располагается в поддиректории (к примеру <code>http://example.org/blog</code>) поменяйте значение <code>url</code> на <code>http://example.org/blog</code> и установите переменной <code>root</code> значение <code>/blog/</code>.</p>\n</blockquote>\n<h3 id=\"Папки\"><a href=\"#Папки\" class=\"headerlink\" title=\"Папки\"></a>Папки</h3><table>\n<thead>\n<tr>\n<th>Параметр</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source_dir</code></td>\n<td>Папка с исходниками. Здесь хранится контент</td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>public_dir</code></td>\n<td>Папка публикации. Здесь хранится сгенерированный сайт</td>\n<td><code>public</code></td>\n</tr>\n<tr>\n<td><code>tag_dir</code></td>\n<td>Папка с тэгами</td>\n<td><code>tags</code></td>\n</tr>\n<tr>\n<td><code>archive_dir</code></td>\n<td>Папка с архивами</td>\n<td><code>archives</code></td>\n</tr>\n<tr>\n<td><code>category_dir</code></td>\n<td>Папка с категориями</td>\n<td><code>categories</code></td>\n</tr>\n<tr>\n<td><code>code_dir</code></td>\n<td>Папка с кодом</td>\n<td><code>downloads/code</code></td>\n</tr>\n<tr>\n<td><code>i18n_dir</code></td>\n<td>Папка  i18n</td>\n<td><code>:lang</code></td>\n</tr>\n<tr>\n<td><code>skip_render</code></td>\n<td>Пути, которые исключены из обработки. Можно использовать <a href=\"https://github.com/isaacs/minimatch\" target=\"_blank\" rel=\"noopener\">глобальные выражения</a> для определения путей</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Написание\"><a href=\"#Написание\" class=\"headerlink\" title=\"Написание\"></a>Написание</h3><table>\n<thead>\n<tr>\n<th>Параметр</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>new_post_name</code></td>\n<td>Имя файла для создания новых постов</td>\n<td><code>:title.md</code></td>\n</tr>\n<tr>\n<td><code>default_layout</code></td>\n<td>Макет по умолчанию</td>\n<td><code>post</code></td>\n</tr>\n<tr>\n<td><code>titlecase</code></td>\n<td>Преобразовать текст в заглавные?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>external_link</code></td>\n<td>Открывать внешние ссылки в новой вкладке?</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>filename_case</code></td>\n<td>Преобразовать имена файлов в <code>1</code> нижний регистр; <code>2</code> верхний регистр</td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>render_drafts</code></td>\n<td>Отображать черновики?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>post_asset_folder</code></td>\n<td>Включать <a href=\"asset-folders.html\">папку с материалами</a>?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>relative_link</code></td>\n<td>Создание ссылок относительно корневой папки?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>future</code></td>\n<td>Отображать будущие посты?</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>highlight</code></td>\n<td>Настройки блоков кода</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Категории-и-тэги\"><a href=\"#Категории-и-тэги\" class=\"headerlink\" title=\"Категории и тэги\"></a>Категории и тэги</h3><table>\n<thead>\n<tr>\n<th>Параметр</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>default_category</code></td>\n<td>Категория по умолчанию</td>\n<td><code>uncategorized</code></td>\n</tr>\n<tr>\n<td><code>category_map</code></td>\n<td>Карта категорий</td>\n<td></td>\n</tr>\n<tr>\n<td><code>tag_map</code></td>\n<td>Карта тэгов</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Даты-Времени-формат\"><a href=\"#Даты-Времени-формат\" class=\"headerlink\" title=\"Даты / Времени формат\"></a>Даты / Времени формат</h3><p>Hexo использует <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> Для работы с датами.</p>\n<table>\n<thead>\n<tr>\n<th>Параметр</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>date_format</code></td>\n<td>Формат даты</td>\n<td><code>YYYY-MM-DD</code></td>\n</tr>\n<tr>\n<td><code>time_format</code></td>\n<td>Формат времени</td>\n<td><code>H:mm:ss</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Разбивка-на-страницы\"><a href=\"#Разбивка-на-страницы\" class=\"headerlink\" title=\"Разбивка на страницы\"></a>Разбивка на страницы</h3><table>\n<thead>\n<tr>\n<th>Параметр</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>per_page</code></td>\n<td>Количество постов, отображаемых на странице. <code>0</code> отключает разбивку.</td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td><code>pagination_dir</code></td>\n<td>Каталог разбивки</td>\n<td><code>page</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Расширения\"><a href=\"#Расширения\" class=\"headerlink\" title=\"Расширения\"></a>Расширения</h3><table>\n<thead>\n<tr>\n<th>Параметр</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>theme</code></td>\n<td>Имя темы. <code>false</code> отключает применение тем</td>\n</tr>\n<tr>\n<td><code>deploy</code></td>\n<td>Параметры публикации</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69j0045koeob3ge11md",
				"title": "Папки с материалами",
				"markdown": "## Глобальная папка с материалами\n\nМатериалы, не связанные с постами, такие как изображения, CSS или JavaScript файлы хранятся в папке `source`. Например, если нужно добавить несколько изображений в проект Hexo, то самый простой способ - положить их в исходный каталог изображений `source/images`. Затем можно получить к ним доступ, используя что-то вроде `![](/images/image.jpg)`.\n\n## Папка с постами\n\nДля пользователей, которые планируют регулярно использовать изображения и/или другие материалы, и для тех, кто предпочитает разделять свои материалы на основе поста в посте, Hexo обеспечивает возможность организовать управление материалами. Это немного сложнее, но очень удобный подход к управлению материалами, может быть включён в настройках, установите переменную `post_asset_folder` в `_config.yml` в значение `true`.\n\n``` yaml _config.yml\npost_asset_folder: true\n```\n\nЕсли управление материалами включено, то каждый раз при создании поста создастся папка с аналогичным именем. Например: `hexo new [layout] <title>` создаст папку с именем `title`. Можно использовать файлы, связанные с постом используя относительный путь, это облегчает и упрощает работу с материалами.\n\n## Тэг плагинов для создания относительных ссылок\n\nПривязка изображений или других материалов, используя обычный синтаксис markdown и относительные пути может привести к их неправильному отображению в архиве, или на главное странице. Плагины, созданы сообществом для решения этой проблемы в Hexo 2. С выходом Hexo 3 были добавлены в ядро новые плагины тегов. Они позволяют с лёгкостью создавать ссылки на ваши материалы в markdown:\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\nДля примера, этот пост, использует управление материалами. Если поместить в папку с материалами поста изображение `example.jpg`, то ссылка не заработает на главной странице. Но если использовать `![](/example.jpg)`, то это добавит изображение в пост (но только для самого поста).\n\nПравильный путём для ссылки на изображение будет использование синтаксиса плагина, а не markdown:\n\n```\n{% asset_img example.jpg This is an example image %}\n{% asset_img \"spaced asset.jpg\" \"spaced title\" %}\n```\n\nПри использовании этого способа, изображение появится в самом посте и на главной странице и в архивах.\n",
				"html": "<h2 id=\"Глобальная-папка-с-материалами\"><a href=\"#Глобальная-папка-с-материалами\" class=\"headerlink\" title=\"Глобальная папка с материалами\"></a>Глобальная папка с материалами</h2><p>Материалы, не связанные с постами, такие как изображения, CSS или JavaScript файлы хранятся в папке <code>source</code>. Например, если нужно добавить несколько изображений в проект Hexo, то самый простой способ - положить их в исходный каталог изображений <code>source/images</code>. Затем можно получить к ним доступ, используя что-то вроде <code>![](/images/image.jpg)</code>.</p>\n<h2 id=\"Папка-с-постами\"><a href=\"#Папка-с-постами\" class=\"headerlink\" title=\"Папка с постами\"></a>Папка с постами</h2><p>Для пользователей, которые планируют регулярно использовать изображения и/или другие материалы, и для тех, кто предпочитает разделять свои материалы на основе поста в посте, Hexo обеспечивает возможность организовать управление материалами. Это немного сложнее, но очень удобный подход к управлению материалами, может быть включён в настройках, установите переменную <code>post_asset_folder</code> в <code>_config.yml</code> в значение <code>true</code>.</p>\n<figure class=\"highlight yaml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>Если управление материалами включено, то каждый раз при создании поста создастся папка с аналогичным именем. Например: <code>hexo new [layout] &lt;title&gt;</code> создаст папку с именем <code>title</code>. Можно использовать файлы, связанные с постом используя относительный путь, это облегчает и упрощает работу с материалами.</p>\n<h2 id=\"Тэг-плагинов-для-создания-относительных-ссылок\"><a href=\"#Тэг-плагинов-для-создания-относительных-ссылок\" class=\"headerlink\" title=\"Тэг плагинов для создания относительных ссылок\"></a>Тэг плагинов для создания относительных ссылок</h2><p>Привязка изображений или других материалов, используя обычный синтаксис markdown и относительные пути может привести к их неправильному отображению в архиве, или на главное странице. Плагины, созданы сообществом для решения этой проблемы в Hexo 2. С выходом Hexo 3 были добавлены в ядро новые плагины тегов. Они позволяют с лёгкостью создавать ссылки на ваши материалы в markdown:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<p>Для примера, этот пост, использует управление материалами. Если поместить в папку с материалами поста изображение <code>example.jpg</code>, то ссылка не заработает на главной странице. Но если использовать <code>![](/example.jpg)</code>, то это добавит изображение в пост (но только для самого поста).</p>\n<p>Правильный путём для ссылки на изображение будет использование синтаксиса плагина, а не markdown:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</span><br><span class=\"line\">&#123;% asset_img &quot;spaced asset.jpg&quot; &quot;spaced title&quot; %&#125;</span><br></pre></td></tr></table></figure>\n<p>При использовании этого способа, изображение появится в самом посте и на главной странице и в архивах.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69j0046koeops7xyqkr",
				"title": "Файлы с данными",
				"markdown": "Иногда вам может понадобиться использовать данные в шаблонах, которых непосредственно нет в ваших сообщениях, или захотите использовать данные в других местах. Для таких случаев в Hexo 3 введены новые файлы данных. Эта утилита загружает YAML или JSON файлы из исходной папки `source/_data` поэтому можно использовать их на вашем сайте.\n\nНапример, добавить `menu.yml` в папку `source/_data`.\n\n``` yaml\nHome: /\nGallery: /gallery/\nArchives: /archives/\n```\n\nИ можно использовать их в шаблонах:\\\n\n```\n<% for (var link in site.data.menu) { %>\n  <a href=\"<%= site.data.menu[link] %>\"> <%= link %> </a>\n<% } %>\n```\n",
				"html": "<p>Иногда вам может понадобиться использовать данные в шаблонах, которых непосредственно нет в ваших сообщениях, или захотите использовать данные в других местах. Для таких случаев в Hexo 3 введены новые файлы данных. Эта утилита загружает YAML или JSON файлы из исходной папки <code>source/_data</code> поэтому можно использовать их на вашем сайте.</p>\n<p>Например, добавить <code>menu.yml</code> в папку <code>source/_data</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Home:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">Gallery:</span> <span class=\"string\">/gallery/</span></span><br><span class=\"line\"><span class=\"attr\">Archives:</span> <span class=\"string\">/archives/</span></span><br></pre></td></tr></table></figure>\n<p>И можно использовать их в шаблонах:\\</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;% for (var link in site.data.menu) &#123; %&gt;</span><br><span class=\"line\">  &lt;a href=&quot;&lt;%= site.data.menu[link] %&gt;&quot;&gt; &lt;%= link %&gt; &lt;/a&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69k0047koeojfhdg4x2",
				"title": "Содействие",
				"markdown": "## Разработчикам\n\nМы рады желающим присоединится к развитию Hexo. Этот документ поможет вам начать.\n\n### Прежде чем начать\n\nПожалуйста, следите за стилем написания кода:\n\n- Следуйте [Google JavaScript Style Guide](https://google.github.io/styleguide/jsguide.html).\n- Используйте мягкие табы с двойным пробелом.\n- Не ставьте запятую в начале.\n\n### Рабочее пространство\n\n1. Создайте форк [hexojs/site]\n1. Клонируйте репозиторий на компьютер и установите все зависимости.\n\n    {% code %}\n    $ git clone https://github.com/<username>/hexo.git\n    $ cd hexo\n    $ npm install\n    $ git submodule update --init\n    {% endcode %}\n\n1. Создать отдельную ветку.\n\n    {% code %}\n    $ git checkout -b new_feature\n    {% endcode %}\n\n1. Вносите изменения.\n1. Выгрузите ветку:\n\n    {% code %}\n    $ git push origin new_feature\n    {% endcode %}\n\n1. Запросите принятие изменений с их описанием.\n\n### На заметку\n\n- Не изменяйте номер версии в `package.json`.\n- Ваш запрос могут только принять, когда все тесты пройдут. Не забудьте провести испытания перед отправкой.\n\n    {% code %}\n    $ npm test\n    {% endcode %}\n\n## Обновление документации\n\nДокументация Hexo имеет открытый исходный код, его можно найти по адресу [hexojs/site].\n\n### Рабочее пространство\n\n1. Создайте форк [hexojs/site]\n1. Клонируйте репозиторий на компьютер и установите все зависимости.\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n1. Начать редактировать документацию. Вы можете запустить сервер для просмотра изменений.\n\n    {% code %}\n    $ hexo server\n    {% endcode %}\n\n1. Выгрузите ветку.\n1. Запросите принятие изменений с их описанием.\n\n### Перевод\n\n1. Добавьте новую папку с языком в папке `source`. (Всё в нижнем регистре)\n1. Скопируйте markdown фалы и шаблоны из папки `source` в папку с создаваемым переводом.\n1. Добавьте новый язык в файл `source/_data/language.yml`.\n1. Скопируйте `en.yml` в `themes/navy/languages` и измените имя (всё в нижнем регистре).\n\n## Сообщение о проблеме\n\nЕсли Вы столкнулись с проблемой при использовании Hexo, то можно поискать решения в [устранении неполадок](troubleshooting.html) или задать вопросы на [GitHub](https://github.com/hexojs/hexo/issues) или [Google Group](https://groups.google.com/group/hexo). Если решения не нашлось, пожалуйста, сообщите об этом на GitHub.\n\n1. Воспроизведите проблему в режиме отладки [debug mode](commands.html#Режим-отладки).\n1. Запустите `hexo version` и прочтите описание версии.\n1. Создайте сообщение об ошибке с отладочными данными и номером используемой версии на GitHub.\n\n[hexojs/hexo]: https://github.com/hexojs/hexo\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<h2 id=\"Разработчикам\"><a href=\"#Разработчикам\" class=\"headerlink\" title=\"Разработчикам\"></a>Разработчикам</h2><p>Мы рады желающим присоединится к развитию Hexo. Этот документ поможет вам начать.</p>\n<h3 id=\"Прежде-чем-начать\"><a href=\"#Прежде-чем-начать\" class=\"headerlink\" title=\"Прежде чем начать\"></a>Прежде чем начать</h3><p>Пожалуйста, следите за стилем написания кода:</p>\n<ul>\n<li>Следуйте <a href=\"https://google.github.io/styleguide/jsguide.html\" target=\"_blank\" rel=\"noopener\">Google JavaScript Style Guide</a>.</li>\n<li>Используйте мягкие табы с двойным пробелом.</li>\n<li>Не ставьте запятую в начале.</li>\n</ul>\n<h3 id=\"Рабочее-пространство\"><a href=\"#Рабочее-пространство\" class=\"headerlink\" title=\"Рабочее пространство\"></a>Рабочее пространство</h3><ol>\n<li>Создайте форк <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>Клонируйте репозиторий на компьютер и установите все зависимости.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/hexo.git</span><br><span class=\"line\">$ cd hexo</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">$ git submodule update --init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Создать отдельную ветку.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout -b new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Вносите изменения.</p>\n</li>\n<li><p>Выгрузите ветку:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push origin new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Запросите принятие изменений с их описанием.</p>\n</li>\n</ol>\n<h3 id=\"На-заметку\"><a href=\"#На-заметку\" class=\"headerlink\" title=\"На заметку\"></a>На заметку</h3><ul>\n<li>Не изменяйте номер версии в <code>package.json</code>.</li>\n<li><p>Ваш запрос могут только принять, когда все тесты пройдут. Не забудьте провести испытания перед отправкой.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm test</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Обновление-документации\"><a href=\"#Обновление-документации\" class=\"headerlink\" title=\"Обновление документации\"></a>Обновление документации</h2><p>Документация Hexo имеет открытый исходный код, его можно найти по адресу <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a>.</p>\n<h3 id=\"Рабочее-пространство-1\"><a href=\"#Рабочее-пространство-1\" class=\"headerlink\" title=\"Рабочее пространство\"></a>Рабочее пространство</h3><ol>\n<li>Создайте форк <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>Клонируйте репозиторий на компьютер и установите все зависимости.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Начать редактировать документацию. Вы можете запустить сервер для просмотра изменений.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Выгрузите ветку.</p>\n</li>\n<li>Запросите принятие изменений с их описанием.</li>\n</ol>\n<h3 id=\"Перевод\"><a href=\"#Перевод\" class=\"headerlink\" title=\"Перевод\"></a>Перевод</h3><ol>\n<li>Добавьте новую папку с языком в папке <code>source</code>. (Всё в нижнем регистре)</li>\n<li>Скопируйте markdown фалы и шаблоны из папки <code>source</code> в папку с создаваемым переводом.</li>\n<li>Добавьте новый язык в файл <code>source/_data/language.yml</code>.</li>\n<li>Скопируйте <code>en.yml</code> в <code>themes/navy/languages</code> и измените имя (всё в нижнем регистре).</li>\n</ol>\n<h2 id=\"Сообщение-о-проблеме\"><a href=\"#Сообщение-о-проблеме\" class=\"headerlink\" title=\"Сообщение о проблеме\"></a>Сообщение о проблеме</h2><p>Если Вы столкнулись с проблемой при использовании Hexo, то можно поискать решения в <a href=\"troubleshooting.html\">устранении неполадок</a> или задать вопросы на <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> или <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a>. Если решения не нашлось, пожалуйста, сообщите об этом на GitHub.</p>\n<ol>\n<li>Воспроизведите проблему в режиме отладки <a href=\"commands.html#Режим-отладки\">debug mode</a>.</li>\n<li>Запустите <code>hexo version</code> и прочтите описание версии.</li>\n<li>Создайте сообщение об ошибке с отладочными данными и номером используемой версии на GitHub.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69k0048koeor3wgjjd7",
				"title": "Публикация",
				"markdown": "Hexo обеспечивает быстрый и простой способ размещения. Нужна только одна команда, чтобы развернуть свой сайт на сервере.\n\n``` bash\n$ hexo deploy\n```\n\nПеред первой публикацией сайта, нужно изменить некоторые настройки в `_config.yml`. Правильные параметры развёртывания должны иметь поле `type`. Например:\n\n``` yaml\ndeploy:\n  type: git\n```\n\nВы можете использовать несколько сервисов размещения. Hexo будет выполнять все в том порядке, какой указан в файле.\n\n``` yaml\ndeploy:\n- type: git\n  repo:\n- type: heroku\n  repo:\n```\n\n## Git\n\nУстановите [hexo-deployer-git].\n\n``` bash\n$ npm install hexo-deployer-git --save\n```\n\nИзменение параметров.\n\n``` yaml\ndeploy:\n  type: git\n  repo: <repository url>\n  branch: [branch]\n  message: [message]\n```\n\nОпция | Описание\n--- | ---\n`repo` | Адрес GitHub репозитория\n`branch` | Имя ветки. Публикатор автоматически определит ветку, если используется GitHub или GitCafe.\n`message` | Изменение описания коммита (По умолчанию `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## Heroku\n\nУстановите [hexo-deployer-heroku].\n\n``` bash\n$ npm install hexo-deployer-heroku --save\n```\n\nИзменение параметров.\n\n``` yaml\ndeploy:\n  type: heroku\n  repo: <repository url>\n  message: [message]\n```\n\nОпция | Описание\n--- | ---\n`repo`, `repository` | Адрес Heroku репозитория\n`message` | Изменение описания коммита (По умолчанию: `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## Rsync\n\nУстановите [hexo-deployer-rsync].\n\n``` bash\n$ npm install hexo-deployer-rsync --save\n```\n\nИзменение параметров.\n\n``` yaml\ndeploy:\n  type: rsync\n  host: <host>\n  user: <user>\n  root: <root>\n  port: [port]\n  delete: [true|false]\n  verbose: [true|false]\n  ignore_errors: [true|false]\n```\n\nОпция | Описание | Умолчание\n--- | --- | ---\n`host` | Адрес удалённого хоста |\n`user` | Имя пользователя |\n`root` | Корневой каталог на удалённом хосте |\n`port` | Порт | 22\n`delete` | Удаление старых файлов на удаленном хосте | true\n`verbose` | Выводить подробные сообщения | true\n`ignore_errors` | Игнорировать ошибки | false\n\n## OpenShift\n\nУстановите [hexo-deployer-openshift].\n\n``` bash\n$ npm install hexo-deployer-openshift --save\n```\n\nИзменение параметров.\n\n``` yaml\ndeploy:\n  type: openshift\n  repo: <repository url>\n  message: [message]\n```\n\nОпция | Описание\n--- | ---\n`repo` | Адрес OpenShift репозитория\n`message` | Изменение описания коммита (По умолчанию: `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## FTPSync\n\nУстановите [hexo-deployer-ftpsync].\n\n``` bash\n$ npm install hexo-deployer-ftpsync --save\n```\n\nИзменение параметров.\n\n``` yaml\ndeploy:\n  type: ftpsync\n  host: <host>\n  user: <user>\n  pass: <password>\n  remote: [remote]\n  port: [port]\n  ignore: [ignore]\n  connections: [connections]\n  verbose: [true|false]\n```\n\nОпция | Описание | Умолчание\n--- | --- | ---\n`host` | Адрес удалённого хоста |\n`user` | Имя пользователя |\n`pass` | Пароль |\n`remote` | Корневой каталог на удалённом хосте | `/`\n`port` | Порт | 21\n`ignore` | Игнорировать файлы на удалённом хосте |\n`connections` | Количество подключений | 1\n`verbose` | Выводить подробные сообщения | false\n\n## Другие способы\n\nВсе созданные файлы сохраняются в папке `public`. Вы можете скопировать их куда угодно.\n\n[hexo-deployer-git]: https://github.com/hexojs/hexo-deployer-git\n[hexo-deployer-heroku]: https://github.com/hexojs/hexo-deployer-heroku\n[hexo-deployer-rsync]: https://github.com/hexojs/hexo-deployer-rsync\n[hexo-deployer-openshift]: https://github.com/hexojs/hexo-deployer-openshift\n[hexo-deployer-ftpsync]: https://github.com/hexojs/hexo-deployer-ftpsync\n",
				"html": "<p>Hexo обеспечивает быстрый и простой способ размещения. Нужна только одна команда, чтобы развернуть свой сайт на сервере.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>Перед первой публикацией сайта, нужно изменить некоторые настройки в <code>_config.yml</code>. Правильные параметры развёртывания должны иметь поле <code>type</code>. Например:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br></pre></td></tr></table></figure>\n<p>Вы можете использовать несколько сервисов размещения. Hexo будет выполнять все в том порядке, какой указан в файле.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><p>Установите <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>Изменение параметров.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">[branch]</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>Адрес GitHub репозитория</td>\n</tr>\n<tr>\n<td><code>branch</code></td>\n<td>Имя ветки. Публикатор автоматически определит ветку, если используется GitHub или GitCafe.</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Изменение описания коммита (По умолчанию <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Heroku\"><a href=\"#Heroku\" class=\"headerlink\" title=\"Heroku\"></a>Heroku</h2><p>Установите <a href=\"https://github.com/hexojs/hexo-deployer-heroku\" target=\"_blank\" rel=\"noopener\">hexo-deployer-heroku</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-heroku --save</span><br></pre></td></tr></table></figure>\n<p>Изменение параметров.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code>, <code>repository</code></td>\n<td>Адрес Heroku репозитория</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Изменение описания коммита (По умолчанию: <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Rsync\"><a href=\"#Rsync\" class=\"headerlink\" title=\"Rsync\"></a>Rsync</h2><p>Установите <a href=\"https://github.com/hexojs/hexo-deployer-rsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-rsync</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-rsync --save</span><br></pre></td></tr></table></figure>\n<p>Изменение параметров.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">rsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  root:</span> <span class=\"string\">&lt;root&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  delete:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore_errors:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Адрес удалённого хоста</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Имя пользователя</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>Корневой каталог на удалённом хосте</td>\n<td></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Порт</td>\n<td>22</td>\n</tr>\n<tr>\n<td><code>delete</code></td>\n<td>Удаление старых файлов на удаленном хосте</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Выводить подробные сообщения</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>ignore_errors</code></td>\n<td>Игнорировать ошибки</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"OpenShift\"><a href=\"#OpenShift\" class=\"headerlink\" title=\"OpenShift\"></a>OpenShift</h2><p>Установите <a href=\"https://github.com/hexojs/hexo-deployer-openshift\" target=\"_blank\" rel=\"noopener\">hexo-deployer-openshift</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-openshift --save</span><br></pre></td></tr></table></figure>\n<p>Изменение параметров.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">openshift</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>Адрес OpenShift репозитория</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Изменение описания коммита (По умолчанию: <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"FTPSync\"><a href=\"#FTPSync\" class=\"headerlink\" title=\"FTPSync\"></a>FTPSync</h2><p>Установите <a href=\"https://github.com/hexojs/hexo-deployer-ftpsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-ftpsync</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-ftpsync --save</span><br></pre></td></tr></table></figure>\n<p>Изменение параметров.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">ftpsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  pass:</span> <span class=\"string\">&lt;password&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  remote:</span> <span class=\"string\">[remote]</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore:</span> <span class=\"string\">[ignore]</span></span><br><span class=\"line\"><span class=\"attr\">  connections:</span> <span class=\"string\">[connections]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Адрес удалённого хоста</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Имя пользователя</td>\n<td></td>\n</tr>\n<tr>\n<td><code>pass</code></td>\n<td>Пароль</td>\n<td></td>\n</tr>\n<tr>\n<td><code>remote</code></td>\n<td>Корневой каталог на удалённом хосте</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Порт</td>\n<td>21</td>\n</tr>\n<tr>\n<td><code>ignore</code></td>\n<td>Игнорировать файлы на удалённом хосте</td>\n<td></td>\n</tr>\n<tr>\n<td><code>connections</code></td>\n<td>Количество подключений</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Выводить подробные сообщения</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Другие-способы\"><a href=\"#Другие-способы\" class=\"headerlink\" title=\"Другие способы\"></a>Другие способы</h2><p>Все созданные файлы сохраняются в папке <code>public</code>. Вы можете скопировать их куда угодно.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69l0049koeoc0wqbipg",
				"title": "Шапка файла",
				"markdown": "Шапка файла это блок в формате YAML или JSON расположенный в начале файла, используется для изменения настроек написанного материала. Окончание шапки определяется строкой `---` или `;;;` при написании в формате JSON.\n\n**YAML**\n\n``` yaml\ntitle: Hello World\ndate: 2013/7/13 20:46:25\n---\n```\n\n**JSON**\n\n``` json\n\"title\": \"Hello World\",\n\"date\": \"2013/7/13 20:46:25\"\n;;;\n```\n\n### Параметры и значения по умолчанию\n\nПараметр | Описание | Умолчание\n--- | --- | ---\n`layout` | Макет |\n`title` | Заголовок |\n`date` | Дата публикации | Дата создания файла\n`updated` | Дата обновления | Дата обновления файла\n`comments` | Включение поддержки комментариев в посте | true\n`tags` | Тэги (Не доступно для страниц) |\n`categories` | Категории (Не доступно для страниц) |\n`permalink` | Переопределяет ссылку по умолчанию |\n\n#### Категории и тэги\n\nТолько посты поддерживают использование категорий и тегов. Категории считываются в порядке их написания, в результате чего сохраняется иерархия классификации и подклассификации. Теги определены на одном иерархическом уровне, не важен порядок написания.\n\n**Например**\n\n``` yaml\ncategories:\n- Sports\n- Baseball\ntags:\n- Injury\n- Fight\n- Shocking\n```\n",
				"html": "<p>Шапка файла это блок в формате YAML или JSON расположенный в начале файла, используется для изменения настроек написанного материала. Окончание шапки определяется строкой <code>---</code> или <code>;;;</code> при написании в формате JSON.</p>\n<p><strong>YAML</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"string\">/7/13</span> <span class=\"number\">20</span><span class=\"string\">:46:25</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n<p><strong>JSON</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"title\": \"Hello World\",</span><br><span class=\"line\">\"date\": \"2013/7/13 20:46:25\"</span><br><span class=\"line\">;;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Параметры-и-значения-по-умолчанию\"><a href=\"#Параметры-и-значения-по-умолчанию\" class=\"headerlink\" title=\"Параметры и значения по умолчанию\"></a>Параметры и значения по умолчанию</h3><table>\n<thead>\n<tr>\n<th>Параметр</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>Макет</td>\n<td></td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>Заголовок</td>\n<td></td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Дата публикации</td>\n<td>Дата создания файла</td>\n</tr>\n<tr>\n<td><code>updated</code></td>\n<td>Дата обновления</td>\n<td>Дата обновления файла</td>\n</tr>\n<tr>\n<td><code>comments</code></td>\n<td>Включение поддержки комментариев в посте</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>Тэги (Не доступно для страниц)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>Категории (Не доступно для страниц)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>Переопределяет ссылку по умолчанию</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Категории-и-тэги\"><a href=\"#Категории-и-тэги\" class=\"headerlink\" title=\"Категории и тэги\"></a>Категории и тэги</h4><p>Только посты поддерживают использование категорий и тегов. Категории считываются в порядке их написания, в результате чего сохраняется иерархия классификации и подклассификации. Теги определены на одном иерархическом уровне, не важен порядок написания.</p>\n<p><strong>Например</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Sports</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Baseball</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Injury</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Fight</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Shocking</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69l004akoeo3htzbelk",
				"title": "Генерация",
				"markdown": "С помощью Hexo генерировать статические файлы просто и легко.\n\n``` bash\nhexo generate\n```\n\n### Слежение за изменением файлов\n\nHexo может наблюдать за изменениями файлов и сразу генерирует файлы. Hexo сравнивает контрольной суммы файлов SHA1 и записывает файлы только при обнаружении изменений.\n\n``` bash\n$ hexo generate --watch\n```\n\n### Публикация после генерации\n\nДля публикации после генерирования страниц нужно запустить одну из следующих команд.\n\n``` bash\n$ hexo generate --deploy\n$ hexo deploy --generate\n```\n",
				"html": "<p>С помощью Hexo генерировать статические файлы просто и легко.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br></pre></td></tr></table></figure>\n<h3 id=\"Слежение-за-изменением-файлов\"><a href=\"#Слежение-за-изменением-файлов\" class=\"headerlink\" title=\"Слежение за изменением файлов\"></a>Слежение за изменением файлов</h3><p>Hexo может наблюдать за изменениями файлов и сразу генерирует файлы. Hexo сравнивает контрольной суммы файлов SHA1 и записывает файлы только при обнаружении изменений.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --watch</span><br></pre></td></tr></table></figure>\n<h3 id=\"Публикация-после-генерации\"><a href=\"#Публикация-после-генерации\" class=\"headerlink\" title=\"Публикация после генерации\"></a>Публикация после генерации</h3><p>Для публикации после генерирования страниц нужно запустить одну из следующих команд.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --deploy</span><br><span class=\"line\">$ hexo deploy --generate</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69l004bkoeo78fyxq9a",
				"title": "Документация",
				"markdown": "Добро пожаловать в документацию Hexo. Если возникнут проблемы при использовании Hexo, попробуйте поискать в [руководстве по решению проблем](troubleshooting.html), поднять вопрос на [GitHub](https://github.com/hexojs/hexo/issues) или завести тему в группе [Google Group](https://groups.google.com/group/hexo).\n\n## Что есть Hexo?\n\nHexo-это быстрый, простой и мощный фреймворк блогов. Вы пишите посты в [Markdown](http://daringfireball.net/projects/markdown/) (или других языках) и Hexo генерирует статические файлы с красивой темой в считанные секунды.\n\n## Установка\n\nНастройка Hexo занимает всего несколько минут. Если вы столкнулись с проблемой и не можете найти решение здесь, пожалуйста, отправьте вопрос на [GitHub](https://github.com/hexojs/hexo/issues), и я постараюсь разрешить её.\n\n### Требования\n\nУстановка Hexo довольно проста. Однако, сперва, нужно установить пару вещей:\n\n- [Node.js](http://nodejs.org/)\n- [Git](http://git-scm.com/)\n\nЕсли всё это уже есть, поздравляю! Просто установите Hexo с помощью npm:\n\n``` bash\n$ npm install -g hexo-cli\n```\n\nЕсли нет, выполните следующие действия, чтобы установить всё, что требуется.\n\n{% note warn Для пользователей Mac %}\nВы можете столкнуться с проблемами при компиляции. Пожалуйста, сначала установите Xcode из магазина App Store. После установки, откройте xcode и перейти в **Настройки -> Загрузки -> Командная строка -> Установить** (**Preferences -> Download -> Command Line Tools -> Install**), чтобы установить утилиту командной строки.\n{% endnote %}\n\n### Установка Git\n\n- Windows: Скачать и установить [git](https://git-scm.com/download/win).\n- Mac: Установите с помощью [Homebrew](http://mxcl.github.com/homebrew/), [MacPorts](http://www.macports.org/) или [установочного файла](http://sourceforge.net/projects/git-osx-installer/).\n- Linux (Ubuntu, Debian): `sudo apt-get install git-core`\n- Linux (Fedora, Red Hat, CentOS): `sudo yum install git-core`\n\n### Установка Node.js\n\nЛучший способ установить Node.js это [nvm](https://github.com/creationix/nvm).\n\ncURL:\n\n``` bash\n$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh\n```\n\nWget:\n\n``` bash\n$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh\n```\n\nПосле установки nvm запустите терминал и выполните следующую команду для установки Node.js.\n\n``` bash\n$ nvm install stable\n```\n\nИли скачать и установить [установщик](http://nodejs.org/).\n\n### Установка Hexo\n\nПосле установки всех требуемых программ, можно устанавливать Hexo с помощью npm.\n\n``` bash\n$ npm install -g hexo-cli\n```\n",
				"html": "<p>Добро пожаловать в документацию Hexo. Если возникнут проблемы при использовании Hexo, попробуйте поискать в <a href=\"troubleshooting.html\">руководстве по решению проблем</a>, поднять вопрос на <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> или завести тему в группе <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a>.</p>\n<h2 id=\"Что-есть-Hexo\"><a href=\"#Что-есть-Hexo\" class=\"headerlink\" title=\"Что есть Hexo?\"></a>Что есть Hexo?</h2><p>Hexo-это быстрый, простой и мощный фреймворк блогов. Вы пишите посты в <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a> (или других языках) и Hexo генерирует статические файлы с красивой темой в считанные секунды.</p>\n<h2 id=\"Установка\"><a href=\"#Установка\" class=\"headerlink\" title=\"Установка\"></a>Установка</h2><p>Настройка Hexo занимает всего несколько минут. Если вы столкнулись с проблемой и не можете найти решение здесь, пожалуйста, отправьте вопрос на <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>, и я постараюсь разрешить её.</p>\n<h3 id=\"Требования\"><a href=\"#Требования\" class=\"headerlink\" title=\"Требования\"></a>Требования</h3><p>Установка Hexo довольно проста. Однако, сперва, нужно установить пару вещей:</p>\n<ul>\n<li><a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node.js</a></li>\n<li><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></li>\n</ul>\n<p>Если всё это уже есть, поздравляю! Просто установите Hexo с помощью npm:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>Если нет, выполните следующие действия, чтобы установить всё, что требуется.</p>\n<blockquote class=\"note warn\"><strong class=\"note-title\">Для пользователей Mac</strong><p>Вы можете столкнуться с проблемами при компиляции. Пожалуйста, сначала установите Xcode из магазина App Store. После установки, откройте xcode и перейти в <strong>Настройки -&gt; Загрузки -&gt; Командная строка -&gt; Установить</strong> (<strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong>), чтобы установить утилиту командной строки.</p>\n</blockquote>\n<h3 id=\"Установка-Git\"><a href=\"#Установка-Git\" class=\"headerlink\" title=\"Установка Git\"></a>Установка Git</h3><ul>\n<li>Windows: Скачать и установить <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a>.</li>\n<li>Mac: Установите с помощью <a href=\"http://mxcl.github.com/homebrew/\" target=\"_blank\" rel=\"noopener\">Homebrew</a>, <a href=\"http://www.macports.org/\" target=\"_blank\" rel=\"noopener\">MacPorts</a> или <a href=\"http://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"noopener\">установочного файла</a>.</li>\n<li>Linux (Ubuntu, Debian): <code>sudo apt-get install git-core</code></li>\n<li>Linux (Fedora, Red Hat, CentOS): <code>sudo yum install git-core</code></li>\n</ul>\n<h3 id=\"Установка-Node-js\"><a href=\"#Установка-Node-js\" class=\"headerlink\" title=\"Установка Node.js\"></a>Установка Node.js</h3><p>Лучший способ установить Node.js это <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">nvm</a>.</p>\n<p>cURL:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br></pre></td></tr></table></figure>\n<p>Wget:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br></pre></td></tr></table></figure>\n<p>После установки nvm запустите терминал и выполните следующую команду для установки Node.js.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ nvm install stable</span><br></pre></td></tr></table></figure>\n<p>Или скачать и установить <a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">установщик</a>.</p>\n<h3 id=\"Установка-Hexo\"><a href=\"#Установка-Hexo\" class=\"headerlink\" title=\"Установка Hexo\"></a>Установка Hexo</h3><p>После установки всех требуемых программ, можно устанавливать Hexo с помощью npm.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69m004ckoeot5rrzkqw",
				"title": "Интернационализация (i18n)",
				"markdown": "[Что такое: i18n](https://ru.wiktionary.org/wiki/i18n)\n\nМожно использовать интернационализацию на вашем сайте для поддержки многоязычности. Язык по умолчанию устанавливается путём изменения настройки языка `language` в `_config.yml`. Возможно, также, установить несколько языков и изменить их порядок по умолчанию.\n\n``` yaml\nlanguage: ru\n\nlanguage:\n- ru\n- en\n- zh-tw\n```\n\n### Языковые файлы\n\nЯзыковые файлы могут быть в формате YAML или JSON. Нужно поместить их в папку языков `languages` в теме. Также поддерживается формат [printf](https://github.com/alexei/sprintf.js).\n\n### Шаблоны\n\nИспользуйте `__` или `_p`  в шаблонах помощников, чтобы получить переведённые строки. Первое предназначено для нормального использования, а второе для многострочного использования. Например:\n\n``` yaml ru.yml\nindex:\n  title: Главная\n  add: Добавить\n  video:\n    zero: Нет видео\n    one: Одно видео\n    other: %d видео\n```\n\n``` js\n<%= __('index.title') %>\n// Home\n\n<%= _p('index.video', 3) %>\n// 3 videos\n```\n\n### Путь\n\nВы можете установить язык в шапке страницы, или изменить `i18n_dir` установив значение в `_config.yml` для поддержки автоматического обнаружения в Hexo.\n\n``` yaml\ni18n_dir: :lang\n```\n\nЗначение по умолчанию `i18n_dir` параметр `:lang`, означает, что Hexo будет определять язык в первом сегменте URL-адреса. Например:\n\n``` plain\n/index.html => en\n/archives/index.html => en\n/zh-tw/index.html => zh-tw\n```\n\nСтрока языка применяется только при наличии языкового файла. Так архивы `archives` в `/archives/index.html` (из второй строки примера) не будет обработана как другой язык.\n",
				"html": "<p><a href=\"https://ru.wiktionary.org/wiki/i18n\" target=\"_blank\" rel=\"noopener\">Что такое: i18n</a></p>\n<p>Можно использовать интернационализацию на вашем сайте для поддержки многоязычности. Язык по умолчанию устанавливается путём изменения настройки языка <code>language</code> в <code>_config.yml</code>. Возможно, также, установить несколько языков и изменить их порядок по умолчанию.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">ru</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">language:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">ru</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">en</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">zh-tw</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Языковые-файлы\"><a href=\"#Языковые-файлы\" class=\"headerlink\" title=\"Языковые файлы\"></a>Языковые файлы</h3><p>Языковые файлы могут быть в формате YAML или JSON. Нужно поместить их в папку языков <code>languages</code> в теме. Также поддерживается формат <a href=\"https://github.com/alexei/sprintf.js\" target=\"_blank\" rel=\"noopener\">printf</a>.</p>\n<h3 id=\"Шаблоны\"><a href=\"#Шаблоны\" class=\"headerlink\" title=\"Шаблоны\"></a>Шаблоны</h3><p>Используйте <code>__</code> или <code>_p</code>  в шаблонах помощников, чтобы получить переведённые строки. Первое предназначено для нормального использования, а второе для многострочного использования. Например:</p>\n<figure class=\"highlight yaml\"><figcaption><span>ru.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">index:</span></span><br><span class=\"line\"><span class=\"attr\">  title:</span> <span class=\"string\">Главная</span></span><br><span class=\"line\"><span class=\"attr\">  add:</span> <span class=\"string\">Добавить</span></span><br><span class=\"line\"><span class=\"attr\">  video:</span></span><br><span class=\"line\"><span class=\"attr\">    zero:</span> <span class=\"string\">Нет</span> <span class=\"string\">видео</span></span><br><span class=\"line\"><span class=\"attr\">    one:</span> <span class=\"string\">Одно</span> <span class=\"string\">видео</span></span><br><span class=\"line\"><span class=\"attr\">    other:</span> <span class=\"string\">%d</span> <span class=\"string\">видео</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%= __(<span class=\"string\">'index.title'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Home</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%= _p(<span class=\"string\">'index.video'</span>, <span class=\"number\">3</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 3 videos</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Путь\"><a href=\"#Путь\" class=\"headerlink\" title=\"Путь\"></a>Путь</h3><p>Вы можете установить язык в шапке страницы, или изменить <code>i18n_dir</code> установив значение в <code>_config.yml</code> для поддержки автоматического обнаружения в Hexo.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">i18n_dir:</span> <span class=\"string\">:lang</span></span><br></pre></td></tr></table></figure>\n<p>Значение по умолчанию <code>i18n_dir</code> параметр <code>:lang</code>, означает, что Hexo будет определять язык в первом сегменте URL-адреса. Например:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">/index.html =&gt; en</span><br><span class=\"line\">/archives/index.html =&gt; en</span><br><span class=\"line\">/zh-tw/index.html =&gt; zh-tw</span><br></pre></td></tr></table></figure>\n<p>Строка языка применяется только при наличии языкового файла. Так архивы <code>archives</code> в <code>/archives/index.html</code> (из второй строки примера) не будет обработана как другой язык.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69m004dkoeomo71cwkh",
				"title": "Миграция",
				"markdown": "## RSS\n\nПрежде нужно установить плагин `hexo-migrator-rss`.\n\n``` bash\n$ npm install hexo-migrator-rss --save\n```\n\nПосле установки плагина запустите следующую команду для миграции всех постов в RSS. `source`\nOnce the plugin is installed, run the following command to migrate all posts from RSS. `source` может быть путём к файлу или URL ссылкой.\n\n``` bash\n$ hexo migrate rss <source>\n```\n\n## Jekyll\n\nПереместите все файлы из папки Jekyll `_posts` в папку `source/_posts`.\n\nИзмените переменную `new_post_name` в `_config.yml`:\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## Octopress\n\nПереместите все файлы из папки Octopress `source/_posts` в папку `source/_posts`.\n\nИзмените переменную `new_post_name` в `_config.yml`:\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## WordPress\n\nСначала установите плагин `hexo-migrator-wordpress`.\n\n``` bash\n$ npm install hexo-migrator-wordpress --save\n```\n\nЭкспортируйте WordPress сайт, зайдя в “Инструменты” → “Экспорт” → “Wordplress” в панели WordPress (см. страницу [поддержки WordPress](http://en.support.wordpress.com/export/) для более подробной информации.\n\nВыполните:\n\n``` bash\n$ hexo migrate wordpress <source>\n```\n\nГде `source`, это путь или URL файла экспортированного из WordPress.\n\n## Joomla\n\nВо-первых, нужно установить плагин `hexo-migrator-joomla`.\n\n```bash\n$ npm install hexo-migrator-joomla --save\n```\n\nЭкспортируйте статьи Joomla с помощью компонента [J2XML](http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D)\n\nВыполните:\n\n```bash\n$ hexo migrate joomla <source>\n```\n\nГде `source`, это путь или URL файла экспортированного из Joomla.\n",
				"html": "<h2 id=\"RSS\"><a href=\"#RSS\" class=\"headerlink\" title=\"RSS\"></a>RSS</h2><p>Прежде нужно установить плагин <code>hexo-migrator-rss</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-rss --save</span><br></pre></td></tr></table></figure>\n<p>После установки плагина запустите следующую команду для миграции всех постов в RSS. <code>source</code><br>Once the plugin is installed, run the following command to migrate all posts from RSS. <code>source</code> может быть путём к файлу или URL ссылкой.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate rss &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Jekyll\"><a href=\"#Jekyll\" class=\"headerlink\" title=\"Jekyll\"></a>Jekyll</h2><p>Переместите все файлы из папки Jekyll <code>_posts</code> в папку <code>source/_posts</code>.</p>\n<p>Измените переменную <code>new_post_name</code> в <code>_config.yml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Octopress\"><a href=\"#Octopress\" class=\"headerlink\" title=\"Octopress\"></a>Octopress</h2><p>Переместите все файлы из папки Octopress <code>source/_posts</code> в папку <code>source/_posts</code>.</p>\n<p>Измените переменную <code>new_post_name</code> в <code>_config.yml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"WordPress\"><a href=\"#WordPress\" class=\"headerlink\" title=\"WordPress\"></a>WordPress</h2><p>Сначала установите плагин <code>hexo-migrator-wordpress</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-wordpress --save</span><br></pre></td></tr></table></figure>\n<p>Экспортируйте WordPress сайт, зайдя в “Инструменты” → “Экспорт” → “Wordplress” в панели WordPress (см. страницу <a href=\"http://en.support.wordpress.com/export/\" target=\"_blank\" rel=\"noopener\">поддержки WordPress</a> для более подробной информации.</p>\n<p>Выполните:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate wordpress &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>Где <code>source</code>, это путь или URL файла экспортированного из WordPress.</p>\n<h2 id=\"Joomla\"><a href=\"#Joomla\" class=\"headerlink\" title=\"Joomla\"></a>Joomla</h2><p>Во-первых, нужно установить плагин <code>hexo-migrator-joomla</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-joomla --save</span><br></pre></td></tr></table></figure>\n<p>Экспортируйте статьи Joomla с помощью компонента <a href=\"http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D\" target=\"_blank\" rel=\"noopener\">J2XML</a></p>\n<p>Выполните:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate joomla &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>Где <code>source</code>, это путь или URL файла экспортированного из Joomla.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69m004ekoeoav8kbwlh",
				"title": "Постоянные ссылки",
				"markdown": "Вы можете указать формат постоянных ссылок на вашем сайте в файле `_config.yml`. Или в шапке каждого поста.\n\n### Переменные\n\nПомимо переменных, можно использовать любые атрибуты постоянной ссылки.\n\nПеременная | Описание\n--- | ---\n`:year` | Год публикации поста (4-х значный)\n`:month` | Месяц публикации поста (2-х значный)\n`:i_month` | Месяц публикации поста (Без ведущего нуля)\n`:day` | День публикации поста (2-х значный)\n`:i_day` | День публикации поста (Без ведущего нуля)\n`:title` | Имя файла\n`:id` | ID поста\n`:category` | Категории. Если категория поста не указана, возьмётся значение по умолчанию из `default_category`.\n\nМожно определить значение по умолчанию для переменной постоянной ссылки, задав значение `permalink_defaults` в конфигурации:\n\n``` yaml\npermalink_defaults:\n  lang: en\n```\n\n### Примеры\n\nПост под названием `hello-world.md` в `source/_posts` следующего содержания:\n\n``` yaml\ntitle: Hello World\ndate: 2013-07-14 17:01:34\ncategories:\n- foo\n- bar\n```\n\nНастройка | Результат\n--- | ---\n`:year/:month/:day/:title/` | 2013/07/14/hello-world\n`:year-:month-:day-:title.html` | 2013-07-14-hello-world.html\n`:category/:title` | foo/bar/hello-world\n\n### Многоязычность\n\nДля создания многоязыкового сайта можно изменить `new_post_name` и `permalink`. Например:\n\n``` yaml\nnew_post_name: :lang/:title.md\npermalink: :lang/:title/\n```\n\nПри создании нового поста, он будет сохранен в папке указанного языка:\n\n``` bash\n$ hexo new \"Hello World\" --lang tw\n# => source/_posts/tw/Hello-World.md\n```\n\nссылка на пост будет:\n\n``` plain\nhttp://localhost:4000/tw/hello-world/\n```\n",
				"html": "<p>Вы можете указать формат постоянных ссылок на вашем сайте в файле <code>_config.yml</code>. Или в шапке каждого поста.</p>\n<h3 id=\"Переменные\"><a href=\"#Переменные\" class=\"headerlink\" title=\"Переменные\"></a>Переменные</h3><p>Помимо переменных, можно использовать любые атрибуты постоянной ссылки.</p>\n<table>\n<thead>\n<tr>\n<th>Переменная</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year</code></td>\n<td>Год публикации поста (4-х значный)</td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>Месяц публикации поста (2-х значный)</td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>Месяц публикации поста (Без ведущего нуля)</td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>День публикации поста (2-х значный)</td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>День публикации поста (Без ведущего нуля)</td>\n</tr>\n<tr>\n<td><code>:title</code></td>\n<td>Имя файла</td>\n</tr>\n<tr>\n<td><code>:id</code></td>\n<td>ID поста</td>\n</tr>\n<tr>\n<td><code>:category</code></td>\n<td>Категории. Если категория поста не указана, возьмётся значение по умолчанию из <code>default_category</code>.</td>\n</tr>\n</tbody>\n</table>\n<p>Можно определить значение по умолчанию для переменной постоянной ссылки, задав значение <code>permalink_defaults</code> в конфигурации:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">permalink_defaults:</span></span><br><span class=\"line\"><span class=\"attr\">  lang:</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Примеры\"><a href=\"#Примеры\" class=\"headerlink\" title=\"Примеры\"></a>Примеры</h3><p>Пост под названием <code>hello-world.md</code> в <code>source/_posts</code> следующего содержания:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"bullet\">-07</span><span class=\"bullet\">-14</span> <span class=\"number\">17</span><span class=\"string\">:01:34</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">foo</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">bar</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Настройка</th>\n<th>Результат</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year/:month/:day/:title/</code></td>\n<td>2013/07/14/hello-world</td>\n</tr>\n<tr>\n<td><code>:year-:month-:day-:title.html</code></td>\n<td>2013-07-14-hello-world.html</td>\n</tr>\n<tr>\n<td><code>:category/:title</code></td>\n<td>foo/bar/hello-world</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Многоязычность\"><a href=\"#Многоязычность\" class=\"headerlink\" title=\"Многоязычность\"></a>Многоязычность</h3><p>Для создания многоязыкового сайта можно изменить <code>new_post_name</code> и <code>permalink</code>. Например:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:lang/:title.md</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:lang/:title/</span></span><br></pre></td></tr></table></figure>\n<p>При создании нового поста, он будет сохранен в папке указанного языка:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"Hello World\"</span> --lang tw</span><br><span class=\"line\"><span class=\"comment\"># =&gt; source/_posts/tw/Hello-World.md</span></span><br></pre></td></tr></table></figure>\n<p>ссылка на пост будет:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://localhost:4000/tw/hello-world/</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69m004fkoeosuwdmw4j",
				"title": "Плагины",
				"markdown": "Hexo имеет мощную систему плагинов, это делает его функции легко расширяемыми, не изменяя код основного модуля. Существует два вида плагинов в Hexo:\n\n### Скрипты\n\nЕсли плагин является довольно простым, рекомендуется использовать скрипт. Все, что нужно сделать, это положить ваши JavaScript файлы в папку `scripts` и Hexo загрузит их при инициализации.\n\n### Плагины\n\nЕсли код довольно сложен, или если вы хотите опубликовать его через НПМ, рекомендуется использовать плагин. Во-первых, создайте папку в папке `node_modules`. Название должно начинаться с `hexo-` или Hexo проигнорирует её.\n\nПапка должна содержать минимум два файла: один содержит фактический код JavaScript и `package.json`, который описывает назначение плагина и устанавливает его зависимости.\n\n``` plain\n.\n├── index.js\n└── package.json\n```\n\nПо крайней мере, нужно должны указать название `name`, версию `version` и основу `main` в  `package.json`. Например:\n\n``` json package.json\n{\n  \"name\": \"hexo-my-plugin\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index\"\n}\n```\n\nТакже понадобится перечислить зависимости плагина в корне `package.json` для вашего экземпляра `hexo`, чтобы Hexo обнаружил и загрузил его.\n\n### Инструментарий\n\nВозможно использовать официальные инструменты Hexo, для ускорения разработки:\n\n- [hexo-fs]：Чтение/запись файлов\n- [hexo-util]：Утилиты Hexo\n- [hexo-i18n]：Локализация (i18n)\n- [hexo-pagination]：Постраничная разбивка\n\n### Публикация\n\nКогда плагин будет готов, можно рассмотреть возможность его публикации в список [плагинов](/plugins), чтобы пригласить других людей воспользоваться им. Публикация плагинов очень похожа на [обновление документации](contributing.html#Обновление-документации).\n\n1. Создайте форк [hexojs/site]\n1. Клонируйте репозиторий на компьютер и установите все зависимости.\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n1. Отредактируйте `source/_data/plugins.yml` добавив свой плагин. Например:\n\n    {% code %}\n    - name: hexo-server\n      description: Server module for Hexo.\n      link: https://github.com/hexojs/hexo-server\n      tags:\n        - official\n        - server\n        - console\n    {% endcode %}\n\n1. Загрузите ветку.\n1. Создайте запрос на слияние с описанием изменений.\n\n[hexo-fs]: https://github.com/hexojs/hexo-fs\n[hexo-util]: https://github.com/hexojs/hexo-util\n[hexo-i18n]: https://github.com/hexojs/hexo-i18n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<p>Hexo имеет мощную систему плагинов, это делает его функции легко расширяемыми, не изменяя код основного модуля. Существует два вида плагинов в Hexo:</p>\n<h3 id=\"Скрипты\"><a href=\"#Скрипты\" class=\"headerlink\" title=\"Скрипты\"></a>Скрипты</h3><p>Если плагин является довольно простым, рекомендуется использовать скрипт. Все, что нужно сделать, это положить ваши JavaScript файлы в папку <code>scripts</code> и Hexo загрузит их при инициализации.</p>\n<h3 id=\"Плагины\"><a href=\"#Плагины\" class=\"headerlink\" title=\"Плагины\"></a>Плагины</h3><p>Если код довольно сложен, или если вы хотите опубликовать его через НПМ, рекомендуется использовать плагин. Во-первых, создайте папку в папке <code>node_modules</code>. Название должно начинаться с <code>hexo-</code> или Hexo проигнорирует её.</p>\n<p>Папка должна содержать минимум два файла: один содержит фактический код JavaScript и <code>package.json</code>, который описывает назначение плагина и устанавливает его зависимости.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── index.js</span><br><span class=\"line\">└── package.json</span><br></pre></td></tr></table></figure>\n<p>По крайней мере, нужно должны указать название <code>name</code>, версию <code>version</code> и основу <code>main</code> в  <code>package.json</code>. Например:</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-my-plugin\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Также понадобится перечислить зависимости плагина в корне <code>package.json</code> для вашего экземпляра <code>hexo</code>, чтобы Hexo обнаружил и загрузил его.</p>\n<h3 id=\"Инструментарий\"><a href=\"#Инструментарий\" class=\"headerlink\" title=\"Инструментарий\"></a>Инструментарий</h3><p>Возможно использовать официальные инструменты Hexo, для ускорения разработки:</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-fs\" target=\"_blank\" rel=\"noopener\">hexo-fs</a>：Чтение/запись файлов</li>\n<li><a href=\"https://github.com/hexojs/hexo-util\" target=\"_blank\" rel=\"noopener\">hexo-util</a>：Утилиты Hexo</li>\n<li><a href=\"https://github.com/hexojs/hexo-i18n\" target=\"_blank\" rel=\"noopener\">hexo-i18n</a>：Локализация (i18n)</li>\n<li><a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a>：Постраничная разбивка</li>\n</ul>\n<h3 id=\"Публикация\"><a href=\"#Публикация\" class=\"headerlink\" title=\"Публикация\"></a>Публикация</h3><p>Когда плагин будет готов, можно рассмотреть возможность его публикации в список <a href=\"/plugins\">плагинов</a>, чтобы пригласить других людей воспользоваться им. Публикация плагинов очень похожа на <a href=\"contributing.html#Обновление-документации\">обновление документации</a>.</p>\n<ol>\n<li>Создайте форк <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>Клонируйте репозиторий на компьютер и установите все зависимости.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Отредактируйте <code>source/_data/plugins.yml</code> добавив свой плагин. Например:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">- name: hexo-server</span><br><span class=\"line\">  description: Server module for Hexo.</span><br><span class=\"line\">  link: https://github.com/hexojs/hexo-server</span><br><span class=\"line\">  tags:</span><br><span class=\"line\">    - official</span><br><span class=\"line\">    - server</span><br><span class=\"line\">    - console</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Загрузите ветку.</p>\n</li>\n<li>Создайте запрос на слияние с описанием изменений.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69n004gkoeosdvm0t4t",
				"title": "Сервер",
				"markdown": "## [hexo-server]\n\nС релизом Hexo 3 сервер был отделен от основного модуля. Чтобы начать использовать сервер, нужно установить [hexo-server].\n\n``` bash\n$ npm install hexo-server --save\n```\n\nПосле установки сервера, выполните эту команду для запуска сервера. Ваш сайт будет доступен по адресу `http://localhost:4000` по умолчанию. Когда сервер запущен, Hexo будет отслеживать изменения файлов и автоматически обновлять содержание сайта, поэтому нет нужды вручную перезапускать сервер.\n\n``` bash\n$ hexo server\n```\n\nЕсли вы хотите изменить порт или появляется ошибка `EADDRINUSE`, используйте опцию `-p` для задания другого порта.\n\n``` bash\n$ hexo server -p 5000\n```\n\n### Статичный режим\n\nВ статичном режиме, будут обработаны файлы только в общей папке `public`, отслеживание файлов будет отключено. Нужно запустить `hexo generate` перед запуском сервера. Обычно используется перед публикацией.\n\n``` bash\n$ hexo server -s\n```\n\n### Другой IP\n\nHexo запускает сервер с IP `127.0.0.1` по умолчанию. Это можно изменить в настройках IP по умолчанию.\n\n``` bash\n$ hexo server -i 192.168.1.1\n```\n\n## Pow\n\n[Pow] является нулевой конфигурацией сервера для Mac.\n\n### Установка\n\n``` bash\n$ curl get.pow.cx | sh\n```\n\n### Настройка\n\nСоздайте символьную ссылку на папку `~/.pow`\n\n``` bash\n$ cd ~/.pow\n$ ln -s /path/to/myapp\n```\n\nВаш сайт будет запущен и заработает по адресу `http://myapp.dev` основываясь на имени символической ссылки.\n\n[hexo-server]: https://github.com/hexojs/hexo-server\n[Pow]: http://pow.cx/\n",
				"html": "<h2 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo-server\"></a><a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a></h2><p>С релизом Hexo 3 сервер был отделен от основного модуля. Чтобы начать использовать сервер, нужно установить <a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure>\n<p>После установки сервера, выполните эту команду для запуска сервера. Ваш сайт будет доступен по адресу <code>http://localhost:4000</code> по умолчанию. Когда сервер запущен, Hexo будет отслеживать изменения файлов и автоматически обновлять содержание сайта, поэтому нет нужды вручную перезапускать сервер.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>Если вы хотите изменить порт или появляется ошибка <code>EADDRINUSE</code>, используйте опцию <code>-p</code> для задания другого порта.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h3 id=\"Статичный-режим\"><a href=\"#Статичный-режим\" class=\"headerlink\" title=\"Статичный режим\"></a>Статичный режим</h3><p>В статичном режиме, будут обработаны файлы только в общей папке <code>public</code>, отслеживание файлов будет отключено. Нужно запустить <code>hexo generate</code> перед запуском сервера. Обычно используется перед публикацией.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -s</span><br></pre></td></tr></table></figure>\n<h3 id=\"Другой-IP\"><a href=\"#Другой-IP\" class=\"headerlink\" title=\"Другой IP\"></a>Другой IP</h3><p>Hexo запускает сервер с IP <code>127.0.0.1</code> по умолчанию. Это можно изменить в настройках IP по умолчанию.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -i 192.168.1.1</span><br></pre></td></tr></table></figure>\n<h2 id=\"Pow\"><a href=\"#Pow\" class=\"headerlink\" title=\"Pow\"></a>Pow</h2><p><a href=\"http://pow.cx/\" target=\"_blank\" rel=\"noopener\">Pow</a> является нулевой конфигурацией сервера для Mac.</p>\n<h3 id=\"Установка\"><a href=\"#Установка\" class=\"headerlink\" title=\"Установка\"></a>Установка</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl get.pow.cx | sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"Настройка\"><a href=\"#Настройка\" class=\"headerlink\" title=\"Настройка\"></a>Настройка</h3><p>Создайте символьную ссылку на папку <code>~/.pow</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/.pow</span><br><span class=\"line\">$ ln -s /path/to/myapp</span><br></pre></td></tr></table></figure>\n<p>Ваш сайт будет запущен и заработает по адресу <code>http://myapp.dev</code> основываясь на имени символической ссылки.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69o004hkoeog0qin1nw",
				"title": "Плагины тэгов",
				"markdown": "Плагины тэгов отличаются от тегов в посте. Они портированы с Octopress и обеспечивают удобный способ, чтобы быстро добавить контент для ваших постов.\n\n## Блок цитаты\n\nПодходит для добавления цитаты в свой пост, с указанием автора, источника и информационным заголовком.\n\n**Блок данных:** цитата\n\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n### Примеры\n\n**Без аргументов. Обычная цитата.**\n\n```\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n```\n\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n\n**Цитата из книги**\n\n```\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n```\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n**Цитата из Twitter**\n\n```\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n```\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n**Цитата из статьи в интернете**\n\n```\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n```\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n## Блок с кодом\n\nПолезная функция для добавления фрагментов кода в пост.\n\n**Блок данных:** код\n\n```\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n\n### Примеры\n\n**Простой блок кода**\n\n```\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**С указанием языка**\n\n```\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n```\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n\n**С добавление заголовка**\n\n```\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n```\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n\n**С добавлением заголовка и ссылки**\n\n```\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n```\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n## Блок кода в кавычках\n\nТот же блок кода, но использует три обратные кавычки для отделения блока.\n\n{% raw %}\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n{% endraw %}\n\n## Цитата\n\nДобавляет цитату в пост:\n\n```\n{% pullquote [class] %}\ncontent\n{% endpullquote %}\n```\n\n## jsFiddle\n\nРазмещает фрагмент с jsFiddle:\n\n```\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\n\n## Gist\n\nРазмещает фрагмент с Gist:\n\n```\n{% gist gist_id [filename] %}\n```\n\n## iframe\n\nРазмещает iframe:\n\n```\n{% iframe url [width] [height] %}\n```\n\n## Картинка\n\nВставляет картинку с заданными размерами.\n\n```\n{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}\n```\n\n## Ссылка\n\nВставляет ссылку с атрибутом `target=\"_blank\"`.\n\n```\n{% link text url [external] [title] %}\n```\n\n## Include Code\n\nВставляет фрагменты кода из папки `source/downloads/code`.\n\n```\n{% include_code [title] [lang:language] path/to/file %}\n```\n\n## YouTube\n\nВставка видео с YouTube.\n\n```\n{% youtube video_id %}\n```\n\n## Vimeo\n\nВставка видео с Vimeo.\n\n```\n{% vimeo video_id %}\n```\n\n## Включения из постов\n\nСодержит ссылку на другой пост.\n\n```\n{% post_path slug %}\n{% post_link slug [title] %}\n```\n\n## Вставка материала\n\nСодержит содержимое материала.\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n## Сырцы\n\nЕсли определённый контент вызывает ошибки обработки в ваших постах, оберните его тэгом `raw`, чтобы избежать ошибок обработки.\n\n```\n{% raw %}\ncontent\n{% endraw %}\n```\n",
				"html": "<p>Плагины тэгов отличаются от тегов в посте. Они портированы с Octopress и обеспечивают удобный способ, чтобы быстро добавить контент для ваших постов.</p>\n<h2 id=\"Блок-цитаты\"><a href=\"#Блок-цитаты\" class=\"headerlink\" title=\"Блок цитаты\"></a>Блок цитаты</h2><p>Подходит для добавления цитаты в свой пост, с указанием автора, источника и информационным заголовком.</p>\n<p><strong>Блок данных:</strong> цитата</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Примеры\"><a href=\"#Примеры\" class=\"headerlink\" title=\"Примеры\"></a>Примеры</h3><p><strong>Без аргументов. Обычная цитата.</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote %&#125;</span><br><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>\n</blockquote>\n<p><strong>Цитата из книги</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class=\"line\">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n<p><strong>Цитата из Twitter</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;</span><br><span class=\"line\">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\" target=\"_blank\" rel=\"noopener\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\" target=\"_blank\" rel=\"noopener\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<p><strong>Цитата из статьи в интернете</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</span><br><span class=\"line\">Every interaction is both precious and an opportunity to delight.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\" target=\"_blank\" rel=\"noopener\">Welcome to Island Marketing</a></cite></footer></blockquote>\n<h2 id=\"Блок-с-кодом\"><a href=\"#Блок-с-кодом\" class=\"headerlink\" title=\"Блок с кодом\"></a>Блок с кодом</h2><p>Полезная функция для добавления фрагментов кода в пост.</p>\n<p><strong>Блок данных:</strong> код</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class=\"line\">code snippet</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Примеры-1\"><a href=\"#Примеры-1\" class=\"headerlink\" title=\"Примеры\"></a>Примеры</h3><p><strong>Простой блок кода</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock %&#125;</span><br><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br></pre></td></tr></table></figure>\n<p><strong>С указанием языка</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock lang:objc %&#125;</span><br><span class=\"line\">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"code\"><pre><span class=\"line\">[rectangle setX: <span class=\"number\">10</span> y: <span class=\"number\">10</span> width: <span class=\"number\">20</span> height: <span class=\"number\">20</span>];</span><br></pre></td></tr></table></figure>\n<p><strong>С добавление заголовка</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock Array.map %&#125;</span><br><span class=\"line\">array.map(callback[, thisArg])</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>\n<p><strong>С добавлением заголовка и ссылки</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock _.compact http://underscorejs.org/#compact Underscore.js %&#125;</span><br><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>_.compact</span><a href=\"http://underscorejs.org/#compact\" target=\"_blank\" rel=\"noopener\">Underscore.js</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>\n<h2 id=\"Блок-кода-в-кавычках\"><a href=\"#Блок-кода-в-кавычках\" class=\"headerlink\" title=\"Блок кода в кавычках\"></a>Блок кода в кавычках</h2><p>Тот же блок кода, но использует три обратные кавычки для отделения блока.</p>\n\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n\n<h2 id=\"Цитата\"><a href=\"#Цитата\" class=\"headerlink\" title=\"Цитата\"></a>Цитата</h2><p>Добавляет цитату в пост:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% pullquote [class] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"jsFiddle\"><a href=\"#jsFiddle\" class=\"headerlink\" title=\"jsFiddle\"></a>jsFiddle</h2><p>Размещает фрагмент с jsFiddle:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h2><p>Размещает фрагмент с Gist:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"iframe\"><a href=\"#iframe\" class=\"headerlink\" title=\"iframe\"></a>iframe</h2><p>Размещает iframe:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Картинка\"><a href=\"#Картинка\" class=\"headerlink\" title=\"Картинка\"></a>Картинка</h2><p>Вставляет картинку с заданными размерами.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Ссылка\"><a href=\"#Ссылка\" class=\"headerlink\" title=\"Ссылка\"></a>Ссылка</h2><p>Вставляет ссылку с атрибутом <code>target=&quot;_blank&quot;</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-Code\"><a href=\"#Include-Code\" class=\"headerlink\" title=\"Include Code\"></a>Include Code</h2><p>Вставляет фрагменты кода из папки <code>source/downloads/code</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% include_code [title] [lang:language] path/to/file %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"YouTube\"><a href=\"#YouTube\" class=\"headerlink\" title=\"YouTube\"></a>YouTube</h2><p>Вставка видео с YouTube.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% youtube video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Vimeo\"><a href=\"#Vimeo\" class=\"headerlink\" title=\"Vimeo\"></a>Vimeo</h2><p>Вставка видео с Vimeo.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% vimeo video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Включения-из-постов\"><a href=\"#Включения-из-постов\" class=\"headerlink\" title=\"Включения из постов\"></a>Включения из постов</h2><p>Содержит ссылку на другой пост.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% post_path slug %&#125;</span><br><span class=\"line\">&#123;% post_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Вставка-материала\"><a href=\"#Вставка-материала\" class=\"headerlink\" title=\"Вставка материала\"></a>Вставка материала</h2><p>Содержит содержимое материала.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Сырцы\"><a href=\"#Сырцы\" class=\"headerlink\" title=\"Сырцы\"></a>Сырцы</h2><p>Если определённый контент вызывает ошибки обработки в ваших постах, оберните его тэгом <code>raw</code>, чтобы избежать ошибок обработки.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69o004ikoeo8z4l27uv",
				"title": "Установка",
				"markdown": "После установки Hexo, запустите следующие команды в консоли для инициализации Hexo в папке `<folder>`.\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\nПосле инициализации папку будет выглядеть так:\n\n``` plain\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\nФайл [конфигурации](configuration.html) сайта. В нём, возможно, настроить большинство параметров.\n\n### package.json\n\nДанные приложений. [EJS](http://embeddedjs.com/), [Stylus](http://learnboost.github.io/stylus/) и [Markdown](http://daringfireball.net/projects/markdown/)  обработчики устанавливаются по умолчанию. При желании можно удалить их позже.\n\n``` json package.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### scaffolds\n\nПапка с [заготовками](writing.html#Заготовки). При создании нового поста Hexo формирует файл в папке scaffold.\n\n### source\n\nПапка с исходниками. Это содержащая сайт папка. Hexo игнорирует скрытые файлы и файлы или папки, имена которых начинаются с `_` (подчеркивания). Исключением является папка `_posts`. Обрабатываемые файлы (напр. markdown, HTML) будут вставлены в общую папку, остальные файлы просто копируются.\n\n### themes\n\nПапка с [темами](themes.html). Hexo генерирует статический сайт, комбинируя содержимое сайта с темой.\n",
				"html": "<p>После установки Hexo, запустите следующие команды в консоли для инициализации Hexo в папке <code>&lt;folder&gt;</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>После инициализации папку будет выглядеть так:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Файл <a href=\"configuration.html\">конфигурации</a> сайта. В нём, возможно, настроить большинство параметров.</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>Данные приложений. <a href=\"http://embeddedjs.com/\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"http://learnboost.github.io/stylus/\" target=\"_blank\" rel=\"noopener\">Stylus</a> и <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a>  обработчики устанавливаются по умолчанию. При желании можно удалить их позже.</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-site\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"private\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"hexo\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-archive\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-category\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-index\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-tag\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-ejs\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-stylus\"</span>: <span class=\"string\">\"^0.2.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-marked\"</span>: <span class=\"string\">\"^0.2.4\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-server\"</span>: <span class=\"string\">\"^0.1.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p>Папка с <a href=\"writing.html#Заготовки\">заготовками</a>. При создании нового поста Hexo формирует файл в папке scaffold.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Папка с исходниками. Это содержащая сайт папка. Hexo игнорирует скрытые файлы и файлы или папки, имена которых начинаются с <code>_</code> (подчеркивания). Исключением является папка <code>_posts</code>. Обрабатываемые файлы (напр. markdown, HTML) будут вставлены в общую папку, остальные файлы просто копируются.</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p>Папка с <a href=\"themes.html\">темами</a>. Hexo генерирует статический сайт, комбинируя содержимое сайта с темой.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69o004jkoeoppb25dul",
				"title": "Темы",
				"markdown": "\nСоздать тему Hexo легко, надо просто создать новую папку. Чтобы начать использовать темы, измените настройки `theme` в файле сайта `_config`. Тема должна иметь следующую структуру:\n\n``` plain\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n### _config.yml\n\nФайл конфигурации темы. Изменения не требуют перезагрузки сервера.\n\n### languages\n\nПапка с языковыми файлами. См. подробней [Интернационализация (i18n)](internationalization.html).\n\n### layout\n\nПапка шаблонов. Эта папка содержит файлы шаблонов темы, которые определяют внешний вид сайта. Hexo использует шаблонизатор [Swig] по умолчанию, но вы легко сможете установить дополнительные плагины, чтобы поддерживать альтернативные системы, такие как [EJS], [Haml] или [Jade]. Hexo выбирает шаблонизатор на основе расширения файла. Например:\n\n``` plain\nlayout.ejs   - uses EJS\nlayout.swig  - uses Swig\n```\n\nДополнительные сведения см. в разделе [шаблоны](templates.html).\n\n### scripts\n\nПапка скриптов. В ней размещаются пользовательские скрипты (например, CSS-и javascript-файлы) здесь. Hexo игнорирует скрытые файлы и файлы или папки с префиксом `_` (подчёркивание).\nПапка скриптов. Hexo автоматически загрузит все JavaScript-файлы в этой папке во время инициализации. Дополнительные сведения см. в разделе [плагины](plugins.html).\n\n### source\n\nПапка исходников. Разместите свои материалы здесь (например, CSS и javascript файлы). Hexo игнорирует скрытые файлы и файлы или папки с префиксом `_` (подчёркивание).\n\nHexo будет сохранять все обработанные файлы в общую папку `public`. Не обрабатываемые файлы будут копироваться в общую папку `public` напрямую.\n\n### Публикация\n\nКогда вы закончили свою тему, можно опубликовать её в [списке тем](/themes). Прежде чем сделать это, нужно запустить [тест модулей темы](https://github.com/hexojs/hexo-theme-unit-test), чтобы убедиться, что все работает как нужно. Публикация темы очень похожа на обновление документации.\n\n1. Создайте форк [hexojs/site]\n1. Клонируйте репозиторий на компьютер и установите все зависимости.\n\n    ``` shell\n    git clone ttps://github.com/<username>/site.git\n    cd site\n    npm install\n    ```\n\n1. Отредактируйте `source/_data/themes.yml` и добавьте свою тему. Например:\n\n    ```yaml\n    - name: landscape\n      description: Новая тема по умолчанию для Hexo.\n      link: https://github.com/hexojs/hexo-theme-landscape\n      preview: http://hexo.io/hexo-theme-landscape\n      tags:\n        - official\n        - responsive\n        - widget\n        - two_column\n        - one_column\n    ```\n\n1. Добавьте скриншот темы (с таким-же, как и тема, названием) в папку `source/themes/screenshots`. Он должен быть размером 800*500px в формате PNG.\n1. Загрузите ветку.\n1. Создайте запрос на слияние с описанием изменений.\n\n[EJS]: https://github.com/hexojs/hexo-renderer-ejs\n[Swig]: http://paularmstrong.github.com/swig/\n[Haml]: https://github.com/hexojs/hexo-renderer-haml\n[Jade]: https://github.com/hexojs/hexo-renderer-jade\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<p>Создать тему Hexo легко, надо просто создать новую папку. Чтобы начать использовать темы, измените настройки <code>theme</code> в файле сайта <code>_config</code>. Тема должна иметь следующую структуру:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── languages</span><br><span class=\"line\">├── layout</span><br><span class=\"line\">├── scripts</span><br><span class=\"line\">└── source</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Файл конфигурации темы. Изменения не требуют перезагрузки сервера.</p>\n<h3 id=\"languages\"><a href=\"#languages\" class=\"headerlink\" title=\"languages\"></a>languages</h3><p>Папка с языковыми файлами. См. подробней <a href=\"internationalization.html\">Интернационализация (i18n)</a>.</p>\n<h3 id=\"layout\"><a href=\"#layout\" class=\"headerlink\" title=\"layout\"></a>layout</h3><p>Папка шаблонов. Эта папка содержит файлы шаблонов темы, которые определяют внешний вид сайта. Hexo использует шаблонизатор <a href=\"http://paularmstrong.github.com/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a> по умолчанию, но вы легко сможете установить дополнительные плагины, чтобы поддерживать альтернативные системы, такие как <a href=\"https://github.com/hexojs/hexo-renderer-ejs\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"https://github.com/hexojs/hexo-renderer-haml\" target=\"_blank\" rel=\"noopener\">Haml</a> или <a href=\"https://github.com/hexojs/hexo-renderer-jade\" target=\"_blank\" rel=\"noopener\">Jade</a>. Hexo выбирает шаблонизатор на основе расширения файла. Например:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">layout.ejs   - uses EJS</span><br><span class=\"line\">layout.swig  - uses Swig</span><br></pre></td></tr></table></figure>\n<p>Дополнительные сведения см. в разделе <a href=\"templates.html\">шаблоны</a>.</p>\n<h3 id=\"scripts\"><a href=\"#scripts\" class=\"headerlink\" title=\"scripts\"></a>scripts</h3><p>Папка скриптов. В ней размещаются пользовательские скрипты (например, CSS-и javascript-файлы) здесь. Hexo игнорирует скрытые файлы и файлы или папки с префиксом <code>_</code> (подчёркивание).<br>Папка скриптов. Hexo автоматически загрузит все JavaScript-файлы в этой папке во время инициализации. Дополнительные сведения см. в разделе <a href=\"plugins.html\">плагины</a>.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Папка исходников. Разместите свои материалы здесь (например, CSS и javascript файлы). Hexo игнорирует скрытые файлы и файлы или папки с префиксом <code>_</code> (подчёркивание).</p>\n<p>Hexo будет сохранять все обработанные файлы в общую папку <code>public</code>. Не обрабатываемые файлы будут копироваться в общую папку <code>public</code> напрямую.</p>\n<h3 id=\"Публикация\"><a href=\"#Публикация\" class=\"headerlink\" title=\"Публикация\"></a>Публикация</h3><p>Когда вы закончили свою тему, можно опубликовать её в <a href=\"/themes\">списке тем</a>. Прежде чем сделать это, нужно запустить <a href=\"https://github.com/hexojs/hexo-theme-unit-test\" target=\"_blank\" rel=\"noopener\">тест модулей темы</a>, чтобы убедиться, что все работает как нужно. Публикация темы очень похожа на обновление документации.</p>\n<ol>\n<li>Создайте форк <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>Клонируйте репозиторий на компьютер и установите все зависимости.</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone ttps://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">cd site</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Отредактируйте <code>source/_data/themes.yml</code> и добавьте свою тему. Например:</p>\n <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">- name:</span> <span class=\"string\">landscape</span></span><br><span class=\"line\"><span class=\"attr\">  description:</span> <span class=\"string\">Новая</span> <span class=\"string\">тема</span> <span class=\"string\">по</span> <span class=\"string\">умолчанию</span> <span class=\"string\">для</span> <span class=\"string\">Hexo.</span></span><br><span class=\"line\"><span class=\"attr\">  link:</span> <span class=\"attr\">https://github.com/hexojs/hexo-theme-landscape</span></span><br><span class=\"line\"><span class=\"attr\">  preview:</span> <span class=\"attr\">http://hexo.io/hexo-theme-landscape</span></span><br><span class=\"line\"><span class=\"attr\">  tags:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">official</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">responsive</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">widget</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">two_column</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">one_column</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Добавьте скриншот темы (с таким-же, как и тема, названием) в папку <code>source/themes/screenshots</code>. Он должен быть размером 800*500px в формате PNG.</p>\n</li>\n<li>Загрузите ветку.</li>\n<li>Создайте запрос на слияние с описанием изменений.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69o004kkoeo61cew0lt",
				"title": "Шаблоны",
				"markdown": "Шаблон определяет, как страница определённого вида будет выглядеть на вашем сайте. В таблице ниже приведены соответствующие шаблоны для любой страницы. Как минимум, тема должна содержать шаблон `index`.\n\nШаблон | Страница | Резерв\n--- | --- | ---\n`index` | Домашняя страница |\n`post` | Посты | `index`\n`page` | Страницы | `index`\n`archive` | Архив | `index`\n`category` | Категории архивов | `archive`\n`tag` | Архив тэгов | `archive`\n\n## Макеты\n\nЕсли страницы имеют схожую структуру, например, когда два шаблона имеют как верхний и нижний колонтитулы, тогда можно рассмотреть возможность использования макета `layout` для вынесения этих структурных сходств. Каждый файл разметки должен содержать переменную `body`, для отображения содержимого шаблона. Например:\n\n``` html index.ejs\nindex\n```\n\n``` html layout.ejs\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n```\n\nсформируется в:\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>index</body>\n</html>\n```\n\nПо умолчанию макет `layout` используется всеми другими шаблонами. Вы можете указать дополнительные макеты в шапке файла или установить его значение в `false`, чтобы отключить. Также можно построить сложную вложенную структуру включив в верхней части макета другие макеты.\n<!-- TODO: Добавить примеры использования -->\n\n## Части\n\nРазбивка на части полезна для обмена компонентами между шаблонами. Типичные примеры включают в себя заголовки, нижние колонтитулы, боковые панели. Можно подставить ваш фрагмент в отдельные файлы, чтобы сделать поддержку сайта намного удобнее. Например:\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\nсформируется в:\n\n``` html\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n```\n\n## Локальные переменные\n\nВы можете назначать локальные переменные в шаблонах и после использовать в других шаблонах.\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= title></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\nсформируется в:\n\n``` html\n<h1 id=\"logo\">Hello World</h1>\n<div id=\"content\">Home page</div>\n```\n\n## Оптимизация\n\nЕсли созданная тема является чрезвычайно сложной или в неё количество файлов для создания становится слишком большим, производительность генерация файлов Hexo может начать значительно уменьшиться. Помимо упрощения вашей темы, можно попробовать кэширование фрагментов, оно было введено в Hexo 2.7.\n\nЭта было позаимствовано из [Ruby on Rails](http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching). Он вызывает содержимое для сохранения в виде фрагментов и кэшируются, когда дополнительные запросы выполнены. Это может уменьшить количество запросов к базе данных, а также может ускорить создание файлов.\n\nКэширование фрагментов лучше всего использовать для заголовков, колонтитулов, боковых панелей или другого статического контента, который вряд ли будет менятся от шаблона к шаблону. Например:\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\nХотя это можно сделать проще используя части:\n\n``` js\n<%- partial('header', {}, {cache: true});\n```\n\nНе используйте кэширование фрагментов, когда `relative_link` включён в настройках. Это может вызвать проблемы, потому что относительные ссылки, могут и, вероятнее всего, будут отличаться на разных страницах.\n",
				"html": "<p>Шаблон определяет, как страница определённого вида будет выглядеть на вашем сайте. В таблице ниже приведены соответствующие шаблоны для любой страницы. Как минимум, тема должна содержать шаблон <code>index</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Шаблон</th>\n<th>Страница</th>\n<th>Резерв</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>index</code></td>\n<td>Домашняя страница</td>\n<td></td>\n</tr>\n<tr>\n<td><code>post</code></td>\n<td>Посты</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>Страницы</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>archive</code></td>\n<td>Архив</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>Категории архивов</td>\n<td><code>archive</code></td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td>Архив тэгов</td>\n<td><code>archive</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Макеты\"><a href=\"#Макеты\" class=\"headerlink\" title=\"Макеты\"></a>Макеты</h2><p>Если страницы имеют схожую структуру, например, когда два шаблона имеют как верхний и нижний колонтитулы, тогда можно рассмотреть возможность использования макета <code>layout</code> для вынесения этих структурных сходств. Каждый файл разметки должен содержать переменную <code>body</code>, для отображения содержимого шаблона. Например:</p>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">index</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>сформируется в:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>По умолчанию макет <code>layout</code> используется всеми другими шаблонами. Вы можете указать дополнительные макеты в шапке файла или установить его значение в <code>false</code>, чтобы отключить. Также можно построить сложную вложенную структуру включив в верхней части макета другие макеты.<br><!-- TODO: Добавить примеры использования --></p>\n<h2 id=\"Части\"><a href=\"#Части\" class=\"headerlink\" title=\"Части\"></a>Части</h2><p>Разбивка на части полезна для обмена компонентами между шаблонами. Типичные примеры включают в себя заголовки, нижние колонтитулы, боковые панели. Можно подставить ваш фрагмент в отдельные файлы, чтобы сделать поддержку сайта намного удобнее. Например:</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>') %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>сформируется в:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>My Site<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Локальные-переменные\"><a href=\"#Локальные-переменные\" class=\"headerlink\" title=\"Локальные переменные\"></a>Локальные переменные</h2><p>Вы можете назначать локальные переменные в шаблонах и после использовать в других шаблонах.</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>', &#123;<span class=\"attr\">title:</span> '<span class=\"attr\">Hello</span> <span class=\"attr\">World</span>'&#125;) %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>сформируется в:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Оптимизация\"><a href=\"#Оптимизация\" class=\"headerlink\" title=\"Оптимизация\"></a>Оптимизация</h2><p>Если созданная тема является чрезвычайно сложной или в неё количество файлов для создания становится слишком большим, производительность генерация файлов Hexo может начать значительно уменьшиться. Помимо упрощения вашей темы, можно попробовать кэширование фрагментов, оно было введено в Hexo 2.7.</p>\n<p>Эта было позаимствовано из <a href=\"http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\" target=\"_blank\" rel=\"noopener\">Ruby on Rails</a>. Он вызывает содержимое для сохранения в виде фрагментов и кэшируются, когда дополнительные запросы выполнены. Это может уменьшить количество запросов к базе данных, а также может ускорить создание файлов.</p>\n<p>Кэширование фрагментов лучше всего использовать для заголовков, колонтитулов, боковых панелей или другого статического контента, который вряд ли будет менятся от шаблона к шаблону. Например:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Хотя это можно сделать проще используя части:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p>Не используйте кэширование фрагментов, когда <code>relative_link</code> включён в настройках. Это может вызвать проблемы, потому что относительные ссылки, могут и, вероятнее всего, будут отличаться на разных страницах.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69p004lkoeocr7fxwft",
				"title": "Решение проблем",
				"markdown": "Если вы столкнулись с проблемами при использовании Hexo, на этот случай существует эта страница со списком ответов на часто возникающие вопросы. Если она не помогла, попробуйте поискать решение на [GitHub](https://github.com/hexojs/hexo/issues) или в нашей группе [Google Group](https://groups.google.com/group/hexo).\n\n## Ошибка обработки YAML\n\n``` plain\nJS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:\n      last_updated: Last updated: %s\n```\n\nЗаключите строку в кавычки, если она содержит двоеточия.\n\n``` plain\nJS-YAML: bad indentation of a mapping entry at line 18, column 31:\n      last_updated:\"Last updated: %s\"\n```\n\nУбедитесь, что используются табы вместо пробелов и добавьте пробелы после двоеточий.\n\nБольше информации см. здесь [YAML Spec](http://www.yaml.org/spec/1.2/spec.html).\n\n## Ошибка EMFILE\n\n``` plain\nError: EMFILE, too many open files\n```\n\nХотя Node.js и использует неблокирующий ввод/вывод. Максимальное количество одновременных операций I/O по-прежнему ограничено. Можно встретить ошибку EMFILE при попытке создания большого количества файлов. Попробуйте запустить следующую команду, чтобы увеличить количество синхронных операций ввода-вывода:\n\n``` bash\n$ ulimit -n 10000\n```\n\n## `process out of memory`\n\nКогда вы сталкиваетесь с этой ошибкой во время создания\n```\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory\n```\n\nПовысить размер динамической памяти Node.js можно изменив в первой строке `hexo-cli` команду (для нахождения местоположения файла используйте `which hexo`).\n```\n#!/usr/bin/env node --max_old_space_size=8192\n```\n\n[Заканчивается память при создании большого блога · Issue #1735 · hexojs/hexo (eng)](https://github.com/hexojs/hexo/issues/1735)\n\n## Проблемы с публикацией в Git\n\n``` plain\nerror: RPC failed; result=22, HTTP code = 403\n\nfatal: 'username.github.io' does not appear to be a git repository\n```\n\nУбедитесь, что вы настроили [git](https://help.github.com/articles/set-up-git/#setting-up-git) на своём компьютере. Или, можно попробовать, использовать вместо репозитория URL-адрес https.\n\n## Проблемы с сервером\n\n\n``` plain\nError: listen EADDRINUSE\n```\n\nБыли запущены два сервера Hexo одновременно или возможно другое приложение использует тот же порт. Попробуйте изменить настройки порта или запустить сервер Hexo с флагом `-p`.\n\n``` bash\n$ hexo server -p 5000\n```\n\n## Проблема установки плагина\n\n``` plain\nnpm ERR! node-waf configure build\n```\n\nЭта ошибка может возникать при попытке установить плагин, написанный на C, C++ или любой другой, написанный не на JavaScript. Убедитесь, что вы установили правильный компилятор на компьютере.\n\n## Ошибка с DTrace (Mac OS X)\n\n```plain\n{ [Error: Cannot find module './build/Release/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/default/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/Debug/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n```\n\nПроблема в DTrace попробуйте эту команду:\n```sh\n$ npm install hexo --no-optional\n```\nСм. также [#1326](https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796)\n\n## Iterate Data Model on Jade or Swig\n\nHexo использует склад [Warehouse] для своей модели данных. Это не массив, так что его можно использовать, для преобразования списка объектов в итераторы.\n\n```\n{% for post in site.posts.toArray() %}\n{% endfor %}\n```\n\n## Данные не обновляются\n\nНекоторые данные не могут быть обновлены или вновь созданные файлы идентичны последней версии. Очистите кэш и попробуйте снова.\n\n``` bash\n$ hexo clean\n```\n\n## Содержимое не найдено\n\nHexo использует [Nunjucks] для отображения сообщения ([Swig] использовался в предыдущей версии, он использует похожий синтаксис). Содержимое, обёрнутое, в `{% raw %}{{ }}{% endraw %}` или `{% raw %}{% %}{% endraw %}` поможет вам разобраться какая часть вызвала проблемы. Можно переносить конфиденциальные данные с `raw` плагином.\n\n``` plain\n{% raw %}\nHello {{ sensitive }}\n{% endraw %}\n```\n\n## ENOSPC Error (Linux)\n\nИногда команда `$ hexo server` возвращает ошибку:\n\n``` plain\nError: watch ENOSPC ...\n```\n\nЭто может быть исправлено путем запуска `$ npm dedupe` или, если это не поможет, попробуйте выполнить следующие действия в консоли Linux.\n\n``` plain\n$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\n\nЭто позволит увеличить лимит количества файлов, которые можно просматривать одновременно.\n\n[Warehouse]: https://github.com/hexojs/warehouse\n[Swig]: http://paularmstrong.github.io/swig/\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n",
				"html": "<p>Если вы столкнулись с проблемами при использовании Hexo, на этот случай существует эта страница со списком ответов на часто возникающие вопросы. Если она не помогла, попробуйте поискать решение на <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> или в нашей группе <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a>.</p>\n<h2 id=\"Ошибка-обработки-YAML\"><a href=\"#Ошибка-обработки-YAML\" class=\"headerlink\" title=\"Ошибка обработки YAML\"></a>Ошибка обработки YAML</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:</span><br><span class=\"line\">      last_updated: Last updated: %s</span><br></pre></td></tr></table></figure>\n<p>Заключите строку в кавычки, если она содержит двоеточия.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: bad indentation of a mapping entry at line 18, column 31:</span><br><span class=\"line\">      last_updated:&quot;Last updated: %s&quot;</span><br></pre></td></tr></table></figure>\n<p>Убедитесь, что используются табы вместо пробелов и добавьте пробелы после двоеточий.</p>\n<p>Больше информации см. здесь <a href=\"http://www.yaml.org/spec/1.2/spec.html\" target=\"_blank\" rel=\"noopener\">YAML Spec</a>.</p>\n<h2 id=\"Ошибка-EMFILE\"><a href=\"#Ошибка-EMFILE\" class=\"headerlink\" title=\"Ошибка EMFILE\"></a>Ошибка EMFILE</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: EMFILE, too many open files</span><br></pre></td></tr></table></figure>\n<p>Хотя Node.js и использует неблокирующий ввод/вывод. Максимальное количество одновременных операций I/O по-прежнему ограничено. Можно встретить ошибку EMFILE при попытке создания большого количества файлов. Попробуйте запустить следующую команду, чтобы увеличить количество синхронных операций ввода-вывода:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ulimit</span> -n 10000</span><br></pre></td></tr></table></figure>\n<h2 id=\"process-out-of-memory\"><a href=\"#process-out-of-memory\" class=\"headerlink\" title=\"process out of memory\"></a><code>process out of memory</code></h2><p>Когда вы сталкиваетесь с этой ошибкой во время создания<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory</span><br></pre></td></tr></table></figure></p>\n<p>Повысить размер динамической памяти Node.js можно изменив в первой строке <code>hexo-cli</code> команду (для нахождения местоположения файла используйте <code>which hexo</code>).<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env node --max_old_space_size=8192</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/hexojs/hexo/issues/1735\" target=\"_blank\" rel=\"noopener\">Заканчивается память при создании большого блога · Issue #1735 · hexojs/hexo (eng)</a></p>\n<h2 id=\"Проблемы-с-публикацией-в-Git\"><a href=\"#Проблемы-с-публикацией-в-Git\" class=\"headerlink\" title=\"Проблемы с публикацией в Git\"></a>Проблемы с публикацией в Git</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">error: RPC failed; result=22, HTTP code = 403</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: &apos;username.github.io&apos; does not appear to be a git repository</span><br></pre></td></tr></table></figure>\n<p>Убедитесь, что вы настроили <a href=\"https://help.github.com/articles/set-up-git/#setting-up-git\" target=\"_blank\" rel=\"noopener\">git</a> на своём компьютере. Или, можно попробовать, использовать вместо репозитория URL-адрес https.</p>\n<h2 id=\"Проблемы-с-сервером\"><a href=\"#Проблемы-с-сервером\" class=\"headerlink\" title=\"Проблемы с сервером\"></a>Проблемы с сервером</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: listen EADDRINUSE</span><br></pre></td></tr></table></figure>\n<p>Были запущены два сервера Hexo одновременно или возможно другое приложение использует тот же порт. Попробуйте изменить настройки порта или запустить сервер Hexo с флагом <code>-p</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h2 id=\"Проблема-установки-плагина\"><a href=\"#Проблема-установки-плагина\" class=\"headerlink\" title=\"Проблема установки плагина\"></a>Проблема установки плагина</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm ERR! node-waf configure build</span><br></pre></td></tr></table></figure>\n<p>Эта ошибка может возникать при попытке установить плагин, написанный на C, C++ или любой другой, написанный не на JavaScript. Убедитесь, что вы установили правильный компилятор на компьютере.</p>\n<h2 id=\"Ошибка-с-DTrace-Mac-OS-X\"><a href=\"#Ошибка-с-DTrace-Mac-OS-X\" class=\"headerlink\" title=\"Ошибка с DTrace (Mac OS X)\"></a>Ошибка с DTrace (Mac OS X)</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/default/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Debug/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br></pre></td></tr></table></figure>\n<p>Проблема в DTrace попробуйте эту команду:<br><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo --no-optional</span><br></pre></td></tr></table></figure></p>\n<p>См. также <a href=\"https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796\" target=\"_blank\" rel=\"noopener\">#1326</a></p>\n<h2 id=\"Iterate-Data-Model-on-Jade-or-Swig\"><a href=\"#Iterate-Data-Model-on-Jade-or-Swig\" class=\"headerlink\" title=\"Iterate Data Model on Jade or Swig\"></a>Iterate Data Model on Jade or Swig</h2><p>Hexo использует склад <a href=\"https://github.com/hexojs/warehouse\" target=\"_blank\" rel=\"noopener\">Warehouse</a> для своей модели данных. Это не массив, так что его можно использовать, для преобразования списка объектов в итераторы.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% for post in site.posts.toArray() %&#125;</span><br><span class=\"line\">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Данные-не-обновляются\"><a href=\"#Данные-не-обновляются\" class=\"headerlink\" title=\"Данные не обновляются\"></a>Данные не обновляются</h2><p>Некоторые данные не могут быть обновлены или вновь созданные файлы идентичны последней версии. Очистите кэш и попробуйте снова.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<h2 id=\"Содержимое-не-найдено\"><a href=\"#Содержимое-не-найдено\" class=\"headerlink\" title=\"Содержимое не найдено\"></a>Содержимое не найдено</h2><p>Hexo использует <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> для отображения сообщения (<a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a> использовался в предыдущей версии, он использует похожий синтаксис). Содержимое, обёрнутое, в <code>{{ }}</code> или <code>{% %}</code> поможет вам разобраться какая часть вызвала проблемы. Можно переносить конфиденциальные данные с <code>raw</code> плагином.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">Hello &#123;&#123; sensitive &#125;&#125;</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ENOSPC-Error-Linux\"><a href=\"#ENOSPC-Error-Linux\" class=\"headerlink\" title=\"ENOSPC Error (Linux)\"></a>ENOSPC Error (Linux)</h2><p>Иногда команда <code>$ hexo server</code> возвращает ошибку:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: watch ENOSPC ...</span><br></pre></td></tr></table></figure>\n<p>Это может быть исправлено путем запуска <code>$ npm dedupe</code> или, если это не поможет, попробуйте выполнить следующие действия в консоли Linux.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure>\n<p>Это позволит увеличить лимит количества файлов, которые можно просматривать одновременно.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69p004mkoeobpsdppa6",
				"title": "Переменные",
				"markdown": "### Глобальные переменные\n\nПеременная | Описание\n--- | ---\n`site` | Информация о сайте.\n`page` | Информация о конкретной странице и переменные в шапке страницы.\n`config` | Конфигурация сайта.\n`theme` | Конфигурация темы. Наследуется от конфигурации сайта.\n`_` (одинарное подчёркивание) | Библиотека [Lodash](https://lodash.com/  \"Lodash\" target=\"_blank\")\n`path` | Путь текущей страницы.\n`url` | Полная URL ссылка на текущую страницу.\n`env` | Переменные среды.\n\n### Переменные сайта\n\nПеременная | Описание\n--- | ---\n`site.posts` | Все посты\n`site.pages` | Все страницы\n`site.categories` | Все категории\n`site.tags` | Все тэги\n\n### Переменные страницы\n\n**Страница (page)**\n\nПеременная | Описание\n--- | ---\n`page.title` | Название страницы\n`page.date` | Дата создания страницы (Объект [Moment.js])\n`page.updated` | Дата последнего обновления (Объект [Moment.js])\n`page.comments` | Включены ли комментарии\n`page.layout` | Имя макета\n`page.content` | Полностью обработанное содержание страницы\n`page.excerpt` | Отрывок страницы\n`page.more` | Содержимое страницы без отрывка\n`page.source` | Путь к исходному файлу\n`page.full_source` | Полный путь к исходному файлу\n`page.path` | URL текущей страницы без корневой части адреса. Обычно используется `url_for(page.path)` в теме.\n`page.permalink` | Полный URL-адрес страницы\n`page.prev` | Предыдущий пост. `null`, если пост первый.\n`page.next` | Следующий пост. `null`, если пост последний.\n`page.raw` | Исходники страницы\n`page.photos` | Фотографии из страницы (Используется в галерее постов)\n`page.link` | Внешняя ссылка на статью (Используется в ссылках поста)\n\n**Пост (post)**: такие же переменные, как и у страницы, но добавлены следующие переменные.\n\nПеременные | Описание\n--- | ---\n`page.published` | `true` если пост не проект\n`page.categories` | Все категории поста\n`page.tags` | Все тэги поста\n\n**Главная страница (index)**\n\nПеременная | Описание\n--- | ---\n`page.per_page` | Количество постов, отображаемых на странице\n`page.total` | Общее число постов\n`page.current` | Номер текущей страницы\n`page.current_url` | URL текущей страницы\n`page.posts` | Посты на этой странице ([Data Model])\n`page.prev` | Previous page number. `0` if the current page is the first.\n`page.prev_link` | Ссылка на предыдущую страницу. Равна `''`, если текущая страница является первой.\n`page.next` | Номер следующей страницы. Равно `0`, если текущая страница является последней.\n`page.next_link` | Ссылка на следующую страницу. Равно `''`, если текущая страница является последней.\n`page.path` | URL текущей страницы без корневой части адреса. Обычно используется `url_for(page.path)` в теме.\n\n**Архив (archive):** Такой же, как макет `index`, но добавлены следующие переменные.\n\nПеременная | Описание\n--- | ---\n`page.archive` | Приравнивается к `true`\n`page.year` | Год архива (4-х значное)\n`page.month` | Месяц архива (2-х значное без ведущих нулей)\n\n**Категория (category):** Такая же, как макет `index`, но добавлены следующие переменные.\n\nПеременная | Описание\n--- | ---\n`page.category` | Имя категории\n\n**Тэг (tag):** Такой же, как макет `index`, но добавлены следующие переменные.\n\nПеременная | Описание\n--- | ---\n`page.tag` | Имя тэга\n\n[Moment.js]: http://momentjs.com/\n",
				"html": "<h3 id=\"Глобальные-переменные\"><a href=\"#Глобальные-переменные\" class=\"headerlink\" title=\"Глобальные переменные\"></a>Глобальные переменные</h3><table>\n<thead>\n<tr>\n<th>Переменная</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site</code></td>\n<td>Информация о сайте.</td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>Информация о конкретной странице и переменные в шапке страницы.</td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>Конфигурация сайта.</td>\n</tr>\n<tr>\n<td><code>theme</code></td>\n<td>Конфигурация темы. Наследуется от конфигурации сайта.</td>\n</tr>\n<tr>\n<td><code>_</code> (одинарное подчёркивание)</td>\n<td>Библиотека <a href=\"https://lodash.com/\" title=\"Lodash&quot; target=&quot;_blank\" target=\"_blank\" rel=\"noopener\">Lodash</a></td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Путь текущей страницы.</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>Полная URL ссылка на текущую страницу.</td>\n</tr>\n<tr>\n<td><code>env</code></td>\n<td>Переменные среды.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Переменные-сайта\"><a href=\"#Переменные-сайта\" class=\"headerlink\" title=\"Переменные сайта\"></a>Переменные сайта</h3><table>\n<thead>\n<tr>\n<th>Переменная</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site.posts</code></td>\n<td>Все посты</td>\n</tr>\n<tr>\n<td><code>site.pages</code></td>\n<td>Все страницы</td>\n</tr>\n<tr>\n<td><code>site.categories</code></td>\n<td>Все категории</td>\n</tr>\n<tr>\n<td><code>site.tags</code></td>\n<td>Все тэги</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Переменные-страницы\"><a href=\"#Переменные-страницы\" class=\"headerlink\" title=\"Переменные страницы\"></a>Переменные страницы</h3><p><strong>Страница (page)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Переменная</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.title</code></td>\n<td>Название страницы</td>\n</tr>\n<tr>\n<td><code>page.date</code></td>\n<td>Дата создания страницы (Объект <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a>)</td>\n</tr>\n<tr>\n<td><code>page.updated</code></td>\n<td>Дата последнего обновления (Объект <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a>)</td>\n</tr>\n<tr>\n<td><code>page.comments</code></td>\n<td>Включены ли комментарии</td>\n</tr>\n<tr>\n<td><code>page.layout</code></td>\n<td>Имя макета</td>\n</tr>\n<tr>\n<td><code>page.content</code></td>\n<td>Полностью обработанное содержание страницы</td>\n</tr>\n<tr>\n<td><code>page.excerpt</code></td>\n<td>Отрывок страницы</td>\n</tr>\n<tr>\n<td><code>page.more</code></td>\n<td>Содержимое страницы без отрывка</td>\n</tr>\n<tr>\n<td><code>page.source</code></td>\n<td>Путь к исходному файлу</td>\n</tr>\n<tr>\n<td><code>page.full_source</code></td>\n<td>Полный путь к исходному файлу</td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>URL текущей страницы без корневой части адреса. Обычно используется <code>url_for(page.path)</code> в теме.</td>\n</tr>\n<tr>\n<td><code>page.permalink</code></td>\n<td>Полный URL-адрес страницы</td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>Предыдущий пост. <code>null</code>, если пост первый.</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>Следующий пост. <code>null</code>, если пост последний.</td>\n</tr>\n<tr>\n<td><code>page.raw</code></td>\n<td>Исходники страницы</td>\n</tr>\n<tr>\n<td><code>page.photos</code></td>\n<td>Фотографии из страницы (Используется в галерее постов)</td>\n</tr>\n<tr>\n<td><code>page.link</code></td>\n<td>Внешняя ссылка на статью (Используется в ссылках поста)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Пост (post)</strong>: такие же переменные, как и у страницы, но добавлены следующие переменные.</p>\n<table>\n<thead>\n<tr>\n<th>Переменные</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.published</code></td>\n<td><code>true</code> если пост не проект</td>\n</tr>\n<tr>\n<td><code>page.categories</code></td>\n<td>Все категории поста</td>\n</tr>\n<tr>\n<td><code>page.tags</code></td>\n<td>Все тэги поста</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Главная страница (index)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Переменная</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.per_page</code></td>\n<td>Количество постов, отображаемых на странице</td>\n</tr>\n<tr>\n<td><code>page.total</code></td>\n<td>Общее число постов</td>\n</tr>\n<tr>\n<td><code>page.current</code></td>\n<td>Номер текущей страницы</td>\n</tr>\n<tr>\n<td><code>page.current_url</code></td>\n<td>URL текущей страницы</td>\n</tr>\n<tr>\n<td><code>page.posts</code></td>\n<td>Посты на этой странице ([Data Model])</td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>Previous page number. <code>0</code> if the current page is the first.</td>\n</tr>\n<tr>\n<td><code>page.prev_link</code></td>\n<td>Ссылка на предыдущую страницу. Равна <code>&#39;&#39;</code>, если текущая страница является первой.</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>Номер следующей страницы. Равно <code>0</code>, если текущая страница является последней.</td>\n</tr>\n<tr>\n<td><code>page.next_link</code></td>\n<td>Ссылка на следующую страницу. Равно <code>&#39;&#39;</code>, если текущая страница является последней.</td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>URL текущей страницы без корневой части адреса. Обычно используется <code>url_for(page.path)</code> в теме.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Архив (archive):</strong> Такой же, как макет <code>index</code>, но добавлены следующие переменные.</p>\n<table>\n<thead>\n<tr>\n<th>Переменная</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.archive</code></td>\n<td>Приравнивается к <code>true</code></td>\n</tr>\n<tr>\n<td><code>page.year</code></td>\n<td>Год архива (4-х значное)</td>\n</tr>\n<tr>\n<td><code>page.month</code></td>\n<td>Месяц архива (2-х значное без ведущих нулей)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Категория (category):</strong> Такая же, как макет <code>index</code>, но добавлены следующие переменные.</p>\n<table>\n<thead>\n<tr>\n<th>Переменная</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.category</code></td>\n<td>Имя категории</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Тэг (tag):</strong> Такой же, как макет <code>index</code>, но добавлены следующие переменные.</p>\n<table>\n<thead>\n<tr>\n<th>Переменная</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.tag</code></td>\n<td>Имя тэга</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69q004nkoeopungqz4i",
				"title": "Написание",
				"markdown": "Чтобы создать новый пост, можно выполнить следующую команду:\n\n``` bash\n$ hexo new [layout] <title>\n```\n\n`post` - это `layout` по умолчанию, но можно установить свой собственный изменив значение `default_layout` в `_config.yml`.\n\n### Макет\n\nВ Hexo есть три макета по умолчанию: `post`, `page` и `draft`. Каждая из них сохраняется по своему пути. Пользовательские макеты сохраняются в папке `source/_posts`.\n\nМакет | Путь\n--- | ---\n`post` | `source/_posts`\n`page` | `source`\n`draft` | `source/_drafts`\n\n{% note tip Не обрабатывайте мои посты! %}\nЕсли не хотите чтобы ваши посты обрабатывались, можно настроить макет: установив `layout: false` в заголовке страницы.\n{% endnote %}\n\n### Имя файла\n\nПо умолчанию Hexo использует название поста для создания имени. Для изменения имени файла по умолчанию, можно отредактировать настройки, изменив `new_post_name` в `_config.yml`. Например, у значения `:year-:month-:day-:title.md`, будет префикс с именем файлов и датой создания поста. Можно использовать следующие подстановки:\n\nПодстановка | Описание\n--- | ---\n`:title` | Заголовок поста (строчными буквами с пробелами заменёнными на дефисы)\n`:year` | Год создания. Например: `2015`\n`:month` | Месяц создания(с ведущим нулём). Например: `04`\n`:i_month` | Месяц создания(без ведущим нуля). Например: `4`\n`:day` | День создания(с ведущим нулём). Например: `07`\n`:i_day` | Месяц создания(без ведущим нуля). Например: `7`\n\n### Черновики\n\nРанее упоминалось о специальном макете в Hexo: `draft`. В нём, сообщения при создании, сохраняются в папку `source/_drafts`. Можно использовать команду `publish`, чтобы переместить черновик в папку `source/_posts`. `publish` похожа на команду `new`.\n\n``` bash\n$ hexo publish [layout] <title>\n```\n\nЧерновики, по умолчанию, не отображаются. Можно добавить параметр `--draft` при запуске Hexo или установить значение `render_drafts: true` в `_config.yml`, чтобы включить обработку черновиков.\n\n### Заготовки\n\nПри создании сообщения, Hexo строит файлы на основе соответствующего `scaffolds` файла. Например:\n\n``` bash\n$ hexo new photo \"My Gallery\"\n```\n\nКогда выпонится эта команда, Hexo постарается найти `photo.md` в папке `scaffolds` и создать пост на его основе. Эти подстановочные части доступны в заготовках:\n\nПодстановка | Описание\n--- | ---\n`layout` | Макет\n`title` | Заголовок\n`date` | Дата создания файла\n",
				"html": "<p>Чтобы создать новый пост, можно выполнить следующую команду:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p><code>post</code> - это <code>layout</code> по умолчанию, но можно установить свой собственный изменив значение <code>default_layout</code> в <code>_config.yml</code>.</p>\n<h3 id=\"Макет\"><a href=\"#Макет\" class=\"headerlink\" title=\"Макет\"></a>Макет</h3><p>В Hexo есть три макета по умолчанию: <code>post</code>, <code>page</code> и <code>draft</code>. Каждая из них сохраняется по своему пути. Пользовательские макеты сохраняются в папке <code>source/_posts</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Макет</th>\n<th>Путь</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post</code></td>\n<td><code>source/_posts</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>draft</code></td>\n<td><code>source/_drafts</code></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note tip\"><strong class=\"note-title\">Не обрабатывайте мои посты!</strong><p>Если не хотите чтобы ваши посты обрабатывались, можно настроить макет: установив <code>layout: false</code> в заголовке страницы.</p>\n</blockquote>\n<h3 id=\"Имя-файла\"><a href=\"#Имя-файла\" class=\"headerlink\" title=\"Имя файла\"></a>Имя файла</h3><p>По умолчанию Hexo использует название поста для создания имени. Для изменения имени файла по умолчанию, можно отредактировать настройки, изменив <code>new_post_name</code> в <code>_config.yml</code>. Например, у значения <code>:year-:month-:day-:title.md</code>, будет префикс с именем файлов и датой создания поста. Можно использовать следующие подстановки:</p>\n<table>\n<thead>\n<tr>\n<th>Подстановка</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:title</code></td>\n<td>Заголовок поста (строчными буквами с пробелами заменёнными на дефисы)</td>\n</tr>\n<tr>\n<td><code>:year</code></td>\n<td>Год создания. Например: <code>2015</code></td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>Месяц создания(с ведущим нулём). Например: <code>04</code></td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>Месяц создания(без ведущим нуля). Например: <code>4</code></td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>День создания(с ведущим нулём). Например: <code>07</code></td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>Месяц создания(без ведущим нуля). Например: <code>7</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Черновики\"><a href=\"#Черновики\" class=\"headerlink\" title=\"Черновики\"></a>Черновики</h3><p>Ранее упоминалось о специальном макете в Hexo: <code>draft</code>. В нём, сообщения при создании, сохраняются в папку <code>source/_drafts</code>. Можно использовать команду <code>publish</code>, чтобы переместить черновик в папку <code>source/_posts</code>. <code>publish</code> похожа на команду <code>new</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>Черновики, по умолчанию, не отображаются. Можно добавить параметр <code>--draft</code> при запуске Hexo или установить значение <code>render_drafts: true</code> в <code>_config.yml</code>, чтобы включить обработку черновиков.</p>\n<h3 id=\"Заготовки\"><a href=\"#Заготовки\" class=\"headerlink\" title=\"Заготовки\"></a>Заготовки</h3><p>При создании сообщения, Hexo строит файлы на основе соответствующего <code>scaffolds</code> файла. Например:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new photo <span class=\"string\">\"My Gallery\"</span></span><br></pre></td></tr></table></figure>\n<p>Когда выпонится эта команда, Hexo постарается найти <code>photo.md</code> в папке <code>scaffolds</code> и создать пост на его основе. Эти подстановочные части доступны в заготовках:</p>\n<table>\n<thead>\n<tr>\n<th>Подстановка</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>Макет</td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>Заголовок</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Дата создания файла</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69q004okoeowiorclig",
				"title": "Box",
				"markdown": "box เป็น container ที่ใช้มาจัดการไฟล์ภายใน folder เฉพาะ Hexo ใช้ box ที่แตกต่างกันสองตัว ซึ้งก็คือ `hexo.source` และ `hexo.theme` ตัวแรกใช้มาจัดการ folder `source` และตัวท่ีสองใช้มาจัดการ folder `theme` \n\n\n## Files Loading\n\nbox สนับสนุนวิธีการโหลดไฟล์สองวิธี ซึ้งก็คือ `process` และ `watch`  วิธีตัว `process` จะโหลดไฟล์ทั้งหมดใน folder ส่วนวิธีตัว  `watch` \nนอกจากจะมีการกระทำที่เหมือนวิธีตัว `process` แล้วแถมยังเฝ้าดูการเปลี่ยนแปลงของไฟล์ที่อยู่ใน folder นั้นด้วย\n``` js\nbox.process().then(function(){\n  // ...\n});\n\nbox.watch().then(function(){\n  // You can call box.unwatch() later to stop watching.\n});\n```\n \n## Path Matching\nbox สนับสนุนวิธีหลายอย่างสำหรับ path matching คุณสามารถใช้ regExp function หรือ Express-style pattern string เวลาทำเรื่อง path mathching\n\n``` plain\nposts/:id => posts/89\nposts/*path => posts/2015/title\n```\nสำหรับข้อมูลเพิ่มเติม สามารถดูได้ที่ [util.Pattern] \n\n## Processors\n\nprocessor เป็น element จำเป็นสำหรับ box และใช้มาจัดการไฟล์ คุณสามารถใช้ path matching  ที่กล่าวข้างบนมาจำกัดขอบแขดไฟล์ที่อยากจัดการจริงๆ คุณลงทะเบียน processor ตัวใหม่ได้ด้วยวิธี `addProcessor`\n\n``` js\nbox.addProcessor('posts/:id', function(file){\n  //\n});\n```\nbox ส่งเนื้อหาของไฟล์ที่ถูกคัดเลือกไปให้ processor ข้อมูลที่เกี่ยวกับปฎิบัติการนี้จะอ่านได้จาก `file` ที่เป็น argument ของ callback ได้\n\nAttribute | Description\n--- | ---\n`source` | Full path of the file\n`path` | Relative path to the box of the file\n`type` | File type. The value can be `create`, `update`, `skip`, `delete`.\n`params` | The information from path matching.\n\nbox ยังสนับสนุนวิธีหลายวิธีที่ให้ความสะดวกว่าคุณไม่ต้องทำ IO ของไฟล์ด้วยตนเอง\n\nMethod | Description\n--- | ---\n`read` | Read a file\n`readSync` | Read a file synchronously\n`stat` | Read the status of a file\n`statSync` | Read the status of a file synchronously\n`render` | Render a file\n`renderSync` | Render a file synchronously\n\n[util.Pattern]: https://github.com/hexojs/hexo-util#patternrule\n",
				"html": "<p>box เป็น container ที่ใช้มาจัดการไฟล์ภายใน folder เฉพาะ Hexo ใช้ box ที่แตกต่างกันสองตัว ซึ้งก็คือ <code>hexo.source</code> และ <code>hexo.theme</code> ตัวแรกใช้มาจัดการ folder <code>source</code> และตัวท่ีสองใช้มาจัดการ folder <code>theme</code> </p>\n<h2 id=\"Files-Loading\"><a href=\"#Files-Loading\" class=\"headerlink\" title=\"Files Loading\"></a>Files Loading</h2><p>box สนับสนุนวิธีการโหลดไฟล์สองวิธี ซึ้งก็คือ <code>process</code> และ <code>watch</code>  วิธีตัว <code>process</code> จะโหลดไฟล์ทั้งหมดใน folder ส่วนวิธีตัว  <code>watch</code><br>นอกจากจะมีการกระทำที่เหมือนวิธีตัว <code>process</code> แล้วแถมยังเฝ้าดูการเปลี่ยนแปลงของไฟล์ที่อยู่ใน folder นั้นด้วย<br><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.process().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">box.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// You can call box.unwatch() later to stop watching.</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Path-Matching\"><a href=\"#Path-Matching\" class=\"headerlink\" title=\"Path Matching\"></a>Path Matching</h2><p>box สนับสนุนวิธีหลายอย่างสำหรับ path matching คุณสามารถใช้ regExp function หรือ Express-style pattern string เวลาทำเรื่อง path mathching</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">posts/:id =&gt; posts/89</span><br><span class=\"line\">posts/*path =&gt; posts/2015/title</span><br></pre></td></tr></table></figure>\n<p>สำหรับข้อมูลเพิ่มเติม สามารถดูได้ที่ <a href=\"https://github.com/hexojs/hexo-util#patternrule\" target=\"_blank\" rel=\"noopener\">util.Pattern</a> </p>\n<h2 id=\"Processors\"><a href=\"#Processors\" class=\"headerlink\" title=\"Processors\"></a>Processors</h2><p>processor เป็น element จำเป็นสำหรับ box และใช้มาจัดการไฟล์ คุณสามารถใช้ path matching  ที่กล่าวข้างบนมาจำกัดขอบแขดไฟล์ที่อยากจัดการจริงๆ คุณลงทะเบียน processor ตัวใหม่ได้ด้วยวิธี <code>addProcessor</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.addProcessor(<span class=\"string\">'posts/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>box ส่งเนื้อหาของไฟล์ที่ถูกคัดเลือกไปให้ processor ข้อมูลที่เกี่ยวกับปฎิบัติการนี้จะอ่านได้จาก <code>file</code> ที่เป็น argument ของ callback ได้</p>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>Full path of the file</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Relative path to the box of the file</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>File type. The value can be <code>create</code>, <code>update</code>, <code>skip</code>, <code>delete</code>.</td>\n</tr>\n<tr>\n<td><code>params</code></td>\n<td>The information from path matching.</td>\n</tr>\n</tbody>\n</table>\n<p>box ยังสนับสนุนวิธีหลายวิธีที่ให้ความสะดวกว่าคุณไม่ต้องทำ IO ของไฟล์ด้วยตนเอง</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>read</code></td>\n<td>Read a file</td>\n</tr>\n<tr>\n<td><code>readSync</code></td>\n<td>Read a file synchronously</td>\n</tr>\n<tr>\n<td><code>stat</code></td>\n<td>Read the status of a file</td>\n</tr>\n<tr>\n<td><code>statSync</code></td>\n<td>Read the status of a file synchronously</td>\n</tr>\n<tr>\n<td><code>render</code></td>\n<td>Render a file</td>\n</tr>\n<tr>\n<td><code>renderSync</code></td>\n<td>Render a file synchronously</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69r004pkoeoawq5u6jl",
				"title": "Deployer",
				"markdown": "deployer เป็นตัวช่วยให้ผู้ใช้ deploy เว็บไซต์ไปถึง remote server โดยไม่ต้องใช้คำสั่งซับซ้อน\n\n## Synopsis\n\n``` js\nhexo.extend.deployer.register(name, function(args){\n  // ...\n});\n```\n\n`args` เป็น argument ท่ีจะส่งเข้า function   ในไฟล์ `_config.yml` มีค่า `deploy` และคำสั่งท่ีผู้ใช้ต้องการพิมพ์ลงเข้า terminal\n   \n",
				"html": "<p>deployer เป็นตัวช่วยให้ผู้ใช้ deploy เว็บไซต์ไปถึง remote server โดยไม่ต้องใช้คำสั่งซับซ้อน</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.deployer.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p><code>args</code> เป็น argument ท่ีจะส่งเข้า function   ในไฟล์ <code>_config.yml</code> มีค่า <code>deploy</code> และคำสั่งท่ีผู้ใช้ต้องการพิมพ์ลงเข้า terminal</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69r004qkoeogr90wrlz",
				"title": "Console",
				"markdown": "console เป็นสะพานระหว่าง Hexo และผู้ใช้ของมัน และ console บันทึกและอธิบายคำสั่ง console ที่มีอยู่ \n\n## Synopsis\n\n``` js\nhexo.extend.console.register(name, desc, options, function(args){\n  // ...\n});\n```\n\nArgument | Description\n--- | ---\n`name` | Name\n`desc` | Description\n`options`| Options\n\n `args` เป็น argument ที่ส่งเข้า function  และเป็น argument ท่ีผู้ใช้พิมพ์ลงเข้า Terminal  มันจะถูกวิเคราะห์โดย [Minimist]\n\n\n## Options\n\n### วิธีการใช้งาน\n\nวิธีการใช้งานของคำสั่ง console ยกตัวอย่างเช่น\n\n``` js\n{usage: '[layout] <title>'}\n// hexo new [layout] <title>\n```\n\n### arguments\n\nคำอธิบายทุก argument ของคำสั่ง console ยกตัวอย่างเช่น\n\n``` js\n{\n  arguments: [\n    {name: 'layout', desc: 'Post layout'},\n    {name: 'title', desc: 'Post title'}\n  ]\n}\n```\n\n### options\n\nคำอธิบายทุกตัวเลือกของคำสั่ง console ยกตัวอย่างเช่น\n\n``` js\n{\n  options: [\n    {name: '-r, --replace', desc: 'Replace existing files'}\n  ]\n}\n```\n\n### desc\n\nข้อมูลเพิ่มเติมสำหรับคำสั่ง console\n\n## Example\n\n``` js\nhexo.extend.console.register('config', 'Display configuration', function(args){\n  console.log(hexo.config);\n});\n```\n\n[Minimist]: https://github.com/substack/minimist\n",
				"html": "<p>console เป็นสะพานระหว่าง Hexo และผู้ใช้ของมัน และ console บันทึกและอธิบายคำสั่ง console ที่มีอยู่ </p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(name, desc, options, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>Name</td>\n</tr>\n<tr>\n<td><code>desc</code></td>\n<td>Description</td>\n</tr>\n<tr>\n<td><code>options</code></td>\n<td>Options</td>\n</tr>\n</tbody>\n</table>\n<p> <code>args</code> เป็น argument ที่ส่งเข้า function  และเป็น argument ท่ีผู้ใช้พิมพ์ลงเข้า Terminal  มันจะถูกวิเคราะห์โดย <a href=\"https://github.com/substack/minimist\" target=\"_blank\" rel=\"noopener\">Minimist</a></p>\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><h3 id=\"วิธีการใช้งาน\"><a href=\"#วิธีการใช้งาน\" class=\"headerlink\" title=\"วิธีการใช้งาน\"></a>วิธีการใช้งาน</h3><p>วิธีการใช้งานของคำสั่ง console ยกตัวอย่างเช่น</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">usage</span>: <span class=\"string\">'[layout] &lt;title&gt;'</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">// hexo new [layout] &lt;title&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"arguments\"><a href=\"#arguments\" class=\"headerlink\" title=\"arguments\"></a>arguments</h3><p>คำอธิบายทุก argument ของคำสั่ง console ยกตัวอย่างเช่น</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"built_in\">arguments</span>: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'layout'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post layout'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'title'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post title'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"options\"><a href=\"#options\" class=\"headerlink\" title=\"options\"></a>options</h3><p>คำอธิบายทุกตัวเลือกของคำสั่ง console ยกตัวอย่างเช่น</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  options: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'-r, --replace'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Replace existing files'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"desc\"><a href=\"#desc\" class=\"headerlink\" title=\"desc\"></a>desc</h3><p>ข้อมูลเพิ่มเติมสำหรับคำสั่ง console</p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(<span class=\"string\">'config'</span>, <span class=\"string\">'Display configuration'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(hexo.config);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69r004rkoeojsrt3pzd",
				"title": "Events",
				"markdown": "\nhexo  สืบทอดจาก [EventEmitter]  มันใช้วิธี `on` มาคอยฟัง event ที่ hexo \nส่งออกไป\n\n### deployBefore\n\nส่งออกไปก่อนการเกิดขึ้นของ deployment\n\n### deployAfter\n\nส่งออกไปหลังการจบลงของ deployment\n\n### exit\n\nส่งออกไปก่อนการจบการใช้ hexo\n\n\n### generateBefore\n\nส่งออกไปก่อนการเกิดขึ้นของ generation\n\n### generateAfter\n\nส่งออกไปหลังการจบลงของ generation\n\n### new\n\nส่งออกไปหลังการสร้างโพสต์ใหม่ event นี้ส่ง data โพสต์กลับ\n\n``` js\nhexo.on('new', function(post){\n  //\n});\n```\n\nData | Description\n--- | ---\n`post.path` | Full path of the post file\n`post.content` | Content of the post file\n\n### processBefore\n\nส่งออกไปก่อนการเกิดขึ้นของ processing event นี้ส่งกลับ path ท่ีบ่งบอก  root \ndirectory ของ box\n\n### processAfter\n\nส่งออกไปหลังการจบลงของ processing   event นี้ส่งกลับ path ท่ีบ่งบอก  root directory ของ box\n\n### ready\n\nส่งออกไปหลังการจบลงของ initialization\n\n[EventEmitter]: http://nodejs.org/api/events.html\n",
				"html": "<p>hexo  สืบทอดจาก <a href=\"http://nodejs.org/api/events.html\" target=\"_blank\" rel=\"noopener\">EventEmitter</a>  มันใช้วิธี <code>on</code> มาคอยฟัง event ที่ hexo<br>ส่งออกไป</p>\n<h3 id=\"deployBefore\"><a href=\"#deployBefore\" class=\"headerlink\" title=\"deployBefore\"></a>deployBefore</h3><p>ส่งออกไปก่อนการเกิดขึ้นของ deployment</p>\n<h3 id=\"deployAfter\"><a href=\"#deployAfter\" class=\"headerlink\" title=\"deployAfter\"></a>deployAfter</h3><p>ส่งออกไปหลังการจบลงของ deployment</p>\n<h3 id=\"exit\"><a href=\"#exit\" class=\"headerlink\" title=\"exit\"></a>exit</h3><p>ส่งออกไปก่อนการจบการใช้ hexo</p>\n<h3 id=\"generateBefore\"><a href=\"#generateBefore\" class=\"headerlink\" title=\"generateBefore\"></a>generateBefore</h3><p>ส่งออกไปก่อนการเกิดขึ้นของ generation</p>\n<h3 id=\"generateAfter\"><a href=\"#generateAfter\" class=\"headerlink\" title=\"generateAfter\"></a>generateAfter</h3><p>ส่งออกไปหลังการจบลงของ generation</p>\n<h3 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h3><p>ส่งออกไปหลังการสร้างโพสต์ใหม่ event นี้ส่ง data โพสต์กลับ</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.on(<span class=\"string\">'new'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Data</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post.path</code></td>\n<td>Full path of the post file</td>\n</tr>\n<tr>\n<td><code>post.content</code></td>\n<td>Content of the post file</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"processBefore\"><a href=\"#processBefore\" class=\"headerlink\" title=\"processBefore\"></a>processBefore</h3><p>ส่งออกไปก่อนการเกิดขึ้นของ processing event นี้ส่งกลับ path ท่ีบ่งบอก  root<br>directory ของ box</p>\n<h3 id=\"processAfter\"><a href=\"#processAfter\" class=\"headerlink\" title=\"processAfter\"></a>processAfter</h3><p>ส่งออกไปหลังการจบลงของ processing   event นี้ส่งกลับ path ท่ีบ่งบอก  root directory ของ box</p>\n<h3 id=\"ready\"><a href=\"#ready\" class=\"headerlink\" title=\"ready\"></a>ready</h3><p>ส่งออกไปหลังการจบลงของ initialization</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69r004skoeo8gx7mixs",
				"title": "Filter",
				"markdown": "\nfilter ใช้มาเป็นการแก้ไขข้อมูลเฉพาะ hexo ส่งข้อมูลเข้า filter ตามลำดับและ filter จะแก้ไขข้อมูลตามลำดับ ความคิดนี้มาจาก [WordPress](http://codex.wordpress.org/Plugin_API#Filters)\n\n## Synopsis\n\n``` js\nhexo.extend.filter.register(type, function(){\n  // ...\n}, priority);\n```\n\nผู้ใช้สามารถตั้งค่า `priority` ได้  ค่าของ `priority` ยิ่งต่ำหมายถึงว่าจะ execute ยิ่งก่อนตัวอื่น ส่วนค่า default ของ `priority` คือ 10.\n\n## Execute Filters\n\n``` js\nhexo.extend.filter.exec(type, data, options);\nhexo.extend.filter.execSync(type, data, options);\n```\n\nOption | Description\n--- | ---\n`context` | Context\n`args` | Arguments. This must be an array.\n\nargument ตัวแรกคือ `data`   การแก้ไขค่าของ`data` จะเป็นการส่ง `data` เข้า filter และส่งค่าใหม่กลับมา ถ้าไม่มีข้อมูลส่งกลับมา ค่าของ `data` จะคงอยู่เหมือนเดิม ผู้ใช้สามารถใช้ `args` มาชี้ถึง argument อื่นๆใน filter ยกตัวอย่างเช่น:\n\n\n``` js\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'some data'\n  // arg1 === 'foo'\n  // arg2 === 'bar'\n\n  return 'something';\n});\n\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'something'\n});\n\nhexo.extend.filter.exec('test', 'some data', {\n  args: ['foo', 'bar']\n});\n```\n\nผู้ใช้สามารถใช้วิธีต่อไปเพื่อ execute filter:\n\n``` js\nhexo.execFilter(type, data, options);\nhexo.execFilterSync(type, data, options);\n```\n\n## Unregister Filters\n\n``` js\nhexo.extend.filter.unregister(type, filter);\n```\n\n## Filter List\n\nต่อไปเป็นตารางของ filter ท่ีใช้ใน hexo\n\n### before_post_render\n\nexecute ก่อนการ render ของโพสต์  สำหรับขั้นตอนของ execution ไปดูท่ี [post rendering](posts.html#Render) ได้\n\nยกตัวอย่างเช่น การเปลี่ยนตัวอักษรเป็นตัวเล็ก:\n\n``` js\nhexo.extend.filter.register('before_post_render', function(data){\n  data.title = data.title.toLowerCase();\n  return data;\n});\n```\n\n### after_post_render\n\nexecute หลังการ render ของโพสต์ สำหรับขั้นตอนของ execution ไปดูท่ี [post rendering](posts.html#Render) ได้\n\nยกตัวอย่างเช่น แทน `@username` ด้วยลิงค์ท่ีชึ้ไปถึงโปรไฟล์ของ Twitter\n\n``` js\nhexo.extend.filter.register('after_post_render', function(data){\n  data.content = data.content.replace(/@(\\d+)/, '<a href=\"http://twitter.com/$1\">#$1</a>');\n  return data;\n});\n```\n\n### before_exit\n\nexecute ก่อนการท่ีจะจบการใช้โปรแกรม hexo -- รันหลังการเรียก `hexo.exit`\n\n``` js\nhexo.extend.filter.register('before_exit', function(){\n  // ...\n});\n```\n\n### before_generate\n\nexecute ก่อนการเริ่มต้นของ generation\n\n``` js\nhexo.extend.filter.register('before_generate', function(){\n  // ...\n});\n```\n\n### after_generate\n\nexecute หลังการเสร็จสิ้นของ generation\n\n``` js\nhexo.extend.filter.register('after_generate', function(){\n  // ...\n});\n```\n\n### template_locals\n\n\nแก้ไข [local variables](../docs/variables.html) ใน template\n\nยกตัวอย่างเช่น เพิ่มเวลาปัจจุบันไปถึง local variable ของ template\n\n``` js\nhexo.extend.filter.register('template_locals', function(locals){\n  locals.now = Date.now();\n  return locals;\n});\n```\n\n### after_init\n\nexecute หลัง initialization ของ hexo -- รันหลังการเสร็จสิ้นของ `hexo.init`\n\n``` js\nhexo.extend.filter.register('after_init', function(){\n  // ...\n});\n```\n\n### new_post_path\n\nexecute เพิ่อให้ path แก่โพสต์ใหม่เมื่อการสร้่างโพสต์ใหม่มา\n\n``` js\nhexo.extend.filter.register('new_post_path', function(data, replace){\n  // ...\n});\n```\n\n### post_permalink\n\nใช้มาเพื่อสร้างลิงค์ถาวรของโพสต์\n\n``` js\nhexo.extend.filter.register('post_permalink', function(data){\n  // ...\n});\n```\n\n### after_render\n\n execute หลังการเสร็จสิ้นของ rendering สำหรับข้อมูลเพิ่มเติม ไปดูได้ที่ [rendering](rendering.html#after_render_Filters) \n\n### after_clean\n\nexecute หลัง generation ของไฟล์ และ cache จะลบออกด้วยคำสั่ง `hexo clean`\n\n``` js\nhexo.extend.filter.register('after_clean', function(){\n  // remove some other temporary files\n});\n```\n\n### server_middleware\n\nเพิ่ม middleware ไปถึง server  `app` เป็น instance ของ [Connect]\n\nยกตัวอย่างเช่น เพิ่ม `X-Powered-By: Hexo` ไปให้ response header:\n\n``` js\nhexo.extend.filter.register('server_middleware', function(app){\n  app.use(function(req, res, next){\n    res.setHeader('X-Powered-By', 'Hexo');\n    next();\n  });\n});\n```\n\n[Connect]: https://github.com/senchalabs/connect\n",
				"html": "<p>filter ใช้มาเป็นการแก้ไขข้อมูลเฉพาะ hexo ส่งข้อมูลเข้า filter ตามลำดับและ filter จะแก้ไขข้อมูลตามลำดับ ความคิดนี้มาจาก <a href=\"http://codex.wordpress.org/Plugin_API#Filters\" target=\"_blank\" rel=\"noopener\">WordPress</a></p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(type, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, priority);</span><br></pre></td></tr></table></figure>\n<p>ผู้ใช้สามารถตั้งค่า <code>priority</code> ได้  ค่าของ <code>priority</code> ยิ่งต่ำหมายถึงว่าจะ execute ยิ่งก่อนตัวอื่น ส่วนค่า default ของ <code>priority</code> คือ 10.</p>\n<h2 id=\"Execute-Filters\"><a href=\"#Execute-Filters\" class=\"headerlink\" title=\"Execute Filters\"></a>Execute Filters</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.exec(type, data, options);</span><br><span class=\"line\">hexo.extend.filter.execSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>context</code></td>\n<td>Context</td>\n</tr>\n<tr>\n<td><code>args</code></td>\n<td>Arguments. This must be an array.</td>\n</tr>\n</tbody>\n</table>\n<p>argument ตัวแรกคือ <code>data</code>   การแก้ไขค่าของ<code>data</code> จะเป็นการส่ง <code>data</code> เข้า filter และส่งค่าใหม่กลับมา ถ้าไม่มีข้อมูลส่งกลับมา ค่าของ <code>data</code> จะคงอยู่เหมือนเดิม ผู้ใช้สามารถใช้ <code>args</code> มาชี้ถึง argument อื่นๆใน filter ยกตัวอย่างเช่น:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'some data'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg1 === 'foo'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg2 === 'bar'</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'something'</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'something'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.exec(<span class=\"string\">'test'</span>, <span class=\"string\">'some data'</span>, &#123;</span><br><span class=\"line\">  args: [<span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span>]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>ผู้ใช้สามารถใช้วิธีต่อไปเพื่อ execute filter:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.execFilter(type, data, options);</span><br><span class=\"line\">hexo.execFilterSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Unregister-Filters\"><a href=\"#Unregister-Filters\" class=\"headerlink\" title=\"Unregister Filters\"></a>Unregister Filters</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.unregister(type, filter);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Filter-List\"><a href=\"#Filter-List\" class=\"headerlink\" title=\"Filter List\"></a>Filter List</h2><p>ต่อไปเป็นตารางของ filter ท่ีใช้ใน hexo</p>\n<h3 id=\"before-post-render\"><a href=\"#before-post-render\" class=\"headerlink\" title=\"before_post_render\"></a>before_post_render</h3><p>execute ก่อนการ render ของโพสต์  สำหรับขั้นตอนของ execution ไปดูท่ี <a href=\"posts.html#Render\">post rendering</a> ได้</p>\n<p>ยกตัวอย่างเช่น การเปลี่ยนตัวอักษรเป็นตัวเล็ก:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.title = data.title.toLowerCase();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-post-render\"><a href=\"#after-post-render\" class=\"headerlink\" title=\"after_post_render\"></a>after_post_render</h3><p>execute หลังการ render ของโพสต์ สำหรับขั้นตอนของ execution ไปดูท่ี <a href=\"posts.html#Render\">post rendering</a> ได้</p>\n<p>ยกตัวอย่างเช่น แทน <code>@username</code> ด้วยลิงค์ท่ีชึ้ไปถึงโปรไฟล์ของ Twitter</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.content = data.content.replace(<span class=\"regexp\">/@(\\d+)/</span>, <span class=\"string\">'&lt;a href=\"http://twitter.com/$1\"&gt;#$1&lt;/a&gt;'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-exit\"><a href=\"#before-exit\" class=\"headerlink\" title=\"before_exit\"></a>before_exit</h3><p>execute ก่อนการท่ีจะจบการใช้โปรแกรม hexo – รันหลังการเรียก <code>hexo.exit</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_exit'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-generate\"><a href=\"#before-generate\" class=\"headerlink\" title=\"before_generate\"></a>before_generate</h3><p>execute ก่อนการเริ่มต้นของ generation</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-generate\"><a href=\"#after-generate\" class=\"headerlink\" title=\"after_generate\"></a>after_generate</h3><p>execute หลังการเสร็จสิ้นของ generation</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"template-locals\"><a href=\"#template-locals\" class=\"headerlink\" title=\"template_locals\"></a>template_locals</h3><p>แก้ไข <a href=\"../docs/variables.html\">local variables</a> ใน template</p>\n<p>ยกตัวอย่างเช่น เพิ่มเวลาปัจจุบันไปถึง local variable ของ template</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'template_locals'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  locals.now = <span class=\"built_in\">Date</span>.now();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-init\"><a href=\"#after-init\" class=\"headerlink\" title=\"after_init\"></a>after_init</h3><p>execute หลัง initialization ของ hexo – รันหลังการเสร็จสิ้นของ <code>hexo.init</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_init'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"new-post-path\"><a href=\"#new-post-path\" class=\"headerlink\" title=\"new_post_path\"></a>new_post_path</h3><p>execute เพิ่อให้ path แก่โพสต์ใหม่เมื่อการสร้่างโพสต์ใหม่มา</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'new_post_path'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, replace</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"post-permalink\"><a href=\"#post-permalink\" class=\"headerlink\" title=\"post_permalink\"></a>post_permalink</h3><p>ใช้มาเพื่อสร้างลิงค์ถาวรของโพสต์</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'post_permalink'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-render\"><a href=\"#after-render\" class=\"headerlink\" title=\"after_render\"></a>after_render</h3><p> execute หลังการเสร็จสิ้นของ rendering สำหรับข้อมูลเพิ่มเติม ไปดูได้ที่ <a href=\"rendering.html#after_render_Filters\">rendering</a> </p>\n<h3 id=\"after-clean\"><a href=\"#after-clean\" class=\"headerlink\" title=\"after_clean\"></a>after_clean</h3><p>execute หลัง generation ของไฟล์ และ cache จะลบออกด้วยคำสั่ง <code>hexo clean</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_clean'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// remove some other temporary files</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"server-middleware\"><a href=\"#server-middleware\" class=\"headerlink\" title=\"server_middleware\"></a>server_middleware</h3><p>เพิ่ม middleware ไปถึง server  <code>app</code> เป็น instance ของ <a href=\"https://github.com/senchalabs/connect\" target=\"_blank\" rel=\"noopener\">Connect</a></p>\n<p>ยกตัวอย่างเช่น เพิ่ม <code>X-Powered-By: Hexo</code> ไปให้ response header:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'server_middleware'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>)</span>&#123;</span><br><span class=\"line\">  app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;</span><br><span class=\"line\">    res.setHeader(<span class=\"string\">'X-Powered-By'</span>, <span class=\"string\">'Hexo'</span>);</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69s004tkoeotypl188d",
				"title": "Generator",
				"markdown": "generator สร้าง route บนพื้นฐานของไฟล์ท่ีได้จัดการ\n\n## Synopsis\n\n``` js\nhexo.extend.generator.register(name, function(locals){\n  // ...\n});\n```\n\nargument `locals` จะส่งเข้า function โดยมี [site variables](../docs/variables.html#Site-Variables) เข้าด้วยกัน ผู้ใช้สามารถใช้ argument นี้เพื่อได้ data ของเว็บไซต์ ด้งนั้นจะไม่ต้องเข้าถึง database โดยตรง\n\n## Update Routes\n\n``` js\nhexo.extend.generator.register('test', function(locals){\n  // Object\n  return {\n    path: 'foo',\n    data: 'foo'\n  };\n\n  // Array\n  return [\n    {path: 'foo', data: 'foo'},\n    {path: 'bar', data: 'bar'}\n  ];\n});\n```\n\nAttribute | Description\n--- | ---\n`path` | Path not including the prefixing `/`.\n`data` | Data\n`layout` | Layout. Specify the layouts for rendering. The value can be a string or an array. If it's ignored then the route will return `data` directly.\n\nเมื่ออัปเดท source file แฃ้ว hexo จะ execute generator ทั้งหมดและสร้างขึ้น route ใหม่ **กรุณาอย่าเข้าถึง router โดยตรง**\n\n## Example\n\n### Archive Page\n\nสร้างเพจ archive ได้ท่ี `archives/index.html`  โพสต์จะเป็นแบบ  data ท่ีส่งเข้า template. data นี้คล้ายกับ variable `page` ของ template\n\nต่อไปจะตั้งค่า attribute ของ `layout` เพื่อ render theme template เฉพาะ ในตัวอย่างต่อไปจะตั้งค่า layout อย่างนี้: ถ้า layout  `archive` ไม่มี จะใช้ layout `index` แทน\n\n``` js\nhexo.extend.generator.register('archive', function(locals){\n  return {\n    path: 'archives/index.html',\n    data: locals,\n    layout: ['archive', 'index']\n  }\n});\n```\n\n### Archive Page with Pagination\n\nผู้ใช้สามารถใช้เครื่องมือทางการ [hexo-pagination] อย่างสะดวกไปสร้างเพจ archive ท่ีมีหมายเลขหน้า\n\n``` js\nvar pagination = require('hexo-pagination');\n\nhexo.extend.generator.register('archive', function(locals){\n  // hexo-pagination makes an index.html for the /archives route\n  return pagination('archives', locals.posts, {\n    perPage: 10,\n    layout: ['archive', 'index'],\n    data: {}\n  });\n});\n```\n\n### Generate All Posts\n\nโพสต์ทั้งหมดจะมีอยู่ใน `locals.posts` ด้วยแล้วจะสร้าง route ให้โพสต์ทั้งหมด\n``` js\nhexo.extend.generator.register('post', function(locals){\n  return locals.posts.map(function(post){\n    return {\n      path: post.path,\n      data: post,\n      layout: 'post'\n    };\n  });\n});\n```\n\n### Copy Files\n\nคราวนี้  `data` จะเป็น function และ route `fs.ReadStream` ของ `data` จะสร้างขึ้นมาในเวลาที่ต้องการ\n\n\n``` js\nvar fs = require('hexo-fs');\n\nhexo.extend.generator.register('asset', function(locals){\n  return {\n    path: 'file.txt',\n    data: function(){\n      return fs.createReadStream('path/to/file.txt')\n    }\n  };\n});\n```\n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n",
				"html": "<p>generator สร้าง route บนพื้นฐานของไฟล์ท่ีได้จัดการ</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>argument <code>locals</code> จะส่งเข้า function โดยมี <a href=\"../docs/variables.html#Site-Variables\">site variables</a> เข้าด้วยกัน ผู้ใช้สามารถใช้ argument นี้เพื่อได้ data ของเว็บไซต์ ด้งนั้นจะไม่ต้องเข้าถึง database โดยตรง</p>\n<h2 id=\"Update-Routes\"><a href=\"#Update-Routes\" class=\"headerlink\" title=\"Update Routes\"></a>Update Routes</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Object</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'foo'</span>,</span><br><span class=\"line\">    data: <span class=\"string\">'foo'</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Array</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> [</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'foo'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'foo'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'bar'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'bar'</span>&#125;</span><br><span class=\"line\">  ];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>path</code></td>\n<td>Path not including the prefixing <code>/</code>.</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Specify the layouts for rendering. The value can be a string or an array. If it’s ignored then the route will return <code>data</code> directly.</td>\n</tr>\n</tbody>\n</table>\n<p>เมื่ออัปเดท source file แฃ้ว hexo จะ execute generator ทั้งหมดและสร้างขึ้น route ใหม่ <strong>กรุณาอย่าเข้าถึง router โดยตรง</strong></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><h3 id=\"Archive-Page\"><a href=\"#Archive-Page\" class=\"headerlink\" title=\"Archive Page\"></a>Archive Page</h3><p>สร้างเพจ archive ได้ท่ี <code>archives/index.html</code>  โพสต์จะเป็นแบบ  data ท่ีส่งเข้า template. data นี้คล้ายกับ variable <code>page</code> ของ template</p>\n<p>ต่อไปจะตั้งค่า attribute ของ <code>layout</code> เพื่อ render theme template เฉพาะ ในตัวอย่างต่อไปจะตั้งค่า layout อย่างนี้: ถ้า layout  <code>archive</code> ไม่มี จะใช้ layout <code>index</code> แทน</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'archives/index.html'</span>,</span><br><span class=\"line\">    data: locals,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Archive-Page-with-Pagination\"><a href=\"#Archive-Page-with-Pagination\" class=\"headerlink\" title=\"Archive Page with Pagination\"></a>Archive Page with Pagination</h3><p>ผู้ใช้สามารถใช้เครื่องมือทางการ <a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a> อย่างสะดวกไปสร้างเพจ archive ท่ีมีหมายเลขหน้า</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// hexo-pagination makes an index.html for the /archives route</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> pagination(<span class=\"string\">'archives'</span>, locals.posts, &#123;</span><br><span class=\"line\">    perPage: <span class=\"number\">10</span>,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>],</span><br><span class=\"line\">    data: &#123;&#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Generate-All-Posts\"><a href=\"#Generate-All-Posts\" class=\"headerlink\" title=\"Generate All Posts\"></a>Generate All Posts</h3><p>โพสต์ทั้งหมดจะมีอยู่ใน <code>locals.posts</code> ด้วยแล้วจะสร้าง route ให้โพสต์ทั้งหมด<br><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'post'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals.posts.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      path: post.path,</span><br><span class=\"line\">      data: post,</span><br><span class=\"line\">      layout: <span class=\"string\">'post'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Copy-Files\"><a href=\"#Copy-Files\" class=\"headerlink\" title=\"Copy Files\"></a>Copy Files</h3><p>คราวนี้  <code>data</code> จะเป็น function และ route <code>fs.ReadStream</code> ของ <code>data</code> จะสร้างขึ้นมาในเวลาที่ต้องการ</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'asset'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'file.txt'</span>,</span><br><span class=\"line\">    data: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> fs.createReadStream(<span class=\"string\">'path/to/file.txt'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69s004ukoeoz8jrgp1y",
				"title": "Helper",
				"markdown": "helper ทำให้ผู้ใช้เพิ่ม snippet เข้า template ของตนได้ง่ายขึ้น. เมื่อต้องจัดการ code ท่ีซับซ้อนขึ้น การใช้ helper จะสะดวกกว่าท่ีใช้ template ผู้ใช้จะเข้าถึง helper โดยไฟล์ `source` ไม่ได้\n\n## Synopsis\n\n``` js\nhexo.extend.helper.register(name, function(){\n  // ...\n});\n```\n\n## Example\n\n``` js\nhexo.extend.helper.register('js', function(path){\n  return '<script type=\"text/javascript\" src=\"' + path + '\"></script>';\n});\n```\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"script.js\"></script>\n```\n\n## FAQ\n\n###  helper ท่ีตั้งค่าด้วยตนนั้นจะวางท่ีใหนได้?\n\nวางท่ีไฟล์ `themes/<yourtheme>/scripts`\n",
				"html": "<p>helper ทำให้ผู้ใช้เพิ่ม snippet เข้า template ของตนได้ง่ายขึ้น. เมื่อต้องจัดการ code ท่ีซับซ้อนขึ้น การใช้ helper จะสะดวกกว่าท่ีใช้ template ผู้ใช้จะเข้าถึง helper โดยไฟล์ <code>source</code> ไม่ได้</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(<span class=\"string\">'js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script type=\"text/javascript\" src=\"'</span> + path + <span class=\"string\">'\"&gt;&lt;/script&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><h3 id=\"helper-ท่ีตั้งค่าด้วยตนนั้นจะวางท่ีใหนได้\"><a href=\"#helper-ท่ีตั้งค่าด้วยตนนั้นจะวางท่ีใหนได้\" class=\"headerlink\" title=\"helper ท่ีตั้งค่าด้วยตนนั้นจะวางท่ีใหนได้?\"></a>helper ท่ีตั้งค่าด้วยตนนั้นจะวางท่ีใหนได้?</h3><p>วางท่ีไฟล์ <code>themes/&lt;yourtheme&gt;/scripts</code></p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69s004vkoeo55i0wwdv",
				"title": "API",
				"markdown": "\n บทความนี้แนะนำข้อมูลเกี่ยวกับ API และมีส่วนช่วยต่อผู้ใช้ท่ีอยากปรับ source code ของ hexo  หรือเขียนปลั๊กอินใหม่ ถ้าคุณสนใจวิธีการใช้้พื้นฐานของ hexo กรุณาไปอ่น [docs](../docs) แทน\n \nบทความนี้สำหรับ hexo 3 หรือเวอร์ชั่นใหม่กว่านี้เท่านั้น\n\n## Initialize\n\nขั้นตอนแรกคือการสร้าง instance ของ hexo.  instance \nจะประกอบด้วยสองส่วน:`base_dir` ซึ่งเป็น root directory ของเว็บไซต์ และ object ท่ีมี initialization options  ขั้นตอนท่ีสองใช้วิธี `init`เพื่อ initialize instance  ด้วยวิธีนี้ hexo จะโหลด configuration และปลั๊กอินของมัน\n``` js\nvar Hexo = require('hexo');\nvar hexo = new Hexo(process.cwd(), {});\n\nhexo.init().then(function(){\n  // ...\n});\n```\n\nOption | Description | Default\n--- | --- | ---\n`debug` | Enable debug mode. Display debug messages in the terminal and save `debug.log` in the root directory. | `false`\n`safe` | Enable safe mode. Don't load any plugins. | `false`\n`silent` | Enable silent mode. Don't display any messages in the terminal. | `false`\n`config` | Specify the path of the configuration file. | `_config.yml`\n`draft` / `drafts`| Enable to add drafts to the posts list.<br> example: when you use `hexo.locals.get('posts')` | `render_drafts` of _config.yml \n\n## Load Files\n\nhexo โหลดไฟล์ด้วยสองวิธี: `load` และ `watch` .  วิธี `load` ใช้มาเพื่อโหลดไฟล์ใน folder `source` และ data ของธีม ส่วนวิธี `watch` ทำเรื่องเดียวกันกับวิธี  `load` แต่จะเริ่มบันทึกการเปลี่ยนแปลงของไฟล์อย่างต่อเนื่อง \n \nทั้งสองวิธีนี้จะโหลด list ของไฟล์และส่งไฟล์เข้า processor ท่ีเกี่ยวข้อง หลังการ process ของไฟล์ทั้งหมด จะมี generator มาสร้าง route\n\n``` js\nhexo.load().then(function(){\n  // ...\n});\n\nhexo.watch().then(function(){\n  // You can call hexo.unwatch() later to stop watching.\n});\n```\n\n## Execute Commands\n\n\nด้วยวิธี `call` ผู้ใช้สามารถเรียกคำสั่ง console สำหรับ instance ของ hexo การเรียกคำสั่ง console นี้ประกอบด้วยสอง argument: ชื่อคำสั่ง console และ argument ของ option  คำสั่ง console ที่แตกต่างกันนั้นจะมี option ท่ีแตกต่างกัน\n\n\n``` js\nhexo.call('generate', {}).then(function(){\n  // ...\n});\n```\n\n``` js\nhexo.call('list', { _: ['post'] }).then(function() {\n  // ...\n})\n```\n\n## Exit\n\nด้วยวิธี `exit` คุณสามารถจบคำสั่ง console อย่างสง่างามและทำสิ่งสำคัญให้ เช่นการบันทึก database\n\n``` js\nhexo.call('generate').then(function(){\n  return hexo.exit();\n}).catch(function(err){\n  return hexo.exit(err);\n});\n```\n",
				"html": "<p> บทความนี้แนะนำข้อมูลเกี่ยวกับ API และมีส่วนช่วยต่อผู้ใช้ท่ีอยากปรับ source code ของ hexo  หรือเขียนปลั๊กอินใหม่ ถ้าคุณสนใจวิธีการใช้้พื้นฐานของ hexo กรุณาไปอ่น <a href=\"../docs\">docs</a> แทน</p>\n<p>บทความนี้สำหรับ hexo 3 หรือเวอร์ชั่นใหม่กว่านี้เท่านั้น</p>\n<h2 id=\"Initialize\"><a href=\"#Initialize\" class=\"headerlink\" title=\"Initialize\"></a>Initialize</h2><p>ขั้นตอนแรกคือการสร้าง instance ของ hexo.  instance<br>จะประกอบด้วยสองส่วน:<code>base_dir</code> ซึ่งเป็น root directory ของเว็บไซต์ และ object ท่ีมี initialization options  ขั้นตอนท่ีสองใช้วิธี <code>init</code>เพื่อ initialize instance  ด้วยวิธีนี้ hexo จะโหลด configuration และปลั๊กอินของมัน<br><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Hexo = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> hexo = <span class=\"keyword\">new</span> Hexo(process.cwd(), &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.init().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>debug</code></td>\n<td>Enable debug mode. Display debug messages in the terminal and save <code>debug.log</code> in the root directory.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>safe</code></td>\n<td>Enable safe mode. Don’t load any plugins.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>silent</code></td>\n<td>Enable silent mode. Don’t display any messages in the terminal.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>Specify the path of the configuration file.</td>\n<td><code>_config.yml</code></td>\n</tr>\n<tr>\n<td><code>draft</code> / <code>drafts</code></td>\n<td>Enable to add drafts to the posts list.<br> example: when you use <code>hexo.locals.get(&#39;posts&#39;)</code></td>\n<td><code>render_drafts</code> of _config.yml </td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Load-Files\"><a href=\"#Load-Files\" class=\"headerlink\" title=\"Load Files\"></a>Load Files</h2><p>hexo โหลดไฟล์ด้วยสองวิธี: <code>load</code> และ <code>watch</code> .  วิธี <code>load</code> ใช้มาเพื่อโหลดไฟล์ใน folder <code>source</code> และ data ของธีม ส่วนวิธี <code>watch</code> ทำเรื่องเดียวกันกับวิธี  <code>load</code> แต่จะเริ่มบันทึกการเปลี่ยนแปลงของไฟล์อย่างต่อเนื่อง </p>\n<p>ทั้งสองวิธีนี้จะโหลด list ของไฟล์และส่งไฟล์เข้า processor ท่ีเกี่ยวข้อง หลังการ process ของไฟล์ทั้งหมด จะมี generator มาสร้าง route</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.load().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// You can call hexo.unwatch() later to stop watching.</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Execute-Commands\"><a href=\"#Execute-Commands\" class=\"headerlink\" title=\"Execute Commands\"></a>Execute Commands</h2><p>ด้วยวิธี <code>call</code> ผู้ใช้สามารถเรียกคำสั่ง console สำหรับ instance ของ hexo การเรียกคำสั่ง console นี้ประกอบด้วยสอง argument: ชื่อคำสั่ง console และ argument ของ option  คำสั่ง console ที่แตกต่างกันนั้นจะมี option ท่ีแตกต่างกัน</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>, &#123;&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'list'</span>, &#123; <span class=\"attr\">_</span>: [<span class=\"string\">'post'</span>] &#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Exit\"><a href=\"#Exit\" class=\"headerlink\" title=\"Exit\"></a>Exit</h2><p>ด้วยวิธี <code>exit</code> คุณสามารถจบคำสั่ง console อย่างสง่างามและทำสิ่งสำคัญให้ เช่นการบันทึก database</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit();</span><br><span class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit(err);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69t004wkoeoolwrtr00",
				"title": "Local Variables",
				"markdown": "\nlocal variable จะใช้มาเป็น template rendering ซึ่งจะเป็น variable `site` ที่อยู่ใน template\n\n## Default Variables\n\nVariable | Description\n--- | ---\n`posts` | All posts\n`pages` | All pages\n`categories` | All categories\n`tags` | All tags\n\n## Get a Variable\n\n``` js\nhexo.locals.get('posts')\n```\n\n## Set a Variable\n\n``` js\nhexo.locals.set('posts', function(){\n  return ...\n});\n```\n\n## Remove a Variable\n\n``` js\nhexo.locals.remove('posts');\n```\n\n## Get All Variable\n\n``` js\nhexo.locals.toObject();\n```\n\n## Invalidate the cache\n\n``` js\nhexo.locals.invalidate();\n```\n",
				"html": "<p>local variable จะใช้มาเป็น template rendering ซึ่งจะเป็น variable <code>site</code> ที่อยู่ใน template</p>\n<h2 id=\"Default-Variables\"><a href=\"#Default-Variables\" class=\"headerlink\" title=\"Default Variables\"></a>Default Variables</h2><table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>posts</code></td>\n<td>All posts</td>\n</tr>\n<tr>\n<td><code>pages</code></td>\n<td>All pages</td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>All categories</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>All tags</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Get-a-Variable\"><a href=\"#Get-a-Variable\" class=\"headerlink\" title=\"Get a Variable\"></a>Get a Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.get(<span class=\"string\">'posts'</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Set-a-Variable\"><a href=\"#Set-a-Variable\" class=\"headerlink\" title=\"Set a Variable\"></a>Set a Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.set(<span class=\"string\">'posts'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-Variable\"><a href=\"#Remove-a-Variable\" class=\"headerlink\" title=\"Remove a Variable\"></a>Remove a Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.remove(<span class=\"string\">'posts'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Get-All-Variable\"><a href=\"#Get-All-Variable\" class=\"headerlink\" title=\"Get All Variable\"></a>Get All Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.toObject();</span><br></pre></td></tr></table></figure>\n<h2 id=\"Invalidate-the-cache\"><a href=\"#Invalidate-the-cache\" class=\"headerlink\" title=\"Invalidate the cache\"></a>Invalidate the cache</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.invalidate();</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69t004xkoeoua4kab4e",
				"title": "Migrator",
				"markdown": "migrator ช่วยให้ผู้ใช้ย้าย data จากระบบอื่นมาเข้า hexo\n\n## Synopsis\n\n``` js\nhexo.extend.migrator.register(name, function(args){\n  // ...\n});\n```\n\nargument `args` จะเข้า function และ argument นี้จะส่ง input ของผู้ใช้เข้า terminal\n",
				"html": "<p>migrator ช่วยให้ผู้ใช้ย้าย data จากระบบอื่นมาเข้า hexo</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.migrator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>argument <code>args</code> จะเข้า function และ argument นี้จะส่ง input ของผู้ใช้เข้า terminal</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69t004ykoeo4npybcoz",
				"title": "Posts",
				"markdown": "## Create a New Post\n\n``` js\nhexo.post.create(data, replace);\n```\n\nArgument | Description\n--- | ---\n`data` | Data\n`replace` | Replace existing files\n\nattribute ของโพสต์จะตั้งค่าอยู่ใน `data` ตารางต่อไปไม่ละเอียดถี่ถ้วนและ attribute อื่นๆสามารถเพิ่มใส่เข้าไปใน front-matter ได้\n\nData | Description\n--- | ---\n`title` | Title\n`slug` | URL\n`layout` | Layout. Defaults to the `default_layout` setting.\n`path` | Path. Hexo builds the post path based on the `new_post_path` setting by default.\n`date` | Date. Defaults to the current date.\n\n## Publish a Draft\n\n``` js\nhexo.post.publish(data, replace);\n```\n\nArgument | Description\n--- | ---\n`data` | Data\n`replace` | Replace existing files\n\nattribute ของโพสต์จะตั้งค่าอยู่ใน data ตารางต่อไปไม่ละเอียดถี่ถ้วนและ attribute อื่นๆสามารถเพิ่มใส่เข้าไปใน front-matter ได้\n\n\n\nData | Description\n--- | ---\n`slug` | File name (Required)\n`layout` | Layout. Defaults to the `default_layout` setting.\n\n## Render\n\n``` js\nhexo.post.render(source, data);\n```\n\nArgument | Description\n--- | ---\n`source` | Full path of a file (Optional)\n`data` | Data\n\n data ต้องการมี attribute `content`  ถ้าไม่มี hexo จะลองอ่านไฟล์ที่เป็นต้นฉบับ ขั้นตอน execution ของ function นี้จะดังต่อไปนี้\n\n- Execute `before_post_render` filters execute \n- Render with Markdown or other renderers (depending on the extension name)\n- Render with [Nunjucks]\n- Execute `after_post_render` filters\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n",
				"html": "<h2 id=\"Create-a-New-Post\"><a href=\"#Create-a-New-Post\" class=\"headerlink\" title=\"Create a New Post\"></a>Create a New Post</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.create(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>Replace existing files</td>\n</tr>\n</tbody>\n</table>\n<p>attribute ของโพสต์จะตั้งค่าอยู่ใน <code>data</code> ตารางต่อไปไม่ละเอียดถี่ถ้วนและ attribute อื่นๆสามารถเพิ่มใส่เข้าไปใน front-matter ได้</p>\n<table>\n<thead>\n<tr>\n<th>Data</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Title</td>\n</tr>\n<tr>\n<td><code>slug</code></td>\n<td>URL</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Defaults to the <code>default_layout</code> setting.</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Path. Hexo builds the post path based on the <code>new_post_path</code> setting by default.</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Date. Defaults to the current date.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Publish-a-Draft\"><a href=\"#Publish-a-Draft\" class=\"headerlink\" title=\"Publish a Draft\"></a>Publish a Draft</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.publish(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>Replace existing files</td>\n</tr>\n</tbody>\n</table>\n<p>attribute ของโพสต์จะตั้งค่าอยู่ใน data ตารางต่อไปไม่ละเอียดถี่ถ้วนและ attribute อื่นๆสามารถเพิ่มใส่เข้าไปใน front-matter ได้</p>\n<table>\n<thead>\n<tr>\n<th>Data</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>slug</code></td>\n<td>File name (Required)</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Defaults to the <code>default_layout</code> setting.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Render\"><a href=\"#Render\" class=\"headerlink\" title=\"Render\"></a>Render</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.render(source, data);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>Full path of a file (Optional)</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n</tbody>\n</table>\n<p> data ต้องการมี attribute <code>content</code>  ถ้าไม่มี hexo จะลองอ่านไฟล์ที่เป็นต้นฉบับ ขั้นตอน execution ของ function นี้จะดังต่อไปนี้</p>\n<ul>\n<li>Execute <code>before_post_render</code> filters execute </li>\n<li>Render with Markdown or other renderers (depending on the extension name)</li>\n<li>Render with <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a></li>\n<li>Execute <code>after_post_render</code> filters</li>\n</ul>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69u004zkoeobowqpxs5",
				"title": "Processor",
				"markdown": "processor ใช้มาจัดการไฟล์ source ท่ีอยู่ใน folder `source`\n\n## Synopsis\n\n``` js\nhexo.extend.processor.register(rule, function(file){\n // ...\n});\n```\n\nสำหรับข้อมูลเพิ่มเติม ไปดูได้ที่ [box](box.html).\n",
				"html": "<p>processor ใช้มาจัดการไฟล์ source ท่ีอยู่ใน folder <code>source</code></p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.processor.register(rule, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>สำหรับข้อมูลเพิ่มเติม ไปดูได้ที่ <a href=\"box.html\">box</a>.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69u0050koeo68efkzki",
				"title": "Renderer",
				"markdown": "renderer ใช้มา render เนื้อหา\n\n## Synopsis\n\n``` js\nhexo.extend.renderer.register(name, output, function(data, options){\n  // ...\n}, sync);\n```\n\nArgument | Description\n--- | ---\n`name` | Input filename extension (lower case, without leading `.`)\n`output` | Output filename extension (lower case, without leading `.`)\n`sync` | Sync mode\n\nargument สองตัวนั้นจะส่งเข้า render function:\n\nArgument | Description\n--- | ---\n`data` | Include two attributes: file path `path` and file content `text`. `path` won't necessarily exist.\n`option` | Options\n\n## ตัวอย่าง\n\n### โหมด async \n\n``` js\nvar stylus = require('stylus');\n\n// Callback\nhexo.extend.renderer.register('styl', 'css', function(data, options, callback){\n  stylus(data.text).set('filename', data.path).render(callback);\n});\n\n// Promise\nhexo.extend.renderer.register('styl', 'css', function(data, options){\n  return new Promise(function(resolve, reject){\n    resolve('test');\n  });\n});\n```\n\n### โหมด sync \n\n``` js\nvar ejs = require('ejs');\n\nhexo.extend.renderer.register('ejs', 'html', function(data, options){\n  options.filename = data.path;\n  return ejs.render(data.text, options);\n}, true);\n```\n",
				"html": "<p>renderer ใช้มา render เนื้อหา</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.renderer.register(name, output, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, sync);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>Input filename extension (lower case, without leading <code>.</code>)</td>\n</tr>\n<tr>\n<td><code>output</code></td>\n<td>Output filename extension (lower case, without leading <code>.</code>)</td>\n</tr>\n<tr>\n<td><code>sync</code></td>\n<td>Sync mode</td>\n</tr>\n</tbody>\n</table>\n<p>argument สองตัวนั้นจะส่งเข้า render function:</p>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Include two attributes: file path <code>path</code> and file content <code>text</code>. <code>path</code> won’t necessarily exist.</td>\n</tr>\n<tr>\n<td><code>option</code></td>\n<td>Options</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"ตัวอย่าง\"><a href=\"#ตัวอย่าง\" class=\"headerlink\" title=\"ตัวอย่าง\"></a>ตัวอย่าง</h2><h3 id=\"โหมด-async\"><a href=\"#โหมด-async\" class=\"headerlink\" title=\"โหมด async\"></a>โหมด async</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> stylus = <span class=\"built_in\">require</span>(<span class=\"string\">'stylus'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Callback</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options, callback</span>)</span>&#123;</span><br><span class=\"line\">  stylus(data.text).set(<span class=\"string\">'filename'</span>, data.path).render(callback);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Promise</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'test'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"โหมด-sync\"><a href=\"#โหมด-sync\" class=\"headerlink\" title=\"โหมด sync\"></a>โหมด sync</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'ejs'</span>, <span class=\"string\">'html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  options.filename = data.path;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, options);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69u0051koeomb45a480",
				"title": "Rendering",
				"markdown": "มีทั้งหมดสองวิธีสำหรับการ render ไฟล์หรือ string ใน hexo : `hexo.render.render`ท่ีเป็น asynchronous และวิธี `hexo.render.renderSync` ท่ีเป็น  synchronous เนื่องจากว่าสองวิธีนี้คล้ายกันมาก ก็เลยมีการอธิบายแต่ `hexo.render.render` ท่ีเป็นวิธี asynchronous เท่านั้นในย่อหน้าต่อไป\n\n## Render a String\n\nเวลา render string ผู้ใช้ต้องบ่งชี้ถึง `engine` ท่ีชัดเจนเพื่อทำให้ hexo เข้าใจว่าต้องใช้ rendering engine ตัวใหน\n\n``` js\nhexo.render.render({text: 'example', engine: 'swig'}).then(function(result){\n  // ...\n});\n```\n\n## Render a File\n\nเมื่อ render ไฟล์ จะไม่ต้องชี้ `engine` ให้ชั้ดเจน เพราะว่า hexo จะค้นหา rendering engine ท่ีเกี่ยวข้องตาม extension ของไฟล์โดยอัตโนมัติ แต่ถ้าชี้ `engine` ให้ชั้ดเจนก็ไม่มีปัญหา\n\n``` js\nhexo.render.render({path: 'path/to/file.swig'}).then(function(result){\n  // ...\n});\n```\n\n## Render Options\n\nผู้ใช้สามารถส่ง options object เข้าไปเป็น argument ท่ีสอง\n\n``` js\nhexo.render.render({text: ''}, {foo: 'foo'}).then(function(result){\n  // ...\n});\n```\n\n## after_render Filters\n\nเมื่อเสร็จการ rendering hexo จะ execute filter `after_render` ยกตัวอย่างเช่น ผู้ใช้สามารถ implement a JavaScript minifier ด้วยลักษณะนี้\n\n``` js\nvar UglifyJS = require('uglify-js');\n\nhexo.extend.filter.register('after_render:js', function(str, data){\n  var result = UglifyJS.minify(str);\n  return result.code;\n});\n```\n\n## Check Whether a File is Renderable\n\nผู้ใช้สามารถใช้วิธี `isRenderable` หรือ  `isRenderableSync` ไปตรวจว่าไฟล์นั้น renderable  หรือไม่ เมื่อมี renderer ท่ีเกี่ยวข้อง ผลท่ีส่งกลับจะเป็น true\n\n``` js\nhexo.render.isRenderable('layout.swig') // true\nhexo.render.isRenderable('image.png') // false\n```\n\n## Get the Output Extension\n\n ผู้ใช้สามารถได้ rendered output  ด้วยวิธี `getOutput`   ถ้าไฟล์ไม่ใช่  renderable ผลท่ีส่งกลับด้วยวิธีนี้จะเป็น empty string\n\n``` js\nhexo.render.getOutput('layout.swig') // html\nhexo.render.getOutput('image.png') // '''\n```\n",
				"html": "<p>มีทั้งหมดสองวิธีสำหรับการ render ไฟล์หรือ string ใน hexo : <code>hexo.render.render</code>ท่ีเป็น asynchronous และวิธี <code>hexo.render.renderSync</code> ท่ีเป็น  synchronous เนื่องจากว่าสองวิธีนี้คล้ายกันมาก ก็เลยมีการอธิบายแต่ <code>hexo.render.render</code> ท่ีเป็นวิธี asynchronous เท่านั้นในย่อหน้าต่อไป</p>\n<h2 id=\"Render-a-String\"><a href=\"#Render-a-String\" class=\"headerlink\" title=\"Render a String\"></a>Render a String</h2><p>เวลา render string ผู้ใช้ต้องบ่งชี้ถึง <code>engine</code> ท่ีชัดเจนเพื่อทำให้ hexo เข้าใจว่าต้องใช้ rendering engine ตัวใหน</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">'example'</span>, <span class=\"attr\">engine</span>: <span class=\"string\">'swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Render-a-File\"><a href=\"#Render-a-File\" class=\"headerlink\" title=\"Render a File\"></a>Render a File</h2><p>เมื่อ render ไฟล์ จะไม่ต้องชี้ <code>engine</code> ให้ชั้ดเจน เพราะว่า hexo จะค้นหา rendering engine ท่ีเกี่ยวข้องตาม extension ของไฟล์โดยอัตโนมัติ แต่ถ้าชี้ <code>engine</code> ให้ชั้ดเจนก็ไม่มีปัญหา</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">path</span>: <span class=\"string\">'path/to/file.swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Render-Options\"><a href=\"#Render-Options\" class=\"headerlink\" title=\"Render Options\"></a>Render Options</h2><p>ผู้ใช้สามารถส่ง options object เข้าไปเป็น argument ท่ีสอง</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">''</span>&#125;, &#123;<span class=\"attr\">foo</span>: <span class=\"string\">'foo'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"after-render-Filters\"><a href=\"#after-render-Filters\" class=\"headerlink\" title=\"after_render Filters\"></a>after_render Filters</h2><p>เมื่อเสร็จการ rendering hexo จะ execute filter <code>after_render</code> ยกตัวอย่างเช่น ผู้ใช้สามารถ implement a JavaScript minifier ด้วยลักษณะนี้</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> UglifyJS = <span class=\"built_in\">require</span>(<span class=\"string\">'uglify-js'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_render:js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str, data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = UglifyJS.minify(str);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result.code;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Check-Whether-a-File-is-Renderable\"><a href=\"#Check-Whether-a-File-is-Renderable\" class=\"headerlink\" title=\"Check Whether a File is Renderable\"></a>Check Whether a File is Renderable</h2><p>ผู้ใช้สามารถใช้วิธี <code>isRenderable</code> หรือ  <code>isRenderableSync</code> ไปตรวจว่าไฟล์นั้น renderable  หรือไม่ เมื่อมี renderer ท่ีเกี่ยวข้อง ผลท่ีส่งกลับจะเป็น true</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Get-the-Output-Extension\"><a href=\"#Get-the-Output-Extension\" class=\"headerlink\" title=\"Get the Output Extension\"></a>Get the Output Extension</h2><p> ผู้ใช้สามารถได้ rendered output  ด้วยวิธี <code>getOutput</code>   ถ้าไฟล์ไม่ใช่  renderable ผลท่ีส่งกลับด้วยวิธีนี้จะเป็น empty string</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// html</span></span><br><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// '''</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69u0052koeoi9x6c1i6",
				"title": "Router",
				"markdown": "router จะบันทึกและตั้งค่า path ทั้งหมดที่ใช้ในเว็บไซต์\n\n## Get a Path\n\nวิธี `get` จะส่งกลับผลที่เป็น [Stream] code ต่อไปเป็นตัวอย่างการบ่งบอก path ไปถึงหน้งเว็บเฉพาะ\n\n``` js\nvar data = hexo.route.get('index.html');\nvar dest = fs.createWriteStream('somewhere');\n\ndata.pipe(dest);\n```\n\n## Set a Path\n\nตัวเลือกท่ีส่งเข้าวิธี `set` ต้องเป็น string [Buffer] หรือ function\n\n``` js\n// String\nhexo.route.set('index.html', 'index')\n\n// Buffer\nhexo.route.set('index.html', new Buffer('index'));\n\n// Function (Promise)\nhexo.route.set('index.html', function(){\n  return new Promise(function(resolve, reject){\n    resolve('index');\n  });\n});\n\n// Function (Callback)\nhexo.route.set('index.html', function(callback){\n  callback(null, 'index');\n});\n```\n\nผู้ใช้ส่ง boolean เข้าไปได้ว่า path นั้นจะถูกแก้ไขหรือเปล่า ดังนั้นการตั้งค่าท่ีเป็น  boolean นี้จะช่วยเพิ่มความเร็วใน file generation เพราะว่าจะเลือกการไม่รันไฟล์ที่ unmodified ได้\n\n\n``` js\nhexo.route.set('index.html', {\n    data: 'index',\n    modified: false\n});\n\n// hexo.route.isModified('index.html') => false\n```\n\n## Remove a Path\n\n``` js\nhexo.route.remove('index.html');\n```\n\n## Get the List of Routes\n\n``` js\nhexo.route.list();\n```\n\n## Format a Path\n\nวิธี `format` จะเปลี่ยน string เป็น path ที่ถูกต้อง\n\n``` js\nhexo.route.format('archives/');\n// archives/index.html\n```\n\n[Stream]: http://nodejs.org/api/stream.html\n[Buffer]: http://nodejs.org/api/buffer.html\n",
				"html": "<p>router จะบันทึกและตั้งค่า path ทั้งหมดที่ใช้ในเว็บไซต์</p>\n<h2 id=\"Get-a-Path\"><a href=\"#Get-a-Path\" class=\"headerlink\" title=\"Get a Path\"></a>Get a Path</h2><p>วิธี <code>get</code> จะส่งกลับผลที่เป็น <a href=\"http://nodejs.org/api/stream.html\" target=\"_blank\" rel=\"noopener\">Stream</a> code ต่อไปเป็นตัวอย่างการบ่งบอก path ไปถึงหน้งเว็บเฉพาะ</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = hexo.route.get(<span class=\"string\">'index.html'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dest = fs.createWriteStream(<span class=\"string\">'somewhere'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">data.pipe(dest);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Set-a-Path\"><a href=\"#Set-a-Path\" class=\"headerlink\" title=\"Set a Path\"></a>Set a Path</h2><p>ตัวเลือกท่ีส่งเข้าวิธี <code>set</code> ต้องเป็น string <a href=\"http://nodejs.org/api/buffer.html\" target=\"_blank\" rel=\"noopener\">Buffer</a> หรือ function</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// String</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"string\">'index'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Buffer</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"keyword\">new</span> Buffer(<span class=\"string\">'index'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Function (Promise)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'index'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Function (Callback)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">callback</span>)</span>&#123;</span><br><span class=\"line\">  callback(<span class=\"literal\">null</span>, <span class=\"string\">'index'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>ผู้ใช้ส่ง boolean เข้าไปได้ว่า path นั้นจะถูกแก้ไขหรือเปล่า ดังนั้นการตั้งค่าท่ีเป็น  boolean นี้จะช่วยเพิ่มความเร็วใน file generation เพราะว่าจะเลือกการไม่รันไฟล์ที่ unmodified ได้</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, &#123;</span><br><span class=\"line\">    data: <span class=\"string\">'index'</span>,</span><br><span class=\"line\">    modified: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// hexo.route.isModified('index.html') =&gt; false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-Path\"><a href=\"#Remove-a-Path\" class=\"headerlink\" title=\"Remove a Path\"></a>Remove a Path</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.remove(<span class=\"string\">'index.html'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Get-the-List-of-Routes\"><a href=\"#Get-the-List-of-Routes\" class=\"headerlink\" title=\"Get the List of Routes\"></a>Get the List of Routes</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.list();</span><br></pre></td></tr></table></figure>\n<h2 id=\"Format-a-Path\"><a href=\"#Format-a-Path\" class=\"headerlink\" title=\"Format a Path\"></a>Format a Path</h2><p>วิธี <code>format</code> จะเปลี่ยน string เป็น path ที่ถูกต้อง</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.format(<span class=\"string\">'archives/'</span>);</span><br><span class=\"line\"><span class=\"comment\">// archives/index.html</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69u0053koeon9hhuuoz",
				"title": "Scaffolds",
				"markdown": "## Get a Scaffold\n\n``` js\nhexo.scaffold.get(name);\n```\n\n## Set a Scaffold\n\n``` js\nhexo.scaffold.set(name, content);\n```\n\n## Remove a Scaffold\n\n``` js\nhexo.scaffold.remove(name);\n```",
				"html": "<h2 id=\"Get-a-Scaffold\"><a href=\"#Get-a-Scaffold\" class=\"headerlink\" title=\"Get a Scaffold\"></a>Get a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.get(name);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Set-a-Scaffold\"><a href=\"#Set-a-Scaffold\" class=\"headerlink\" title=\"Set a Scaffold\"></a>Set a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.set(name, content);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-Scaffold\"><a href=\"#Remove-a-Scaffold\" class=\"headerlink\" title=\"Remove a Scaffold\"></a>Remove a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.remove(name);</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69v0054koeo9z2i9p77",
				"title": "Tag",
				"markdown": "tag ช่วยให้ผู้ใช้เสียบ snippet เข้าไปในโพสต์ของตนอย่างง่ายดายและรวดเร็ว\n\n## Synopsis\n\n``` js\nhexo.extend.tag.register(name, function(args, content){\n  // ...\n}, options);\n```\n\nargument ทั้งหมดสองตัวจะส่งเข้า function แท็ก: `args` และ `content`     `args` เป็น argument ท่ีส่งเข้าปลั๊กอินแท็กและ `content` เป็นเนื้อหาท่ีอยู่ในปลั๊กอินแท็ก จากคำแนะนำของ asynchronous rendering ใน hexo 3 รู้ได้ว่า hexo ใช้  [Nunjucks] เพื่อ rendering ซึ่งแตกต่างจาก rendering ใน [Swig]\n\n\n## Options\n\n### ends\n\nใช้แท็ก end ตัวเลือก default คือ `false`\n\n### async\n\nเปิดโหมด async ตัวเลือก default คือ `false`\n\n## Examples\n\n### Without End Tags\n\nเสียบวิดีโอ youtube ลง\n\n``` js\nhexo.extend.tag.register('youtube', function(args){\n  var id = args[0];\n  return '<div class=\"video-container\"><iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/' + id + '\" frameborder=\"0\" allowfullscreen></iframe></div>';\n});\n```\n\n### With End Tags\n\nเสียบ pull quote ลง\n\n``` js\nhexo.extend.tag.register('pullquote', function(args, content){\n  var className =  args.join(' ');\n  return '<blockquote class=\"pullquote' + className + '\">' + content + '</blockquote>';\n}, {ends: true});\n```\n\n### Async Rendering\n\nเสียบไฟล์ลง\n\n``` js\nvar fs = require('hexo-fs');\nvar pathFn = require('path');\n\nhexo.extend.tag.register('include_code', function(args){\n  var filename = args[0];\n  var path = pathFn.join(hexo.source_dir, filename);\n\n  return fs.readFile(path).then(function(content){\n    return '<pre><code>' + content + '</code></pre>';\n  });\n}, {async: true});\n```\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n[Swig]: http://paularmstrong.github.io/swig/\n",
				"html": "<p>tag ช่วยให้ผู้ใช้เสียบ snippet เข้าไปในโพสต์ของตนอย่างง่ายดายและรวดเร็ว</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, options);</span><br></pre></td></tr></table></figure>\n<p>argument ทั้งหมดสองตัวจะส่งเข้า function แท็ก: <code>args</code> และ <code>content</code>     <code>args</code> เป็น argument ท่ีส่งเข้าปลั๊กอินแท็กและ <code>content</code> เป็นเนื้อหาท่ีอยู่ในปลั๊กอินแท็ก จากคำแนะนำของ asynchronous rendering ใน hexo 3 รู้ได้ว่า hexo ใช้  <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> เพื่อ rendering ซึ่งแตกต่างจาก rendering ใน <a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a></p>\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><h3 id=\"ends\"><a href=\"#ends\" class=\"headerlink\" title=\"ends\"></a>ends</h3><p>ใช้แท็ก end ตัวเลือก default คือ <code>false</code></p>\n<h3 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h3><p>เปิดโหมด async ตัวเลือก default คือ <code>false</code></p>\n<h2 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h2><h3 id=\"Without-End-Tags\"><a href=\"#Without-End-Tags\" class=\"headerlink\" title=\"Without End Tags\"></a>Without End Tags</h3><p>เสียบวิดีโอ youtube ลง</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'youtube'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> id = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;div class=\"video-container\"&gt;&lt;iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/'</span> + id + <span class=\"string\">'\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"With-End-Tags\"><a href=\"#With-End-Tags\" class=\"headerlink\" title=\"With End Tags\"></a>With End Tags</h3><p>เสียบ pull quote ลง</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'pullquote'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> className =  args.join(<span class=\"string\">' '</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;blockquote class=\"pullquote'</span> + className + <span class=\"string\">'\"&gt;'</span> + content + <span class=\"string\">'&lt;/blockquote&gt;'</span>;</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">ends</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Async-Rendering\"><a href=\"#Async-Rendering\" class=\"headerlink\" title=\"Async Rendering\"></a>Async Rendering</h3><p>เสียบไฟล์ลง</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> pathFn = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'include_code'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> filename = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> path = pathFn.join(hexo.source_dir, filename);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> fs.readFile(path).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">content</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;pre&gt;&lt;code&gt;'</span> + content + <span class=\"string\">'&lt;/code&gt;&lt;/pre&gt;'</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">async</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69v0055koeozq87z3s7",
				"title": "Themes",
				"markdown": "`hexo.theme` สืบทอดจาก [Box](box.html) และสร้าง template ได้\n\n## Get a View\n\n``` js\nhexo.theme.getView(path);\n```\n\n## Set a View\n\n``` js\nhexo.theme.setView(path, data);\n```\n\n## Remove a View\n\n``` js\nhexo.theme.removeView(path);\n```\n\n## View\n\nview มีสองวิธี: `render` และ `renderSync` ทั้งสองวิธีนี้เหมือนกัน แต่ตัวแรกเป็น asynchronous และตัวหลังเป็น synchronous ที่นี่จะพูดถึงแต่ `render` เท่านั้นเพื่อเป็นความเรียบง่าย\n\n``` js\nvar view = hexo.theme.getView('layout.swig');\n\nview.render({foo: 1, bar: 2}).then(function(result){\n  // ...\n});\n```\n\nโดยวิธี `render` ผู้ใช้สามารถรัน template ด้วย renderer ที่เกี่ยวข้องและโหลด [helpers](helper.html) เมื่อเสร็จการ rendering hexo จะค้นหา layout ของมัน ถ้า `layout` เป็น `false` หรือไม่มีอยู่ จะมีการตอบรับผลโดยตรง\n",
				"html": "<p><code>hexo.theme</code> สืบทอดจาก <a href=\"box.html\">Box</a> และสร้าง template ได้</p>\n<h2 id=\"Get-a-View\"><a href=\"#Get-a-View\" class=\"headerlink\" title=\"Get a View\"></a>Get a View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.getView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Set-a-View\"><a href=\"#Set-a-View\" class=\"headerlink\" title=\"Set a View\"></a>Set a View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.setView(path, data);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-View\"><a href=\"#Remove-a-View\" class=\"headerlink\" title=\"Remove a View\"></a>Remove a View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.removeView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h2><p>view มีสองวิธี: <code>render</code> และ <code>renderSync</code> ทั้งสองวิธีนี้เหมือนกัน แต่ตัวแรกเป็น asynchronous และตัวหลังเป็น synchronous ที่นี่จะพูดถึงแต่ <code>render</code> เท่านั้นเพื่อเป็นความเรียบง่าย</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> view = hexo.theme.getView(<span class=\"string\">'layout.swig'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">view.render(&#123;<span class=\"attr\">foo</span>: <span class=\"number\">1</span>, <span class=\"attr\">bar</span>: <span class=\"number\">2</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>โดยวิธี <code>render</code> ผู้ใช้สามารถรัน template ด้วย renderer ที่เกี่ยวข้องและโหลด <a href=\"helper.html\">helpers</a> เมื่อเสร็จการ rendering hexo จะค้นหา layout ของมัน ถ้า <code>layout</code> เป็น <code>false</code> หรือไม่มีอยู่ จะมีการตอบรับผลโดยตรง</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69v0056koeolxyy4wrw",
				"title": "Commands",
				"markdown": "## init\n\n``` bash\n$ hexo init [folder]\n```\n\ninitialize เว็บไซต์. ถ้าไม่ป่งชี้หรือสร้าง `folder` โดยเฉพาะ hexo \nจะสร้างไฟล์ต่างๆอยู่ใน directory ปัจจุบัน\n\n## new\n\n``` bash\n$ hexo new [layout] <title>\n```\n\nสร้างบทความใหม่. \nถ้าไม่ได้ตั้งค่าชั้ดเจน hexo จะใช้ `default_layout` ของไฟล์ [_config.yml](configuration.html)\nถ้า `title` ของบทความนั้นมี  space  จะต้องห่อ `title` นั้นด้วยเครื่องหมายอ้างอิง \n\n## generate\n\n``` bash\n$ hexo generate\n```\n\ngenerate ไฟล์คงที่\n\nOption | Description\n--- | ---\n`-d`, `--deploy` | Deploy after generation finishes\n`-w`, `--watch` | Watch file changes\n`-b`, `--bail` | Raise an error if any unhandled exception is thrown during generation\n`-f`, `--force` | Force regenerate\n\n## publish\n\n``` bash\n$ hexo publish [layout] <filename>\n```\n\nประกาศ draft\n\n## server\n\n``` bash\n$ hexo server\n```\n\nเปิดเซร์ฟเวอร์ local   เซร์ฟเวอร์ local นั้นจะเป็น `http://localhost:4000/` \nby default\n\nOption | Description\n--- | ---\n`-p`, `--port` | Override default port\n`-s`, `--static` | Only serve static files\n`-l`, `--log` | Enable logger. Override logger format.\n\n## deploy\n\n``` bash\n$ hexo deploy\n```\n\ndeploy เว็บไซต์ของคุณ\n\nOption | Description\n--- | ---\n`-g`, `--generate` | Generate before deployment\n\n## render\n\n``` bash\n$ hexo render <file1> [file2] ...\n```\n\nrender ไฟล์ต่างๆ\n\nOption | Description\n--- | ---\n`-o`, `--output` | Output destination\n\n## migrate\n\n``` bash\n$ hexo migrate <type>\n```\n\n[Migrates](migration.html) เนื้อหาจากบล็อกอื่นๆ\n\n## clean\n\n``` bash\n$ hexo clean\n```\n\nลบไฟล์ cache (`db.json`) และ generate ไฟล์ (`public`)\n\n## list\n\n``` bash\n$ hexo list <type>\n```\n\nโชว์ route ทั้งหมด\n\n## version\n\n``` bash\n$ hexo version\n```\n\nโชว์ข้อมูลเวร์อชั่น\n\n## Options\n\n### Safe mode\n\n``` bash\n$ hexo --safe\n```\n\nปิดปลั๊กอิน loading และ script ลองใช้โหมดนี้หลังพบปัญหาเมื่อติดตั้งปลั๊กอินใหม่\n\n### Debug mode\n\n``` bash\n$ hexo --debug\n```\n\nlog ข้อมูลละเอียดไปถึง terminal และ `debug.log`  เมื่อเห็นข้อผิดพลาดใดๆอยู่ใน\n log ไป[raise a GitHub issue](https://github.com/hexojs/hexo/issues/new)ได้\n\n### Silent mode\n\n``` bash\n$ hexo --silent\n```\n\nsilence ผลไปถึง terminal\n\n### Customize config file path\n\n``` bash\n$ hexo --config custom.yml\n```\n\nใช้ไฟล์การตั้งค่าของตน(แทน `_config.yml`) ถ้่าเป็นไฟล์หลายตัว  \nไฟล์นั้นเป็นไฟล์ JSON หรือ YAML ได้\nคุณต่องเขียนรายชื่อไฟล์พวกนี้อยู่ใน `_multiconfig.yml` \nและตัดแต่ละชื่อไฟล์ด้วยเครื่องหมายจุลภาค \n\n``` bash\n$ hexo --config custom.yml,custom2.json\n```\n\n### Display drafts\n\n``` bash\n$ hexo --draft\n```\n\nโชว์โพสต์ท่ีเป็น draft (เก็บอยู่ใน folder `source/_drafts`)\n\n### Customize CWD\n\n``` bash\n$ hexo --cwd /path/to/cwd\n```\n\nตั้งค่า path ของ directory ท่ีใช่งานปัจจุบันด้วยตนเองได้\n",
				"html": "<h2 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init [folder]</span><br></pre></td></tr></table></figure>\n<p>initialize เว็บไซต์. ถ้าไม่ป่งชี้หรือสร้าง <code>folder</code> โดยเฉพาะ hexo<br>จะสร้างไฟล์ต่างๆอยู่ใน directory ปัจจุบัน</p>\n<h2 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>สร้างบทความใหม่.<br>ถ้าไม่ได้ตั้งค่าชั้ดเจน hexo จะใช้ <code>default_layout</code> ของไฟล์ <a href=\"configuration.html\">_config.yml</a><br>ถ้า <code>title</code> ของบทความนั้นมี  space  จะต้องห่อ <code>title</code> นั้นด้วยเครื่องหมายอ้างอิง </p>\n<h2 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>generate ไฟล์คงที่</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-d</code>, <code>--deploy</code></td>\n<td>Deploy after generation finishes</td>\n</tr>\n<tr>\n<td><code>-w</code>, <code>--watch</code></td>\n<td>Watch file changes</td>\n</tr>\n<tr>\n<td><code>-b</code>, <code>--bail</code></td>\n<td>Raise an error if any unhandled exception is thrown during generation</td>\n</tr>\n<tr>\n<td><code>-f</code>, <code>--force</code></td>\n<td>Force regenerate</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"publish\"><a href=\"#publish\" class=\"headerlink\" title=\"publish\"></a>publish</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<p>ประกาศ draft</p>\n<h2 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>เปิดเซร์ฟเวอร์ local   เซร์ฟเวอร์ local นั้นจะเป็น <code>http://localhost:4000/</code><br>by default</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-p</code>, <code>--port</code></td>\n<td>Override default port</td>\n</tr>\n<tr>\n<td><code>-s</code>, <code>--static</code></td>\n<td>Only serve static files</td>\n</tr>\n<tr>\n<td><code>-l</code>, <code>--log</code></td>\n<td>Enable logger. Override logger format.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>deploy เว็บไซต์ของคุณ</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-g</code>, <code>--generate</code></td>\n<td>Generate before deployment</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>\n<p>render ไฟล์ต่างๆ</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-o</code>, <code>--output</code></td>\n<td>Output destination</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"migrate\"><a href=\"#migrate\" class=\"headerlink\" title=\"migrate\"></a>migrate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p><a href=\"migration.html\">Migrates</a> เนื้อหาจากบล็อกอื่นๆ</p>\n<h2 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>ลบไฟล์ cache (<code>db.json</code>) และ generate ไฟล์ (<code>public</code>)</p>\n<h2 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo list &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>โชว์ route ทั้งหมด</p>\n<h2 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n<p>โชว์ข้อมูลเวร์อชั่น</p>\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><h3 id=\"Safe-mode\"><a href=\"#Safe-mode\" class=\"headerlink\" title=\"Safe mode\"></a>Safe mode</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --safe</span><br></pre></td></tr></table></figure>\n<p>ปิดปลั๊กอิน loading และ script ลองใช้โหมดนี้หลังพบปัญหาเมื่อติดตั้งปลั๊กอินใหม่</p>\n<h3 id=\"Debug-mode\"><a href=\"#Debug-mode\" class=\"headerlink\" title=\"Debug mode\"></a>Debug mode</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --debug</span><br></pre></td></tr></table></figure>\n<p>log ข้อมูลละเอียดไปถึง terminal และ <code>debug.log</code>  เมื่อเห็นข้อผิดพลาดใดๆอยู่ใน<br> log ไป<a href=\"https://github.com/hexojs/hexo/issues/new\" target=\"_blank\" rel=\"noopener\">raise a GitHub issue</a>ได้</p>\n<h3 id=\"Silent-mode\"><a href=\"#Silent-mode\" class=\"headerlink\" title=\"Silent mode\"></a>Silent mode</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --silent</span><br></pre></td></tr></table></figure>\n<p>silence ผลไปถึง terminal</p>\n<h3 id=\"Customize-config-file-path\"><a href=\"#Customize-config-file-path\" class=\"headerlink\" title=\"Customize config file path\"></a>Customize config file path</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure>\n<p>ใช้ไฟล์การตั้งค่าของตน(แทน <code>_config.yml</code>) ถ้่าเป็นไฟล์หลายตัว<br>ไฟล์นั้นเป็นไฟล์ JSON หรือ YAML ได้<br>คุณต่องเขียนรายชื่อไฟล์พวกนี้อยู่ใน <code>_multiconfig.yml</code><br>และตัดแต่ละชื่อไฟล์ด้วยเครื่องหมายจุลภาค </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --config custom.yml,custom2.json</span><br></pre></td></tr></table></figure>\n<h3 id=\"Display-drafts\"><a href=\"#Display-drafts\" class=\"headerlink\" title=\"Display drafts\"></a>Display drafts</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --draft</span><br></pre></td></tr></table></figure>\n<p>โชว์โพสต์ท่ีเป็น draft (เก็บอยู่ใน folder <code>source/_drafts</code>)</p>\n<h3 id=\"Customize-CWD\"><a href=\"#Customize-CWD\" class=\"headerlink\" title=\"Customize CWD\"></a>Customize CWD</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure>\n<p>ตั้งค่า path ของ directory ท่ีใช่งานปัจจุบันด้วยตนเองได้</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69v0057koeomi68s1gl",
				"title": "Asset Folders",
				"markdown": "## Global Asset Folder\n\nasset เป็นไฟล์ท่ี non-post และอยู่ใน folder `source` อย่่างเช่นไฟล์ images, \nCSS หรือ JavaScript ยกตัวอย่างเช่น ถ้าคุณมีรูปภาพบ้างใน Hexo project \nแล้วรูปภาพเหล่านั้นควรอยู่ใน directory `source/images` \nและคุณจะเข้าถึงรูปภาพพวกนี้ได้ด้วยการเขียน path แบบ `![](/images/image.jpg)`\n\n## Post Asset Folder\n\n{% youtube feIDVQ2tz0o %}\n\nถ้าคุณอยากทำให้ asset ของแต่ละโพสต์อยู่ใน folder  ท่ีแตกต่างกัน ไปตั้งค่า \n`post_asset_folder` ของไฟล์ `_config.yml` เป็น true ได้\n\n``` yaml _config.yml\npost_asset_folder: true\n```\n\nถ้าเปิดการเฝ้าดู asset folder แล้ว hexo จะสร้าง folder \nให้ทุกครั้งท่ีคุณสร้างโพสต์ใหม่ด้วยคำสั่ง `hexo new [layout] <title>`    \nasset folder นี้จะมีชื่อเดียวกันกับไฟล์ markdown ท่ีเป็นโพสต์นั้น \nอย่างนี้คุณจะได้วาง asset  ทั้งหมดของโพสต์นั้นอยู่ใน folder และอ้างอิง asset \nด้วย relative path \n\n## Tag Plugins For Relative Path Referencing\n\nการอ้างอิงรูปภาพหรือ asset อื่นๆ ด้วยภาษา markdown และ relative path \nแต่อย่างนี้อาจจะไม่สามารถทำให้รูปภาพนั้นอยู่ในเพจ index หรือเพจ archive \nอย่างถูกต้อง เพื่อแก้ไขเรื่องนี้ hexo 2 \nได้สร้างปลั๊กอินท่ีเกี่ยวข้องด้วยความทุ่งเทของผู้ใช้ เมื่อถุง hexo 3 \nแล้วมีปลั๊กอินใหม่ออกมาด้วย ด้วยปลั๊กอินเหล่านี้คุณจะอ้างอิง asset \nในโพสต์ได้ง่ายขึ้น:\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\nยกตัวอย่างเช่น ถ้าสร้าง asset folder แล้ว วางรูปภาพ  `example.jpg` เข้าอยู่ใน\n asset folder ของคุณ และใช้  syntax ของ markdown ท่ีเป็น `![](/example.jpg)` \n เพื่ออ้างอิงรูปภาพ  แต่ syntax นี้จะไม่สามารถทำให้รูปภาพนั้นอยู่ในเพจ index \n อย่างถูกต้อง\n\nวิธีที่ถูกต้องสำหรับการอ้างอิงรูปภาพคือใช้ปลั๊อินแท็ก ไม่ใช่ markdown:\n\n```\n{% asset_img example.jpg This is an example image %}\n{% asset_img \"spaced asset.jpg\" \"spaced title\" %}\n```\n\nดังนั้น รูปภาพจะอยู่ทั้งในโพสต์และในเพจ index กับ archive\n\n",
				"html": "<h2 id=\"Global-Asset-Folder\"><a href=\"#Global-Asset-Folder\" class=\"headerlink\" title=\"Global Asset Folder\"></a>Global Asset Folder</h2><p>asset เป็นไฟล์ท่ี non-post และอยู่ใน folder <code>source</code> อย่่างเช่นไฟล์ images,<br>CSS หรือ JavaScript ยกตัวอย่างเช่น ถ้าคุณมีรูปภาพบ้างใน Hexo project<br>แล้วรูปภาพเหล่านั้นควรอยู่ใน directory <code>source/images</code><br>และคุณจะเข้าถึงรูปภาพพวกนี้ได้ด้วยการเขียน path แบบ <code>![](/images/image.jpg)</code></p>\n<h2 id=\"Post-Asset-Folder\"><a href=\"#Post-Asset-Folder\" class=\"headerlink\" title=\"Post Asset Folder\"></a>Post Asset Folder</h2><div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/feIDVQ2tz0o\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>ถ้าคุณอยากทำให้ asset ของแต่ละโพสต์อยู่ใน folder  ท่ีแตกต่างกัน ไปตั้งค่า<br><code>post_asset_folder</code> ของไฟล์ <code>_config.yml</code> เป็น true ได้</p>\n<figure class=\"highlight yaml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>ถ้าเปิดการเฝ้าดู asset folder แล้ว hexo จะสร้าง folder<br>ให้ทุกครั้งท่ีคุณสร้างโพสต์ใหม่ด้วยคำสั่ง <code>hexo new [layout] &lt;title&gt;</code><br>asset folder นี้จะมีชื่อเดียวกันกับไฟล์ markdown ท่ีเป็นโพสต์นั้น<br>อย่างนี้คุณจะได้วาง asset  ทั้งหมดของโพสต์นั้นอยู่ใน folder และอ้างอิง asset<br>ด้วย relative path </p>\n<h2 id=\"Tag-Plugins-For-Relative-Path-Referencing\"><a href=\"#Tag-Plugins-For-Relative-Path-Referencing\" class=\"headerlink\" title=\"Tag Plugins For Relative Path Referencing\"></a>Tag Plugins For Relative Path Referencing</h2><p>การอ้างอิงรูปภาพหรือ asset อื่นๆ ด้วยภาษา markdown และ relative path<br>แต่อย่างนี้อาจจะไม่สามารถทำให้รูปภาพนั้นอยู่ในเพจ index หรือเพจ archive<br>อย่างถูกต้อง เพื่อแก้ไขเรื่องนี้ hexo 2<br>ได้สร้างปลั๊กอินท่ีเกี่ยวข้องด้วยความทุ่งเทของผู้ใช้ เมื่อถุง hexo 3<br>แล้วมีปลั๊กอินใหม่ออกมาด้วย ด้วยปลั๊กอินเหล่านี้คุณจะอ้างอิง asset<br>ในโพสต์ได้ง่ายขึ้น:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<p>ยกตัวอย่างเช่น ถ้าสร้าง asset folder แล้ว วางรูปภาพ  <code>example.jpg</code> เข้าอยู่ใน<br> asset folder ของคุณ และใช้  syntax ของ markdown ท่ีเป็น <code>![](/example.jpg)</code><br> เพื่ออ้างอิงรูปภาพ  แต่ syntax นี้จะไม่สามารถทำให้รูปภาพนั้นอยู่ในเพจ index<br> อย่างถูกต้อง</p>\n<p>วิธีที่ถูกต้องสำหรับการอ้างอิงรูปภาพคือใช้ปลั๊อินแท็ก ไม่ใช่ markdown:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</span><br><span class=\"line\">&#123;% asset_img &quot;spaced asset.jpg&quot; &quot;spaced title&quot; %&#125;</span><br></pre></td></tr></table></figure>\n<p>ดังนั้น รูปภาพจะอยู่ทั้งในโพสต์และในเพจ index กับ archive</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69w0058koeoujkj0juf",
				"title": "Configuration",
				"markdown": "คุณสามารถแก้ไขการตั้งค่าของเว็บไซต์ใน `_config.yml` หรือในไฟล์ [alternate config file](#Using-an-Alternate-Config)\n\n### Site\n\nSetting | Description\n--- | ---\n`title` | The title of your website\n`subtitle` | The subtitle of your website\n`description` | The description of your website\n`author` | Your name\n`language` | The language of your website. Use a [2-lettter ISO-639-1 code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes). Default is `en`.\n`timezone` | The timezone of your website. Hexo uses the setting on your computer by default. You can find the list of available timezones [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). Some examples are `America/New_York`, `Japan`, and `UTC`.\n\n### URL\n\nSetting | Description | Default\n--- | --- | ---\n`url` | The URL of your website |\n`root` | The root directory of your website |\n`permalink` | The [permalink](permalinks.html) format of articles | `:year/:month/:day/:title/`\n`permalink_defaults` | Default values of each segment in permalink |\n\n{% note info Website in subdirectory %}\nถ้าเว็บไซต์ของคุณอยู่ใน subdirectory (เช่น `http://example.org/blog` ) \nตั้งค่า `url` เป็น `http://example.org/blog` และตั้งค่า `root` เป็น `/blog/`\n{% endnote %}\n\n### Directory\n\nSetting | Description | Default\n--- | --- | ---\n`source_dir` | Source folder. Where your content is stored | `source`\n`public_dir` | Public folder. Where the static site will be generated | `public`\n`tag_dir` | Tag directory | `tags`\n`archive_dir` | Archive directory | `archives`\n`category_dir` | Category directory | `categories`\n`code_dir` | Include code directory (subdirectory of `source_dir`) | `downloads/code`\n`i18n_dir` | i18n directory | `:lang`\n`skip_render` | Paths that will be copied to `public` raw, without being rendered. You can use [glob expressions](https://github.com/isaacs/minimatch) for path matching.<br /><br />For example, `skip_render: mypage/**/*` will output `source/mypage/index.html` and `source/mypage/code.js` without altering them. |\n\n### Writing\n\nSetting | Description | Default\n--- | --- | ---\n`new_post_name` | The filename format for new posts | `:title.md`\n`default_layout` | Default layout | `post`\n`titlecase` | Transform titles into title case? | `false`\n`external_link` | Open external links in a new tab? | `true`\n`filename_case` | Transform filenames to `1` lower case; `2` upper case | `0`\n`render_drafts` | Display drafts? | `false`\n`post_asset_folder` | Enable the [Asset Folder](asset-folders.html)? | `false`\n`relative_link` | Make links relative to the root folder? | `false`\n`future` | Display future posts? | `true`\n`highlight` | Code block settings |\n\n### Category & Tag\n\nSetting | Description | Default\n--- | --- | ---\n`default_category` | Default category | `uncategorized`\n`category_map` | Category slugs |\n`tag_map` | Tag slugs |\n\n### Date / Time format\n\nhexo ใช้ [Moment.js](http://momentjs.com/) มาจัดการวันเดือนปี\n\nSetting | Description | Default\n--- | --- | ---\n`date_format` | Date format | `YYYY-MM-DD`\n`time_format` | Time format | `HH:mm:ss`\n\n### Pagination\n\nSetting | Description | Default\n--- | --- | ---\n`per_page` | The amount of posts displayed on a single page. `0` disables pagination | `10`\n`pagination_dir` | Pagination directory | `page`\n\n### Extensions\n\nSetting | Description\n--- | ---\n`theme` | Theme name. `false` disables theming\n`theme_config` | Theme configuration. Include any custom theme settings under this key to override theme defaults.\n`deploy` | Deployment settings\n\n\n### Include/Exclude Files or Folders\n\nในไฟล์การตั้างค่า ตั้งค่า include/exclude ได้เพื่อทำให้ hexo \nจัดการหรือละเลยไฟล์หรือ  folder เฉพาะ\nSetting | Description\n--- | ---\n`include` | Hexo by default ignores hidden files and folders, but setting this field will make Hexo process them\n`exclude` | Hexo process will ignore files list under this field\n\nตัวอย่าง:\n```yaml\n# Include/Exclude Files/Folders\ninclude:\n  - .nojekyll\nexclude:\n  - .DS_Store\n```\n\n### Using an Alternate Config\n\npath ของไฟล์การตั้งค่าจะถูกตั้งค่าได้โดยการเพิ่ม flag `--config` หลังคำสั่ง \npath นั้นสามารถชี้ถึงไฟล์การตั้งค่าท่ีมีรูปแบบเป็น YAML หรือ JSON \nหรือมีหมวกไฟล์ท่ีตัดรายชื่อด้วยเครื่องหมายจุลภาค \n\n``` bash\n# use 'custom.yml' in place of '_config.yml'\n$ hexo server --config custom.yml\n\n# use 'custom.yml' & 'custom2.json', prioritizing 'custom2.json'\n$ hexo server --config custom.yml,custom2.json\n```\n\nการใช้ไฟล์ต่างๆจะทำให้เกิดการเปลี่ยนแปลงของไฟล์การตั้งค่าและ \nการเปลี่ยนแปลงนั้นจะถูกบันทึกอยู่ในไฟล์ `_multiconfig.yml`  \nสำหรับการตั้งค่า parameter เดียวกันนั้น value ท่ีอยู่ตัวหลังจะเกิดผล  \nไม่ว่ามีไฟล์ JSON และ YAML เป็นจำนวนเท่าไร ก็ปฏิบัติตามกฏอย่างนี้ \nมีสิ่งท่ีต้องระวังคือ **no spaces are allowed in the list**\n\n\nยกตัวอย่างเช่น ในตัวอย่างท่ีกล่าวข้างต้น ถ้่า `foo: bar` อยู่ในไฟล์ `custom\n.yml` แต่ `\"foo\": \"dinosaur\"` อยู่ในไฟล์ `custom2.json`    ไฟล์\n`_multiconfig.yml` นั้นจะมีการตั้งค่าเป็น `foo: dinosaur`\n\n### Overriding Theme Config\n\nธีมของ hexo เป็น project ที่ไม่พึ่งพาไฟล์อื่นๆใน  hexo และธีมนั้นจะมีไฟล์   \n`_config.yml` ของตน แม้ว่าธีมนั้นมีไฟล์การตั้งค่าของตน  \nแต่คุณก็ยังสามารถตั้งค่าได้ในไฟล์ `_config.yml`  ท่ีอยู่ใน root repository ของ \nhexo\n\n\nตัวอย่างของการตั้งค่า:\n\n```yml\n# _config.yml\ntheme_config:\n  bio: \"My awesome bio\"\n```\n\n```yml\n# themes/my-theme/_config.yml\nbio: \"Some generic bio\"\nlogo: \"a-cool-image.png\"\n```\n\nผลการตั้งค่าธีม:\n\n```json\n{\n  bio: \"My awesome bio\",\n  logo: \"a-cool-image.png\"\n}\n```\n",
				"html": "<p>คุณสามารถแก้ไขการตั้งค่าของเว็บไซต์ใน <code>_config.yml</code> หรือในไฟล์ <a href=\"#Using-an-Alternate-Config\">alternate config file</a></p>\n<h3 id=\"Site\"><a href=\"#Site\" class=\"headerlink\" title=\"Site\"></a>Site</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>The title of your website</td>\n</tr>\n<tr>\n<td><code>subtitle</code></td>\n<td>The subtitle of your website</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>The description of your website</td>\n</tr>\n<tr>\n<td><code>author</code></td>\n<td>Your name</td>\n</tr>\n<tr>\n<td><code>language</code></td>\n<td>The language of your website. Use a <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"_blank\" rel=\"noopener\">2-lettter ISO-639-1 code</a>. Default is <code>en</code>.</td>\n</tr>\n<tr>\n<td><code>timezone</code></td>\n<td>The timezone of your website. Hexo uses the setting on your computer by default. You can find the list of available timezones <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" target=\"_blank\" rel=\"noopener\">here</a>. Some examples are <code>America/New_York</code>, <code>Japan</code>, and <code>UTC</code>.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>url</code></td>\n<td>The URL of your website</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>The root directory of your website</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>The <a href=\"permalinks.html\">permalink</a> format of articles</td>\n<td><code>:year/:month/:day/:title/</code></td>\n</tr>\n<tr>\n<td><code>permalink_defaults</code></td>\n<td>Default values of each segment in permalink</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note info\"><strong class=\"note-title\">Website in subdirectory</strong><p>ถ้าเว็บไซต์ของคุณอยู่ใน subdirectory (เช่น <code>http://example.org/blog</code> )<br>ตั้งค่า <code>url</code> เป็น <code>http://example.org/blog</code> และตั้งค่า <code>root</code> เป็น <code>/blog/</code></p>\n</blockquote>\n<h3 id=\"Directory\"><a href=\"#Directory\" class=\"headerlink\" title=\"Directory\"></a>Directory</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source_dir</code></td>\n<td>Source folder. Where your content is stored</td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>public_dir</code></td>\n<td>Public folder. Where the static site will be generated</td>\n<td><code>public</code></td>\n</tr>\n<tr>\n<td><code>tag_dir</code></td>\n<td>Tag directory</td>\n<td><code>tags</code></td>\n</tr>\n<tr>\n<td><code>archive_dir</code></td>\n<td>Archive directory</td>\n<td><code>archives</code></td>\n</tr>\n<tr>\n<td><code>category_dir</code></td>\n<td>Category directory</td>\n<td><code>categories</code></td>\n</tr>\n<tr>\n<td><code>code_dir</code></td>\n<td>Include code directory (subdirectory of <code>source_dir</code>)</td>\n<td><code>downloads/code</code></td>\n</tr>\n<tr>\n<td><code>i18n_dir</code></td>\n<td>i18n directory</td>\n<td><code>:lang</code></td>\n</tr>\n<tr>\n<td><code>skip_render</code></td>\n<td>Paths that will be copied to <code>public</code> raw, without being rendered. You can use <a href=\"https://github.com/isaacs/minimatch\" target=\"_blank\" rel=\"noopener\">glob expressions</a> for path matching.<br><br>For example, <code>skip_render: mypage/**/*</code> will output <code>source/mypage/index.html</code> and <code>source/mypage/code.js</code> without altering them.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Writing\"><a href=\"#Writing\" class=\"headerlink\" title=\"Writing\"></a>Writing</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>new_post_name</code></td>\n<td>The filename format for new posts</td>\n<td><code>:title.md</code></td>\n</tr>\n<tr>\n<td><code>default_layout</code></td>\n<td>Default layout</td>\n<td><code>post</code></td>\n</tr>\n<tr>\n<td><code>titlecase</code></td>\n<td>Transform titles into title case?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>external_link</code></td>\n<td>Open external links in a new tab?</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>filename_case</code></td>\n<td>Transform filenames to <code>1</code> lower case; <code>2</code> upper case</td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>render_drafts</code></td>\n<td>Display drafts?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>post_asset_folder</code></td>\n<td>Enable the <a href=\"asset-folders.html\">Asset Folder</a>?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>relative_link</code></td>\n<td>Make links relative to the root folder?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>future</code></td>\n<td>Display future posts?</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>highlight</code></td>\n<td>Code block settings</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Category-amp-Tag\"><a href=\"#Category-amp-Tag\" class=\"headerlink\" title=\"Category &amp; Tag\"></a>Category &amp; Tag</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>default_category</code></td>\n<td>Default category</td>\n<td><code>uncategorized</code></td>\n</tr>\n<tr>\n<td><code>category_map</code></td>\n<td>Category slugs</td>\n<td></td>\n</tr>\n<tr>\n<td><code>tag_map</code></td>\n<td>Tag slugs</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Date-Time-format\"><a href=\"#Date-Time-format\" class=\"headerlink\" title=\"Date / Time format\"></a>Date / Time format</h3><p>hexo ใช้ <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> มาจัดการวันเดือนปี</p>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>date_format</code></td>\n<td>Date format</td>\n<td><code>YYYY-MM-DD</code></td>\n</tr>\n<tr>\n<td><code>time_format</code></td>\n<td>Time format</td>\n<td><code>HH:mm:ss</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Pagination\"><a href=\"#Pagination\" class=\"headerlink\" title=\"Pagination\"></a>Pagination</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>per_page</code></td>\n<td>The amount of posts displayed on a single page. <code>0</code> disables pagination</td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td><code>pagination_dir</code></td>\n<td>Pagination directory</td>\n<td><code>page</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Extensions\"><a href=\"#Extensions\" class=\"headerlink\" title=\"Extensions\"></a>Extensions</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>theme</code></td>\n<td>Theme name. <code>false</code> disables theming</td>\n</tr>\n<tr>\n<td><code>theme_config</code></td>\n<td>Theme configuration. Include any custom theme settings under this key to override theme defaults.</td>\n</tr>\n<tr>\n<td><code>deploy</code></td>\n<td>Deployment settings</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Include-Exclude-Files-or-Folders\"><a href=\"#Include-Exclude-Files-or-Folders\" class=\"headerlink\" title=\"Include/Exclude Files or Folders\"></a>Include/Exclude Files or Folders</h3><p>ในไฟล์การตั้างค่า ตั้งค่า include/exclude ได้เพื่อทำให้ hexo<br>จัดการหรือละเลยไฟล์หรือ  folder เฉพาะ<br>Setting | Description<br>— | —<br><code>include</code> | Hexo by default ignores hidden files and folders, but setting this field will make Hexo process them<br><code>exclude</code> | Hexo process will ignore files list under this field</p>\n<p>ตัวอย่าง:<br><figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Include/Exclude Files/Folders</span></span><br><span class=\"line\"><span class=\"attr\">include:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">.nojekyll</span></span><br><span class=\"line\"><span class=\"attr\">exclude:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">.DS_Store</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Using-an-Alternate-Config\"><a href=\"#Using-an-Alternate-Config\" class=\"headerlink\" title=\"Using an Alternate Config\"></a>Using an Alternate Config</h3><p>path ของไฟล์การตั้งค่าจะถูกตั้งค่าได้โดยการเพิ่ม flag <code>--config</code> หลังคำสั่ง<br>path นั้นสามารถชี้ถึงไฟล์การตั้งค่าท่ีมีรูปแบบเป็น YAML หรือ JSON<br>หรือมีหมวกไฟล์ท่ีตัดรายชื่อด้วยเครื่องหมายจุลภาค </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># use 'custom.yml' in place of '_config.yml'</span></span><br><span class=\"line\">$ hexo server --config custom.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># use 'custom.yml' &amp; 'custom2.json', prioritizing 'custom2.json'</span></span><br><span class=\"line\">$ hexo server --config custom.yml,custom2.json</span><br></pre></td></tr></table></figure>\n<p>การใช้ไฟล์ต่างๆจะทำให้เกิดการเปลี่ยนแปลงของไฟล์การตั้งค่าและ<br>การเปลี่ยนแปลงนั้นจะถูกบันทึกอยู่ในไฟล์ <code>_multiconfig.yml</code><br>สำหรับการตั้งค่า parameter เดียวกันนั้น value ท่ีอยู่ตัวหลังจะเกิดผล<br>ไม่ว่ามีไฟล์ JSON และ YAML เป็นจำนวนเท่าไร ก็ปฏิบัติตามกฏอย่างนี้<br>มีสิ่งท่ีต้องระวังคือ <strong>no spaces are allowed in the list</strong></p>\n<p>ยกตัวอย่างเช่น ในตัวอย่างท่ีกล่าวข้างต้น ถ้่า <code>foo: bar</code> อยู่ในไฟล์ <code>custom\n.yml</code> แต่ <code>&quot;foo&quot;: &quot;dinosaur&quot;</code> อยู่ในไฟล์ <code>custom2.json</code>    ไฟล์<br><code>_multiconfig.yml</code> นั้นจะมีการตั้งค่าเป็น <code>foo: dinosaur</code></p>\n<h3 id=\"Overriding-Theme-Config\"><a href=\"#Overriding-Theme-Config\" class=\"headerlink\" title=\"Overriding Theme Config\"></a>Overriding Theme Config</h3><p>ธีมของ hexo เป็น project ที่ไม่พึ่งพาไฟล์อื่นๆใน  hexo และธีมนั้นจะมีไฟล์<br><code>_config.yml</code> ของตน แม้ว่าธีมนั้นมีไฟล์การตั้งค่าของตน<br>แต่คุณก็ยังสามารถตั้งค่าได้ในไฟล์ <code>_config.yml</code>  ท่ีอยู่ใน root repository ของ<br>hexo</p>\n<p>ตัวอย่างของการตั้งค่า:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># _config.yml</span></span><br><span class=\"line\"><span class=\"attr\">theme_config:</span></span><br><span class=\"line\"><span class=\"attr\">  bio:</span> <span class=\"string\">\"My awesome bio\"</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># themes/my-theme/_config.yml</span></span><br><span class=\"line\"><span class=\"attr\">bio:</span> <span class=\"string\">\"Some generic bio\"</span></span><br><span class=\"line\"><span class=\"attr\">logo:</span> <span class=\"string\">\"a-cool-image.png\"</span></span><br></pre></td></tr></table></figure>\n<p>ผลการตั้งค่าธีม:</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  bio: \"My awesome bio\",</span><br><span class=\"line\">  logo: \"a-cool-image.png\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69w0059koeod1ab6ece",
				"title": "Contributing",
				"markdown": "## Development\n\nWe welcome you to join the development of Hexo. This document will help you through the process.\nการเข้าร่วมในกานพัฒนาของ hexo นั้นเป็นเรี่องท่ีพวกเรายินดีต้อนรับ \nบทความนี้จะเป็นการแนะนำกระบวนการเข้่าร่วมเรื่องนี้\n\n### Before You Start\n\nกรุณาทำตามขั้นตอนต่อไป:\n\n- Follow [Google JavaScript Style Guide](https://google.github.io/styleguide/jsguide.html).\n- Use soft-tabs with a two space indent.\n- Don't put commas first.\n\n### Workflow\n\n1. Fork [hexojs/hexo].\n2. Clone the repository to your computer and install dependencies.\n\n    {% code %}\n    $ git clone https://github.com/<username>/hexo.git\n    $ cd hexo\n    $ npm install\n    $ git submodule update --init\n    {% endcode %}\n\n3. Create a feature branch.\n\n    {% code %}\n    $ git checkout -b new_feature\n    {% endcode %}\n\n4. Start hacking.\n5. Push the branch:\n\n    {% code %}\n    $ git push origin new_feature\n    {% endcode %}\n\n6. Create a pull request and describe the change.\n\n### Notice\n\n- Don't modify version number in `package.json`.\n- Your pull request will only get merged when tests passed. Don't forget to run tests before submission.\n\n    {% code %}\n    $ npm test\n    {% endcode %}\n\n## Updating Documentation\n\ndocumentation ของ hexo เป็น open source และคุณสามารถอ่าน source code ได้ท่ี [hexojs/site]\n\n### Workflow\n\n1. Fork [hexojs/site]\n2. Clone the repository to your computer and install dependencies.\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. Start editing the documentation. You can start the server for live previewing.\n\n    {% code %}\n    $ hexo server\n    {% endcode %}\n\n4. Push the branch.\n5. Create a pull request and describe the change.\n\n### Translating\n\n1. Add a new language folder in `source` folder. (All lower case)\n2. Copy Markdown and template files in `source` folder to the new language folder.\n3. Add the new language to `source/_data/language.yml`.\n4. Copy `en.yml` in `themes/navy/languages` and rename to the language name (all lower case).\n\n## Reporting Issues\n\nเมื่อคุณพบเจอปัญหาการใช้ hexo คุณไปค้นหาวิธีการแก้ไขได้ท่ [Troubleshooting](troubleshooting.html) \nหรือไปถามท่ี [GitHub](https://github.com/hexojs/hexo/issues)\nกรือไปถามท่ี [Google Group](https://groups.google.com/group/hexo)\nถ้าคุณหาวิธีแก้ไขไม่ได้ กรุณาไปรายงานปัญหาท่ี Github \n\n1. Represent the problem in [debug mode](commands.html#Debug_mode).\n2. Run `hexo version` and check the version info.    \n3. Post both debug message and version info on GitHub.\n\n[hexojs/hexo]: https://github.com/hexojs/hexo\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<h2 id=\"Development\"><a href=\"#Development\" class=\"headerlink\" title=\"Development\"></a>Development</h2><p>We welcome you to join the development of Hexo. This document will help you through the process.<br>การเข้าร่วมในกานพัฒนาของ hexo นั้นเป็นเรี่องท่ีพวกเรายินดีต้อนรับ<br>บทความนี้จะเป็นการแนะนำกระบวนการเข้่าร่วมเรื่องนี้</p>\n<h3 id=\"Before-You-Start\"><a href=\"#Before-You-Start\" class=\"headerlink\" title=\"Before You Start\"></a>Before You Start</h3><p>กรุณาทำตามขั้นตอนต่อไป:</p>\n<ul>\n<li>Follow <a href=\"https://google.github.io/styleguide/jsguide.html\" target=\"_blank\" rel=\"noopener\">Google JavaScript Style Guide</a>.</li>\n<li>Use soft-tabs with a two space indent.</li>\n<li>Don’t put commas first.</li>\n</ul>\n<h3 id=\"Workflow\"><a href=\"#Workflow\" class=\"headerlink\" title=\"Workflow\"></a>Workflow</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">hexojs/hexo</a>.</li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/hexo.git</span><br><span class=\"line\">$ cd hexo</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">$ git submodule update --init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Create a feature branch.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout -b new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Start hacking.</p>\n</li>\n<li><p>Push the branch:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push origin new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Create a pull request and describe the change.</p>\n</li>\n</ol>\n<h3 id=\"Notice\"><a href=\"#Notice\" class=\"headerlink\" title=\"Notice\"></a>Notice</h3><ul>\n<li>Don’t modify version number in <code>package.json</code>.</li>\n<li><p>Your pull request will only get merged when tests passed. Don’t forget to run tests before submission.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm test</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Updating-Documentation\"><a href=\"#Updating-Documentation\" class=\"headerlink\" title=\"Updating Documentation\"></a>Updating Documentation</h2><p>documentation ของ hexo เป็น open source และคุณสามารถอ่าน source code ได้ท่ี <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></p>\n<h3 id=\"Workflow-1\"><a href=\"#Workflow-1\" class=\"headerlink\" title=\"Workflow\"></a>Workflow</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Start editing the documentation. You can start the server for live previewing.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Push the branch.</p>\n</li>\n<li>Create a pull request and describe the change.</li>\n</ol>\n<h3 id=\"Translating\"><a href=\"#Translating\" class=\"headerlink\" title=\"Translating\"></a>Translating</h3><ol>\n<li>Add a new language folder in <code>source</code> folder. (All lower case)</li>\n<li>Copy Markdown and template files in <code>source</code> folder to the new language folder.</li>\n<li>Add the new language to <code>source/_data/language.yml</code>.</li>\n<li>Copy <code>en.yml</code> in <code>themes/navy/languages</code> and rename to the language name (all lower case).</li>\n</ol>\n<h2 id=\"Reporting-Issues\"><a href=\"#Reporting-Issues\" class=\"headerlink\" title=\"Reporting Issues\"></a>Reporting Issues</h2><p>เมื่อคุณพบเจอปัญหาการใช้ hexo คุณไปค้นหาวิธีการแก้ไขได้ท่ <a href=\"troubleshooting.html\">Troubleshooting</a><br>หรือไปถามท่ี <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a><br>กรือไปถามท่ี <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a><br>ถ้าคุณหาวิธีแก้ไขไม่ได้ กรุณาไปรายงานปัญหาท่ี Github </p>\n<ol>\n<li>Represent the problem in <a href=\"commands.html#Debug_mode\">debug mode</a>.</li>\n<li>Run <code>hexo version</code> and check the version info.    </li>\n<li>Post both debug message and version info on GitHub.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69w005akoeomhafmaed",
				"title": "Data Files",
				"markdown": "บางทีคุณอยากใช้ data ใน template ท่ีเข้าถึงโดยตรงไม่ได้ หรือคุณอยากเอา data \nไปใช้อีกในท่ีอื่นๆ ในกรณีเหล่านี้ hexo 3 จะแนะนำ  **Data files** ใหม่ \nด้วยลักษณะนี้ hexo จะโหลดไฟล์ YAML หรือ JSON ใน folder  `source/_data` \nและคุณจะใช้ data ในไฟล์ได้ในเว็บไซต์ของตน \n\n{% youtube CN31plHbI-w %}\n\nยกตัวอย่างเช่น เพิ่ม `menu.yml` ใน folder `source/_data`\n\n``` yaml\nHome: /\nGallery: /gallery/\nArchives: /archives/\n```\n\nและคุณสามารถใช้ data ได้ใน templates:\n\n```\n<% for (var link in site.data.menu) { %>\n  <a href=\"<%= site.data.menu[link] %>\"> <%= link %> </a>\n<% } %>\n```\n\nการ render จะเป็นอย่างนี้:\n\n```\n<a href=\"/\"> Home </a>\n<a href=\"/gallery/\"> Gallery </a>\n<a href=\"/archives/\"> Archives </a>\n```\n",
				"html": "<p>บางทีคุณอยากใช้ data ใน template ท่ีเข้าถึงโดยตรงไม่ได้ หรือคุณอยากเอา data<br>ไปใช้อีกในท่ีอื่นๆ ในกรณีเหล่านี้ hexo 3 จะแนะนำ  <strong>Data files</strong> ใหม่<br>ด้วยลักษณะนี้ hexo จะโหลดไฟล์ YAML หรือ JSON ใน folder  <code>source/_data</code><br>และคุณจะใช้ data ในไฟล์ได้ในเว็บไซต์ของตน </p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/CN31plHbI-w\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>ยกตัวอย่างเช่น เพิ่ม <code>menu.yml</code> ใน folder <code>source/_data</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Home:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">Gallery:</span> <span class=\"string\">/gallery/</span></span><br><span class=\"line\"><span class=\"attr\">Archives:</span> <span class=\"string\">/archives/</span></span><br></pre></td></tr></table></figure>\n<p>และคุณสามารถใช้ data ได้ใน templates:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;% for (var link in site.data.menu) &#123; %&gt;</span><br><span class=\"line\">  &lt;a href=&quot;&lt;%= site.data.menu[link] %&gt;&quot;&gt; &lt;%= link %&gt; &lt;/a&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>การ render จะเป็นอย่างนี้:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;/&quot;&gt; Home &lt;/a&gt;</span><br><span class=\"line\">&lt;a href=&quot;/gallery/&quot;&gt; Gallery &lt;/a&gt;</span><br><span class=\"line\">&lt;a href=&quot;/archives/&quot;&gt; Archives &lt;/a&gt;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69w005bkoeo2erf6ykv",
				"title": "Front-matter",
				"markdown": "\n{% youtube pfD6FCZdW4Q %}\n\nfront-matter เป็น block ของ YAML หรือ JSON ท่ีอยู่ข้างต้นของไฟล์ \nและใช้มาตั้งค่าโพสต์ของคุณ\n\n**YAML**\n``` yaml\ntitle: Hello World\ndate: 2013/7/13 20:46:25\n---\n```\n\n**JSON**\n``` json\n\"title\": \"Hello World\",\n\"date\": \"2013/7/13 20:46:25\"\n;;;\n```\n\n### Settings & Their Default Values\n\nSetting | Description | Default\n--- | --- | ---\n`layout` | Layout |\n`title` | Title |\n`date` | Published date | File created date\n`updated` | Updated date | File updated date\n`comments` | Enables comment feature for the post | true\n`tags` | Tags (Not available for pages) |\n`categories` | Categories (Not available for pages) |\n`permalink` | Overrides the default permalink of the post |\n\n#### Categories & Tags\n\nมีแต่โพสต์เท่านั้นท่ีสนับสนุนการตั้งค่าแท็กและประเภท(category)  \nประเภทนั้นจะจัดระบบตามลำดับขั้นให้กับโพสต์ \nส่วนแท็กนั้นจะไม่เกี่ยวกับเรื่องลำดับขั้นนั้น \n \n\n**ยกตัวอย่างเช่น:**\n\n``` yaml\ncategories:\n- Sports\n- Baseball\ntags:\n- Injury\n- Fight\n- Shocking\n```\n\nถ้าคุณอยากจัดหลายลำดับขั้นให้กับโพสต์ กรุณาเขียนรายชื่อของทุกลำดับขั้นให้ \nด้วยการกระทำอย่างนี้  hexo จะทำให้โพสต์อยู่ในทุกลำดับขั้นท่ีคัดเลือกมา\n\n**ยกตัวอย่างเช่น:**\n\n``` yaml\ncategories:\n- [Sports, Baseball]\n- [MLB, American League, Boston Red Sox]\n- [MLB, American League, New York Yankees]\n- Rivalries\n```\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/pfD6FCZdW4Q\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>front-matter เป็น block ของ YAML หรือ JSON ท่ีอยู่ข้างต้นของไฟล์<br>และใช้มาตั้งค่าโพสต์ของคุณ</p>\n<p><strong>YAML</strong><br><figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"string\">/7/13</span> <span class=\"number\">20</span><span class=\"string\">:46:25</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>JSON</strong><br><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"title\": \"Hello World\",</span><br><span class=\"line\">\"date\": \"2013/7/13 20:46:25\"</span><br><span class=\"line\">;;;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Settings-amp-Their-Default-Values\"><a href=\"#Settings-amp-Their-Default-Values\" class=\"headerlink\" title=\"Settings &amp; Their Default Values\"></a>Settings &amp; Their Default Values</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>Layout</td>\n<td></td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>Title</td>\n<td></td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Published date</td>\n<td>File created date</td>\n</tr>\n<tr>\n<td><code>updated</code></td>\n<td>Updated date</td>\n<td>File updated date</td>\n</tr>\n<tr>\n<td><code>comments</code></td>\n<td>Enables comment feature for the post</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>Tags (Not available for pages)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>Categories (Not available for pages)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>Overrides the default permalink of the post</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Categories-amp-Tags\"><a href=\"#Categories-amp-Tags\" class=\"headerlink\" title=\"Categories &amp; Tags\"></a>Categories &amp; Tags</h4><p>มีแต่โพสต์เท่านั้นท่ีสนับสนุนการตั้งค่าแท็กและประเภท(category)<br>ประเภทนั้นจะจัดระบบตามลำดับขั้นให้กับโพสต์<br>ส่วนแท็กนั้นจะไม่เกี่ยวกับเรื่องลำดับขั้นนั้น </p>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Sports</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Baseball</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Injury</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Fight</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Shocking</span></span><br></pre></td></tr></table></figure>\n<p>ถ้าคุณอยากจัดหลายลำดับขั้นให้กับโพสต์ กรุณาเขียนรายชื่อของทุกลำดับขั้นให้<br>ด้วยการกระทำอย่างนี้  hexo จะทำให้โพสต์อยู่ในทุกลำดับขั้นท่ีคัดเลือกมา</p>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">[Sports,</span> <span class=\"string\">Baseball]</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">[MLB,</span> <span class=\"string\">American</span> <span class=\"string\">League,</span> <span class=\"string\">Boston</span> <span class=\"string\">Red</span> <span class=\"string\">Sox]</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">[MLB,</span> <span class=\"string\">American</span> <span class=\"string\">League,</span> <span class=\"string\">New</span> <span class=\"string\">York</span> <span class=\"string\">Yankees]</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Rivalries</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69x005ckoeoybkzzgch",
				"title": "Generating",
				"markdown": "การ generate ไฟล์คงท่ีใน hexo จะค่อนข้างรวดเร็วและง่าย\n\n``` bash\n$ hexo generate\n```\n\n{% youtube viEJQPVCoLU %}\n\n### Watch for File Changes\n\nhexo จะเฝ้าดูการเปลี่ยนแปลงของไฟล์และ generate ไฟล์ ทันที  \nเฝ้าดูการเปลี่ยนแปลงของไฟล์นั้นจะเป็นการเปรียนเทียบ SHA1 checksum ของไฟล์\n\n``` bash\n$ hexo generate --watch\n```\n\n### Deploy After Generating\n\nคำสั่งสองบรรทัดต่อไปจะมีการปฏิบัติเหมือนกันสำหรับการ deploy หลังการ generate ไฟล์\n\n\n``` bash\n$ hexo generate --deploy\n$ hexo deploy --generate\n```\n",
				"html": "<p>การ generate ไฟล์คงท่ีใน hexo จะค่อนข้างรวดเร็วและง่าย</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/viEJQPVCoLU\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h3 id=\"Watch-for-File-Changes\"><a href=\"#Watch-for-File-Changes\" class=\"headerlink\" title=\"Watch for File Changes\"></a>Watch for File Changes</h3><p>hexo จะเฝ้าดูการเปลี่ยนแปลงของไฟล์และ generate ไฟล์ ทันที<br>เฝ้าดูการเปลี่ยนแปลงของไฟล์นั้นจะเป็นการเปรียนเทียบ SHA1 checksum ของไฟล์</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --watch</span><br></pre></td></tr></table></figure>\n<h3 id=\"Deploy-After-Generating\"><a href=\"#Deploy-After-Generating\" class=\"headerlink\" title=\"Deploy After Generating\"></a>Deploy After Generating</h3><p>คำสั่งสองบรรทัดต่อไปจะมีการปฏิบัติเหมือนกันสำหรับการ deploy หลังการ generate ไฟล์</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --deploy</span><br><span class=\"line\">$ hexo deploy --generate</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69x005dkoeoe59uabdf",
				"title": "Documentation",
				"markdown": "ยินดีต้อนรับเข้าสู่ documentation ของ hexo ถ้าคุณพบเจอปัญหาใดๆเวลาใช้ hexo \nไปดูข้อมูลได้ท่ี  [troubleshooting guide](troubleshooting.html) ไปเสนอ issue \nได้ที่ [GitHub](https://github.com/hexojs/hexo/issues) หรือไปเปิด topic ได้ท่ี [Google Group](https://groups.google.com/group/hexo)\n\n## What is Hexo?\n\nhexo เป็นกรอบบล็อกท่ีรวดเร็ว เรียบง่ายและมีประสิทธิภาพ \nคุณเขียนโพสต์ได้ด้วยภาษา [Markdown](http://daringfireball\n.net/projects/markdown/)(หรือภาษาอื่นๆ) และ hexo จะ generate \nไฟล์คงที่ท่ีประกอบด้วยธีมสวยงามภายในเวลาไม่กี่วินาที\n\n## Installation\n\nการติดตั้ง hexo ต้องการเวลาหลายนาทีเท่านั้น ถ้าคุณพบเจอปัญหาท่ีแก้ไขไม่ได้ \nกรุณาไปเสนอ issue ได้ท่ี [submit a GitHub issue](https://github.com/hexojs/hexo/issues)\n\n{% youtube ARted4RniaU %}\n\n### Requirements\n\nการติดตั้ง hexo เป็นเรื่องง่ายๆ แต่คุณต้องการติดตั้งบางสิ่งก่อน:\n\n- [Node.js](http://nodejs.org/)\n- [Git](http://git-scm.com/)\n\nถ้าคุณติดตั้งสองสิ่งนี้อยู่แล้วในคอม ขอแสดงความยินดี คุณจะติดตั้ง hexo ด้วย npm ได้อย่างนี้:\n\n``` bash\n$ npm install -g hexo-cli\n```\n\nถ้าคุณยังไม่ได้ติดตั้งสองสิ่งนี้ กรุณาปฏิบัติตามวิธีการใช้เพื่อติดตั้งทุกสิ่งท่ีต้องการ\n{% note warn For Mac users %}\nคุณอาจจะพบปัญหาบ้างเมื่อ compiling กรุณาติดตั้ง Xcode จาก App Store ก่อน \nเสร็จแล้วค่อยไปเปิด Xcode และ ไปถึง **Preferences -> Download -> Command Line\n Tools -> Install** เพื่อติดตั้งเครื่องมือคำสั่ง\n{% endnote %}\n\n### Install Git\n\n- Windows: ดาวน์โหลด & ติดตั้ง [git](https://git-scm.com/download/win).\n- Mac: ติดตั้งด้วย [Homebrew](http://mxcl.github.com/homebrew/), [MacPorts]\n(http://www.macports.org/) หรือ [installer](http://sourceforge\n.net/projects/git-osx-installer/).\n- Linux (Ubuntu, Debian): `sudo apt-get install git-core`\n- Linux (Fedora, Red Hat, CentOS): `sudo yum install git-core`\n\n### Install Node.js\n\nวิธีดีท่ีสุดสำหรับการติดตั้ง Node.js คือ [Node Version Manager](https://github.com/creationix/nvm)\nขอบคุณ ผู้ประดิษฐ์ nvm ท่ีได้แนะนำวิธีเรียบง่ายท่ีติดตั้ง nvm ได้โดยอัตโนมัติ\n\ncURL:\n\n``` bash\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n\nWget:\n\n``` bash\n$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n\nเมื่อเสร็จการติดตั้ง nvm เปิด terminal ใหม่และรันคำสั่งต่อไปเพื่อติดตั้ง Node.js\n\n``` bash\n$ nvm install stable\n```\n\nนอกจากนี้ยังดาวน์โหลดและรัน [the installer](http://nodejs.org/) ได้\n\n### Install Hexo\n\nเมื่อความต้องการทุกอย่างได้ติดตั้งเรียบร้อยแล้ว คุณสามารถติดตั้ง hexo ด้วย npm\n\n``` bash\n$ npm install -g hexo-cli\n```\n",
				"html": "<p>ยินดีต้อนรับเข้าสู่ documentation ของ hexo ถ้าคุณพบเจอปัญหาใดๆเวลาใช้ hexo<br>ไปดูข้อมูลได้ท่ี  <a href=\"troubleshooting.html\">troubleshooting guide</a> ไปเสนอ issue<br>ได้ที่ <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> หรือไปเปิด topic ได้ท่ี <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a></p>\n<h2 id=\"What-is-Hexo\"><a href=\"#What-is-Hexo\" class=\"headerlink\" title=\"What is Hexo?\"></a>What is Hexo?</h2><p>hexo เป็นกรอบบล็อกท่ีรวดเร็ว เรียบง่ายและมีประสิทธิภาพ<br>คุณเขียนโพสต์ได้ด้วยภาษา <a href=\"http://daringfireball\n.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a>(หรือภาษาอื่นๆ) และ hexo จะ generate<br>ไฟล์คงที่ท่ีประกอบด้วยธีมสวยงามภายในเวลาไม่กี่วินาที</p>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><p>การติดตั้ง hexo ต้องการเวลาหลายนาทีเท่านั้น ถ้าคุณพบเจอปัญหาท่ีแก้ไขไม่ได้<br>กรุณาไปเสนอ issue ได้ท่ี <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">submit a GitHub issue</a></p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/ARted4RniaU\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h3 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h3><p>การติดตั้ง hexo เป็นเรื่องง่ายๆ แต่คุณต้องการติดตั้งบางสิ่งก่อน:</p>\n<ul>\n<li><a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node.js</a></li>\n<li><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></li>\n</ul>\n<p>ถ้าคุณติดตั้งสองสิ่งนี้อยู่แล้วในคอม ขอแสดงความยินดี คุณจะติดตั้ง hexo ด้วย npm ได้อย่างนี้:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>ถ้าคุณยังไม่ได้ติดตั้งสองสิ่งนี้ กรุณาปฏิบัติตามวิธีการใช้เพื่อติดตั้งทุกสิ่งท่ีต้องการ<br><blockquote class=\"note warn\"><strong class=\"note-title\">For Mac users</strong><p>คุณอาจจะพบปัญหาบ้างเมื่อ compiling กรุณาติดตั้ง Xcode จาก App Store ก่อน<br>เสร็จแล้วค่อยไปเปิด Xcode และ ไปถึง <strong>Preferences -&gt; Download -&gt; Command Line<br> Tools -&gt; Install</strong> เพื่อติดตั้งเครื่องมือคำสั่ง</p>\n</blockquote></p>\n<h3 id=\"Install-Git\"><a href=\"#Install-Git\" class=\"headerlink\" title=\"Install Git\"></a>Install Git</h3><ul>\n<li>Windows: ดาวน์โหลด &amp; ติดตั้ง <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a>.</li>\n<li>Mac: ติดตั้งด้วย <a href=\"http://mxcl.github.com/homebrew/\" target=\"_blank\" rel=\"noopener\">Homebrew</a>, [MacPorts]<br>(<a href=\"http://www.macports.org/\" target=\"_blank\" rel=\"noopener\">http://www.macports.org/</a>) หรือ <a href=\"http://sourceforge\n.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"noopener\">installer</a>.</li>\n<li>Linux (Ubuntu, Debian): <code>sudo apt-get install git-core</code></li>\n<li>Linux (Fedora, Red Hat, CentOS): <code>sudo yum install git-core</code></li>\n</ul>\n<h3 id=\"Install-Node-js\"><a href=\"#Install-Node-js\" class=\"headerlink\" title=\"Install Node.js\"></a>Install Node.js</h3><p>วิธีดีท่ีสุดสำหรับการติดตั้ง Node.js คือ <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">Node Version Manager</a><br>ขอบคุณ ผู้ประดิษฐ์ nvm ท่ีได้แนะนำวิธีเรียบง่ายท่ีติดตั้ง nvm ได้โดยอัตโนมัติ</p>\n<p>cURL:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<p>Wget:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<p>เมื่อเสร็จการติดตั้ง nvm เปิด terminal ใหม่และรันคำสั่งต่อไปเพื่อติดตั้ง Node.js</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ nvm install stable</span><br></pre></td></tr></table></figure>\n<p>นอกจากนี้ยังดาวน์โหลดและรัน <a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">the installer</a> ได้</p>\n<h3 id=\"Install-Hexo\"><a href=\"#Install-Hexo\" class=\"headerlink\" title=\"Install Hexo\"></a>Install Hexo</h3><p>เมื่อความต้องการทุกอย่างได้ติดตั้งเรียบร้อยแล้ว คุณสามารถติดตั้ง hexo ด้วย npm</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69x005ekoeot6vie81a",
				"title": "Migration",
				"markdown": "## RSS\n\nขั้นแรก ติดตั้งปลั๊กอิน `hexo-migrator-rss`\n\n``` bash\n$ npm install hexo-migrator-rss --save\n```\n\nเมื่อเสร็จการติดตั้งปลั๊กอินแล้วรันคำสั่งต่อไปเพื่อย้ายโพสต์ทั้งหมดจาก RSS   \n `source` นั้นเป็น path ของไฟล์หรือ URL ได้\n\n``` bash\n$ hexo migrate rss <source>\n```\n\n## Jekyll\n\nย้ายไฟล์ทั้งหมดใน folder Jekyll  `_posts` ไป folder  `source/_posts`\nแก้ไขการตั้งค่า `new_post_name` ใน `_config.yml`:\n\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## Octopress\n\nย้ายไฟล์ทั้งหมดใน folder `source/_posts` ของ Octopress ไปถึง  `source/_posts`\nแก้ไขการตั้งค่า `new_post_name` ใน `_config.yml`:\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## WordPress\n\nขั้นแรก ติดตั้งปลั๊กอิน `hexo-migrator-wordpress`\n\n``` bash\n$ npm install hexo-migrator-wordpress --save\n```\n\nนำไซตื WordPress ของคุณออกไปได้ด้วยการตั้งค่า \"Tools\" → \"Export\" → \n\"WordPress\"  ใน dashboard ของ WordPress (สำหรับข้อมูลเพิ่มเติมไปดูที่ [WordPress support page](http://en.support.wordpress.com/export/))\n\nแล้วรัน:\n\n``` bash\n$ hexo migrate wordpress <source>\n```\n\n`source`  เป็น  path ของไฟล์หรือ URL ของไฟล์ท่ี  WordPress ท่ีส่งออกมา\n\n## Joomla\n\nขั้นแรก ติดตั้งปลั๊กอิน `hexo-migrator-joomla`\n\n```bash\n$ npm install hexo-migrator-joomla --save\n```\n\nนำออกบทความ Joomla ของคุณได้โดยใช้ component  [J2XML](http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D)\n\nแล้วรัน:\n\n```bash\n$ hexo migrate joomla <source>\n```\n\n`source`  เป็น  path ของไฟล์หรือ URL ของไฟล์ท่ี  Joomla ท่ีส่งออกมา\n\n",
				"html": "<h2 id=\"RSS\"><a href=\"#RSS\" class=\"headerlink\" title=\"RSS\"></a>RSS</h2><p>ขั้นแรก ติดตั้งปลั๊กอิน <code>hexo-migrator-rss</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-rss --save</span><br></pre></td></tr></table></figure>\n<p>เมื่อเสร็จการติดตั้งปลั๊กอินแล้วรันคำสั่งต่อไปเพื่อย้ายโพสต์ทั้งหมดจาก RSS<br> <code>source</code> นั้นเป็น path ของไฟล์หรือ URL ได้</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate rss &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Jekyll\"><a href=\"#Jekyll\" class=\"headerlink\" title=\"Jekyll\"></a>Jekyll</h2><p>ย้ายไฟล์ทั้งหมดใน folder Jekyll  <code>_posts</code> ไป folder  <code>source/_posts</code><br>แก้ไขการตั้งค่า <code>new_post_name</code> ใน <code>_config.yml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Octopress\"><a href=\"#Octopress\" class=\"headerlink\" title=\"Octopress\"></a>Octopress</h2><p>ย้ายไฟล์ทั้งหมดใน folder <code>source/_posts</code> ของ Octopress ไปถึง  <code>source/_posts</code><br>แก้ไขการตั้งค่า <code>new_post_name</code> ใน <code>_config.yml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"WordPress\"><a href=\"#WordPress\" class=\"headerlink\" title=\"WordPress\"></a>WordPress</h2><p>ขั้นแรก ติดตั้งปลั๊กอิน <code>hexo-migrator-wordpress</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-wordpress --save</span><br></pre></td></tr></table></figure>\n<p>นำไซตื WordPress ของคุณออกไปได้ด้วยการตั้งค่า “Tools” → “Export” →<br>“WordPress”  ใน dashboard ของ WordPress (สำหรับข้อมูลเพิ่มเติมไปดูที่ <a href=\"http://en.support.wordpress.com/export/\" target=\"_blank\" rel=\"noopener\">WordPress support page</a>)</p>\n<p>แล้วรัน:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate wordpress &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p><code>source</code>  เป็น  path ของไฟล์หรือ URL ของไฟล์ท่ี  WordPress ท่ีส่งออกมา</p>\n<h2 id=\"Joomla\"><a href=\"#Joomla\" class=\"headerlink\" title=\"Joomla\"></a>Joomla</h2><p>ขั้นแรก ติดตั้งปลั๊กอิน <code>hexo-migrator-joomla</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-joomla --save</span><br></pre></td></tr></table></figure>\n<p>นำออกบทความ Joomla ของคุณได้โดยใช้ component  <a href=\"http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D\" target=\"_blank\" rel=\"noopener\">J2XML</a></p>\n<p>แล้วรัน:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate joomla &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p><code>source</code>  เป็น  path ของไฟล์หรือ URL ของไฟล์ท่ี  Joomla ท่ีส่งออกมา</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69y005fkoeoikp6cjqq",
				"title": "Internationalization (i18n)",
				"markdown": "คุณสามารถใช้ internationalization มาโชว์ไซต์ของคุณด้วยภาษาต่างๆ ภาษา dafault \nของไซต์นั้นแก้ไขได้ใน  `language` ของ `_config.yml` \nคุณยังตั้งค่าหลายภาษาและแก้ไขลำดับของภาษา default ได้เช่นกัน\n\n``` yaml\nlanguage: zh-tw\n\nlanguage:\n- zh-tw\n- en\n```\n\n### Language Files\n\nไฟล์ของภาษาจะเป็นไฟล์ YAML หรือ JSON คุณต้องไลฟ์เหล่านี้อยู่ใน folder \n`language` ของธีม สำหรับข้อมูลเพิ่มเติมของไฟล์ภาษา ไปดูได้ท่ี [printf format](https://github.com/alexei/sprintf.js)\n\n### Templates\n\nคุณใช้ helper ของ `__` หรือ `_p` ใน template ได้เพื่อได้  string ท่ีแปลมาแล้ว\n ตัวแรกใช้ในกรณีทางการ ส่วนตัวหลังใช้ในกรณีท่ีมีหลาย string ยกตัวอย่างเช่น：\n、\n``` yaml en.yml\nindex:\n  title: Home\n  add: Add\n  video:\n    zero: No videos\n    one: One video\n    other: %d videos\n```\n\n``` js\n<%= __('index.title') %>\n// Home\n\n<%= _p('index.video', 3) %>\n// 3 videos\n```\n\n### Path\n\nคุณสามารถตั้งค่าภาษาของเพจได้ใน front-matter หรือแก้ไขการตั้งค่า  `i18n_dir` \nได้ใน `_config.yml` เพื่อ enable การเฝ้าดูไฟล์ของ hexo\n\n``` yaml\ni18n_dir: :lang\n```\n\ndefault value ของการตั้งค่า  `i18n_dir` คือ `:lang` ซึ่งหมายความว่า hexo \nจะสืบค้นภาษาท่ีอยู่ใน segment ตัวแรกของ URL ยกตัวอย่างเช่น：\n\n\n``` plain\n/index.html => en\n/archives/index.html => en\n/zh-tw/index.html => zh-tw\n```\n\nstring นั้นจะมีผลได้ในแต่กรณีท่ีไลฟ์ภาษานั้นมีอยู่จริงๆ ดังนั้น `archives` ใน\n `/archives/index.html` (ตัวอย่างท่ีสอง) จะไม่เกิดผลในการตั้งค่าภาษาของเว็บไซต์\n\n\n",
				"html": "<p>คุณสามารถใช้ internationalization มาโชว์ไซต์ของคุณด้วยภาษาต่างๆ ภาษา dafault<br>ของไซต์นั้นแก้ไขได้ใน  <code>language</code> ของ <code>_config.yml</code><br>คุณยังตั้งค่าหลายภาษาและแก้ไขลำดับของภาษา default ได้เช่นกัน</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-tw</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">language:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">zh-tw</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Language-Files\"><a href=\"#Language-Files\" class=\"headerlink\" title=\"Language Files\"></a>Language Files</h3><p>ไฟล์ของภาษาจะเป็นไฟล์ YAML หรือ JSON คุณต้องไลฟ์เหล่านี้อยู่ใน folder<br><code>language</code> ของธีม สำหรับข้อมูลเพิ่มเติมของไฟล์ภาษา ไปดูได้ท่ี <a href=\"https://github.com/alexei/sprintf.js\" target=\"_blank\" rel=\"noopener\">printf format</a></p>\n<h3 id=\"Templates\"><a href=\"#Templates\" class=\"headerlink\" title=\"Templates\"></a>Templates</h3><p>คุณใช้ helper ของ <code>__</code> หรือ <code>_p</code> ใน template ได้เพื่อได้  string ท่ีแปลมาแล้ว<br> ตัวแรกใช้ในกรณีทางการ ส่วนตัวหลังใช้ในกรณีท่ีมีหลาย string ยกตัวอย่างเช่น：<br>、<br><figure class=\"highlight yaml\"><figcaption><span>en.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">index:</span></span><br><span class=\"line\"><span class=\"attr\">  title:</span> <span class=\"string\">Home</span></span><br><span class=\"line\"><span class=\"attr\">  add:</span> <span class=\"string\">Add</span></span><br><span class=\"line\"><span class=\"attr\">  video:</span></span><br><span class=\"line\"><span class=\"attr\">    zero:</span> <span class=\"literal\">No</span> <span class=\"string\">videos</span></span><br><span class=\"line\"><span class=\"attr\">    one:</span> <span class=\"string\">One</span> <span class=\"string\">video</span></span><br><span class=\"line\"><span class=\"attr\">    other:</span> <span class=\"string\">%d</span> <span class=\"string\">videos</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%= __(<span class=\"string\">'index.title'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Home</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%= _p(<span class=\"string\">'index.video'</span>, <span class=\"number\">3</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 3 videos</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Path\"><a href=\"#Path\" class=\"headerlink\" title=\"Path\"></a>Path</h3><p>คุณสามารถตั้งค่าภาษาของเพจได้ใน front-matter หรือแก้ไขการตั้งค่า  <code>i18n_dir</code><br>ได้ใน <code>_config.yml</code> เพื่อ enable การเฝ้าดูไฟล์ของ hexo</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">i18n_dir:</span> <span class=\"string\">:lang</span></span><br></pre></td></tr></table></figure>\n<p>default value ของการตั้งค่า  <code>i18n_dir</code> คือ <code>:lang</code> ซึ่งหมายความว่า hexo<br>จะสืบค้นภาษาท่ีอยู่ใน segment ตัวแรกของ URL ยกตัวอย่างเช่น：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">/index.html =&gt; en</span><br><span class=\"line\">/archives/index.html =&gt; en</span><br><span class=\"line\">/zh-tw/index.html =&gt; zh-tw</span><br></pre></td></tr></table></figure>\n<p>string นั้นจะมีผลได้ในแต่กรณีท่ีไลฟ์ภาษานั้นมีอยู่จริงๆ ดังนั้น <code>archives</code> ใน<br> <code>/archives/index.html</code> (ตัวอย่างท่ีสอง) จะไม่เกิดผลในการตั้งค่าภาษาของเว็บไซต์</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69y005gkoeo8dkm69i6",
				"title": "Permalinks",
				"markdown": "คุณสามารถตั้งค่า permalink ของเว็บไซตืตนในไฟล์ `_config.yml` หรือใน \nfront-matter ของทุกโพสต์\n\n### Variables\n\nนอกจาก variable  ต่อไป คุณสามารถตั้งค่า attribute ใดๆ ใน permalink ได้เช่นกัน\n\nVariable | Description\n--- | ---\n`:year` | Published year of posts (4-digit)\n`:month` | Published month of posts (2-digit)\n`:i_month` | Published month of posts (Without leading zeros)\n`:day` | Published day of posts (2-digit)\n`:i_day` | Published day of posts (Without leading zeros)\n`:title` | Filename\n`:post_title` | Post title\n`:id` | Post ID\n`:category` | Categories. If the post is uncategorized, it will use the `default_category` value.\n\nตุณสามารถตั้งค่า default value ของทุก variable ใน permalink โดยตั้งค่า \n`permalink_defaults`:\n\n``` yaml\npermalink_defaults:\n  lang: en\n```\n\n### Examples\n\n โพสต์ท่ีมีชื่อว่า `hello-world.md` ใน  folder `source/_posts` จะมีเนื่อหาต่อไป \n\n``` yaml\ntitle: Hello World\ndate: 2013-07-14 17:01:34\ncategories:\n- foo\n- bar\n```\n\nSetting | Result\n--- | ---\n`:year/:month/:day/:title/` | 2013/07/14/hello-world\n`:year-:month-:day-:title.html` | 2013-07-14-hello-world.html\n`:category/:title` | foo/bar/hello-world\n\n### Multi-language Support\n\nเมื่อสร้างเว็บไซต์ท่ีสนับสนุนหลายภาษา คุณสามารถแก้ไขการตั้งค่า  \n`new_post_name` และ  `permalink` อย่างนี้:\n\n``` yaml\nnew_post_name: :lang/:title.md\npermalink: :lang/:title/\n```\n\nเมื่อคุณสร้างโพสต์ใหม่ออกมา โพสต์นั้นจะถูกบันทึกไปถึง:\n\n``` bash\n$ hexo new \"Hello World\" --lang tw\n# => source/_posts/tw/Hello-World.md\n```\n\nและ URL จะเป็นอย่างนี้:\n\n``` plain\nhttp://localhost:4000/tw/hello-world/\n```\n",
				"html": "<p>คุณสามารถตั้งค่า permalink ของเว็บไซตืตนในไฟล์ <code>_config.yml</code> หรือใน<br>front-matter ของทุกโพสต์</p>\n<h3 id=\"Variables\"><a href=\"#Variables\" class=\"headerlink\" title=\"Variables\"></a>Variables</h3><p>นอกจาก variable  ต่อไป คุณสามารถตั้งค่า attribute ใดๆ ใน permalink ได้เช่นกัน</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year</code></td>\n<td>Published year of posts (4-digit)</td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>Published month of posts (2-digit)</td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>Published month of posts (Without leading zeros)</td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>Published day of posts (2-digit)</td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>Published day of posts (Without leading zeros)</td>\n</tr>\n<tr>\n<td><code>:title</code></td>\n<td>Filename</td>\n</tr>\n<tr>\n<td><code>:post_title</code></td>\n<td>Post title</td>\n</tr>\n<tr>\n<td><code>:id</code></td>\n<td>Post ID</td>\n</tr>\n<tr>\n<td><code>:category</code></td>\n<td>Categories. If the post is uncategorized, it will use the <code>default_category</code> value.</td>\n</tr>\n</tbody>\n</table>\n<p>ตุณสามารถตั้งค่า default value ของทุก variable ใน permalink โดยตั้งค่า<br><code>permalink_defaults</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">permalink_defaults:</span></span><br><span class=\"line\"><span class=\"attr\">  lang:</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><p> โพสต์ท่ีมีชื่อว่า <code>hello-world.md</code> ใน  folder <code>source/_posts</code> จะมีเนื่อหาต่อไป </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"bullet\">-07</span><span class=\"bullet\">-14</span> <span class=\"number\">17</span><span class=\"string\">:01:34</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">foo</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">bar</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year/:month/:day/:title/</code></td>\n<td>2013/07/14/hello-world</td>\n</tr>\n<tr>\n<td><code>:year-:month-:day-:title.html</code></td>\n<td>2013-07-14-hello-world.html</td>\n</tr>\n<tr>\n<td><code>:category/:title</code></td>\n<td>foo/bar/hello-world</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Multi-language-Support\"><a href=\"#Multi-language-Support\" class=\"headerlink\" title=\"Multi-language Support\"></a>Multi-language Support</h3><p>เมื่อสร้างเว็บไซต์ท่ีสนับสนุนหลายภาษา คุณสามารถแก้ไขการตั้งค่า<br><code>new_post_name</code> และ  <code>permalink</code> อย่างนี้:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:lang/:title.md</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:lang/:title/</span></span><br></pre></td></tr></table></figure>\n<p>เมื่อคุณสร้างโพสต์ใหม่ออกมา โพสต์นั้นจะถูกบันทึกไปถึง:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"Hello World\"</span> --lang tw</span><br><span class=\"line\"><span class=\"comment\"># =&gt; source/_posts/tw/Hello-World.md</span></span><br></pre></td></tr></table></figure>\n<p>และ URL จะเป็นอย่างนี้:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://localhost:4000/tw/hello-world/</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69y005hkoeoeywcxjsm",
				"title": "Plugins",
				"markdown": "hexo มีระบบปลั๊กอินท่ีมีประสิทธิภาพ ซึ่งทำให้มันง่ายท่ีจะขยาย function ต่างๆโดยไม่ต้องแก้ไข source code ของ module สำคัญ ใน hexo \nมีปลั๊กอินสองอย่างทั้งหมด：\n\n### Script\n\nถ้าปลั๊กอินของคุณไม่ซับซ้อนเท่าไร การท่ีคุณต้องทำคือวางไฟล์ JavaScript \nของคุณอยู่ใน folder `script` เท่านั้น  hexo จะโหลดไฟล์นั้นในช่วง initialization \n\n### Plugin\nถ้า code ของคุณค่อนข้างซับซ้อน หรือคุณอยากไปประกาศท่ี NPM registry คุณใช้ \ncode เหล่านี้ในแบบปลั๊กอินจะสะดวกกว่า ชื่อของ folder นี้ต้องมี `hexo-` \nเป็นคำนำหน้า ไม่งั้นจะถูก hexo ละเลย \n\nfolder ใหม่ของคุณต้องการมีไฟล์อย่างน้อยสองอย่าง: อย่างหนึ่งเป็นไฟล์ท่ีรวม \nJavaScript code ของตน และอีกอย่างหนึ่งเป็นไฟล์ `package.json` \nท่ีเขียนเจตนาการสร้างปลั๊กอินนี้และ dependency ของมัน\n\n``` plain\n.\n├── index.js\n└── package.json\n```\n\nในช่วงแรกๆ คุณต้องตั้งค่า entry ของ `name` `version` และ `main` ในไฟล์ \n`package.json` ยกตัวอย่างเชน:\n\n``` json package.json\n{\n  \"name\": \"hexo-my-plugin\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index\"\n}\n```\n\nคุณยังต้องเขียนชื่อปลั๊กอินของตนเป็น dependency ในไฟล์  `package.json` ท่ีเป็น root ของ hexo ดังนั้น  hexo จะได้สืบค้นและโหลดปลั๊กอินนี้\n\n### Tools\n\nคุณสามารถใช้ประโยชน์จากเครื่องมือทางการท่ีสนับสนุนโดย hexo \nเพื่อเพิ่มความเร็วของ development：\n\n- [hexo-fs]：File IO\n- [hexo-util]：Utilities\n- [hexo-i18n]：Localization (i18n)\n- [hexo-pagination]：Generate pagination data\n\n### Publishing\n\nเมื่อปลั๊กอินของคุณพร้อมแล้ว คุณอาจจะคิดท่ีจะประกาศมันไปถึง [plugin list]\n(/plugins) เพื่อชวนคนอื่นมาใช้ การประกาศปลั๊กอินของตนจะคล้ายกับ [updating documentation](contributing.html#Updating_Documentation)\n1. Fork [hexojs/site]\n2. Clone the repository to your computer and install dependencies.\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. Edit `source/_data/plugins.yml` and add your plugin. For example:\n\n    {% code %}\n    - name: hexo-server\n      description: Server module for Hexo.\n      link: https://github.com/hexojs/hexo-server\n      tags:\n        - official\n        - server\n        - console\n    {% endcode %}\n\n4. Push the branch.\n5. Create a pull request and describe the change.\n\n[hexo-fs]: https://github.com/hexojs/hexo-fs\n[hexo-util]: https://github.com/hexojs/hexo-util\n[hexo-i18n]: https://github.com/hexojs/hexo-i18n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<p>hexo มีระบบปลั๊กอินท่ีมีประสิทธิภาพ ซึ่งทำให้มันง่ายท่ีจะขยาย function ต่างๆโดยไม่ต้องแก้ไข source code ของ module สำคัญ ใน hexo<br>มีปลั๊กอินสองอย่างทั้งหมด：</p>\n<h3 id=\"Script\"><a href=\"#Script\" class=\"headerlink\" title=\"Script\"></a>Script</h3><p>ถ้าปลั๊กอินของคุณไม่ซับซ้อนเท่าไร การท่ีคุณต้องทำคือวางไฟล์ JavaScript<br>ของคุณอยู่ใน folder <code>script</code> เท่านั้น  hexo จะโหลดไฟล์นั้นในช่วง initialization </p>\n<h3 id=\"Plugin\"><a href=\"#Plugin\" class=\"headerlink\" title=\"Plugin\"></a>Plugin</h3><p>ถ้า code ของคุณค่อนข้างซับซ้อน หรือคุณอยากไปประกาศท่ี NPM registry คุณใช้<br>code เหล่านี้ในแบบปลั๊กอินจะสะดวกกว่า ชื่อของ folder นี้ต้องมี <code>hexo-</code><br>เป็นคำนำหน้า ไม่งั้นจะถูก hexo ละเลย </p>\n<p>folder ใหม่ของคุณต้องการมีไฟล์อย่างน้อยสองอย่าง: อย่างหนึ่งเป็นไฟล์ท่ีรวม<br>JavaScript code ของตน และอีกอย่างหนึ่งเป็นไฟล์ <code>package.json</code><br>ท่ีเขียนเจตนาการสร้างปลั๊กอินนี้และ dependency ของมัน</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── index.js</span><br><span class=\"line\">└── package.json</span><br></pre></td></tr></table></figure>\n<p>ในช่วงแรกๆ คุณต้องตั้งค่า entry ของ <code>name</code> <code>version</code> และ <code>main</code> ในไฟล์<br><code>package.json</code> ยกตัวอย่างเชน:</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-my-plugin\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>คุณยังต้องเขียนชื่อปลั๊กอินของตนเป็น dependency ในไฟล์  <code>package.json</code> ท่ีเป็น root ของ hexo ดังนั้น  hexo จะได้สืบค้นและโหลดปลั๊กอินนี้</p>\n<h3 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h3><p>คุณสามารถใช้ประโยชน์จากเครื่องมือทางการท่ีสนับสนุนโดย hexo<br>เพื่อเพิ่มความเร็วของ development：</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-fs\" target=\"_blank\" rel=\"noopener\">hexo-fs</a>：File IO</li>\n<li><a href=\"https://github.com/hexojs/hexo-util\" target=\"_blank\" rel=\"noopener\">hexo-util</a>：Utilities</li>\n<li><a href=\"https://github.com/hexojs/hexo-i18n\" target=\"_blank\" rel=\"noopener\">hexo-i18n</a>：Localization (i18n)</li>\n<li><a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a>：Generate pagination data</li>\n</ul>\n<h3 id=\"Publishing\"><a href=\"#Publishing\" class=\"headerlink\" title=\"Publishing\"></a>Publishing</h3><p>เมื่อปลั๊กอินของคุณพร้อมแล้ว คุณอาจจะคิดท่ีจะประกาศมันไปถึง [plugin list]<br>(/plugins) เพื่อชวนคนอื่นมาใช้ การประกาศปลั๊กอินของตนจะคล้ายกับ <a href=\"contributing.html#Updating_Documentation\">updating documentation</a></p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Edit <code>source/_data/plugins.yml</code> and add your plugin. For example:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">- name: hexo-server</span><br><span class=\"line\">  description: Server module for Hexo.</span><br><span class=\"line\">  link: https://github.com/hexojs/hexo-server</span><br><span class=\"line\">  tags:</span><br><span class=\"line\">    - official</span><br><span class=\"line\">    - server</span><br><span class=\"line\">    - console</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Push the branch.</p>\n</li>\n<li>Create a pull request and describe the change.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69z005ikoeoa5t5gs6m",
				"title": "Server",
				"markdown": "## [hexo-server]\n\nด้วยการประกาศของ hexo 3   เซิร์ฟเวอร์ถูกย้ายออกมากจาก module หลัก คุณต้องการติดตั้ง [hexo-server] ก่อนการเริ่มใช้เซิร์ฟเวอร์\n\n``` bash\n$ npm install hexo-server --save\n```\n\nเมื่อติดตั้งเซิร์ฟเวอร์แล้ว รันคำสั่งต่อไปเพื่อเริ่มใช้เซิร์ฟเวอร์ \nเว็บไซต์ของคุณจะรันอยู่ท่ี `http://localhost:4000` by default \nเมื่อเซิร์ฟเวอร์รันอยู่ hexo จะเฝ้าดูการเปลี่ยนแปลงของไฟล์และอัปเดทโดยอัตโนมัติ ดังนั้นจะไม่ต้องเปิดใหม่ด้วยตน\n\n``` bash\n$ hexo server\n```\n\nIf you want to change the port or if you're encountering `EADDRINUSE` errors, use the `-p` option to set a different port.\nถ้าคุณอยากเปลี่ยน port หรือพบข้อผิดพลาดว่า `EADDRINUSE` ใช้ตัวเลือก `-p` ไปตั้งค่าเป็น port อื่น\n\n``` bash\n$ hexo server -p 5000\n```\n\n### Static Mode\n\nในโหมดคงที่  ระบบจะเฝ้าดูแต่ไฟล์ท่ีอยู่ใน folder `public` \nเท่านั้นและไม่เฝ้าดูไฟล์อื่นๆ คุณต้องรันคำสั่ง `hexo generate` \nก่อนเปิดเซิร์ฟเวอร์ โหลดนี้ปกติใช้แต่ในกรณี production\n\n``` bash\n$ hexo server -s\n```\n\n### Custom IP\n\nhexo รันเซิร์ฟเวอร์อยู่ท่ี `0.0.0.0` by default คุณสามารถเปลียนการตั้งค่า IP default นี้\n\n``` bash\n$ hexo server -i 192.168.1.1\n```\n\n## Pow\n\n[Pow] เป็นเซร์ฟเวอร์ rack ท่ี zero-config สำหรับ mac\n\n### Install\n\n``` bash\n$ curl get.pow.cx | sh\n```\n\n### Setup\n\nsymlink folder เข้า `~/.pow`\n\n``` bash\n$ cd ~/.pow\n$ ln -s /path/to/myapp\n```\n\nเว็บไซต์ของคุณจะรันอยุ่ท่ี `http://myapp.test` URL นั้นจะอยู่บน symlink \nท่ีตั้งขึ้นมา\n\n[hexo-server]: https://github.com/hexojs/hexo-server\n[Pow]: http://pow.cx/\n",
				"html": "<h2 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo-server\"></a><a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a></h2><p>ด้วยการประกาศของ hexo 3   เซิร์ฟเวอร์ถูกย้ายออกมากจาก module หลัก คุณต้องการติดตั้ง <a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a> ก่อนการเริ่มใช้เซิร์ฟเวอร์</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure>\n<p>เมื่อติดตั้งเซิร์ฟเวอร์แล้ว รันคำสั่งต่อไปเพื่อเริ่มใช้เซิร์ฟเวอร์<br>เว็บไซต์ของคุณจะรันอยู่ท่ี <code>http://localhost:4000</code> by default<br>เมื่อเซิร์ฟเวอร์รันอยู่ hexo จะเฝ้าดูการเปลี่ยนแปลงของไฟล์และอัปเดทโดยอัตโนมัติ ดังนั้นจะไม่ต้องเปิดใหม่ด้วยตน</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>If you want to change the port or if you’re encountering <code>EADDRINUSE</code> errors, use the <code>-p</code> option to set a different port.<br>ถ้าคุณอยากเปลี่ยน port หรือพบข้อผิดพลาดว่า <code>EADDRINUSE</code> ใช้ตัวเลือก <code>-p</code> ไปตั้งค่าเป็น port อื่น</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h3 id=\"Static-Mode\"><a href=\"#Static-Mode\" class=\"headerlink\" title=\"Static Mode\"></a>Static Mode</h3><p>ในโหมดคงที่  ระบบจะเฝ้าดูแต่ไฟล์ท่ีอยู่ใน folder <code>public</code><br>เท่านั้นและไม่เฝ้าดูไฟล์อื่นๆ คุณต้องรันคำสั่ง <code>hexo generate</code><br>ก่อนเปิดเซิร์ฟเวอร์ โหลดนี้ปกติใช้แต่ในกรณี production</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -s</span><br></pre></td></tr></table></figure>\n<h3 id=\"Custom-IP\"><a href=\"#Custom-IP\" class=\"headerlink\" title=\"Custom IP\"></a>Custom IP</h3><p>hexo รันเซิร์ฟเวอร์อยู่ท่ี <code>0.0.0.0</code> by default คุณสามารถเปลียนการตั้งค่า IP default นี้</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -i 192.168.1.1</span><br></pre></td></tr></table></figure>\n<h2 id=\"Pow\"><a href=\"#Pow\" class=\"headerlink\" title=\"Pow\"></a>Pow</h2><p><a href=\"http://pow.cx/\" target=\"_blank\" rel=\"noopener\">Pow</a> เป็นเซร์ฟเวอร์ rack ท่ี zero-config สำหรับ mac</p>\n<h3 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl get.pow.cx | sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"Setup\"><a href=\"#Setup\" class=\"headerlink\" title=\"Setup\"></a>Setup</h3><p>symlink folder เข้า <code>~/.pow</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/.pow</span><br><span class=\"line\">$ ln -s /path/to/myapp</span><br></pre></td></tr></table></figure>\n<p>เว็บไซต์ของคุณจะรันอยุ่ท่ี <code>http://myapp.test</code> URL นั้นจะอยู่บน symlink<br>ท่ีตั้งขึ้นมา</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69z005jkoeowjaerhyc",
				"title": "Setup",
				"markdown": "\n{% youtube 0m2HnATkHOk %}\n\nเมื่อติดตั้ง hexo แล้ว รันคำสั่งต่อไปเพื่อ initialise hexo ใน `<folder>`\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\nเมื่อเสร็จการ initialization โครงสร้าง folder ของ project คุณจะเป็นอย่างนี้:\n\n``` plain\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\nไฟล์ของไซต์ [configuration](configuration.html)  คุณสามารถตั้งค่ามากขึ้น ณ \nท่ีนี้\n\n### package.json\n\nข้อมูลของแอป. renderer ของ [EJS](http://embeddedjs.com/)  [Stylus](http://learnboost.github.io/stylus/) และ  [Markdown](http://daringfireball.net/projects/markdown/) \nจะติดตั้ง by default คุณสามารถลยออก renderer พวกนี้ได้ในเวลาภายหลัง\n\n``` json package.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### scaffolds\n\nfolder [Scaffold](writing.html#Scaffolds) เมื่อคุณสร้างโพสต์ใหม่ขึ้นมา hexo \nจะเรียงข้อมูลไฟล์ตาม folder นี้\n\n\n### source\n\n\nsource folder. ท่ีนี้เป็นท่ีวางเนื้อหาเว็บไซต์ของคุณ hexo \nละเลยไฟล์ท่ีถูกซ่อนหรือ folder ท่ีมี `_` เป็นคำนำหน้าในชื่อไฟล์ (นอกจาก \nfolder `_posts`)  ไฟล์ท่ี renderable (เช่น Markdown และ HTML) \nจะถูกจถูกจัดการและใส่เข้า folder `public` ในเมื่อไฟล์อื่นๆจะถูก copy เท่านั้น\n\n\n### themes\n\nfolder [Theme](themes.html)  hexo generate เว็บไซต์คงที่ด้วยผสมเนื่อหาของไซต์กับธีม\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/0m2HnATkHOk\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>เมื่อติดตั้ง hexo แล้ว รันคำสั่งต่อไปเพื่อ initialise hexo ใน <code>&lt;folder&gt;</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>เมื่อเสร็จการ initialization โครงสร้าง folder ของ project คุณจะเป็นอย่างนี้:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>ไฟล์ของไซต์ <a href=\"configuration.html\">configuration</a>  คุณสามารถตั้งค่ามากขึ้น ณ<br>ท่ีนี้</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>ข้อมูลของแอป. renderer ของ <a href=\"http://embeddedjs.com/\" target=\"_blank\" rel=\"noopener\">EJS</a>  <a href=\"http://learnboost.github.io/stylus/\" target=\"_blank\" rel=\"noopener\">Stylus</a> และ  <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a><br>จะติดตั้ง by default คุณสามารถลยออก renderer พวกนี้ได้ในเวลาภายหลัง</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-site\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"private\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"hexo\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-archive\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-category\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-index\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-tag\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-ejs\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-stylus\"</span>: <span class=\"string\">\"^0.2.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-marked\"</span>: <span class=\"string\">\"^0.2.4\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-server\"</span>: <span class=\"string\">\"^0.1.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p>folder <a href=\"writing.html#Scaffolds\">Scaffold</a> เมื่อคุณสร้างโพสต์ใหม่ขึ้นมา hexo<br>จะเรียงข้อมูลไฟล์ตาม folder นี้</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>source folder. ท่ีนี้เป็นท่ีวางเนื้อหาเว็บไซต์ของคุณ hexo<br>ละเลยไฟล์ท่ีถูกซ่อนหรือ folder ท่ีมี <code>_</code> เป็นคำนำหน้าในชื่อไฟล์ (นอกจาก<br>folder <code>_posts</code>)  ไฟล์ท่ี renderable (เช่น Markdown และ HTML)<br>จะถูกจถูกจัดการและใส่เข้า folder <code>public</code> ในเมื่อไฟล์อื่นๆจะถูก copy เท่านั้น</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p>folder <a href=\"themes.html\">Theme</a>  hexo generate เว็บไซต์คงที่ด้วยผสมเนื่อหาของไซต์กับธีม</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69z005kkoeot5uc2hv5",
				"title": "Templates",
				"markdown": "template ให้คำนิยามของรูปแบบการโชว์เนื้อหาของแว็บไซต์คุณโดยตั้งค่าว่าทุกเพจของคุณต้องดูเป็นยังไง ตารางต่อไปเป็น template ท่ีเกี่ยวข้องของทุกเพจท่ีมีอยู่ในไซต์ของคุณ ธีมอันหนึ่งนั้นอย่างน้อยต้องมี template `index` รวมอยู่ด้วย\n\n{% youtube mb65bQ4iUc4 %}\n\nTemplate | Page | Fallback\n--- | --- | ---\n`index` | Home page |\n`post` | Posts | `index`\n`page` | Pages | `index`\n`archive` | Archives | `index`\n`category` | Category archives | `archive`\n`tag` | Tag archives | `archive`\n\n## Layouts\n\nเมื่อเพจต่างๆนั้นแชร์โครงสร้างท่ีคล้ายกัน - เช่น ถ้าสอง template นั้นล้วนมีทั้ง\n header และ footer - คุณสามารถใช้ `layout` \n ไปตั้งค่าให้เพจต่างๆในครั้งเดียวได้ ทุกไฟล์ layout ต้องมี variable `body` \n รวมอยู่ด้วย ยกตัวอย่างเช่น:\n\n``` html index.ejs\nindex\n```\n\n``` html layout.ejs\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n```\n\nyields:\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>index</body>\n</html>\n```\n\ntemplate `layout` จะถูกใช้โดย template อื่นๆ ทั้งหมด \nคุณสามารถตั้งค่าเพิ่มขึ้นใน front-matter หรือตั้งค่าเป็น `false` เพื่อ \ndisable template `layout`  \nนอกจากนี้แล้วคุณยังสามารถสร้างโครงสร้างท่ีซับซ้อนขึ้นและรังอยู่ใต้ template \nด้านบนสุด\n\n## Partials\n\npartial ใช้มาเป็น  component ท่ีแชว์ได้ระหว่าง template ต่างๆของคุณ \nตัวอย่างทั่วไปคือ header footer และ sidebar คุณอาจจะอยากวาง partial \nใรไฟล์ท่ีแตกต่างกันเพื่อทำให้การรักษาแว็บไซต์ของคุณสะดวกขึ้น ยกตัวอย่างเช่น:\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\nyields:\n\n``` html\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n```\n\n## Local Variables\n\nคุณสามารถให้คำนิยามแต่ local variable ใน template และใช้ local variable \nเหล่านี้ใน template  อื่นๆ\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\nyields:\n\n``` html\n<h1 id=\"logo\">Hello World</h1>\n<div id=\"content\">Home page</div>\n```\n\n## Optimization\n\nถ้าธีมของคุณซับซ้อนเกินไปหรือจำนวนไฟล์ท่ีต้อง generate มากเกินไป \nประสิทธิภาพของการ generate ไฟล์ ของ hexo จะลดให้ต่ำกว่าปกติเป็นอย่างมาก \nเพื่อแก้ไขปัญหานี้ คุณต้องลดความซับซ้อนของ code หรือลองใช้ Fragment Caching \nซึ่งได้แนะนำแล้วใน hexo 2.7\n\nคุณลักษณะนี้ยืมมาจาก [Ruby on Rails](http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching) \ncode น้ั้นจะบันทึกไว้เป็น fragment และ fragment นั้นจะถูก cach ให้เมื่อ \nrequest ท่ีเพิ่มเติมขึ้นถูกเรียก ดั้งนั้นจะได้ลดจำนวน query ของ database  \nและเพิ่มความเร็วของ generation ไฟล์\n\ncaching ของ fragment จะเหมาะสมท่ีสุดกับ header footer sidebar \nหรือเนื้อหาคงท่ีอื่นๆ ยกตัวอย่างเช่น:\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\nแม้ว่่าการใช้ partial จะง่ายกว่า:\n\n``` js\n<%- partial('header', {}, {cache: true});\n```\n\nเมื่อเปิดใช้ `relative_link` แล้วกรุณาอย่าใช้ fragment caching \nเพราะว่ามันจะทำให้ issue เกิดขึ้นและ relative link \nจะแตกต่างกับเพจจริงๆท่ีมันชี้ให้\n",
				"html": "<p>template ให้คำนิยามของรูปแบบการโชว์เนื้อหาของแว็บไซต์คุณโดยตั้งค่าว่าทุกเพจของคุณต้องดูเป็นยังไง ตารางต่อไปเป็น template ท่ีเกี่ยวข้องของทุกเพจท่ีมีอยู่ในไซต์ของคุณ ธีมอันหนึ่งนั้นอย่างน้อยต้องมี template <code>index</code> รวมอยู่ด้วย</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/mb65bQ4iUc4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<table>\n<thead>\n<tr>\n<th>Template</th>\n<th>Page</th>\n<th>Fallback</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>index</code></td>\n<td>Home page</td>\n<td></td>\n</tr>\n<tr>\n<td><code>post</code></td>\n<td>Posts</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>Pages</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>archive</code></td>\n<td>Archives</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>Category archives</td>\n<td><code>archive</code></td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td>Tag archives</td>\n<td><code>archive</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Layouts\"><a href=\"#Layouts\" class=\"headerlink\" title=\"Layouts\"></a>Layouts</h2><p>เมื่อเพจต่างๆนั้นแชร์โครงสร้างท่ีคล้ายกัน - เช่น ถ้าสอง template นั้นล้วนมีทั้ง<br> header และ footer - คุณสามารถใช้ <code>layout</code><br> ไปตั้งค่าให้เพจต่างๆในครั้งเดียวได้ ทุกไฟล์ layout ต้องมี variable <code>body</code><br> รวมอยู่ด้วย ยกตัวอย่างเช่น:</p>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">index</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>template <code>layout</code> จะถูกใช้โดย template อื่นๆ ทั้งหมด<br>คุณสามารถตั้งค่าเพิ่มขึ้นใน front-matter หรือตั้งค่าเป็น <code>false</code> เพื่อ<br>disable template <code>layout</code><br>นอกจากนี้แล้วคุณยังสามารถสร้างโครงสร้างท่ีซับซ้อนขึ้นและรังอยู่ใต้ template<br>ด้านบนสุด</p>\n<h2 id=\"Partials\"><a href=\"#Partials\" class=\"headerlink\" title=\"Partials\"></a>Partials</h2><p>partial ใช้มาเป็น  component ท่ีแชว์ได้ระหว่าง template ต่างๆของคุณ<br>ตัวอย่างทั่วไปคือ header footer และ sidebar คุณอาจจะอยากวาง partial<br>ใรไฟล์ท่ีแตกต่างกันเพื่อทำให้การรักษาแว็บไซต์ของคุณสะดวกขึ้น ยกตัวอย่างเช่น:</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>') %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>My Site<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Local-Variables\"><a href=\"#Local-Variables\" class=\"headerlink\" title=\"Local Variables\"></a>Local Variables</h2><p>คุณสามารถให้คำนิยามแต่ local variable ใน template และใช้ local variable<br>เหล่านี้ใน template  อื่นๆ</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>', &#123;<span class=\"attr\">title:</span> '<span class=\"attr\">Hello</span> <span class=\"attr\">World</span>'&#125;) %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Optimization\"><a href=\"#Optimization\" class=\"headerlink\" title=\"Optimization\"></a>Optimization</h2><p>ถ้าธีมของคุณซับซ้อนเกินไปหรือจำนวนไฟล์ท่ีต้อง generate มากเกินไป<br>ประสิทธิภาพของการ generate ไฟล์ ของ hexo จะลดให้ต่ำกว่าปกติเป็นอย่างมาก<br>เพื่อแก้ไขปัญหานี้ คุณต้องลดความซับซ้อนของ code หรือลองใช้ Fragment Caching<br>ซึ่งได้แนะนำแล้วใน hexo 2.7</p>\n<p>คุณลักษณะนี้ยืมมาจาก <a href=\"http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\" target=\"_blank\" rel=\"noopener\">Ruby on Rails</a><br>code น้ั้นจะบันทึกไว้เป็น fragment และ fragment นั้นจะถูก cach ให้เมื่อ<br>request ท่ีเพิ่มเติมขึ้นถูกเรียก ดั้งนั้นจะได้ลดจำนวน query ของ database<br>และเพิ่มความเร็วของ generation ไฟล์</p>\n<p>caching ของ fragment จะเหมาะสมท่ีสุดกับ header footer sidebar<br>หรือเนื้อหาคงท่ีอื่นๆ ยกตัวอย่างเช่น:<br><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>แม้ว่่าการใช้ partial จะง่ายกว่า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p>เมื่อเปิดใช้ <code>relative_link</code> แล้วกรุณาอย่าใช้ fragment caching<br>เพราะว่ามันจะทำให้ issue เกิดขึ้นและ relative link<br>จะแตกต่างกับเพจจริงๆท่ีมันชี้ให้</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y69z005lkoeoyyxabcku",
				"title": "Themes",
				"markdown": "\n{% youtube 5ROIU_9dYe4 %}\n\nการสร้างธีมของ hexo เป็นเรื่องเรียบง่าย - คุณต้องการสร้าง folder ใหม่ เพื่อเริ่มใช้ธีมของคุณ ไปแก้ไขการตั้งค่าของ `theme` ในไฟล์ `_config.yml` ธีมของ hexo จะมีโครงสร้างต่อไป:\n\n``` plain\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n### _config.yml\n\nไฟล์การตั้งค่าธีม  การแก้ไขไฟล์นี้แล้วไม่ต้องเปิดเซิร์ฟเวอร์ใหม่\n\n### languages\n\nfolder ภาษา สำหรับข้อมูลเพิ่มเติมไปดูท่ี [internationalization (i18n)](internationalization.html)\n\n### layout\n\nlayout folder. ใน folder นี้มีไฟล์ template ของธีม ซึ่งตั้งค่ารูปลักษณ์ของเว็บไซต์   hexo ใช้ [Swig] เป็น template engine by default แต่คุณเปลี่ยนเป็น engine อื่นๆได้ เช่น [EJS], [Haml], [Jade] หรือ [Pug] hexo เลือก engine ของ template ตาม extension ของไฟล์ ยกตัวอย่างเช่น:\n\n``` plain\nlayout.ejs   - uses EJS\nlayout.swig  - uses Swig\n```\n\nสำหรับข้อมูลเพิ่มเติม ไปดูที่ [templates](templates.html)\n\n### scripts\n\nfolder ของ script.  hexo  จะโหลดไฟล์ JavaScript ทั้งหมดใน folder นี้ในช่วง\ninitialization สำหรับข้อมูลเพิ่มเติม ไปดูท่ี [plugins](plugins.html)\n\n### source\n\nsource folder. คุณวางไฟล์ของตน(เช่น ไฟล์ CSS และ JavaScript)ได้ท่ีนี่ hexo \nละเลย ไฟล์ท่ีซ่อนอยู่และไฟล์ท่ีมี `_` เป็นคำนำหน้าในชื่อ\n\nhexo จะจัดการและบันทึกไฟล์ทั้งหมดท่ี renderable ไปถึง folder `public` \nส่วนไฟล์ท่ี non-renderable จะถูก copy ไปถึง folder `public` โดยตรง\n\n\n### Publishing\n\nเมื่อคุณเสร็จการสร้างธีมของตน คุณสามารถประกาศไปถึง [theme list](/themes) \nก่อนการประกาศคุณต้องรัน [theme unit test](https://github\n.com/hexojs/hexo-theme-unit-test) \nเพื่อทำให้แน่ใจว่าทุกสิ่งทุกอย่างเป็นไปได้ดี \nขั้นตอนการประกาศธีมจะคล้ายกับขั้นตอนของ [updating documentation](contributing.html#Updating_Documentation)\n\n1. Fork [hexojs/site]\n2. Clone the repository to your computer and install dependencies.\n\n    ```shell\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    ```\n\n3. Edit `source/_data/themes.yml` and add your theme. For example:\n\n    ```yaml\n    - name: landscape\n      description: A brand new default theme for Hexo.\n      link: https://github.com/hexojs/hexo-theme-landscape\n      preview: http://hexo.io/hexo-theme-landscape\n      tags:\n        - official\n        - responsive\n        - widget\n        - two_column\n        - one_column\n    ```\n\n4. Add a screenshot (with the same name as the theme) to `source/themes/screenshots`. It must be a 800*500px PNG.\n5. Push the branch.\n6. Create a pull request and describe the change.\n\n[EJS]: https://github.com/hexojs/hexo-renderer-ejs\n[Swig]: https://github.com/paularmstrong/swig\n[Haml]: https://github.com/hexojs/hexo-renderer-haml\n[Jade]: https://github.com/hexojs/hexo-renderer-jade\n[Pug]: https://github.com/maxknee/hexo-render-pug\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/5ROIU_9dYe4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>การสร้างธีมของ hexo เป็นเรื่องเรียบง่าย - คุณต้องการสร้าง folder ใหม่ เพื่อเริ่มใช้ธีมของคุณ ไปแก้ไขการตั้งค่าของ <code>theme</code> ในไฟล์ <code>_config.yml</code> ธีมของ hexo จะมีโครงสร้างต่อไป:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── languages</span><br><span class=\"line\">├── layout</span><br><span class=\"line\">├── scripts</span><br><span class=\"line\">└── source</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>ไฟล์การตั้งค่าธีม  การแก้ไขไฟล์นี้แล้วไม่ต้องเปิดเซิร์ฟเวอร์ใหม่</p>\n<h3 id=\"languages\"><a href=\"#languages\" class=\"headerlink\" title=\"languages\"></a>languages</h3><p>folder ภาษา สำหรับข้อมูลเพิ่มเติมไปดูท่ี <a href=\"internationalization.html\">internationalization (i18n)</a></p>\n<h3 id=\"layout\"><a href=\"#layout\" class=\"headerlink\" title=\"layout\"></a>layout</h3><p>layout folder. ใน folder นี้มีไฟล์ template ของธีม ซึ่งตั้งค่ารูปลักษณ์ของเว็บไซต์   hexo ใช้ <a href=\"https://github.com/paularmstrong/swig\" target=\"_blank\" rel=\"noopener\">Swig</a> เป็น template engine by default แต่คุณเปลี่ยนเป็น engine อื่นๆได้ เช่น <a href=\"https://github.com/hexojs/hexo-renderer-ejs\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"https://github.com/hexojs/hexo-renderer-haml\" target=\"_blank\" rel=\"noopener\">Haml</a>, <a href=\"https://github.com/hexojs/hexo-renderer-jade\" target=\"_blank\" rel=\"noopener\">Jade</a> หรือ <a href=\"https://github.com/maxknee/hexo-render-pug\" target=\"_blank\" rel=\"noopener\">Pug</a> hexo เลือก engine ของ template ตาม extension ของไฟล์ ยกตัวอย่างเช่น:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">layout.ejs   - uses EJS</span><br><span class=\"line\">layout.swig  - uses Swig</span><br></pre></td></tr></table></figure>\n<p>สำหรับข้อมูลเพิ่มเติม ไปดูที่ <a href=\"templates.html\">templates</a></p>\n<h3 id=\"scripts\"><a href=\"#scripts\" class=\"headerlink\" title=\"scripts\"></a>scripts</h3><p>folder ของ script.  hexo  จะโหลดไฟล์ JavaScript ทั้งหมดใน folder นี้ในช่วง<br>initialization สำหรับข้อมูลเพิ่มเติม ไปดูท่ี <a href=\"plugins.html\">plugins</a></p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>source folder. คุณวางไฟล์ของตน(เช่น ไฟล์ CSS และ JavaScript)ได้ท่ีนี่ hexo<br>ละเลย ไฟล์ท่ีซ่อนอยู่และไฟล์ท่ีมี <code>_</code> เป็นคำนำหน้าในชื่อ</p>\n<p>hexo จะจัดการและบันทึกไฟล์ทั้งหมดท่ี renderable ไปถึง folder <code>public</code><br>ส่วนไฟล์ท่ี non-renderable จะถูก copy ไปถึง folder <code>public</code> โดยตรง</p>\n<h3 id=\"Publishing\"><a href=\"#Publishing\" class=\"headerlink\" title=\"Publishing\"></a>Publishing</h3><p>เมื่อคุณเสร็จการสร้างธีมของตน คุณสามารถประกาศไปถึง <a href=\"/themes\">theme list</a><br>ก่อนการประกาศคุณต้องรัน <a href=\"https://github\n.com/hexojs/hexo-theme-unit-test\" target=\"_blank\" rel=\"noopener\">theme unit test</a><br>เพื่อทำให้แน่ใจว่าทุกสิ่งทุกอย่างเป็นไปได้ดี<br>ขั้นตอนการประกาศธีมจะคล้ายกับขั้นตอนของ <a href=\"contributing.html#Updating_Documentation\">updating documentation</a></p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> https://github.com/&lt;username&gt;/site.git</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> site</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Edit <code>source/_data/themes.yml</code> and add your theme. For example:</p>\n <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">- name:</span> <span class=\"string\">landscape</span></span><br><span class=\"line\"><span class=\"attr\">  description:</span> <span class=\"string\">A</span> <span class=\"string\">brand</span> <span class=\"string\">new</span> <span class=\"string\">default</span> <span class=\"string\">theme</span> <span class=\"string\">for</span> <span class=\"string\">Hexo.</span></span><br><span class=\"line\"><span class=\"attr\">  link:</span> <span class=\"attr\">https://github.com/hexojs/hexo-theme-landscape</span></span><br><span class=\"line\"><span class=\"attr\">  preview:</span> <span class=\"attr\">http://hexo.io/hexo-theme-landscape</span></span><br><span class=\"line\"><span class=\"attr\">  tags:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">official</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">responsive</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">widget</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">two_column</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">one_column</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Add a screenshot (with the same name as the theme) to <code>source/themes/screenshots</code>. It must be a 800*500px PNG.</p>\n</li>\n<li>Push the branch.</li>\n<li>Create a pull request and describe the change.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a0005mkoeoq6xqwmis",
				"title": "Variables",
				"markdown": "\n{% youtube T9oAax-IRw0 %}\n\n### Global Variables\n\nVariable | Description | Type\n--- | --- | ---\n`site` | Sitewide information. | `object`; see [Site Variables]\n`page` | Page specific information and custom variables set in front-matter. | `object`; see [Page Variables]\n`config` | Site configuration. | `object` (your site's _config file)\n`theme` | Theme configuration. Inherits from site configuration. | `object` (your theme's _config file)\n`_` (single underscore) | Lodash library | see [Lodash](https://lodash.com/  \"Lodash\" target=\"_blank\") documentation\n`path` | Path of current page | `string`\n`url` | Full URL of current page | `string`\n`env` | Environment variables | ???\n\n### Site Variables\n\nVariable | Description | Type\n--- | --- | ---\n`site.posts` | All posts | `array` of `post` objects\n`site.pages` | All pages | `array` of `page` objects\n`site.categories` | All categories | `array` of ???\n`site.tags` | All tags | `array` of ???\n\n### Page Variables\n\n**บทความ (`page`)**\n\nVariable | Description | Type\n--- | --- | ---\n`page.title` | Article title | `string`\n`page.date` | Article created date | [Moment.js] object\n`page.updated` | Article last updated date | [Moment.js] object\n`page.comments` | Comment enabled or not | `boolean`\n`page.layout` | Layout name | `string`\n`page.content` | The full processed content of the article | `string`\n`page.excerpt` | Article excerpt | `string`\n`page.more` | Contents except article excerpt | `string`\n`page.source` | The path of the source file | `string`\n`page.full_source` | Full path of the source file | `string`\n`page.path` | The URL of the article without root URL. We usually use `url_for(page.path)` in theme. | `string`\n`page.permalink` | Full URL of the article | `string`\n`page.prev` | The previous post, `null` if the post is the first post | ???\n`page.next` | The next post, `null` if the post is the last post | ???\n`page.raw` | The raw data of the article | ???\n`page.photos` | The photos of the article (Used in gallery posts) | array of ???\n`page.link` | The external link of the article (Used in link posts) | `string`\n\n**โพสต์ (`post`):**  เหมือนกับ layout `page` แต่เพิ่ม  variable  ต่อไป\n\nVariable | Description | Type\n--- | --- | ---\n`page.published` | True if the post is not a draft | `boolean`\n`page.categories` | All categories of the post | `array` of ???\n`page.tags` | All tags of the post | `array` of ???\n\n**หน้าหลัก (`index`)**\n\nVariable | Description | Type\n--- | --- | ---\n`page.per_page` | Posts displayed per page | `number`\n`page.total` | Total number of pages | `number`\n`page.current` | Current page number | `number`\n`page.current_url` | The URL of current page | `string`\n`page.posts` | Posts in this page ([Data Model](https://hexojs.github.io/warehouse/)) | `object`\n`page.prev` | Previous page number. `0` if the current page is the first. | `number`\n`page.prev_link` | The URL of previous page. `''` if the current page is the first. | `string`\n`page.next` | Next page number. `0` if the current page is the last. | `number`\n`page.next_link` | The URL of next page. `''` if the current page is the last. | `string`\n`page.path` | The URL of current page without root URL. We usually use `url_for(page.path)` in theme. | `string`\n\n**อาไครฟ  (`archive`):** เหมือนกับ layout `index` แต่เพิ่ม  variable  ต่อไป\n\nVariable | Description | Type\n--- | --- | ---\n`page.archive` | Equals `true` | `boolean`\n`page.year` | Archive year (4-digit) | `number`\n`page.month` | Archive month (2-digit without leading zeros) | `number`\n\n**ประเภท (`category`):** เหมือนกับ layout `index` แต่เพิ่ม  variable  ต่อไป\n\nVariable | Description | Type\n--- | --- | ---\n`page.category` | Category name | `string`\n\n**แท็ก (`tag`):** เหมือนกับ layout `index` แต่เพิ่ม  variable  ต่อไป\n\nVariable | Description | Type\n--- | --- | ---\n`page.tag` | Tag name | `string`\n\n[Moment.js]: http://momentjs.com/\n[Site Variables]: #Site-Variables\n[Page Variables]: #Page-Variables\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/T9oAax-IRw0\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h3 id=\"Global-Variables\"><a href=\"#Global-Variables\" class=\"headerlink\" title=\"Global Variables\"></a>Global Variables</h3><table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site</code></td>\n<td>Sitewide information.</td>\n<td><code>object</code>; see <a href=\"#Site-Variables\">Site Variables</a></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>Page specific information and custom variables set in front-matter.</td>\n<td><code>object</code>; see <a href=\"#Page-Variables\">Page Variables</a></td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>Site configuration.</td>\n<td><code>object</code> (your site’s _config file)</td>\n</tr>\n<tr>\n<td><code>theme</code></td>\n<td>Theme configuration. Inherits from site configuration.</td>\n<td><code>object</code> (your theme’s _config file)</td>\n</tr>\n<tr>\n<td><code>_</code> (single underscore)</td>\n<td>Lodash library</td>\n<td>see <a href=\"https://lodash.com/\" title=\"Lodash&quot; target=&quot;_blank\" target=\"_blank\" rel=\"noopener\">Lodash</a> documentation</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Path of current page</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>Full URL of current page</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>env</code></td>\n<td>Environment variables</td>\n<td>???</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Site-Variables\"><a href=\"#Site-Variables\" class=\"headerlink\" title=\"Site Variables\"></a>Site Variables</h3><table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site.posts</code></td>\n<td>All posts</td>\n<td><code>array</code> of <code>post</code> objects</td>\n</tr>\n<tr>\n<td><code>site.pages</code></td>\n<td>All pages</td>\n<td><code>array</code> of <code>page</code> objects</td>\n</tr>\n<tr>\n<td><code>site.categories</code></td>\n<td>All categories</td>\n<td><code>array</code> of ???</td>\n</tr>\n<tr>\n<td><code>site.tags</code></td>\n<td>All tags</td>\n<td><code>array</code> of ???</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Page-Variables\"><a href=\"#Page-Variables\" class=\"headerlink\" title=\"Page Variables\"></a>Page Variables</h3><p><strong>บทความ (<code>page</code>)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.title</code></td>\n<td>Article title</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.date</code></td>\n<td>Article created date</td>\n<td><a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object</td>\n</tr>\n<tr>\n<td><code>page.updated</code></td>\n<td>Article last updated date</td>\n<td><a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object</td>\n</tr>\n<tr>\n<td><code>page.comments</code></td>\n<td>Comment enabled or not</td>\n<td><code>boolean</code></td>\n</tr>\n<tr>\n<td><code>page.layout</code></td>\n<td>Layout name</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.content</code></td>\n<td>The full processed content of the article</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.excerpt</code></td>\n<td>Article excerpt</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.more</code></td>\n<td>Contents except article excerpt</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.source</code></td>\n<td>The path of the source file</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.full_source</code></td>\n<td>Full path of the source file</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>The URL of the article without root URL. We usually use <code>url_for(page.path)</code> in theme.</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.permalink</code></td>\n<td>Full URL of the article</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>The previous post, <code>null</code> if the post is the first post</td>\n<td>???</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>The next post, <code>null</code> if the post is the last post</td>\n<td>???</td>\n</tr>\n<tr>\n<td><code>page.raw</code></td>\n<td>The raw data of the article</td>\n<td>???</td>\n</tr>\n<tr>\n<td><code>page.photos</code></td>\n<td>The photos of the article (Used in gallery posts)</td>\n<td>array of ???</td>\n</tr>\n<tr>\n<td><code>page.link</code></td>\n<td>The external link of the article (Used in link posts)</td>\n<td><code>string</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>โพสต์ (<code>post</code>):</strong>  เหมือนกับ layout <code>page</code> แต่เพิ่ม  variable  ต่อไป</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.published</code></td>\n<td>True if the post is not a draft</td>\n<td><code>boolean</code></td>\n</tr>\n<tr>\n<td><code>page.categories</code></td>\n<td>All categories of the post</td>\n<td><code>array</code> of ???</td>\n</tr>\n<tr>\n<td><code>page.tags</code></td>\n<td>All tags of the post</td>\n<td><code>array</code> of ???</td>\n</tr>\n</tbody>\n</table>\n<p><strong>หน้าหลัก (<code>index</code>)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.per_page</code></td>\n<td>Posts displayed per page</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.total</code></td>\n<td>Total number of pages</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.current</code></td>\n<td>Current page number</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.current_url</code></td>\n<td>The URL of current page</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.posts</code></td>\n<td>Posts in this page (<a href=\"https://hexojs.github.io/warehouse/\" target=\"_blank\" rel=\"noopener\">Data Model</a>)</td>\n<td><code>object</code></td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>Previous page number. <code>0</code> if the current page is the first.</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.prev_link</code></td>\n<td>The URL of previous page. <code>&#39;&#39;</code> if the current page is the first.</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>Next page number. <code>0</code> if the current page is the last.</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.next_link</code></td>\n<td>The URL of next page. <code>&#39;&#39;</code> if the current page is the last.</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>The URL of current page without root URL. We usually use <code>url_for(page.path)</code> in theme.</td>\n<td><code>string</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>อาไครฟ  (<code>archive</code>):</strong> เหมือนกับ layout <code>index</code> แต่เพิ่ม  variable  ต่อไป</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.archive</code></td>\n<td>Equals <code>true</code></td>\n<td><code>boolean</code></td>\n</tr>\n<tr>\n<td><code>page.year</code></td>\n<td>Archive year (4-digit)</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.month</code></td>\n<td>Archive month (2-digit without leading zeros)</td>\n<td><code>number</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>ประเภท (<code>category</code>):</strong> เหมือนกับ layout <code>index</code> แต่เพิ่ม  variable  ต่อไป</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.category</code></td>\n<td>Category name</td>\n<td><code>string</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>แท็ก (<code>tag</code>):</strong> เหมือนกับ layout <code>index</code> แต่เพิ่ม  variable  ต่อไป</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.tag</code></td>\n<td>Tag name</td>\n<td><code>string</code></td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6a0005nkoeoh8ja83q6",
				"title": "Writing",
				"markdown": "\n{% youtube AIqBubK6ZLc %}\n\nคุณสามรถรันคำสั่งต่อไปเพื่อสร้างโพสต์ใหม่หรือเพจใหม่:\n\n\n``` bash\n$ hexo new [layout] <title>\n```\n\n`post` เป็น `layout` default แต่คุณตั้งค่า layout ของตนได้โดยเปลี่ยนการตั้งค่าของ `default_layout` ใน  `_config.yml` ได้\n\n\n### Layout\n\nใน hexo มี layout ทั้งหมดสามอย่าง: `post` `page`  และ `draft` ไฟล์ที่สร้างมาในต่าง layout จะอยู่ใน path ท่ีแตกต่างกัน \nโพสต์ท่ีสร้างมาใหม่จะบันทึกอยู่ใน folder  `source/_posts`\n\nLayout | Path\n--- | ---\n`post` | `source/_posts`\n`page` | `source`\n`draft` | `source/_drafts`\n\n{% note tip Don't process my posts! %}\nถ้าคุณไม่อยากทำให้โพสต์ของตนถูกจัดการ คุณสามารถตั้งค่าให้เป็น `layout: false`ใน front-matter\n{% endnote %}\n\n### Filename\n\nhexo ใช้หัวข้อของโพสต์เป็นชื่อไฟล์ คุณสามารถตั้งค่า `new_post_name` ในไฟล์ \n`_config.yml` เพื่อเปลี่ยนชื่อไฟล์ default ยกตัวอย่างเช่น \n`:year-:month-:day-:title.md` \nจะทำให้ชื่อไฟล์มีกาลเวลาของการสร้างไฟล์รวมอยู่ด้วย คุณใช้ placeholder ต่อไปได้:\n\nPlaceholder | Description\n--- | ---\n`:title` | Post title (lower case, with spaces replaced by hyphens)\n`:year` | Created year, e.g. `2015`\n`:month` | Created month (leading zeros), e.g. `04`\n`:i_month` | Created month (no leading zeros), e.g. `4`\n`:day` | Created day (leading zeros), e.g. `07`\n`:i_day` | Created day (no leading zeros), e.g. `7`\n\n### Drafts\n\n`draft` เป็น layout อย่างหนึ่งของ hexo โพสต์ท่ีตั้งค่า layout เป็น draft \nนั้นจะถูกบันทึกอยู่ใน folder `source/_drafts`  คุณสามารถใช้คำสั่ง `publish` ไปย้ายไฟล์ไปถึง folder `source/_posts`  ในท่ีนี้คำสั่ง `publish` คล้ายกับคำสั่ง `new`\n\n\n``` bash\n$ hexo publish [layout] <title>\n```\n\ndraft จะไม่ render ให้เห็นในเว็บ by default คุณสามารถเพิ่มตัวเลือก `--draft` \nให้เมื่อรัน hexo หรือ enable `render_drafts` ในไฟล์ `_config.yml` เพื่อ render draft\n\n### Scaffolds\n\nเมื่อสร้างโพสต์ขึ้นมา hexo จะสร้างไฟล์ตามไฟล์ท่ีมีอยู่ใน folder `scaffolds`  ยกตัวอย่างเช่น：\n\n``` bash\n$ hexo new photo \"My Gallery\"\n```\n\nเมื่อรันคำสั่งนี้ hexo จะลองหา `photo.md` ใน folder  `scaffolds`  และตามด้วยการสร้างโพสต์ขึ้นมา placeholder ต่อไปเป็น placeholder \nท่ีตั้งค่าได้ใน scaffold：\n\nPlaceholder | Description\n--- | ---\n`layout` | Layout\n`title` | Title\n`date` | File created date\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/AIqBubK6ZLc\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>คุณสามรถรันคำสั่งต่อไปเพื่อสร้างโพสต์ใหม่หรือเพจใหม่:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p><code>post</code> เป็น <code>layout</code> default แต่คุณตั้งค่า layout ของตนได้โดยเปลี่ยนการตั้งค่าของ <code>default_layout</code> ใน  <code>_config.yml</code> ได้</p>\n<h3 id=\"Layout\"><a href=\"#Layout\" class=\"headerlink\" title=\"Layout\"></a>Layout</h3><p>ใน hexo มี layout ทั้งหมดสามอย่าง: <code>post</code> <code>page</code>  และ <code>draft</code> ไฟล์ที่สร้างมาในต่าง layout จะอยู่ใน path ท่ีแตกต่างกัน<br>โพสต์ท่ีสร้างมาใหม่จะบันทึกอยู่ใน folder  <code>source/_posts</code></p>\n<table>\n<thead>\n<tr>\n<th>Layout</th>\n<th>Path</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post</code></td>\n<td><code>source/_posts</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>draft</code></td>\n<td><code>source/_drafts</code></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note tip\"><strong class=\"note-title\">Don't process my posts!</strong><p>ถ้าคุณไม่อยากทำให้โพสต์ของตนถูกจัดการ คุณสามารถตั้งค่าให้เป็น <code>layout: false</code>ใน front-matter</p>\n</blockquote>\n<h3 id=\"Filename\"><a href=\"#Filename\" class=\"headerlink\" title=\"Filename\"></a>Filename</h3><p>hexo ใช้หัวข้อของโพสต์เป็นชื่อไฟล์ คุณสามารถตั้งค่า <code>new_post_name</code> ในไฟล์<br><code>_config.yml</code> เพื่อเปลี่ยนชื่อไฟล์ default ยกตัวอย่างเช่น<br><code>:year-:month-:day-:title.md</code><br>จะทำให้ชื่อไฟล์มีกาลเวลาของการสร้างไฟล์รวมอยู่ด้วย คุณใช้ placeholder ต่อไปได้:</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:title</code></td>\n<td>Post title (lower case, with spaces replaced by hyphens)</td>\n</tr>\n<tr>\n<td><code>:year</code></td>\n<td>Created year, e.g. <code>2015</code></td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>Created month (leading zeros), e.g. <code>04</code></td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>Created month (no leading zeros), e.g. <code>4</code></td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>Created day (leading zeros), e.g. <code>07</code></td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>Created day (no leading zeros), e.g. <code>7</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Drafts\"><a href=\"#Drafts\" class=\"headerlink\" title=\"Drafts\"></a>Drafts</h3><p><code>draft</code> เป็น layout อย่างหนึ่งของ hexo โพสต์ท่ีตั้งค่า layout เป็น draft<br>นั้นจะถูกบันทึกอยู่ใน folder <code>source/_drafts</code>  คุณสามารถใช้คำสั่ง <code>publish</code> ไปย้ายไฟล์ไปถึง folder <code>source/_posts</code>  ในท่ีนี้คำสั่ง <code>publish</code> คล้ายกับคำสั่ง <code>new</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>draft จะไม่ render ให้เห็นในเว็บ by default คุณสามารถเพิ่มตัวเลือก <code>--draft</code><br>ให้เมื่อรัน hexo หรือ enable <code>render_drafts</code> ในไฟล์ <code>_config.yml</code> เพื่อ render draft</p>\n<h3 id=\"Scaffolds\"><a href=\"#Scaffolds\" class=\"headerlink\" title=\"Scaffolds\"></a>Scaffolds</h3><p>เมื่อสร้างโพสต์ขึ้นมา hexo จะสร้างไฟล์ตามไฟล์ท่ีมีอยู่ใน folder <code>scaffolds</code>  ยกตัวอย่างเช่น：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new photo <span class=\"string\">\"My Gallery\"</span></span><br></pre></td></tr></table></figure>\n<p>เมื่อรันคำสั่งนี้ hexo จะลองหา <code>photo.md</code> ใน folder  <code>scaffolds</code>  และตามด้วยการสร้างโพสต์ขึ้นมา placeholder ต่อไปเป็น placeholder<br>ท่ีตั้งค่าได้ใน scaffold：</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>Layout</td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>Title</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>File created date</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y66u0004koeoeb8uaigq",
				"title": "Box",
				"markdown": "Box is a container used for processing files in a specified folder. Hexo uses two different boxes: `hexo.source` and `hexo.theme`. The former is used to process the `source` folder and the latter to process the `theme` folder.\n\n## Load Files\n\nBox provides two methods for loading files: `process` and `watch`. `process` loads all files in the folder. `watch` does the same, but also starts watching for file changes.\n\n``` js\nbox.process().then(function(){\n  // ...\n});\n\nbox.watch().then(function(){\n  // You can call box.unwatch() later to stop watching.\n});\n```\n\n## Path Matching\n\nBox provides many ways for path matching. You can use a regular expression, a function or an Express-style pattern string. For example:\n\n``` plain\nposts/:id => posts/89\nposts/*path => posts/2015/title\n```\n\nSee [util.Pattern] for more info.\n\n## Processors\n\nA processor is an essential element of Box and is used to process files. You can use path matching as described above to restrict what exactly the processor should process. Register a new processor with the `addProcessor` method.\n\n``` js\nbox.addProcessor('posts/:id', function(file){\n  //\n});\n```\n\nBox passes the content of matched files to processors. This information can then be read straight from the `file` argument in the callback:\n\nAttribute | Description\n--- | ---\n`source` | Full path of the file\n`path` | Relative path to the box of the file\n`type` | File type. The value can be `create`, `update`, `skip`, `delete`.\n`params` | The information from path matching.\n\nBox also provides some methods so you don't have to do file IO by yourself.\n\nMethod | Description\n--- | ---\n`read` | Read a file\n`readSync` | Read a file synchronously\n`stat` | Read the status of a file\n`statSync` | Read the status of a file synchronously\n`render` | Render a file\n`renderSync` | Render a file synchronously\n\n[util.Pattern]: https://github.com/hexojs/hexo-util#patternrule\n",
				"html": "<p>Box is a container used for processing files in a specified folder. Hexo uses two different boxes: <code>hexo.source</code> and <code>hexo.theme</code>. The former is used to process the <code>source</code> folder and the latter to process the <code>theme</code> folder.</p>\n<h2 id=\"Load-Files\"><a href=\"#Load-Files\" class=\"headerlink\" title=\"Load Files\"></a>Load Files</h2><p>Box provides two methods for loading files: <code>process</code> and <code>watch</code>. <code>process</code> loads all files in the folder. <code>watch</code> does the same, but also starts watching for file changes.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.process().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">box.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// You can call box.unwatch() later to stop watching.</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Path-Matching\"><a href=\"#Path-Matching\" class=\"headerlink\" title=\"Path Matching\"></a>Path Matching</h2><p>Box provides many ways for path matching. You can use a regular expression, a function or an Express-style pattern string. For example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">posts/:id =&gt; posts/89</span><br><span class=\"line\">posts/*path =&gt; posts/2015/title</span><br></pre></td></tr></table></figure>\n<p>See <a href=\"https://github.com/hexojs/hexo-util#patternrule\" target=\"_blank\" rel=\"noopener\">util.Pattern</a> for more info.</p>\n<h2 id=\"Processors\"><a href=\"#Processors\" class=\"headerlink\" title=\"Processors\"></a>Processors</h2><p>A processor is an essential element of Box and is used to process files. You can use path matching as described above to restrict what exactly the processor should process. Register a new processor with the <code>addProcessor</code> method.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.addProcessor(<span class=\"string\">'posts/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Box passes the content of matched files to processors. This information can then be read straight from the <code>file</code> argument in the callback:</p>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>Full path of the file</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Relative path to the box of the file</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>File type. The value can be <code>create</code>, <code>update</code>, <code>skip</code>, <code>delete</code>.</td>\n</tr>\n<tr>\n<td><code>params</code></td>\n<td>The information from path matching.</td>\n</tr>\n</tbody>\n</table>\n<p>Box also provides some methods so you don’t have to do file IO by yourself.</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>read</code></td>\n<td>Read a file</td>\n</tr>\n<tr>\n<td><code>readSync</code></td>\n<td>Read a file synchronously</td>\n</tr>\n<tr>\n<td><code>stat</code></td>\n<td>Read the status of a file</td>\n</tr>\n<tr>\n<td><code>statSync</code></td>\n<td>Read the status of a file synchronously</td>\n</tr>\n<tr>\n<td><code>render</code></td>\n<td>Render a file</td>\n</tr>\n<tr>\n<td><code>renderSync</code></td>\n<td>Render a file synchronously</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y66v0005koeo6qpykcp2",
				"title": "Console",
				"markdown": "The console forms the bridge between Hexo and its users. It registers and describes the available console commands.\n\n## Synopsis\n\n``` js\nhexo.extend.console.register(name, desc, options, function(args){\n  // ...\n});\n```\n\nArgument | Description\n--- | ---\n`name` | Name\n`desc` | Description\n`options`| Options\n\nAn argument `args` will be passed into the function. This is the argument that users type into the terminal. It's parsed by [Minimist].\n\n## Options\n\n### usage\n\nThe usage of a console command. For example:\n\n``` js\n{usage: '[layout] <title>'}\n// hexo new [layout] <title>\n```\n\n### arguments\n\nThe description of each argument of a console command. For example:\n\n``` js\n{\n  arguments: [\n    {name: 'layout', desc: 'Post layout'},\n    {name: 'title', desc: 'Post title'}\n  ]\n}\n```\n\n### options\n\nThe description of each option of a console command. For example:\n\n``` js\n{\n  options: [\n    {name: '-r, --replace', desc: 'Replace existing files'}\n  ]\n}\n```\n\n### desc\n\nMore detailed information about a console command.\n\n## Example\n\n``` js\nhexo.extend.console.register('config', 'Display configuration', function(args){\n  console.log(hexo.config);\n});\n```\n\n[Minimist]: https://github.com/substack/minimist\n",
				"html": "<p>The console forms the bridge between Hexo and its users. It registers and describes the available console commands.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(name, desc, options, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>Name</td>\n</tr>\n<tr>\n<td><code>desc</code></td>\n<td>Description</td>\n</tr>\n<tr>\n<td><code>options</code></td>\n<td>Options</td>\n</tr>\n</tbody>\n</table>\n<p>An argument <code>args</code> will be passed into the function. This is the argument that users type into the terminal. It’s parsed by <a href=\"https://github.com/substack/minimist\" target=\"_blank\" rel=\"noopener\">Minimist</a>.</p>\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><h3 id=\"usage\"><a href=\"#usage\" class=\"headerlink\" title=\"usage\"></a>usage</h3><p>The usage of a console command. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">usage</span>: <span class=\"string\">'[layout] &lt;title&gt;'</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">// hexo new [layout] &lt;title&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"arguments\"><a href=\"#arguments\" class=\"headerlink\" title=\"arguments\"></a>arguments</h3><p>The description of each argument of a console command. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"built_in\">arguments</span>: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'layout'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post layout'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'title'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post title'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"options\"><a href=\"#options\" class=\"headerlink\" title=\"options\"></a>options</h3><p>The description of each option of a console command. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  options: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'-r, --replace'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Replace existing files'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"desc\"><a href=\"#desc\" class=\"headerlink\" title=\"desc\"></a>desc</h3><p>More detailed information about a console command.</p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(<span class=\"string\">'config'</span>, <span class=\"string\">'Display configuration'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(hexo.config);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y66w0006koeof6tleui1",
				"title": "Events",
				"markdown": "Hexo inherits from [EventEmitter]. Use the `on` method to listen for events emitted by Hexo, and use the `emit` method to emit events. For more information, refer to the Node.js API documentation.\n\n### deployBefore\n\nEmitted before deployment begins.\n\n### deployAfter\n\nEmitted after deployment finishes.\n\n### exit\n\nEmitted before Hexo exits.\n\n### generateBefore\n\nEmitted before generation begins.\n\n### generateAfter\n\nEmitted after generation finishes.\n\n### new\n\nEmitted after a new post has been created. This event returns the post data:\n\n``` js\nhexo.on('new', function(post){\n  //\n});\n```\n\nData | Description\n--- | ---\n`post.path` | Full path of the post file\n`post.content` | Content of the post file\n\n### processBefore\n\nEmitted before processing begins. This event returns a path representing the root directory of the box.\n\n### processAfter\n\nEmitted after processing finishes. This event returns a path representing the root directory of the box.\n\n### ready\n\nEmitted after initialization finishes.\n\n[EventEmitter]: http://nodejs.org/api/events.html\n",
				"html": "<p>Hexo inherits from <a href=\"http://nodejs.org/api/events.html\" target=\"_blank\" rel=\"noopener\">EventEmitter</a>. Use the <code>on</code> method to listen for events emitted by Hexo, and use the <code>emit</code> method to emit events. For more information, refer to the Node.js API documentation.</p>\n<h3 id=\"deployBefore\"><a href=\"#deployBefore\" class=\"headerlink\" title=\"deployBefore\"></a>deployBefore</h3><p>Emitted before deployment begins.</p>\n<h3 id=\"deployAfter\"><a href=\"#deployAfter\" class=\"headerlink\" title=\"deployAfter\"></a>deployAfter</h3><p>Emitted after deployment finishes.</p>\n<h3 id=\"exit\"><a href=\"#exit\" class=\"headerlink\" title=\"exit\"></a>exit</h3><p>Emitted before Hexo exits.</p>\n<h3 id=\"generateBefore\"><a href=\"#generateBefore\" class=\"headerlink\" title=\"generateBefore\"></a>generateBefore</h3><p>Emitted before generation begins.</p>\n<h3 id=\"generateAfter\"><a href=\"#generateAfter\" class=\"headerlink\" title=\"generateAfter\"></a>generateAfter</h3><p>Emitted after generation finishes.</p>\n<h3 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h3><p>Emitted after a new post has been created. This event returns the post data:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.on(<span class=\"string\">'new'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Data</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post.path</code></td>\n<td>Full path of the post file</td>\n</tr>\n<tr>\n<td><code>post.content</code></td>\n<td>Content of the post file</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"processBefore\"><a href=\"#processBefore\" class=\"headerlink\" title=\"processBefore\"></a>processBefore</h3><p>Emitted before processing begins. This event returns a path representing the root directory of the box.</p>\n<h3 id=\"processAfter\"><a href=\"#processAfter\" class=\"headerlink\" title=\"processAfter\"></a>processAfter</h3><p>Emitted after processing finishes. This event returns a path representing the root directory of the box.</p>\n<h3 id=\"ready\"><a href=\"#ready\" class=\"headerlink\" title=\"ready\"></a>ready</h3><p>Emitted after initialization finishes.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y66w0007koeo6oufty4c",
				"title": "Helper",
				"markdown": "A helper makes it easy to quickly add snippets to your templates. We recommend using helpers instead of templates when you're dealing with more complicated code.\n\nHelpers can not be accessed from `source` files.\n\n## Synopsis\n\n``` js\nhexo.extend.helper.register(name, function(){\n  // ...\n});\n```\n\n## Example\n\n``` js\nhexo.extend.helper.register('js', function(path){\n  return '<script type=\"text/javascript\" src=\"' + path + '\"></script>';\n});\n```\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"script.js\"></script>\n```\n\n## FAQ\n\n### Where to place custom helper?\n\nPlace it under `themes/<yourtheme>/scripts`\n",
				"html": "<p>A helper makes it easy to quickly add snippets to your templates. We recommend using helpers instead of templates when you’re dealing with more complicated code.</p>\n<p>Helpers can not be accessed from <code>source</code> files.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(<span class=\"string\">'js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script type=\"text/javascript\" src=\"'</span> + path + <span class=\"string\">'\"&gt;&lt;/script&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><h3 id=\"Where-to-place-custom-helper\"><a href=\"#Where-to-place-custom-helper\" class=\"headerlink\" title=\"Where to place custom helper?\"></a>Where to place custom helper?</h3><p>Place it under <code>themes/&lt;yourtheme&gt;/scripts</code></p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y66x0008koeo1lpkomko",
				"title": "Generator",
				"markdown": "A generator builds routes based on processed files.\n\n## Synopsis\n\n``` js\nhexo.extend.generator.register(name, function(locals){\n  // ...\n});\n```\n\nA `locals` argument will get passed into the function, containing the [site variables](../docs/variables.html#Site-Variables). You should use this argument to get the website data, thereby avoiding having to access the database directly.\n\n## Update Routes\n\n``` js\nhexo.extend.generator.register('test', function(locals){\n  // Object\n  return {\n    path: 'foo',\n    data: 'foo'\n  };\n\n  // Array\n  return [\n    {path: 'foo', data: 'foo'},\n    {path: 'bar', data: 'bar'}\n  ];\n});\n```\n\nAttribute | Description\n--- | ---\n`path` | Path not including the prefixing `/`.\n`data` | Data\n`layout` | Layout. Specify the layouts for rendering. The value can be a string or an array. If it's ignored then the route will return `data` directly.\n\nWhen the source files are updated, Hexo will execute all generators and rebuild the routes. **Please return the data and do not access the router directly.**\n\n## Example\n\n### Archive Page\n\nCreate an archive page at `archives/index.html`. We pass all posts as data to the templates. This data is equivalent to the `page` variable in templates.\n\nNext, set the `layout` attribute to render with the theme templates. We're setting two layouts in this example: if the `archive` layout doesn't exist, the `index` layout will be used instead.\n\n``` js\nhexo.extend.generator.register('archive', function(locals){\n  return {\n    path: 'archives/index.html',\n    data: locals,\n    layout: ['archive', 'index']\n  }\n});\n```\n\n### Archive Page with Pagination\n\nYou can use the convenient official tool [hexo-pagination] to easily build archive pages with pagination.\n\n``` js\nvar pagination = require('hexo-pagination');\n\nhexo.extend.generator.register('archive', function(locals){\n  // hexo-pagination makes an index.html for the /archives route\n  return pagination('archives', locals.posts, {\n    perPage: 10,\n    layout: ['archive', 'index'],\n    data: {}\n  });\n});\n```\n\n### Generate All Posts\n\nIterate over all posts in `locals.posts` and create routes for all the posts.\n\n``` js\nhexo.extend.generator.register('post', function(locals){\n  return locals.posts.map(function(post){\n    return {\n      path: post.path,\n      data: post,\n      layout: 'post'\n    };\n  });\n});\n```\n\n### Copy Files\n\nThis time we don't return the data explicitly but instead set `data` to a function so the route will build `fs.ReadStream` only when needed.\n\n``` js\nvar fs = require('hexo-fs');\n\nhexo.extend.generator.register('asset', function(locals){\n  return {\n    path: 'file.txt',\n    data: function(){\n      return fs.createReadStream('path/to/file.txt')\n    }\n  };\n});\n```\n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n",
				"html": "<p>A generator builds routes based on processed files.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>A <code>locals</code> argument will get passed into the function, containing the <a href=\"../docs/variables.html#Site-Variables\">site variables</a>. You should use this argument to get the website data, thereby avoiding having to access the database directly.</p>\n<h2 id=\"Update-Routes\"><a href=\"#Update-Routes\" class=\"headerlink\" title=\"Update Routes\"></a>Update Routes</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Object</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'foo'</span>,</span><br><span class=\"line\">    data: <span class=\"string\">'foo'</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Array</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> [</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'foo'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'foo'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'bar'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'bar'</span>&#125;</span><br><span class=\"line\">  ];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>path</code></td>\n<td>Path not including the prefixing <code>/</code>.</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Specify the layouts for rendering. The value can be a string or an array. If it’s ignored then the route will return <code>data</code> directly.</td>\n</tr>\n</tbody>\n</table>\n<p>When the source files are updated, Hexo will execute all generators and rebuild the routes. <strong>Please return the data and do not access the router directly.</strong></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><h3 id=\"Archive-Page\"><a href=\"#Archive-Page\" class=\"headerlink\" title=\"Archive Page\"></a>Archive Page</h3><p>Create an archive page at <code>archives/index.html</code>. We pass all posts as data to the templates. This data is equivalent to the <code>page</code> variable in templates.</p>\n<p>Next, set the <code>layout</code> attribute to render with the theme templates. We’re setting two layouts in this example: if the <code>archive</code> layout doesn’t exist, the <code>index</code> layout will be used instead.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'archives/index.html'</span>,</span><br><span class=\"line\">    data: locals,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Archive-Page-with-Pagination\"><a href=\"#Archive-Page-with-Pagination\" class=\"headerlink\" title=\"Archive Page with Pagination\"></a>Archive Page with Pagination</h3><p>You can use the convenient official tool <a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a> to easily build archive pages with pagination.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// hexo-pagination makes an index.html for the /archives route</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> pagination(<span class=\"string\">'archives'</span>, locals.posts, &#123;</span><br><span class=\"line\">    perPage: <span class=\"number\">10</span>,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>],</span><br><span class=\"line\">    data: &#123;&#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Generate-All-Posts\"><a href=\"#Generate-All-Posts\" class=\"headerlink\" title=\"Generate All Posts\"></a>Generate All Posts</h3><p>Iterate over all posts in <code>locals.posts</code> and create routes for all the posts.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'post'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals.posts.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      path: post.path,</span><br><span class=\"line\">      data: post,</span><br><span class=\"line\">      layout: <span class=\"string\">'post'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Copy-Files\"><a href=\"#Copy-Files\" class=\"headerlink\" title=\"Copy Files\"></a>Copy Files</h3><p>This time we don’t return the data explicitly but instead set <code>data</code> to a function so the route will build <code>fs.ReadStream</code> only when needed.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'asset'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'file.txt'</span>,</span><br><span class=\"line\">    data: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> fs.createReadStream(<span class=\"string\">'path/to/file.txt'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y66y0009koeojuquf07w",
				"title": "API",
				"markdown": "This documentation provides more detailed information about the API and will be particularly helpful for people who want to modify the Hexo source code or write new plugins. If you are interested in more basic usage of Hexo, please refer to the [docs](../docs) instead.\n\nPlease note that this documentation is only valid for Hexo 3 and above.\n\n## Initialize\n\nFirst, we have to create a Hexo instance. A new instance takes two arguments: the root directory of the website, `base_dir`, and an object containing the initialization options. Next, we initialize this instance by calling the `init` method on it, which will then cause Hexo to load its configuration and plugins.\n\n``` js\nvar Hexo = require('hexo');\nvar hexo = new Hexo(process.cwd(), {});\n\nhexo.init().then(function(){\n  // ...\n});\n```\n\nOption | Description | Default\n--- | --- | ---\n`debug` | Enable debug mode. Display debug messages in the terminal and save `debug.log` in the root directory. | `false`\n`safe` | Enable safe mode. Don't load any plugins. | `false`\n`silent` | Enable silent mode. Don't display any messages in the terminal. | `false`\n`config` | Specify the path of the configuration file. | `_config.yml`\n`draft` / `drafts`| Enable to add drafts to the posts list.<br> example: when you use `hexo.locals.get('posts')` | `render_drafts` of _config.yml \n\n## Load Files\n\nHexo provides two methods for loading files: `load` and `watch`. `load` is used for loading all files in the `source` folder as well as the theme data. `watch` does the same things `load` does, but will also start watching for file changes continuously.\n\nBoth methods will load the list of files and pass them to the corresponding processors. After all files have been processed, they will call upon the generators to create the routes.\n\n``` js\nhexo.load().then(function(){\n  // ...\n});\n\nhexo.watch().then(function(){\n  // You can call hexo.unwatch() later to stop watching.\n});\n```\n\n## Execute Commands\n\nAny console command can be called explicitly using the `call` method on the Hexo instance. Such a call takes two arguments: the name of the console command, and an options argument. Different options are available for the different console commands.\n\n``` js\nhexo.call('generate', {}).then(function(){\n  // ...\n});\n```\n\n``` js\nhexo.call('list', { _: ['post'] }).then(function() {\n  // ...\n})\n```\n\n## Exit\n\nYou should call the `exit` method upon successful or unsuccessful completion of a console command. This allows Hexo to exit gracefully and finish up important things such as saving the database.\n\n``` js\nhexo.call('generate').then(function(){\n  return hexo.exit();\n}).catch(function(err){\n  return hexo.exit(err);\n});\n```\n",
				"html": "<p>This documentation provides more detailed information about the API and will be particularly helpful for people who want to modify the Hexo source code or write new plugins. If you are interested in more basic usage of Hexo, please refer to the <a href=\"../docs\">docs</a> instead.</p>\n<p>Please note that this documentation is only valid for Hexo 3 and above.</p>\n<h2 id=\"Initialize\"><a href=\"#Initialize\" class=\"headerlink\" title=\"Initialize\"></a>Initialize</h2><p>First, we have to create a Hexo instance. A new instance takes two arguments: the root directory of the website, <code>base_dir</code>, and an object containing the initialization options. Next, we initialize this instance by calling the <code>init</code> method on it, which will then cause Hexo to load its configuration and plugins.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Hexo = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> hexo = <span class=\"keyword\">new</span> Hexo(process.cwd(), &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.init().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>debug</code></td>\n<td>Enable debug mode. Display debug messages in the terminal and save <code>debug.log</code> in the root directory.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>safe</code></td>\n<td>Enable safe mode. Don’t load any plugins.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>silent</code></td>\n<td>Enable silent mode. Don’t display any messages in the terminal.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>Specify the path of the configuration file.</td>\n<td><code>_config.yml</code></td>\n</tr>\n<tr>\n<td><code>draft</code> / <code>drafts</code></td>\n<td>Enable to add drafts to the posts list.<br> example: when you use <code>hexo.locals.get(&#39;posts&#39;)</code></td>\n<td><code>render_drafts</code> of _config.yml </td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Load-Files\"><a href=\"#Load-Files\" class=\"headerlink\" title=\"Load Files\"></a>Load Files</h2><p>Hexo provides two methods for loading files: <code>load</code> and <code>watch</code>. <code>load</code> is used for loading all files in the <code>source</code> folder as well as the theme data. <code>watch</code> does the same things <code>load</code> does, but will also start watching for file changes continuously.</p>\n<p>Both methods will load the list of files and pass them to the corresponding processors. After all files have been processed, they will call upon the generators to create the routes.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.load().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// You can call hexo.unwatch() later to stop watching.</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Execute-Commands\"><a href=\"#Execute-Commands\" class=\"headerlink\" title=\"Execute Commands\"></a>Execute Commands</h2><p>Any console command can be called explicitly using the <code>call</code> method on the Hexo instance. Such a call takes two arguments: the name of the console command, and an options argument. Different options are available for the different console commands.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>, &#123;&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'list'</span>, &#123; <span class=\"attr\">_</span>: [<span class=\"string\">'post'</span>] &#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Exit\"><a href=\"#Exit\" class=\"headerlink\" title=\"Exit\"></a>Exit</h2><p>You should call the <code>exit</code> method upon successful or unsuccessful completion of a console command. This allows Hexo to exit gracefully and finish up important things such as saving the database.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit();</span><br><span class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit(err);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y66z000akoeozzarnli2",
				"title": "Migrator",
				"markdown": "A migrator helps users migrate from other systems to Hexo.\n\n## Synopsis\n\n``` js\nhexo.extend.migrator.register(name, function(args){\n  // ...\n});\n```\n\nAn argument `args` will be passed into the function. This argument will contain the user's input into the terminal.\n",
				"html": "<p>A migrator helps users migrate from other systems to Hexo.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.migrator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>An argument <code>args</code> will be passed into the function. This argument will contain the user’s input into the terminal.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y670000bkoeo9tr1qqdk",
				"title": "Local Variables",
				"markdown": "Local variables are used for template rendering, which is the `site` variable in templates.\n\n## Default Variables\n\nVariable | Description\n--- | ---\n`posts` | All posts\n`pages` | All pages\n`categories` | All categories\n`tags` | All tags\n\n## Get a Variable\n\n``` js\nhexo.locals.get('posts')\n```\n\n## Set a Variable\n\n``` js\nhexo.locals.set('posts', function(){\n  return ...\n});\n```\n\n## Remove a Variable\n\n``` js\nhexo.locals.remove('posts');\n```\n\n## Get All Variable\n\n``` js\nhexo.locals.toObject();\n```\n\n## Invalidate the cache\n\n``` js\nhexo.locals.invalidate();\n```",
				"html": "<p>Local variables are used for template rendering, which is the <code>site</code> variable in templates.</p>\n<h2 id=\"Default-Variables\"><a href=\"#Default-Variables\" class=\"headerlink\" title=\"Default Variables\"></a>Default Variables</h2><table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>posts</code></td>\n<td>All posts</td>\n</tr>\n<tr>\n<td><code>pages</code></td>\n<td>All pages</td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>All categories</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>All tags</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Get-a-Variable\"><a href=\"#Get-a-Variable\" class=\"headerlink\" title=\"Get a Variable\"></a>Get a Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.get(<span class=\"string\">'posts'</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Set-a-Variable\"><a href=\"#Set-a-Variable\" class=\"headerlink\" title=\"Set a Variable\"></a>Set a Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.set(<span class=\"string\">'posts'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-Variable\"><a href=\"#Remove-a-Variable\" class=\"headerlink\" title=\"Remove a Variable\"></a>Remove a Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.remove(<span class=\"string\">'posts'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Get-All-Variable\"><a href=\"#Get-All-Variable\" class=\"headerlink\" title=\"Get All Variable\"></a>Get All Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.toObject();</span><br></pre></td></tr></table></figure>\n<h2 id=\"Invalidate-the-cache\"><a href=\"#Invalidate-the-cache\" class=\"headerlink\" title=\"Invalidate the cache\"></a>Invalidate the cache</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.invalidate();</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y670000ckoeoaevdpfnu",
				"title": "Filter",
				"markdown": "A filter is used to modify some specified data. Hexo passes data to filters in sequence and the filters then modify the data one after the other. This concept was borrowed from [WordPress](http://codex.wordpress.org/Plugin_API#Filters).\n\n## Synopsis\n\n``` js\nhexo.extend.filter.register(type, function(){\n  // ...\n}, priority);\n```\n\nYou can define the `priority`. Lower `priority` means that it will be executed first. The default `priority` is 10.\n\n## Execute Filters\n\n``` js\nhexo.extend.filter.exec(type, data, options);\nhexo.extend.filter.execSync(type, data, options);\n```\n\nOption | Description\n--- | ---\n`context` | Context\n`args` | Arguments. This must be an array.\n\nThe first argument passed into each filter is `data`. The `data` passed into the next filter can be modified by returning a new value. If nothing is returned, the data remains unmodified. You can even use `args` to specify other arguments in filters. For example:\n\n``` js\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'some data'\n  // arg1 === 'foo'\n  // arg2 === 'bar'\n\n  return 'something';\n});\n\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'something'\n});\n\nhexo.extend.filter.exec('test', 'some data', {\n  args: ['foo', 'bar']\n});\n```\n\nYou can also use the following methods to execute filters:\n\n``` js\nhexo.execFilter(type, data, options);\nhexo.execFilterSync(type, data, options);\n```\n\n## Unregister Filters\n\n``` js\nhexo.extend.filter.unregister(type, filter);\n```\n\n## Filter List\n\nHere is a list of filters used by Hexo.\n\n### before_post_render\n\nExecuted before a post is rendered. Refer to [post rendering](posts.html#Render) to learn the execution steps.\n\nFor example, to transform the title to lower case:\n\n``` js\nhexo.extend.filter.register('before_post_render', function(data){\n  data.title = data.title.toLowerCase();\n  return data;\n});\n```\n\n### after_post_render\n\nExecuted after a post is rendered. Refer to [post rendering](posts.html#Render) to learn the execution steps.\n\nFor example, to replace `@username` with a link to a Twitter profile:\n\n``` js\nhexo.extend.filter.register('after_post_render', function(data){\n  data.content = data.content.replace(/@(\\d+)/, '<a href=\"http://twitter.com/$1\">#$1</a>');\n  return data;\n});\n```\n\n### before_exit\n\nExecuted before Hexo is about to exit -- this will run right after `hexo.exit` is called.\n\n``` js\nhexo.extend.filter.register('before_exit', function(){\n  // ...\n});\n```\n\n### before_generate\n\nExecuted before generation begins.\n\n``` js\nhexo.extend.filter.register('before_generate', function(){\n  // ...\n});\n```\n\n### after_generate\n\nExecuted after generation finishes.\n\n``` js\nhexo.extend.filter.register('after_generate', function(){\n  // ...\n});\n```\n\n### template_locals\n\nModify [local variables](../docs/variables.html) in templates.\n\nFor example, to add the current time to the local variables of templates:\n\n``` js\nhexo.extend.filter.register('template_locals', function(locals){\n  locals.now = Date.now();\n  return locals;\n});\n```\n\n### after_init\n\nExecuted after Hexo is initialized -- this will run right after `hexo.init` completes.\n\n``` js\nhexo.extend.filter.register('after_init', function(){\n  // ...\n});\n```\n\n### new_post_path\n\nExecuted when creating a post to determine the path of new posts.\n\n``` js\nhexo.extend.filter.register('new_post_path', function(data, replace){\n  // ...\n});\n```\n\n### post_permalink\n\nUsed to determine the permalink of posts.\n\n``` js\nhexo.extend.filter.register('post_permalink', function(data){\n  // ...\n});\n```\n\n### after_render\n\nExecuted after rendering finishes. You can see [rendering](rendering.html#after_render_Filters) for more info.\n\n### after_clean\n\nExecuted after generated files and cache are removed with `hexo clean` command.\n\n``` js\nhexo.extend.filter.register('after_clean', function(){\n  // remove some other temporary files\n});\n```\n\n### server_middleware\n\nAdd middleware to the server. `app` is a [Connect] instance.\n\nFor example, to add `X-Powered-By: Hexo` to the response header:\n\n``` js\nhexo.extend.filter.register('server_middleware', function(app){\n  app.use(function(req, res, next){\n    res.setHeader('X-Powered-By', 'Hexo');\n    next();\n  });\n});\n```\n\n[Connect]: https://github.com/senchalabs/connect\n",
				"html": "<p>A filter is used to modify some specified data. Hexo passes data to filters in sequence and the filters then modify the data one after the other. This concept was borrowed from <a href=\"http://codex.wordpress.org/Plugin_API#Filters\" target=\"_blank\" rel=\"noopener\">WordPress</a>.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(type, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, priority);</span><br></pre></td></tr></table></figure>\n<p>You can define the <code>priority</code>. Lower <code>priority</code> means that it will be executed first. The default <code>priority</code> is 10.</p>\n<h2 id=\"Execute-Filters\"><a href=\"#Execute-Filters\" class=\"headerlink\" title=\"Execute Filters\"></a>Execute Filters</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.exec(type, data, options);</span><br><span class=\"line\">hexo.extend.filter.execSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>context</code></td>\n<td>Context</td>\n</tr>\n<tr>\n<td><code>args</code></td>\n<td>Arguments. This must be an array.</td>\n</tr>\n</tbody>\n</table>\n<p>The first argument passed into each filter is <code>data</code>. The <code>data</code> passed into the next filter can be modified by returning a new value. If nothing is returned, the data remains unmodified. You can even use <code>args</code> to specify other arguments in filters. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'some data'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg1 === 'foo'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg2 === 'bar'</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'something'</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'something'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.exec(<span class=\"string\">'test'</span>, <span class=\"string\">'some data'</span>, &#123;</span><br><span class=\"line\">  args: [<span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span>]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>You can also use the following methods to execute filters:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.execFilter(type, data, options);</span><br><span class=\"line\">hexo.execFilterSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Unregister-Filters\"><a href=\"#Unregister-Filters\" class=\"headerlink\" title=\"Unregister Filters\"></a>Unregister Filters</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.unregister(type, filter);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Filter-List\"><a href=\"#Filter-List\" class=\"headerlink\" title=\"Filter List\"></a>Filter List</h2><p>Here is a list of filters used by Hexo.</p>\n<h3 id=\"before-post-render\"><a href=\"#before-post-render\" class=\"headerlink\" title=\"before_post_render\"></a>before_post_render</h3><p>Executed before a post is rendered. Refer to <a href=\"posts.html#Render\">post rendering</a> to learn the execution steps.</p>\n<p>For example, to transform the title to lower case:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.title = data.title.toLowerCase();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-post-render\"><a href=\"#after-post-render\" class=\"headerlink\" title=\"after_post_render\"></a>after_post_render</h3><p>Executed after a post is rendered. Refer to <a href=\"posts.html#Render\">post rendering</a> to learn the execution steps.</p>\n<p>For example, to replace <code>@username</code> with a link to a Twitter profile:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.content = data.content.replace(<span class=\"regexp\">/@(\\d+)/</span>, <span class=\"string\">'&lt;a href=\"http://twitter.com/$1\"&gt;#$1&lt;/a&gt;'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-exit\"><a href=\"#before-exit\" class=\"headerlink\" title=\"before_exit\"></a>before_exit</h3><p>Executed before Hexo is about to exit – this will run right after <code>hexo.exit</code> is called.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_exit'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-generate\"><a href=\"#before-generate\" class=\"headerlink\" title=\"before_generate\"></a>before_generate</h3><p>Executed before generation begins.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-generate\"><a href=\"#after-generate\" class=\"headerlink\" title=\"after_generate\"></a>after_generate</h3><p>Executed after generation finishes.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"template-locals\"><a href=\"#template-locals\" class=\"headerlink\" title=\"template_locals\"></a>template_locals</h3><p>Modify <a href=\"../docs/variables.html\">local variables</a> in templates.</p>\n<p>For example, to add the current time to the local variables of templates:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'template_locals'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  locals.now = <span class=\"built_in\">Date</span>.now();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-init\"><a href=\"#after-init\" class=\"headerlink\" title=\"after_init\"></a>after_init</h3><p>Executed after Hexo is initialized – this will run right after <code>hexo.init</code> completes.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_init'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"new-post-path\"><a href=\"#new-post-path\" class=\"headerlink\" title=\"new_post_path\"></a>new_post_path</h3><p>Executed when creating a post to determine the path of new posts.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'new_post_path'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, replace</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"post-permalink\"><a href=\"#post-permalink\" class=\"headerlink\" title=\"post_permalink\"></a>post_permalink</h3><p>Used to determine the permalink of posts.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'post_permalink'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-render\"><a href=\"#after-render\" class=\"headerlink\" title=\"after_render\"></a>after_render</h3><p>Executed after rendering finishes. You can see <a href=\"rendering.html#after_render_Filters\">rendering</a> for more info.</p>\n<h3 id=\"after-clean\"><a href=\"#after-clean\" class=\"headerlink\" title=\"after_clean\"></a>after_clean</h3><p>Executed after generated files and cache are removed with <code>hexo clean</code> command.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_clean'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// remove some other temporary files</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"server-middleware\"><a href=\"#server-middleware\" class=\"headerlink\" title=\"server_middleware\"></a>server_middleware</h3><p>Add middleware to the server. <code>app</code> is a <a href=\"https://github.com/senchalabs/connect\" target=\"_blank\" rel=\"noopener\">Connect</a> instance.</p>\n<p>For example, to add <code>X-Powered-By: Hexo</code> to the response header:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'server_middleware'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>)</span>&#123;</span><br><span class=\"line\">  app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;</span><br><span class=\"line\">    res.setHeader(<span class=\"string\">'X-Powered-By'</span>, <span class=\"string\">'Hexo'</span>);</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y671000dkoeouf8k39pf",
				"title": "Posts",
				"markdown": "## Create a Post\n\n``` js\nhexo.post.create(data, replace);\n```\n\nArgument | Description\n--- | ---\n`data` | Data\n`replace` | Replace existing files\n\nThe attributes of a post can be defined in `data`. The table below is not exhaustive. Additional attributes may be appended to the front-matter.\n\nData | Description\n--- | ---\n`title` | Title\n`slug` | URL\n`layout` | Layout. Defaults to the `default_layout` setting.\n`path` | Path. Hexo builds the post path based on the `new_post_path` setting by default.\n`date` | Date. Defaults to the current date.\n\n## Publish a Draft\n\n``` js\nhexo.post.publish(data, replace);\n```\n\nArgument | Description\n--- | ---\n`data` | Data\n`replace` | Replace existing files\n\nThe attributes of a post can be defined in `data`. The table below is not exhaustive. Additional attributes may be appended to the front-matter.\n\nData | Description\n--- | ---\n`slug` | File name (Required)\n`layout` | Layout. Defaults to the `default_layout` setting.\n\n## Render\n\n``` js\nhexo.post.render(source, data);\n```\n\nArgument | Description\n--- | ---\n`source` | Full path of a file (Optional)\n`data` | Data\n\nThe data must contain the `content` attribute. If not, Hexo will try to read the original file. The execution steps of this function are as follows:\n\n- Execute `before_post_render` filters\n- Render with Markdown or other renderers (depending on the extension name)\n- Render with [Nunjucks]\n- Execute `after_post_render` filters\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n",
				"html": "<h2 id=\"Create-a-Post\"><a href=\"#Create-a-Post\" class=\"headerlink\" title=\"Create a Post\"></a>Create a Post</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.create(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>Replace existing files</td>\n</tr>\n</tbody>\n</table>\n<p>The attributes of a post can be defined in <code>data</code>. The table below is not exhaustive. Additional attributes may be appended to the front-matter.</p>\n<table>\n<thead>\n<tr>\n<th>Data</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Title</td>\n</tr>\n<tr>\n<td><code>slug</code></td>\n<td>URL</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Defaults to the <code>default_layout</code> setting.</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Path. Hexo builds the post path based on the <code>new_post_path</code> setting by default.</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Date. Defaults to the current date.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Publish-a-Draft\"><a href=\"#Publish-a-Draft\" class=\"headerlink\" title=\"Publish a Draft\"></a>Publish a Draft</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.publish(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>Replace existing files</td>\n</tr>\n</tbody>\n</table>\n<p>The attributes of a post can be defined in <code>data</code>. The table below is not exhaustive. Additional attributes may be appended to the front-matter.</p>\n<table>\n<thead>\n<tr>\n<th>Data</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>slug</code></td>\n<td>File name (Required)</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Defaults to the <code>default_layout</code> setting.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Render\"><a href=\"#Render\" class=\"headerlink\" title=\"Render\"></a>Render</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.render(source, data);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>Full path of a file (Optional)</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n</tbody>\n</table>\n<p>The data must contain the <code>content</code> attribute. If not, Hexo will try to read the original file. The execution steps of this function are as follows:</p>\n<ul>\n<li>Execute <code>before_post_render</code> filters</li>\n<li>Render with Markdown or other renderers (depending on the extension name)</li>\n<li>Render with <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a></li>\n<li>Execute <code>after_post_render</code> filters</li>\n</ul>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y671000ekoeowkyt27vw",
				"title": "Processor",
				"markdown": "A processor is used to process source files in the `source` folder.\n\n## Synopsis\n\n``` js\nhexo.extend.processor.register(rule, function(file){\n // ...\n});\n```\n\nFor more info, see [box](box.html).\n",
				"html": "<p>A processor is used to process source files in the <code>source</code> folder.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.processor.register(rule, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>For more info, see <a href=\"box.html\">box</a>.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y672000fkoeoqc742158",
				"title": "Rendering",
				"markdown": "There are two methods for rendering files or strings in Hexo: the asynchronous `hexo.render.render` method and the synchronous `hexo.render.renderSync` method. Unsurprisingly, the two methods are very similar so only the asynchronous `hexo.render.render` will be further discussed in the below paragraphs.\n\n## Render a String\n\nWhen rendering a string, you must specify an `engine` to let Hexo know which rendering engine it should use.\n\n``` js\nhexo.render.render({text: 'example', engine: 'swig'}).then(function(result){\n  // ...\n});\n```\n\n## Render a File\n\nWhen rendering a file, it's not necessary to specify an `engine` because Hexo will detect the relevant rendering engine automatically based on the extension of the file. Of course, you are also allowed to explicitly define the `engine`.\n\n``` js\nhexo.render.render({path: 'path/to/file.swig'}).then(function(result){\n  // ...\n});\n```\n\n## Render Options\n\nYou can pass in an options object as the second argument.\n\n``` js\nhexo.render.render({text: ''}, {foo: 'foo'}).then(function(result){\n  // ...\n});\n```\n\n## after_render Filters\n\nWhen rendering is complete, Hexo will execute the corresponding `after_render` filters. For example, we can use this feature to implement a JavaScript minifier.\n\n``` js\nvar UglifyJS = require('uglify-js');\n\nhexo.extend.filter.register('after_render:js', function(str, data){\n  var result = UglifyJS.minify(str);\n  return result.code;\n});\n```\n\n## Check Whether a File is Renderable\n\nYou can use the `isRenderable` or `isRenderableSync` method to check whether a file path is renderable. Only when a corresponding renderer has been registered will this method return true.\n\n``` js\nhexo.render.isRenderable('layout.swig') // true\nhexo.render.isRenderable('image.png') // false\n```\n\n## Get the Output Extension\n\nUse the `getOutput` method to get the extension of the rendered output. If a file is not renderable, the method will return an empty string.\n\n``` js\nhexo.render.getOutput('layout.swig') // html\nhexo.render.getOutput('image.png') // '''\n```\n",
				"html": "<p>There are two methods for rendering files or strings in Hexo: the asynchronous <code>hexo.render.render</code> method and the synchronous <code>hexo.render.renderSync</code> method. Unsurprisingly, the two methods are very similar so only the asynchronous <code>hexo.render.render</code> will be further discussed in the below paragraphs.</p>\n<h2 id=\"Render-a-String\"><a href=\"#Render-a-String\" class=\"headerlink\" title=\"Render a String\"></a>Render a String</h2><p>When rendering a string, you must specify an <code>engine</code> to let Hexo know which rendering engine it should use.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">'example'</span>, <span class=\"attr\">engine</span>: <span class=\"string\">'swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Render-a-File\"><a href=\"#Render-a-File\" class=\"headerlink\" title=\"Render a File\"></a>Render a File</h2><p>When rendering a file, it’s not necessary to specify an <code>engine</code> because Hexo will detect the relevant rendering engine automatically based on the extension of the file. Of course, you are also allowed to explicitly define the <code>engine</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">path</span>: <span class=\"string\">'path/to/file.swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Render-Options\"><a href=\"#Render-Options\" class=\"headerlink\" title=\"Render Options\"></a>Render Options</h2><p>You can pass in an options object as the second argument.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">''</span>&#125;, &#123;<span class=\"attr\">foo</span>: <span class=\"string\">'foo'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"after-render-Filters\"><a href=\"#after-render-Filters\" class=\"headerlink\" title=\"after_render Filters\"></a>after_render Filters</h2><p>When rendering is complete, Hexo will execute the corresponding <code>after_render</code> filters. For example, we can use this feature to implement a JavaScript minifier.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> UglifyJS = <span class=\"built_in\">require</span>(<span class=\"string\">'uglify-js'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_render:js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str, data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = UglifyJS.minify(str);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result.code;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Check-Whether-a-File-is-Renderable\"><a href=\"#Check-Whether-a-File-is-Renderable\" class=\"headerlink\" title=\"Check Whether a File is Renderable\"></a>Check Whether a File is Renderable</h2><p>You can use the <code>isRenderable</code> or <code>isRenderableSync</code> method to check whether a file path is renderable. Only when a corresponding renderer has been registered will this method return true.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Get-the-Output-Extension\"><a href=\"#Get-the-Output-Extension\" class=\"headerlink\" title=\"Get the Output Extension\"></a>Get the Output Extension</h2><p>Use the <code>getOutput</code> method to get the extension of the rendered output. If a file is not renderable, the method will return an empty string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// html</span></span><br><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// '''</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y672000gkoeoc3gdz820",
				"title": "Renderer",
				"markdown": "A renderer is used to render content.\n\n## Synopsis\n\n``` js\nhexo.extend.renderer.register(name, output, function(data, options){\n  // ...\n}, sync);\n```\n\nArgument | Description\n--- | ---\n`name` | Input filename extension (lower case, without leading `.`)\n`output` | Output filename extension (lower case, without leading `.`)\n`sync` | Sync mode\n\nTwo arguments will be passed into the render function:\n\nArgument | Description\n--- | ---\n`data` | Include two attributes: file path `path` and file content `text`. `path` won't necessarily exist.\n`option` | Options\n\n## Example\n\n### Async Mode\n\n``` js\nvar stylus = require('stylus');\n\n// Callback\nhexo.extend.renderer.register('styl', 'css', function(data, options, callback){\n  stylus(data.text).set('filename', data.path).render(callback);\n});\n\n// Promise\nhexo.extend.renderer.register('styl', 'css', function(data, options){\n  return new Promise(function(resolve, reject){\n    resolve('test');\n  });\n});\n```\n\n### Sync Mode\n\n``` js\nvar ejs = require('ejs');\n\nhexo.extend.renderer.register('ejs', 'html', function(data, options){\n  options.filename = data.path;\n  return ejs.render(data.text, options);\n}, true);\n```\n",
				"html": "<p>A renderer is used to render content.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.renderer.register(name, output, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, sync);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>Input filename extension (lower case, without leading <code>.</code>)</td>\n</tr>\n<tr>\n<td><code>output</code></td>\n<td>Output filename extension (lower case, without leading <code>.</code>)</td>\n</tr>\n<tr>\n<td><code>sync</code></td>\n<td>Sync mode</td>\n</tr>\n</tbody>\n</table>\n<p>Two arguments will be passed into the render function:</p>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Include two attributes: file path <code>path</code> and file content <code>text</code>. <code>path</code> won’t necessarily exist.</td>\n</tr>\n<tr>\n<td><code>option</code></td>\n<td>Options</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><h3 id=\"Async-Mode\"><a href=\"#Async-Mode\" class=\"headerlink\" title=\"Async Mode\"></a>Async Mode</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> stylus = <span class=\"built_in\">require</span>(<span class=\"string\">'stylus'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Callback</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options, callback</span>)</span>&#123;</span><br><span class=\"line\">  stylus(data.text).set(<span class=\"string\">'filename'</span>, data.path).render(callback);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Promise</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'test'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Sync-Mode\"><a href=\"#Sync-Mode\" class=\"headerlink\" title=\"Sync Mode\"></a>Sync Mode</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'ejs'</span>, <span class=\"string\">'html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  options.filename = data.path;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, options);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y673000hkoeokgjcsjkz",
				"title": "Scaffolds",
				"markdown": "## Get a Scaffold\n\n``` js\nhexo.scaffold.get(name);\n```\n\n## Set a Scaffold\n\n``` js\nhexo.scaffold.set(name, content);\n```\n\n## Remove a Scaffold\n\n``` js\nhexo.scaffold.remove(name);\n```",
				"html": "<h2 id=\"Get-a-Scaffold\"><a href=\"#Get-a-Scaffold\" class=\"headerlink\" title=\"Get a Scaffold\"></a>Get a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.get(name);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Set-a-Scaffold\"><a href=\"#Set-a-Scaffold\" class=\"headerlink\" title=\"Set a Scaffold\"></a>Set a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.set(name, content);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-Scaffold\"><a href=\"#Remove-a-Scaffold\" class=\"headerlink\" title=\"Remove a Scaffold\"></a>Remove a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.remove(name);</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y673000ikoeo4o3iya0n",
				"title": "Router",
				"markdown": "The router saves all paths used in the site.\n\n## Get a Path\n\nThe `get` method returns a [Stream]. For example, to save the path data to a specified destination:\n\n``` js\nvar data = hexo.route.get('index.html');\nvar dest = fs.createWriteStream('somewhere');\n\ndata.pipe(dest);\n```\n\n## Set a Path\n\nThe `set` method takes a string, a [Buffer] or a function.\n\n``` js\n// String\nhexo.route.set('index.html', 'index')\n\n// Buffer\nhexo.route.set('index.html', new Buffer('index'));\n\n// Function (Promise)\nhexo.route.set('index.html', function(){\n  return new Promise(function(resolve, reject){\n    resolve('index');\n  });\n});\n\n// Function (Callback)\nhexo.route.set('index.html', function(callback){\n  callback(null, 'index');\n});\n```\n\nYou can also set a boolean for whether a path has been modified or not. This can speed up file generation as it allows for ignoring the unmodified files.\n\n``` js\nhexo.route.set('index.html', {\n    data: 'index',\n    modified: false\n});\n\n// hexo.route.isModified('index.html') => false\n```\n\n## Remove a Path\n\n``` js\nhexo.route.remove('index.html');\n```\n\n## Get the List of Routes\n\n``` js\nhexo.route.list();\n```\n\n## Format a Path\n\nThe `format` method transforms a string to a valid path.\n\n``` js\nhexo.route.format('archives/');\n// archives/index.html\n```\n\n[Stream]: http://nodejs.org/api/stream.html\n[Buffer]: http://nodejs.org/api/buffer.html\n",
				"html": "<p>The router saves all paths used in the site.</p>\n<h2 id=\"Get-a-Path\"><a href=\"#Get-a-Path\" class=\"headerlink\" title=\"Get a Path\"></a>Get a Path</h2><p>The <code>get</code> method returns a <a href=\"http://nodejs.org/api/stream.html\" target=\"_blank\" rel=\"noopener\">Stream</a>. For example, to save the path data to a specified destination:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = hexo.route.get(<span class=\"string\">'index.html'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dest = fs.createWriteStream(<span class=\"string\">'somewhere'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">data.pipe(dest);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Set-a-Path\"><a href=\"#Set-a-Path\" class=\"headerlink\" title=\"Set a Path\"></a>Set a Path</h2><p>The <code>set</code> method takes a string, a <a href=\"http://nodejs.org/api/buffer.html\" target=\"_blank\" rel=\"noopener\">Buffer</a> or a function.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// String</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"string\">'index'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Buffer</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"keyword\">new</span> Buffer(<span class=\"string\">'index'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Function (Promise)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'index'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Function (Callback)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">callback</span>)</span>&#123;</span><br><span class=\"line\">  callback(<span class=\"literal\">null</span>, <span class=\"string\">'index'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>You can also set a boolean for whether a path has been modified or not. This can speed up file generation as it allows for ignoring the unmodified files.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, &#123;</span><br><span class=\"line\">    data: <span class=\"string\">'index'</span>,</span><br><span class=\"line\">    modified: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// hexo.route.isModified('index.html') =&gt; false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-Path\"><a href=\"#Remove-a-Path\" class=\"headerlink\" title=\"Remove a Path\"></a>Remove a Path</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.remove(<span class=\"string\">'index.html'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Get-the-List-of-Routes\"><a href=\"#Get-the-List-of-Routes\" class=\"headerlink\" title=\"Get the List of Routes\"></a>Get the List of Routes</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.list();</span><br></pre></td></tr></table></figure>\n<h2 id=\"Format-a-Path\"><a href=\"#Format-a-Path\" class=\"headerlink\" title=\"Format a Path\"></a>Format a Path</h2><p>The <code>format</code> method transforms a string to a valid path.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.format(<span class=\"string\">'archives/'</span>);</span><br><span class=\"line\"><span class=\"comment\">// archives/index.html</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y674000jkoeooxtokgmg",
				"title": "Themes",
				"markdown": "`hexo.theme` inherits from [Box](box.html), and also saves templates.\n\n## Get a View\n\n``` js\nhexo.theme.getView(path);\n```\n\n## Set a View\n\n``` js\nhexo.theme.setView(path, data);\n```\n\n## Remove a View\n\n``` js\nhexo.theme.removeView(path);\n```\n\n## View\n\nViews have two methods: `render` and `renderSync`. These two methods are identical, but the former is asynchronous and the latter is synchronous. So for the sake of simplicity, we will only discuss `render` here.\n\n``` js\nvar view = hexo.theme.getView('layout.swig');\n\nview.render({foo: 1, bar: 2}).then(function(result){\n  // ...\n});\n```\n\nYou can pass options to the `render` method and it will try to process the template with the corresponding renderer and load the [helpers](helper.html). When rendering is complete, it will try to find whether a layout exists. If `layout` is `false` or if it doesn't exist, the result will be returned directly.\n",
				"html": "<p><code>hexo.theme</code> inherits from <a href=\"box.html\">Box</a>, and also saves templates.</p>\n<h2 id=\"Get-a-View\"><a href=\"#Get-a-View\" class=\"headerlink\" title=\"Get a View\"></a>Get a View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.getView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Set-a-View\"><a href=\"#Set-a-View\" class=\"headerlink\" title=\"Set a View\"></a>Set a View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.setView(path, data);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-View\"><a href=\"#Remove-a-View\" class=\"headerlink\" title=\"Remove a View\"></a>Remove a View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.removeView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h2><p>Views have two methods: <code>render</code> and <code>renderSync</code>. These two methods are identical, but the former is asynchronous and the latter is synchronous. So for the sake of simplicity, we will only discuss <code>render</code> here.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> view = hexo.theme.getView(<span class=\"string\">'layout.swig'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">view.render(&#123;<span class=\"attr\">foo</span>: <span class=\"number\">1</span>, <span class=\"attr\">bar</span>: <span class=\"number\">2</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>You can pass options to the <code>render</code> method and it will try to process the template with the corresponding renderer and load the <a href=\"helper.html\">helpers</a>. When rendering is complete, it will try to find whether a layout exists. If <code>layout</code> is <code>false</code> or if it doesn’t exist, the result will be returned directly.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y674000kkoeojrnrxqks",
				"title": "Tag",
				"markdown": "A tag allows users to quickly and easily insert snippets into their posts.\n\n## Synopsis\n\n``` js\nhexo.extend.tag.register(name, function(args, content){\n  // ...\n}, options);\n```\n\nTwo arguments will be passed into the tag function: `args` and `content`. `args` contains the arguments passed into the tag plugin and `content` is the wrapped content from the tag plugin.\n\nSince the introduction of asynchronous rendering in Hexo 3, we are using [Nunjucks] for rendering. The behavior may be somewhat different from that in [Swig].\n\n## Options\n\n### ends\n\nUse end tags. This option is `false` by default.\n\n### async\n\nEnable async mode. This option is `false` by default.\n\n## Examples\n\n### Without End Tags\n\nInsert a Youtube video.\n\n``` js\nhexo.extend.tag.register('youtube', function(args){\n  var id = args[0];\n  return '<div class=\"video-container\"><iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/' + id + '\" frameborder=\"0\" allowfullscreen></iframe></div>';\n});\n```\n\n### With End Tags\n\nInsert a pull quote.\n\n``` js\nhexo.extend.tag.register('pullquote', function(args, content){\n  var className =  args.join(' ');\n  return '<blockquote class=\"pullquote' + className + '\">' + content + '</blockquote>';\n}, {ends: true});\n```\n\n### Async Rendering\n\nInsert a file.\n\n``` js\nvar fs = require('hexo-fs');\nvar pathFn = require('path');\n\nhexo.extend.tag.register('include_code', function(args){\n  var filename = args[0];\n  var path = pathFn.join(hexo.source_dir, filename);\n\n  return fs.readFile(path).then(function(content){\n    return '<pre><code>' + content + '</code></pre>';\n  });\n}, {async: true});\n```\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n[Swig]: http://paularmstrong.github.io/swig/\n",
				"html": "<p>A tag allows users to quickly and easily insert snippets into their posts.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, options);</span><br></pre></td></tr></table></figure>\n<p>Two arguments will be passed into the tag function: <code>args</code> and <code>content</code>. <code>args</code> contains the arguments passed into the tag plugin and <code>content</code> is the wrapped content from the tag plugin.</p>\n<p>Since the introduction of asynchronous rendering in Hexo 3, we are using <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> for rendering. The behavior may be somewhat different from that in <a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a>.</p>\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><h3 id=\"ends\"><a href=\"#ends\" class=\"headerlink\" title=\"ends\"></a>ends</h3><p>Use end tags. This option is <code>false</code> by default.</p>\n<h3 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h3><p>Enable async mode. This option is <code>false</code> by default.</p>\n<h2 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h2><h3 id=\"Without-End-Tags\"><a href=\"#Without-End-Tags\" class=\"headerlink\" title=\"Without End Tags\"></a>Without End Tags</h3><p>Insert a Youtube video.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'youtube'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> id = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;div class=\"video-container\"&gt;&lt;iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/'</span> + id + <span class=\"string\">'\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"With-End-Tags\"><a href=\"#With-End-Tags\" class=\"headerlink\" title=\"With End Tags\"></a>With End Tags</h3><p>Insert a pull quote.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'pullquote'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> className =  args.join(<span class=\"string\">' '</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;blockquote class=\"pullquote'</span> + className + <span class=\"string\">'\"&gt;'</span> + content + <span class=\"string\">'&lt;/blockquote&gt;'</span>;</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">ends</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Async-Rendering\"><a href=\"#Async-Rendering\" class=\"headerlink\" title=\"Async Rendering\"></a>Async Rendering</h3><p>Insert a file.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> pathFn = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'include_code'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> filename = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> path = pathFn.join(hexo.source_dir, filename);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> fs.readFile(path).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">content</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;pre&gt;&lt;code&gt;'</span> + content + <span class=\"string\">'&lt;/code&gt;&lt;/pre&gt;'</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">async</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y675000lkoeozwwg6njp",
				"title": "Commands",
				"markdown": "## init\n\n``` bash\n$ hexo init [folder]\n```\n\nInitializes a website. If no `folder` is provided, Hexo will set up the website in the current directory.\n\n## new\n\n``` bash\n$ hexo new [layout] <title>\n```\n\nCreates a new article. If no `layout` is provided, Hexo will use the `default_layout` from [_config.yml](configuration.html). If the `title` contains spaces, surround it with quotation marks.\n\n## generate\n\n``` bash\n$ hexo generate\n```\n\nGenerates static files.\n\nOption | Description\n--- | ---\n`-d`, `--deploy` | Deploy after generation finishes\n`-w`, `--watch` | Watch file changes\n`-b`, `--bail` | Raise an error if any unhandled exception is thrown during generation\n`-f`, `--force` | Force regenerate\n\n## publish\n\n``` bash\n$ hexo publish [layout] <filename>\n```\n\nPublishes a draft.\n\n## server\n\n``` bash\n$ hexo server\n```\n\nStarts a local server. By default, this is at `http://localhost:4000/`.\n\nOption | Description\n--- | ---\n`-p`, `--port` | Override default port\n`-s`, `--static` | Only serve static files\n`-l`, `--log` | Enable logger. Override logger format.\n\n## deploy\n\n``` bash\n$ hexo deploy\n```\n\nDeploys your website.\n\nOption | Description\n--- | ---\n`-g`, `--generate` | Generate before deployment\n\n## render\n\n``` bash\n$ hexo render <file1> [file2] ...\n```\n\nRenders files.\n\nOption | Description\n--- | ---\n`-o`, `--output` | Output destination\n\n## migrate\n\n``` bash\n$ hexo migrate <type>\n```\n\n[Migrates](migration.html) content from other blog systems.\n\n## clean\n\n``` bash\n$ hexo clean\n```\n\nCleans the cache file (`db.json`) and generated files (`public`).\n\n## list\n\n``` bash\n$ hexo list <type>\n```\n\nLists all routes.\n\n## version\n\n``` bash\n$ hexo version\n```\n\nDisplays version information.\n\n## Options\n\n### Safe mode\n\n``` bash\n$ hexo --safe\n```\n\nDisables loading plugins and scripts. Try this if you encounter problems after installing a new plugin.\n\n### Debug mode\n\n``` bash\n$ hexo --debug\n```\n\nLogs verbose messages to the terminal and to `debug.log`. Try this if you encounter any problems with Hexo. If you see errors, please [raise a GitHub issue](https://github.com/hexojs/hexo/issues/new).\n\n### Silent mode\n\n``` bash\n$ hexo --silent\n```\n\nSilences output to the terminal.\n\n### Customize config file path\n\n``` bash\n$ hexo --config custom.yml\n```\n\nUses a custom config file (instead of `_config.yml`). Also accepts a comma-separated list (no spaces) of JSON or YAML config files that will combine the files into a single `_multiconfig.yml`.\n\n``` bash\n$ hexo --config custom.yml,custom2.json\n```\n\n### Display drafts\n\n``` bash\n$ hexo --draft\n```\n\nDisplays draft posts (stored in the `source/_drafts` folder).\n\n### Customize CWD\n\n``` bash\n$ hexo --cwd /path/to/cwd\n```\n\nCustomizes the path of current working directory.\n",
				"html": "<h2 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init [folder]</span><br></pre></td></tr></table></figure>\n<p>Initializes a website. If no <code>folder</code> is provided, Hexo will set up the website in the current directory.</p>\n<h2 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>Creates a new article. If no <code>layout</code> is provided, Hexo will use the <code>default_layout</code> from <a href=\"configuration.html\">_config.yml</a>. If the <code>title</code> contains spaces, surround it with quotation marks.</p>\n<h2 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>Generates static files.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-d</code>, <code>--deploy</code></td>\n<td>Deploy after generation finishes</td>\n</tr>\n<tr>\n<td><code>-w</code>, <code>--watch</code></td>\n<td>Watch file changes</td>\n</tr>\n<tr>\n<td><code>-b</code>, <code>--bail</code></td>\n<td>Raise an error if any unhandled exception is thrown during generation</td>\n</tr>\n<tr>\n<td><code>-f</code>, <code>--force</code></td>\n<td>Force regenerate</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"publish\"><a href=\"#publish\" class=\"headerlink\" title=\"publish\"></a>publish</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<p>Publishes a draft.</p>\n<h2 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>Starts a local server. By default, this is at <code>http://localhost:4000/</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-p</code>, <code>--port</code></td>\n<td>Override default port</td>\n</tr>\n<tr>\n<td><code>-s</code>, <code>--static</code></td>\n<td>Only serve static files</td>\n</tr>\n<tr>\n<td><code>-l</code>, <code>--log</code></td>\n<td>Enable logger. Override logger format.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>Deploys your website.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-g</code>, <code>--generate</code></td>\n<td>Generate before deployment</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>\n<p>Renders files.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-o</code>, <code>--output</code></td>\n<td>Output destination</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"migrate\"><a href=\"#migrate\" class=\"headerlink\" title=\"migrate\"></a>migrate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p><a href=\"migration.html\">Migrates</a> content from other blog systems.</p>\n<h2 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>Cleans the cache file (<code>db.json</code>) and generated files (<code>public</code>).</p>\n<h2 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo list &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>Lists all routes.</p>\n<h2 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n<p>Displays version information.</p>\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><h3 id=\"Safe-mode\"><a href=\"#Safe-mode\" class=\"headerlink\" title=\"Safe mode\"></a>Safe mode</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --safe</span><br></pre></td></tr></table></figure>\n<p>Disables loading plugins and scripts. Try this if you encounter problems after installing a new plugin.</p>\n<h3 id=\"Debug-mode\"><a href=\"#Debug-mode\" class=\"headerlink\" title=\"Debug mode\"></a>Debug mode</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --debug</span><br></pre></td></tr></table></figure>\n<p>Logs verbose messages to the terminal and to <code>debug.log</code>. Try this if you encounter any problems with Hexo. If you see errors, please <a href=\"https://github.com/hexojs/hexo/issues/new\" target=\"_blank\" rel=\"noopener\">raise a GitHub issue</a>.</p>\n<h3 id=\"Silent-mode\"><a href=\"#Silent-mode\" class=\"headerlink\" title=\"Silent mode\"></a>Silent mode</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --silent</span><br></pre></td></tr></table></figure>\n<p>Silences output to the terminal.</p>\n<h3 id=\"Customize-config-file-path\"><a href=\"#Customize-config-file-path\" class=\"headerlink\" title=\"Customize config file path\"></a>Customize config file path</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure>\n<p>Uses a custom config file (instead of <code>_config.yml</code>). Also accepts a comma-separated list (no spaces) of JSON or YAML config files that will combine the files into a single <code>_multiconfig.yml</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --config custom.yml,custom2.json</span><br></pre></td></tr></table></figure>\n<h3 id=\"Display-drafts\"><a href=\"#Display-drafts\" class=\"headerlink\" title=\"Display drafts\"></a>Display drafts</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --draft</span><br></pre></td></tr></table></figure>\n<p>Displays draft posts (stored in the <code>source/_drafts</code> folder).</p>\n<h3 id=\"Customize-CWD\"><a href=\"#Customize-CWD\" class=\"headerlink\" title=\"Customize CWD\"></a>Customize CWD</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure>\n<p>Customizes the path of current working directory.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y675000mkoeo7gr3miyx",
				"title": "Asset Folders",
				"markdown": "## Global Asset Folder\n\nAssets are non-post files in the `source` folder, such as images, CSS or JavaScript files. For instance, If you are only going to have a few images in the Hexo project, then the easiest way is to keep them in a `source/images` directory. Then, you can access them using something like `![](/images/image.jpg)`.\n\n## Post Asset Folder\n\n{% youtube feIDVQ2tz0o %}\n\nFor users who expect to regularly serve images and/or other assets, and for those who prefer to separate their assets on a post-per-post basis, Hexo also provides a more organized way to manage assets. This slightly more involved, but very convenient approach to asset management can be turned on by setting the `post_asset_folder` setting in `_config.yml` to true.\n\n``` yaml _config.yml\npost_asset_folder: true\n```\n\nWith asset folder management enabled, Hexo will create a folder every time you make a new post with the `hexo new [layout] <title>` command. This asset folder will have the same name as the markdown file associated with the post. Place all assets related to your post into the associated folder, and you will be able to reference them using a relative path, making for an easier and more convenient workflow.\n\n## Tag Plugins For Relative Path Referencing\n\nReferencing images or other assets using normal markdown syntax and relative paths may cause them to display incorrectly on archive or index pages. Plugins have been created by the community to address this issue in Hexo 2. However, with the release of Hexo 3, several new tag plugins were added to core. These enable you to reference your assets more easily in posts:\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\nFor example, with post asset folders enabled, if you place an image `example.jpg` into your asset folder, it will *not* appear on the index page if you reference it using a relative path with regular `![](/example.jpg)` markdown syntax (however, it will work as expected in the post itself).\n\nThe correct way to reference the image will thus be to use tag plugin syntax rather than markdown:\n\n```\n{% asset_img example.jpg This is an example image %}\n{% asset_img \"spaced asset.jpg\" \"spaced title\" %}\n```\n\nThis way, the image will appear both inside the post and on index and archive pages.\n",
				"html": "<h2 id=\"Global-Asset-Folder\"><a href=\"#Global-Asset-Folder\" class=\"headerlink\" title=\"Global Asset Folder\"></a>Global Asset Folder</h2><p>Assets are non-post files in the <code>source</code> folder, such as images, CSS or JavaScript files. For instance, If you are only going to have a few images in the Hexo project, then the easiest way is to keep them in a <code>source/images</code> directory. Then, you can access them using something like <code>![](/images/image.jpg)</code>.</p>\n<h2 id=\"Post-Asset-Folder\"><a href=\"#Post-Asset-Folder\" class=\"headerlink\" title=\"Post Asset Folder\"></a>Post Asset Folder</h2><div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/feIDVQ2tz0o\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>For users who expect to regularly serve images and/or other assets, and for those who prefer to separate their assets on a post-per-post basis, Hexo also provides a more organized way to manage assets. This slightly more involved, but very convenient approach to asset management can be turned on by setting the <code>post_asset_folder</code> setting in <code>_config.yml</code> to true.</p>\n<figure class=\"highlight yaml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>With asset folder management enabled, Hexo will create a folder every time you make a new post with the <code>hexo new [layout] &lt;title&gt;</code> command. This asset folder will have the same name as the markdown file associated with the post. Place all assets related to your post into the associated folder, and you will be able to reference them using a relative path, making for an easier and more convenient workflow.</p>\n<h2 id=\"Tag-Plugins-For-Relative-Path-Referencing\"><a href=\"#Tag-Plugins-For-Relative-Path-Referencing\" class=\"headerlink\" title=\"Tag Plugins For Relative Path Referencing\"></a>Tag Plugins For Relative Path Referencing</h2><p>Referencing images or other assets using normal markdown syntax and relative paths may cause them to display incorrectly on archive or index pages. Plugins have been created by the community to address this issue in Hexo 2. However, with the release of Hexo 3, several new tag plugins were added to core. These enable you to reference your assets more easily in posts:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<p>For example, with post asset folders enabled, if you place an image <code>example.jpg</code> into your asset folder, it will <em>not</em> appear on the index page if you reference it using a relative path with regular <code>![](/example.jpg)</code> markdown syntax (however, it will work as expected in the post itself).</p>\n<p>The correct way to reference the image will thus be to use tag plugin syntax rather than markdown:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</span><br><span class=\"line\">&#123;% asset_img &quot;spaced asset.jpg&quot; &quot;spaced title&quot; %&#125;</span><br></pre></td></tr></table></figure>\n<p>This way, the image will appear both inside the post and on index and archive pages.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y676000nkoeoz1v01abc",
				"title": "Contributing",
				"markdown": "## Development\n\nWe welcome you to join the development of Hexo. This document will help you through the process.\n\n### Before You Start\n\nPlease follow the coding style:\n\n- Follow [Google JavaScript Style Guide](https://google.github.io/styleguide/jsguide.html).\n- Use soft-tabs with a two space indent.\n- Don't put commas first.\n\n### Workflow\n\n1. Fork [hexojs/hexo].\n2. Clone the repository to your computer and install dependencies.\n\n    {% code %}\n    $ git clone https://github.com/<username>/hexo.git\n    $ cd hexo\n    $ npm install\n    $ git submodule update --init\n    {% endcode %}\n\n3. Create a feature branch.\n\n    {% code %}\n    $ git checkout -b new_feature\n    {% endcode %}\n\n4. Start hacking.\n5. Push the branch:\n\n    {% code %}\n    $ git push origin new_feature\n    {% endcode %}\n\n6. Create a pull request and describe the change.\n\n### Notice\n\n- Don't modify version number in `package.json`.\n- Your pull request will only get merged when tests passed. Don't forget to run tests before submission.\n\n    {% code %}\n    $ npm test\n    {% endcode %}\n\n## Updating Documentation\n\nThe Hexo documentation is open source and you can find the source code on [hexojs/site].\n\n### Workflow\n\n1. Fork [hexojs/site]\n2. Clone the repository to your computer and install dependencies.\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. Start editing the documentation. You can start the server for live previewing.\n\n    {% code %}\n    $ hexo server\n    {% endcode %}\n\n4. Push the branch.\n5. Create a pull request and describe the change.\n\n### Translating\n\n1. Add a new language folder in `source` folder. (All lower case)\n2. Copy Markdown and template files in `source` folder to the new language folder.\n3. Add the new language to `source/_data/language.yml`.\n4. Copy `en.yml` in `themes/navy/languages` and rename to the language name (all lower case).\n\n## Reporting Issues\n\nWhen you encounter some problems when using Hexo, you can find the solutions in [Troubleshooting](troubleshooting.html) or ask me on [GitHub](https://github.com/hexojs/hexo/issues) or [Google Group](https://groups.google.com/group/hexo). If you can't find the answer, please report it on GitHub.\n\n1. Represent the problem in [debug mode](commands.html#Debug_mode).\n2. Run `hexo version` and check the version info.    \n3. Post both debug message and version info on GitHub.\n\n[hexojs/hexo]: https://github.com/hexojs/hexo\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<h2 id=\"Development\"><a href=\"#Development\" class=\"headerlink\" title=\"Development\"></a>Development</h2><p>We welcome you to join the development of Hexo. This document will help you through the process.</p>\n<h3 id=\"Before-You-Start\"><a href=\"#Before-You-Start\" class=\"headerlink\" title=\"Before You Start\"></a>Before You Start</h3><p>Please follow the coding style:</p>\n<ul>\n<li>Follow <a href=\"https://google.github.io/styleguide/jsguide.html\" target=\"_blank\" rel=\"noopener\">Google JavaScript Style Guide</a>.</li>\n<li>Use soft-tabs with a two space indent.</li>\n<li>Don’t put commas first.</li>\n</ul>\n<h3 id=\"Workflow\"><a href=\"#Workflow\" class=\"headerlink\" title=\"Workflow\"></a>Workflow</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">hexojs/hexo</a>.</li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/hexo.git</span><br><span class=\"line\">$ cd hexo</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">$ git submodule update --init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Create a feature branch.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout -b new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Start hacking.</p>\n</li>\n<li><p>Push the branch:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push origin new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Create a pull request and describe the change.</p>\n</li>\n</ol>\n<h3 id=\"Notice\"><a href=\"#Notice\" class=\"headerlink\" title=\"Notice\"></a>Notice</h3><ul>\n<li>Don’t modify version number in <code>package.json</code>.</li>\n<li><p>Your pull request will only get merged when tests passed. Don’t forget to run tests before submission.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm test</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Updating-Documentation\"><a href=\"#Updating-Documentation\" class=\"headerlink\" title=\"Updating Documentation\"></a>Updating Documentation</h2><p>The Hexo documentation is open source and you can find the source code on <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a>.</p>\n<h3 id=\"Workflow-1\"><a href=\"#Workflow-1\" class=\"headerlink\" title=\"Workflow\"></a>Workflow</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Start editing the documentation. You can start the server for live previewing.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Push the branch.</p>\n</li>\n<li>Create a pull request and describe the change.</li>\n</ol>\n<h3 id=\"Translating\"><a href=\"#Translating\" class=\"headerlink\" title=\"Translating\"></a>Translating</h3><ol>\n<li>Add a new language folder in <code>source</code> folder. (All lower case)</li>\n<li>Copy Markdown and template files in <code>source</code> folder to the new language folder.</li>\n<li>Add the new language to <code>source/_data/language.yml</code>.</li>\n<li>Copy <code>en.yml</code> in <code>themes/navy/languages</code> and rename to the language name (all lower case).</li>\n</ol>\n<h2 id=\"Reporting-Issues\"><a href=\"#Reporting-Issues\" class=\"headerlink\" title=\"Reporting Issues\"></a>Reporting Issues</h2><p>When you encounter some problems when using Hexo, you can find the solutions in <a href=\"troubleshooting.html\">Troubleshooting</a> or ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> or <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a>. If you can’t find the answer, please report it on GitHub.</p>\n<ol>\n<li>Represent the problem in <a href=\"commands.html#Debug_mode\">debug mode</a>.</li>\n<li>Run <code>hexo version</code> and check the version info.    </li>\n<li>Post both debug message and version info on GitHub.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y676000okoeobjc1xg6e",
				"title": "Configuration",
				"markdown": "You can modify site settings in `_config.yml` or in an [alternate config file](#Using-an-Alternate-Config).\n\n### Site\n\nSetting | Description\n--- | ---\n`title` | The title of your website\n`subtitle` | The subtitle of your website\n`description` | The description of your website\n`author` | Your name\n`language` | The language of your website. Use a [2-lettter ISO-639-1 code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes). Default is `en`.\n`timezone` | The timezone of your website. Hexo uses the setting on your computer by default. You can find the list of available timezones [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). Some examples are `America/New_York`, `Japan`, and `UTC`.\n\n### URL\n\nSetting | Description | Default\n--- | --- | ---\n`url` | The URL of your website |\n`root` | The root directory of your website |\n`permalink` | The [permalink](permalinks.html) format of articles | `:year/:month/:day/:title/`\n`permalink_defaults` | Default values of each segment in permalink |\n\n{% note info Website in subdirectory %}\nIf your website is in a subdirectory (such as `http://example.org/blog`) set `url` to `http://example.org/blog` and set `root` to `/blog/`.\n{% endnote %}\n\n### Directory\n\nSetting | Description | Default\n--- | --- | ---\n`source_dir` | Source folder. Where your content is stored | `source`\n`public_dir` | Public folder. Where the static site will be generated | `public`\n`tag_dir` | Tag directory | `tags`\n`archive_dir` | Archive directory | `archives`\n`category_dir` | Category directory | `categories`\n`code_dir` | Include code directory (subdirectory of `source_dir`) | `downloads/code`\n`i18n_dir` | i18n directory | `:lang`\n`skip_render` | Paths that will be copied to `public` raw, without being rendered. You can use [glob expressions](https://github.com/isaacs/minimatch) for path matching.<br /><br />For example, `skip_render: mypage/**/*` will output `source/mypage/index.html` and `source/mypage/code.js` without altering them. |\n\n### Writing\n\nSetting | Description | Default\n--- | --- | ---\n`new_post_name` | The filename format for new posts | `:title.md`\n`default_layout` | Default layout | `post`\n`titlecase` | Transform titles into title case? | `false`\n`external_link` | Open external links in a new tab? | `true`\n`filename_case` | Transform filenames to `1` lower case; `2` upper case | `0`\n`render_drafts` | Display drafts? | `false`\n`post_asset_folder` | Enable the [Asset Folder](asset-folders.html)? | `false`\n`relative_link` | Make links relative to the root folder? | `false`\n`future` | Display future posts? | `true`\n`highlight` | Code block settings |\n\n### Category & Tag\n\nSetting | Description | Default\n--- | --- | ---\n`default_category` | Default category | `uncategorized`\n`category_map` | Category slugs |\n`tag_map` | Tag slugs |\n\n### Date / Time format\n\nHexo uses [Moment.js](http://momentjs.com/) to process dates.\n\nSetting | Description | Default\n--- | --- | ---\n`date_format` | Date format | `YYYY-MM-DD`\n`time_format` | Time format | `HH:mm:ss`\n\n### Pagination\n\nSetting | Description | Default\n--- | --- | ---\n`per_page` | The amount of posts displayed on a single page. `0` disables pagination | `10`\n`pagination_dir` | Pagination directory | `page`\n\n### Extensions\n\nSetting | Description\n--- | ---\n`theme` | Theme name. `false` disables theming\n`theme_config` | Theme configuration. Include any custom theme settings under this key to override theme defaults.\n`deploy` | Deployment settings\n\n\n### Include/Exclude Files or Folders\n\nIn the config file, set the include/exclude key to make hexo explicitly process or ignore certain files/folders.\n\nSetting | Description\n--- | ---\n`include` | Hexo by default ignores hidden files and folders, but setting this field will make Hexo process them\n`exclude` | Hexo process will ignore files list under this field\n\nSample:\n```yaml\n# Include/Exclude Files/Folders\ninclude:\n  - .nojekyll\nexclude:\n  - .DS_Store\n```\n\n### Using an Alternate Config\n\nA custom config file path can be specified by adding the `--config` flag to your `hexo` commands with a path to an alternate YAML or JSON config file, or a comma-separated list (no spaces) of multiple YAML or JSON files.\n\n``` bash\n# use 'custom.yml' in place of '_config.yml'\n$ hexo server --config custom.yml\n\n# use 'custom.yml' & 'custom2.json', prioritizing 'custom2.json'\n$ hexo server --config custom.yml,custom2.json\n```\n\nUsing multiple files combines all the config files and saves the merged settings to `_multiconfig.yml`. The later values take precedence. It works with any number of JSON and YAML files with arbitrarily deep objects. Note that **no spaces are allowed in the list**.\n\nFor instance, in the above example if `foo: bar` is in `custom.yml`, but `\"foo\": \"dinosaur\"` is in `custom2.json`, `_multiconfig.yml` will contain `foo: dinosaur`.\n\n### Overriding Theme Config\n\nHexo themes are independent projects, with separate `_config.yml` files.\n\nInstead of forking a theme, and maintaining a custom branch with your settings, you can configure it from your site's primary configuration file.\n\nExample configuration:\n\n```yml\n# _config.yml\ntheme_config:\n  bio: \"My awesome bio\"\n```\n\n```yml\n# themes/my-theme/_config.yml\nbio: \"Some generic bio\"\nlogo: \"a-cool-image.png\"\n```\n\nResulting theme configuration:\n\n```json\n{\n  bio: \"My awesome bio\",\n  logo: \"a-cool-image.png\"\n}\n```\n",
				"html": "<p>You can modify site settings in <code>_config.yml</code> or in an <a href=\"#Using-an-Alternate-Config\">alternate config file</a>.</p>\n<h3 id=\"Site\"><a href=\"#Site\" class=\"headerlink\" title=\"Site\"></a>Site</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>The title of your website</td>\n</tr>\n<tr>\n<td><code>subtitle</code></td>\n<td>The subtitle of your website</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>The description of your website</td>\n</tr>\n<tr>\n<td><code>author</code></td>\n<td>Your name</td>\n</tr>\n<tr>\n<td><code>language</code></td>\n<td>The language of your website. Use a <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"_blank\" rel=\"noopener\">2-lettter ISO-639-1 code</a>. Default is <code>en</code>.</td>\n</tr>\n<tr>\n<td><code>timezone</code></td>\n<td>The timezone of your website. Hexo uses the setting on your computer by default. You can find the list of available timezones <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" target=\"_blank\" rel=\"noopener\">here</a>. Some examples are <code>America/New_York</code>, <code>Japan</code>, and <code>UTC</code>.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>url</code></td>\n<td>The URL of your website</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>The root directory of your website</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>The <a href=\"permalinks.html\">permalink</a> format of articles</td>\n<td><code>:year/:month/:day/:title/</code></td>\n</tr>\n<tr>\n<td><code>permalink_defaults</code></td>\n<td>Default values of each segment in permalink</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note info\"><strong class=\"note-title\">Website in subdirectory</strong><p>If your website is in a subdirectory (such as <code>http://example.org/blog</code>) set <code>url</code> to <code>http://example.org/blog</code> and set <code>root</code> to <code>/blog/</code>.</p>\n</blockquote>\n<h3 id=\"Directory\"><a href=\"#Directory\" class=\"headerlink\" title=\"Directory\"></a>Directory</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source_dir</code></td>\n<td>Source folder. Where your content is stored</td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>public_dir</code></td>\n<td>Public folder. Where the static site will be generated</td>\n<td><code>public</code></td>\n</tr>\n<tr>\n<td><code>tag_dir</code></td>\n<td>Tag directory</td>\n<td><code>tags</code></td>\n</tr>\n<tr>\n<td><code>archive_dir</code></td>\n<td>Archive directory</td>\n<td><code>archives</code></td>\n</tr>\n<tr>\n<td><code>category_dir</code></td>\n<td>Category directory</td>\n<td><code>categories</code></td>\n</tr>\n<tr>\n<td><code>code_dir</code></td>\n<td>Include code directory (subdirectory of <code>source_dir</code>)</td>\n<td><code>downloads/code</code></td>\n</tr>\n<tr>\n<td><code>i18n_dir</code></td>\n<td>i18n directory</td>\n<td><code>:lang</code></td>\n</tr>\n<tr>\n<td><code>skip_render</code></td>\n<td>Paths that will be copied to <code>public</code> raw, without being rendered. You can use <a href=\"https://github.com/isaacs/minimatch\" target=\"_blank\" rel=\"noopener\">glob expressions</a> for path matching.<br><br>For example, <code>skip_render: mypage/**/*</code> will output <code>source/mypage/index.html</code> and <code>source/mypage/code.js</code> without altering them.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Writing\"><a href=\"#Writing\" class=\"headerlink\" title=\"Writing\"></a>Writing</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>new_post_name</code></td>\n<td>The filename format for new posts</td>\n<td><code>:title.md</code></td>\n</tr>\n<tr>\n<td><code>default_layout</code></td>\n<td>Default layout</td>\n<td><code>post</code></td>\n</tr>\n<tr>\n<td><code>titlecase</code></td>\n<td>Transform titles into title case?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>external_link</code></td>\n<td>Open external links in a new tab?</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>filename_case</code></td>\n<td>Transform filenames to <code>1</code> lower case; <code>2</code> upper case</td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>render_drafts</code></td>\n<td>Display drafts?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>post_asset_folder</code></td>\n<td>Enable the <a href=\"asset-folders.html\">Asset Folder</a>?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>relative_link</code></td>\n<td>Make links relative to the root folder?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>future</code></td>\n<td>Display future posts?</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>highlight</code></td>\n<td>Code block settings</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Category-amp-Tag\"><a href=\"#Category-amp-Tag\" class=\"headerlink\" title=\"Category &amp; Tag\"></a>Category &amp; Tag</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>default_category</code></td>\n<td>Default category</td>\n<td><code>uncategorized</code></td>\n</tr>\n<tr>\n<td><code>category_map</code></td>\n<td>Category slugs</td>\n<td></td>\n</tr>\n<tr>\n<td><code>tag_map</code></td>\n<td>Tag slugs</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Date-Time-format\"><a href=\"#Date-Time-format\" class=\"headerlink\" title=\"Date / Time format\"></a>Date / Time format</h3><p>Hexo uses <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> to process dates.</p>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>date_format</code></td>\n<td>Date format</td>\n<td><code>YYYY-MM-DD</code></td>\n</tr>\n<tr>\n<td><code>time_format</code></td>\n<td>Time format</td>\n<td><code>HH:mm:ss</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Pagination\"><a href=\"#Pagination\" class=\"headerlink\" title=\"Pagination\"></a>Pagination</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>per_page</code></td>\n<td>The amount of posts displayed on a single page. <code>0</code> disables pagination</td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td><code>pagination_dir</code></td>\n<td>Pagination directory</td>\n<td><code>page</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Extensions\"><a href=\"#Extensions\" class=\"headerlink\" title=\"Extensions\"></a>Extensions</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>theme</code></td>\n<td>Theme name. <code>false</code> disables theming</td>\n</tr>\n<tr>\n<td><code>theme_config</code></td>\n<td>Theme configuration. Include any custom theme settings under this key to override theme defaults.</td>\n</tr>\n<tr>\n<td><code>deploy</code></td>\n<td>Deployment settings</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Include-Exclude-Files-or-Folders\"><a href=\"#Include-Exclude-Files-or-Folders\" class=\"headerlink\" title=\"Include/Exclude Files or Folders\"></a>Include/Exclude Files or Folders</h3><p>In the config file, set the include/exclude key to make hexo explicitly process or ignore certain files/folders.</p>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>include</code></td>\n<td>Hexo by default ignores hidden files and folders, but setting this field will make Hexo process them</td>\n</tr>\n<tr>\n<td><code>exclude</code></td>\n<td>Hexo process will ignore files list under this field</td>\n</tr>\n</tbody>\n</table>\n<p>Sample:<br><figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Include/Exclude Files/Folders</span></span><br><span class=\"line\"><span class=\"attr\">include:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">.nojekyll</span></span><br><span class=\"line\"><span class=\"attr\">exclude:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">.DS_Store</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Using-an-Alternate-Config\"><a href=\"#Using-an-Alternate-Config\" class=\"headerlink\" title=\"Using an Alternate Config\"></a>Using an Alternate Config</h3><p>A custom config file path can be specified by adding the <code>--config</code> flag to your <code>hexo</code> commands with a path to an alternate YAML or JSON config file, or a comma-separated list (no spaces) of multiple YAML or JSON files.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># use 'custom.yml' in place of '_config.yml'</span></span><br><span class=\"line\">$ hexo server --config custom.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># use 'custom.yml' &amp; 'custom2.json', prioritizing 'custom2.json'</span></span><br><span class=\"line\">$ hexo server --config custom.yml,custom2.json</span><br></pre></td></tr></table></figure>\n<p>Using multiple files combines all the config files and saves the merged settings to <code>_multiconfig.yml</code>. The later values take precedence. It works with any number of JSON and YAML files with arbitrarily deep objects. Note that <strong>no spaces are allowed in the list</strong>.</p>\n<p>For instance, in the above example if <code>foo: bar</code> is in <code>custom.yml</code>, but <code>&quot;foo&quot;: &quot;dinosaur&quot;</code> is in <code>custom2.json</code>, <code>_multiconfig.yml</code> will contain <code>foo: dinosaur</code>.</p>\n<h3 id=\"Overriding-Theme-Config\"><a href=\"#Overriding-Theme-Config\" class=\"headerlink\" title=\"Overriding Theme Config\"></a>Overriding Theme Config</h3><p>Hexo themes are independent projects, with separate <code>_config.yml</code> files.</p>\n<p>Instead of forking a theme, and maintaining a custom branch with your settings, you can configure it from your site’s primary configuration file.</p>\n<p>Example configuration:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># _config.yml</span></span><br><span class=\"line\"><span class=\"attr\">theme_config:</span></span><br><span class=\"line\"><span class=\"attr\">  bio:</span> <span class=\"string\">\"My awesome bio\"</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># themes/my-theme/_config.yml</span></span><br><span class=\"line\"><span class=\"attr\">bio:</span> <span class=\"string\">\"Some generic bio\"</span></span><br><span class=\"line\"><span class=\"attr\">logo:</span> <span class=\"string\">\"a-cool-image.png\"</span></span><br></pre></td></tr></table></figure>\n<p>Resulting theme configuration:</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  bio: \"My awesome bio\",</span><br><span class=\"line\">  logo: \"a-cool-image.png\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y677000pkoeokyn0s65n",
				"title": "Data Files",
				"markdown": "Sometimes you may need to use some data in templates which is not directly available in your posts, or you want to reuse the data elsewhere. For such use cases, Hexo 3 introduced the new **Data files**. This feature loads YAML or JSON files in `source/_data` folder so you can use them in your site.\n\n{% youtube CN31plHbI-w %}\n\nFor example, add `menu.yml` in `source/_data` folder.\n\n``` yaml\nHome: /\nGallery: /gallery/\nArchives: /archives/\n```\n\nAnd you can use them in templates:\n\n```\n<% for (var link in site.data.menu) { %>\n  <a href=\"<%= site.data.menu[link] %>\"> <%= link %> </a>\n<% } %>\n```\n\nrender like this :\n\n```\n<a href=\"/\"> Home </a>\n<a href=\"/gallery/\"> Gallery </a>\n<a href=\"/archives/\"> Archives </a>\n```",
				"html": "<p>Sometimes you may need to use some data in templates which is not directly available in your posts, or you want to reuse the data elsewhere. For such use cases, Hexo 3 introduced the new <strong>Data files</strong>. This feature loads YAML or JSON files in <code>source/_data</code> folder so you can use them in your site.</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/CN31plHbI-w\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>For example, add <code>menu.yml</code> in <code>source/_data</code> folder.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Home:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">Gallery:</span> <span class=\"string\">/gallery/</span></span><br><span class=\"line\"><span class=\"attr\">Archives:</span> <span class=\"string\">/archives/</span></span><br></pre></td></tr></table></figure>\n<p>And you can use them in templates:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;% for (var link in site.data.menu) &#123; %&gt;</span><br><span class=\"line\">  &lt;a href=&quot;&lt;%= site.data.menu[link] %&gt;&quot;&gt; &lt;%= link %&gt; &lt;/a&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>render like this :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;/&quot;&gt; Home &lt;/a&gt;</span><br><span class=\"line\">&lt;a href=&quot;/gallery/&quot;&gt; Gallery &lt;/a&gt;</span><br><span class=\"line\">&lt;a href=&quot;/archives/&quot;&gt; Archives &lt;/a&gt;</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y677000qkoeo7uxgo7wf",
				"title": "Deployment",
				"markdown": "Hexo provides a fast and easy deployment strategy. You only need one single command to deploy your site to your servers.\n\n``` bash\n$ hexo deploy\n```\n\nBefore your first deployment, you will have to modify some settings in `_config.yml`. A valid deployment setting must have a `type` field. For example:\n\n``` yaml\ndeploy:\n  type: git\n```\n\nYou can use multiple deployers. Hexo will execute each deployer in order.\n\n``` yaml\ndeploy:\n- type: git\n  repo:\n- type: heroku\n  repo:\n```\n\n## Git\n\n1. Install [hexo-deployer-git].\n``` bash\n$ npm install hexo-deployer-git --save\n```\n2. Edit **_config.yml** (with example values shown below as comments):\n```yaml\ndeploy:\n  type: git   \n  repo: <repository url>  #https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io\n  branch: [branch] #published\n  message: [message]  #leave this blank\n```\nOption | Description\n--- | ---\n`repo` | GitHub/Bitbucket/Coding/GitLab repository URL\n`branch` | Branch name. The deployer will detect the branch automatically if you are using GitHub or GitCafe.\n`message` | Customize commit message (Default to `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n3. Upload your site: `./node_modules/.bin/hexo clean && ./node_modules/.bin/hexo deploy` (or `hexo clean && hexo deploy` if you installed Hexo globally).\n4. On Github/BitBucket/Gitlab go to your repository settngs and change your main branch from `master` to `published` (or whatever you called it in your _config.yml). Now your site will show as your account's homepage.\n\n### How does it work exactly?\nYour repository will have a **master** branch when you first made it. Keep working on this branch to create your site. When you deploy Hexo will create, or update, a new branch on the remote site (called **published** in the config above). Deployment won't create a new branch locally, nor will it mess with your existing source code in the master branch locally or on the remote. You still need to keep pushing commits to the master branch manually to the remote server to keep your site backed up. In addition, if you are using a CNAME file to customize your Github Pages domain name, you need to put the CNAME file under `source_dir` so that Hexo can push it to the published branch.\n\n## Heroku\n\nInstall [hexo-deployer-heroku].\n\n``` bash\n$ npm install hexo-deployer-heroku --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: heroku\n  repo: <repository url>\n  message: [message]\n```\n\nOption | Description\n--- | ---\n`repo`, `repository` | Heroku repository URL\n`message` | Customize commit message (Default to `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## Netlify\n\n[Netlify](https://www.netlify.com/) provides continuous deployment (Git-triggered builds), an intelligent global CDN, full DNS (including custom domains), automated HTTPS, asset acceleration, and a lot more. It is a unified platform that automates your code to create high-performant, easily maintainable sites and web apps.\n\nThere are two different ways to deploy your sites on Netlify. The most common way is to use the web UI. Go to the [create a new site page](https://app.netlify.com/start), select your project repo from GitHub, GitLab, or Bitbucket, and follow the prompts.\n\nAlternatively, you can use Netlify's [Node based CLI](https://www.netlify.com/docs/cli/) tool to manage and deploy sites on Netlify without leaving your terminal.\n\nYou can also add a [Deploy to Netlify Button](https://www.netlify.com/docs/deploy-button/) in your README.file to allow others to create a copy of your repository and be deployed to Netlify via one click.\n\n\n## Rsync\n\nInstall [hexo-deployer-rsync].\n\n``` bash\n$ npm install hexo-deployer-rsync --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: rsync\n  host: <host>\n  user: <user>\n  root: <root>\n  port: [port]\n  delete: [true|false]\n  verbose: [true|false]\n  ignore_errors: [true|false]\n```\n\nOption | Description | Default\n--- | --- | ---\n`host` | Address of remote host |\n`user` | Username |\n`root` | Root directory of remote host |\n`port` | Port | 22\n`delete` | Delete old files on remote host | true\n`verbose` | Display verbose messages | true\n`ignore_errors` | Ignore errors | false\n\n## OpenShift\n\nInstall [hexo-deployer-openshift].\n\n``` bash\n$ npm install hexo-deployer-openshift --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: openshift\n  repo: <repository url>\n  message: [message]\n```\n\nOption | Description\n--- | ---\n`repo` | OpenShift repository URL\n`message` | Customize commit message (Default to `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## FTPSync\n\nInstall [hexo-deployer-ftpsync].\n\n``` bash\n$ npm install hexo-deployer-ftpsync --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: ftpsync\n  host: <host>\n  user: <user>\n  pass: <password>\n  remote: [remote]\n  port: [port]\n  ignore: [ignore]\n  connections: [connections]\n  verbose: [true|false]\n```\n\nOption | Description | Default\n--- | --- | ---\n`host` | Address of remote host |\n`user` | Username |\n`pass` | Password |\n`remote` | Root directory of remote host | `/`\n`port` | Port | 21\n`ignore` | Ignore the files on either host or remote |\n`connections` | Connections number | 1\n`verbose` | Display verbose messages | false\n\n## SFTP\n\nInstall [hexo-deployer-sftp]. Deploys the site via SFTP, allowing for passwordless connections using ssh-agent.\n\n``` bash\n$ npm install hexo-deployer-sftp --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: sftp\n  host: <host>\n  user: <user>\n  pass: <password>\n  remotePath: [remote path]\n  port: [port]\n  privateKey: [path/to/privateKey]\n  passphrase: [passphrase]\n  agent: [path/to/agent/socket]\n```\n\nOption | Description | Default\n--- | --- | ---\n`host` | Address of remote host |\n`user` | Username |\n`pass` | Password |\n`remotePath` | Root directory of remote host | `/`\n`port` | Port | 22\n`privateKey` | Path to a ssh private key |\n`passphrase` | Optional passphrase for the private key | \n`agent` | Path to the ssh-agent socket | `$SSH_AUTH_SOCK`\n\n## Other Methods\n\nAll generated files are saved in the `public` folder. You can copy them to wherever you like.\n\n[hexo-deployer-git]: https://github.com/hexojs/hexo-deployer-git\n[hexo-deployer-heroku]: https://github.com/hexojs/hexo-deployer-heroku\n[hexo-deployer-rsync]: https://github.com/hexojs/hexo-deployer-rsync\n[hexo-deployer-openshift]: https://github.com/hexojs/hexo-deployer-openshift\n[hexo-deployer-ftpsync]: https://github.com/hexojs/hexo-deployer-ftpsync\n[hexo-deployer-sftp]: https://github.com/lucascaro/hexo-deployer-sftp\n",
				"html": "<p>Hexo provides a fast and easy deployment strategy. You only need one single command to deploy your site to your servers.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>Before your first deployment, you will have to modify some settings in <code>_config.yml</code>. A valid deployment setting must have a <code>type</code> field. For example:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br></pre></td></tr></table></figure>\n<p>You can use multiple deployers. Hexo will execute each deployer in order.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><ol>\n<li><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Edit <strong>_config.yml</strong> (with example values shown below as comments):</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span>   </span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span>  <span class=\"comment\">#https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">[branch]</span> <span class=\"comment\">#published</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span>  <span class=\"comment\">#leave this blank</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>GitHub/Bitbucket/Coding/GitLab repository URL</td>\n</tr>\n<tr>\n<td><code>branch</code></td>\n<td>Branch name. The deployer will detect the branch automatically if you are using GitHub or GitCafe.</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li>Upload your site: <code>./node_modules/.bin/hexo clean &amp;&amp; ./node_modules/.bin/hexo deploy</code> (or <code>hexo clean &amp;&amp; hexo deploy</code> if you installed Hexo globally).</li>\n<li>On Github/BitBucket/Gitlab go to your repository settngs and change your main branch from <code>master</code> to <code>published</code> (or whatever you called it in your _config.yml). Now your site will show as your account’s homepage.</li>\n</ol>\n<h3 id=\"How-does-it-work-exactly\"><a href=\"#How-does-it-work-exactly\" class=\"headerlink\" title=\"How does it work exactly?\"></a>How does it work exactly?</h3><p>Your repository will have a <strong>master</strong> branch when you first made it. Keep working on this branch to create your site. When you deploy Hexo will create, or update, a new branch on the remote site (called <strong>published</strong> in the config above). Deployment won’t create a new branch locally, nor will it mess with your existing source code in the master branch locally or on the remote. You still need to keep pushing commits to the master branch manually to the remote server to keep your site backed up. In addition, if you are using a CNAME file to customize your Github Pages domain name, you need to put the CNAME file under <code>source_dir</code> so that Hexo can push it to the published branch.</p>\n<h2 id=\"Heroku\"><a href=\"#Heroku\" class=\"headerlink\" title=\"Heroku\"></a>Heroku</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-heroku\" target=\"_blank\" rel=\"noopener\">hexo-deployer-heroku</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-heroku --save</span><br></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code>, <code>repository</code></td>\n<td>Heroku repository URL</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Netlify\"><a href=\"#Netlify\" class=\"headerlink\" title=\"Netlify\"></a>Netlify</h2><p><a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"noopener\">Netlify</a> provides continuous deployment (Git-triggered builds), an intelligent global CDN, full DNS (including custom domains), automated HTTPS, asset acceleration, and a lot more. It is a unified platform that automates your code to create high-performant, easily maintainable sites and web apps.</p>\n<p>There are two different ways to deploy your sites on Netlify. The most common way is to use the web UI. Go to the <a href=\"https://app.netlify.com/start\" target=\"_blank\" rel=\"noopener\">create a new site page</a>, select your project repo from GitHub, GitLab, or Bitbucket, and follow the prompts.</p>\n<p>Alternatively, you can use Netlify’s <a href=\"https://www.netlify.com/docs/cli/\" target=\"_blank\" rel=\"noopener\">Node based CLI</a> tool to manage and deploy sites on Netlify without leaving your terminal.</p>\n<p>You can also add a <a href=\"https://www.netlify.com/docs/deploy-button/\" target=\"_blank\" rel=\"noopener\">Deploy to Netlify Button</a> in your README.file to allow others to create a copy of your repository and be deployed to Netlify via one click.</p>\n<h2 id=\"Rsync\"><a href=\"#Rsync\" class=\"headerlink\" title=\"Rsync\"></a>Rsync</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-rsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-rsync</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-rsync --save</span><br></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">rsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  root:</span> <span class=\"string\">&lt;root&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  delete:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore_errors:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Address of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Username</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>Root directory of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Port</td>\n<td>22</td>\n</tr>\n<tr>\n<td><code>delete</code></td>\n<td>Delete old files on remote host</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Display verbose messages</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>ignore_errors</code></td>\n<td>Ignore errors</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"OpenShift\"><a href=\"#OpenShift\" class=\"headerlink\" title=\"OpenShift\"></a>OpenShift</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-openshift\" target=\"_blank\" rel=\"noopener\">hexo-deployer-openshift</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-openshift --save</span><br></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">openshift</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>OpenShift repository URL</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"FTPSync\"><a href=\"#FTPSync\" class=\"headerlink\" title=\"FTPSync\"></a>FTPSync</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-ftpsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-ftpsync</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-ftpsync --save</span><br></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">ftpsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  pass:</span> <span class=\"string\">&lt;password&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  remote:</span> <span class=\"string\">[remote]</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore:</span> <span class=\"string\">[ignore]</span></span><br><span class=\"line\"><span class=\"attr\">  connections:</span> <span class=\"string\">[connections]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Address of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Username</td>\n<td></td>\n</tr>\n<tr>\n<td><code>pass</code></td>\n<td>Password</td>\n<td></td>\n</tr>\n<tr>\n<td><code>remote</code></td>\n<td>Root directory of remote host</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Port</td>\n<td>21</td>\n</tr>\n<tr>\n<td><code>ignore</code></td>\n<td>Ignore the files on either host or remote</td>\n<td></td>\n</tr>\n<tr>\n<td><code>connections</code></td>\n<td>Connections number</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Display verbose messages</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"SFTP\"><a href=\"#SFTP\" class=\"headerlink\" title=\"SFTP\"></a>SFTP</h2><p>Install <a href=\"https://github.com/lucascaro/hexo-deployer-sftp\" target=\"_blank\" rel=\"noopener\">hexo-deployer-sftp</a>. Deploys the site via SFTP, allowing for passwordless connections using ssh-agent.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-sftp --save</span><br></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">sftp</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  pass:</span> <span class=\"string\">&lt;password&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  remotePath:</span> <span class=\"string\">[remote</span> <span class=\"string\">path]</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  privateKey:</span> <span class=\"string\">[path/to/privateKey]</span></span><br><span class=\"line\"><span class=\"attr\">  passphrase:</span> <span class=\"string\">[passphrase]</span></span><br><span class=\"line\"><span class=\"attr\">  agent:</span> <span class=\"string\">[path/to/agent/socket]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Address of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Username</td>\n<td></td>\n</tr>\n<tr>\n<td><code>pass</code></td>\n<td>Password</td>\n<td></td>\n</tr>\n<tr>\n<td><code>remotePath</code></td>\n<td>Root directory of remote host</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Port</td>\n<td>22</td>\n</tr>\n<tr>\n<td><code>privateKey</code></td>\n<td>Path to a ssh private key</td>\n<td></td>\n</tr>\n<tr>\n<td><code>passphrase</code></td>\n<td>Optional passphrase for the private key</td>\n<td></td>\n</tr>\n<tr>\n<td><code>agent</code></td>\n<td>Path to the ssh-agent socket</td>\n<td><code>$SSH_AUTH_SOCK</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Other-Methods\"><a href=\"#Other-Methods\" class=\"headerlink\" title=\"Other Methods\"></a>Other Methods</h2><p>All generated files are saved in the <code>public</code> folder. You can copy them to wherever you like.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y678000rkoeo9uisi95l",
				"title": "Generating",
				"markdown": "Generating static files with Hexo is quite easy and fast.\n\n``` bash\n$ hexo generate\n```\n\n{% youtube viEJQPVCoLU %}\n\n### Watch for File Changes\n\nHexo can watch for file changes and regenerate files immediately. Hexo will compare the SHA1 checksum of your files and only write if file changes are detected.\n\n``` bash\n$ hexo generate --watch\n```\n\n### Deploy After Generating\n\nTo deploy after generating, you can run one of the following commands. There is no difference between the two.\n\n``` bash\n$ hexo generate --deploy\n$ hexo deploy --generate\n```\n",
				"html": "<p>Generating static files with Hexo is quite easy and fast.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/viEJQPVCoLU\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h3 id=\"Watch-for-File-Changes\"><a href=\"#Watch-for-File-Changes\" class=\"headerlink\" title=\"Watch for File Changes\"></a>Watch for File Changes</h3><p>Hexo can watch for file changes and regenerate files immediately. Hexo will compare the SHA1 checksum of your files and only write if file changes are detected.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --watch</span><br></pre></td></tr></table></figure>\n<h3 id=\"Deploy-After-Generating\"><a href=\"#Deploy-After-Generating\" class=\"headerlink\" title=\"Deploy After Generating\"></a>Deploy After Generating</h3><p>To deploy after generating, you can run one of the following commands. There is no difference between the two.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --deploy</span><br><span class=\"line\">$ hexo deploy --generate</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y678000skoeoqmdds1xm",
				"title": "Front-matter",
				"markdown": "\n{% youtube pfD6FCZdW4Q %}\n\nFront-matter is a block of YAML or JSON at the beginning of the file that is used to configure settings for your writings. Front-matter is terminated by three dashes when written in YAML or three semicolons when written in JSON.\n\n**YAML**\n``` yaml\ntitle: Hello World\ndate: 2013/7/13 20:46:25\n---\n```\n\n**JSON**\n``` json\n\"title\": \"Hello World\",\n\"date\": \"2013/7/13 20:46:25\"\n;;;\n```\n\n### Settings & Their Default Values\n\nSetting | Description | Default\n--- | --- | ---\n`layout` | Layout |\n`title` | Title |\n`date` | Published date | File created date\n`updated` | Updated date | File updated date\n`comments` | Enables comment feature for the post | true\n`tags` | Tags (Not available for pages) |\n`categories` | Categories (Not available for pages) |\n`permalink` | Overrides the default permalink of the post |\n\n#### Categories & Tags\n\nOnly posts support the use of categories and tags. Categories apply to posts in order, resulting in a hierarchy of classifications and sub-classifications. Tags are all defined on the same hierarchical level so the order in which they appear is not important.\n\n**Example**\n\n``` yaml\ncategories:\n- Sports\n- Baseball\ntags:\n- Injury\n- Fight\n- Shocking\n```\n\nIf you want to apply multiple category hierarchies, use a list of names instead of a single name. If Hexo sees any categories defined this way on a post, it will treat each category for that post as its own independent hierarchy.\n\n**Example**\n\n``` yaml\ncategories:\n- [Sports, Baseball]\n- [MLB, American League, Boston Red Sox]\n- [MLB, American League, New York Yankees]\n- Rivalries\n```\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/pfD6FCZdW4Q\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>Front-matter is a block of YAML or JSON at the beginning of the file that is used to configure settings for your writings. Front-matter is terminated by three dashes when written in YAML or three semicolons when written in JSON.</p>\n<p><strong>YAML</strong><br><figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"string\">/7/13</span> <span class=\"number\">20</span><span class=\"string\">:46:25</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>JSON</strong><br><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"title\": \"Hello World\",</span><br><span class=\"line\">\"date\": \"2013/7/13 20:46:25\"</span><br><span class=\"line\">;;;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Settings-amp-Their-Default-Values\"><a href=\"#Settings-amp-Their-Default-Values\" class=\"headerlink\" title=\"Settings &amp; Their Default Values\"></a>Settings &amp; Their Default Values</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>Layout</td>\n<td></td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>Title</td>\n<td></td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Published date</td>\n<td>File created date</td>\n</tr>\n<tr>\n<td><code>updated</code></td>\n<td>Updated date</td>\n<td>File updated date</td>\n</tr>\n<tr>\n<td><code>comments</code></td>\n<td>Enables comment feature for the post</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>Tags (Not available for pages)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>Categories (Not available for pages)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>Overrides the default permalink of the post</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Categories-amp-Tags\"><a href=\"#Categories-amp-Tags\" class=\"headerlink\" title=\"Categories &amp; Tags\"></a>Categories &amp; Tags</h4><p>Only posts support the use of categories and tags. Categories apply to posts in order, resulting in a hierarchy of classifications and sub-classifications. Tags are all defined on the same hierarchical level so the order in which they appear is not important.</p>\n<p><strong>Example</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Sports</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Baseball</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Injury</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Fight</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Shocking</span></span><br></pre></td></tr></table></figure>\n<p>If you want to apply multiple category hierarchies, use a list of names instead of a single name. If Hexo sees any categories defined this way on a post, it will treat each category for that post as its own independent hierarchy.</p>\n<p><strong>Example</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">[Sports,</span> <span class=\"string\">Baseball]</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">[MLB,</span> <span class=\"string\">American</span> <span class=\"string\">League,</span> <span class=\"string\">Boston</span> <span class=\"string\">Red</span> <span class=\"string\">Sox]</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">[MLB,</span> <span class=\"string\">American</span> <span class=\"string\">League,</span> <span class=\"string\">New</span> <span class=\"string\">York</span> <span class=\"string\">Yankees]</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Rivalries</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y679000tkoeotmuhkene",
				"title": "Internationalization (i18n)",
				"markdown": "You can use internationalization to present your site in different languages. The default language is set by modifying the `language` setting in `_config.yml`. You can also set multiple languages and modify the order of default languages.\n\n``` yaml\nlanguage: zh-tw\n\nlanguage:\n- zh-tw\n- en\n```\n\n### Language Files\n\nLanguage files can be YAML or JSON files. You should put them into the `languages` folder in the theme. There is support for the [printf format](https://github.com/alexei/sprintf.js) in language files.\n\n### Templates\n\nUse `__` or `_p` helpers in templates to get the translated strings. The former is for normal usage and the latter is for plural strings. For example:\n\n``` yaml en.yml\nindex:\n  title: Home\n  add: Add\n  video:\n    zero: No videos\n    one: One video\n    other: %d videos\n```\n\n``` js\n<%= __('index.title') %>\n// Home\n\n<%= _p('index.video', 3) %>\n// 3 videos\n```\n\n### Path\n\nYou can set the language of pages in front-matter, or modify the `i18n_dir` setting in `_config.yml` to enable automatic detection by Hexo.\n\n``` yaml\ni18n_dir: :lang\n```\n\nThe default value of `i18n_dir` setting is `:lang`, which means that Hexo will detect the language within the first segment of URL. For example:\n\n``` plain\n/index.html => en\n/archives/index.html => en\n/zh-tw/index.html => zh-tw\n```\n\nThe string will only be served as a language when the language file exists. So `archives` in `/archives/index.html` (example 2) will not get served as a language.\n",
				"html": "<p>You can use internationalization to present your site in different languages. The default language is set by modifying the <code>language</code> setting in <code>_config.yml</code>. You can also set multiple languages and modify the order of default languages.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-tw</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">language:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">zh-tw</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Language-Files\"><a href=\"#Language-Files\" class=\"headerlink\" title=\"Language Files\"></a>Language Files</h3><p>Language files can be YAML or JSON files. You should put them into the <code>languages</code> folder in the theme. There is support for the <a href=\"https://github.com/alexei/sprintf.js\" target=\"_blank\" rel=\"noopener\">printf format</a> in language files.</p>\n<h3 id=\"Templates\"><a href=\"#Templates\" class=\"headerlink\" title=\"Templates\"></a>Templates</h3><p>Use <code>__</code> or <code>_p</code> helpers in templates to get the translated strings. The former is for normal usage and the latter is for plural strings. For example:</p>\n<figure class=\"highlight yaml\"><figcaption><span>en.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">index:</span></span><br><span class=\"line\"><span class=\"attr\">  title:</span> <span class=\"string\">Home</span></span><br><span class=\"line\"><span class=\"attr\">  add:</span> <span class=\"string\">Add</span></span><br><span class=\"line\"><span class=\"attr\">  video:</span></span><br><span class=\"line\"><span class=\"attr\">    zero:</span> <span class=\"literal\">No</span> <span class=\"string\">videos</span></span><br><span class=\"line\"><span class=\"attr\">    one:</span> <span class=\"string\">One</span> <span class=\"string\">video</span></span><br><span class=\"line\"><span class=\"attr\">    other:</span> <span class=\"string\">%d</span> <span class=\"string\">videos</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%= __(<span class=\"string\">'index.title'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Home</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%= _p(<span class=\"string\">'index.video'</span>, <span class=\"number\">3</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 3 videos</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Path\"><a href=\"#Path\" class=\"headerlink\" title=\"Path\"></a>Path</h3><p>You can set the language of pages in front-matter, or modify the <code>i18n_dir</code> setting in <code>_config.yml</code> to enable automatic detection by Hexo.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">i18n_dir:</span> <span class=\"string\">:lang</span></span><br></pre></td></tr></table></figure>\n<p>The default value of <code>i18n_dir</code> setting is <code>:lang</code>, which means that Hexo will detect the language within the first segment of URL. For example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">/index.html =&gt; en</span><br><span class=\"line\">/archives/index.html =&gt; en</span><br><span class=\"line\">/zh-tw/index.html =&gt; zh-tw</span><br></pre></td></tr></table></figure>\n<p>The string will only be served as a language when the language file exists. So <code>archives</code> in <code>/archives/index.html</code> (example 2) will not get served as a language.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y679000ukoeoncu3p9hf",
				"title": "Migration",
				"markdown": "## RSS\n\nFirst, install the `hexo-migrator-rss` plugin.\n\n``` bash\n$ npm install hexo-migrator-rss --save\n```\n\nOnce the plugin is installed, run the following command to migrate all posts from RSS. `source` can be a file path or URL.\n\n``` bash\n$ hexo migrate rss <source>\n```\n\n## Jekyll\n\nMove all files in the Jekyll `_posts` folder to the `source/_posts` folder.\n\nModify the `new_post_name` setting in `_config.yml`:\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## Octopress\n\nMove all files in the Octopress `source/_posts` folder to `source/_posts` \n\nModify the `new_post_name` setting in `_config.yml`:\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## WordPress\n\nFirst, install the `hexo-migrator-wordpress` plugin.\n\n``` bash\n$ npm install hexo-migrator-wordpress --save\n```\n\nExport your WordPress site by going to \"Tools\" → \"Export\" → \"WordPress\" in the WordPress dashboard (see the [WordPress support page](http://en.support.wordpress.com/export/) for more details).\n\nNow run:\n\n``` bash\n$ hexo migrate wordpress <source>\n```\n\nWhere `source` is the file path or URL to the WordPress export file.\n\n## Joomla\n\nFirst, install the `hexo-migrator-joomla` plugin.\n\n```bash\n$ npm install hexo-migrator-joomla --save\n```\n\nExport your Joomla articles using the [J2XML](http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D) component.\n\nNow run:\n\n```bash\n$ hexo migrate joomla <source>\n```\n\nWhere `source` is the file path or URL to the Joomla export file.\n",
				"html": "<h2 id=\"RSS\"><a href=\"#RSS\" class=\"headerlink\" title=\"RSS\"></a>RSS</h2><p>First, install the <code>hexo-migrator-rss</code> plugin.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-rss --save</span><br></pre></td></tr></table></figure>\n<p>Once the plugin is installed, run the following command to migrate all posts from RSS. <code>source</code> can be a file path or URL.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate rss &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Jekyll\"><a href=\"#Jekyll\" class=\"headerlink\" title=\"Jekyll\"></a>Jekyll</h2><p>Move all files in the Jekyll <code>_posts</code> folder to the <code>source/_posts</code> folder.</p>\n<p>Modify the <code>new_post_name</code> setting in <code>_config.yml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Octopress\"><a href=\"#Octopress\" class=\"headerlink\" title=\"Octopress\"></a>Octopress</h2><p>Move all files in the Octopress <code>source/_posts</code> folder to <code>source/_posts</code> </p>\n<p>Modify the <code>new_post_name</code> setting in <code>_config.yml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"WordPress\"><a href=\"#WordPress\" class=\"headerlink\" title=\"WordPress\"></a>WordPress</h2><p>First, install the <code>hexo-migrator-wordpress</code> plugin.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-wordpress --save</span><br></pre></td></tr></table></figure>\n<p>Export your WordPress site by going to “Tools” → “Export” → “WordPress” in the WordPress dashboard (see the <a href=\"http://en.support.wordpress.com/export/\" target=\"_blank\" rel=\"noopener\">WordPress support page</a> for more details).</p>\n<p>Now run:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate wordpress &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>Where <code>source</code> is the file path or URL to the WordPress export file.</p>\n<h2 id=\"Joomla\"><a href=\"#Joomla\" class=\"headerlink\" title=\"Joomla\"></a>Joomla</h2><p>First, install the <code>hexo-migrator-joomla</code> plugin.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-joomla --save</span><br></pre></td></tr></table></figure>\n<p>Export your Joomla articles using the <a href=\"http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D\" target=\"_blank\" rel=\"noopener\">J2XML</a> component.</p>\n<p>Now run:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate joomla &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>Where <code>source</code> is the file path or URL to the Joomla export file.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67a000vkoeodkptc84p",
				"title": "Documentation",
				"markdown": "Welcome to the Hexo documentation. If you encounter any problems when using Hexo, have a look at the  [troubleshooting guide](troubleshooting.html), raise an issue on [GitHub](https://github.com/hexojs/hexo/issues) or start a topic on the [Google Group](https://groups.google.com/group/hexo).\n\n## What is Hexo?\n\nHexo is a fast, simple and powerful blog framework. You write posts in [Markdown](http://daringfireball.net/projects/markdown/) (or other languages) and Hexo generates static files with a beautiful theme in seconds.\n\n## Installation\n\nIt only takes a few minutes to set up Hexo. If you encounter a problem and can't find the solution here, please [submit a GitHub issue](https://github.com/hexojs/hexo/issues) and I'll try to solve it.\n\n{% youtube ARted4RniaU %}\n\n### Requirements\n\nInstalling Hexo is quite easy. However, you do need to have a couple of other things installed first:\n\n- [Node.js](http://nodejs.org/)\n- [Git](http://git-scm.com/)\n\nIf your computer already has these, congratulations! Just install Hexo with npm:\n\n``` bash\n$ npm install -g hexo-cli\n```\n\nIf not, please follow the following instructions to install all the requirements.\n\n{% note warn For Mac users %}\nYou may encounter some problems when compiling. Please install Xcode from App Store first. After Xcode is installed, open Xcode and go to **Preferences -> Download -> Command Line Tools -> Install** to install command line tools.\n{% endnote %}\n\n### Install Git\n\n- Windows: Download & install [git](https://git-scm.com/download/win).\n- Mac: Install it with [Homebrew](http://mxcl.github.com/homebrew/), [MacPorts](http://www.macports.org/) or [installer](http://sourceforge.net/projects/git-osx-installer/).\n- Linux (Ubuntu, Debian): `sudo apt-get install git-core`\n- Linux (Fedora, Red Hat, CentOS): `sudo yum install git-core`\n\n### Install Node.js\n\nThe best way to install Node.js is with [Node Version Manager](https://github.com/creationix/nvm).\nThankfully the creators of nvm provide a simple script that automatically installs nvm:\n\ncURL:\n\n``` bash\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n\nWget:\n\n``` bash\n$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n\nOnce nvm is installed, restart the terminal and run the following command to install Node.js:\n\n``` bash\n$ nvm install stable\n```\n\nAlternatively, download and run [the installer](http://nodejs.org/).\n\n### Install Hexo\n\nOnce all the requirements are installed, you can install Hexo with npm:\n\n``` bash\n$ npm install -g hexo-cli\n```\n",
				"html": "<p>Welcome to the Hexo documentation. If you encounter any problems when using Hexo, have a look at the  <a href=\"troubleshooting.html\">troubleshooting guide</a>, raise an issue on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> or start a topic on the <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a>.</p>\n<h2 id=\"What-is-Hexo\"><a href=\"#What-is-Hexo\" class=\"headerlink\" title=\"What is Hexo?\"></a>What is Hexo?</h2><p>Hexo is a fast, simple and powerful blog framework. You write posts in <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a> (or other languages) and Hexo generates static files with a beautiful theme in seconds.</p>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><p>It only takes a few minutes to set up Hexo. If you encounter a problem and can’t find the solution here, please <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">submit a GitHub issue</a> and I’ll try to solve it.</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/ARted4RniaU\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h3 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h3><p>Installing Hexo is quite easy. However, you do need to have a couple of other things installed first:</p>\n<ul>\n<li><a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node.js</a></li>\n<li><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></li>\n</ul>\n<p>If your computer already has these, congratulations! Just install Hexo with npm:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>If not, please follow the following instructions to install all the requirements.</p>\n<blockquote class=\"note warn\"><strong class=\"note-title\">For Mac users</strong><p>You may encounter some problems when compiling. Please install Xcode from App Store first. After Xcode is installed, open Xcode and go to <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> to install command line tools.</p>\n</blockquote>\n<h3 id=\"Install-Git\"><a href=\"#Install-Git\" class=\"headerlink\" title=\"Install Git\"></a>Install Git</h3><ul>\n<li>Windows: Download &amp; install <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a>.</li>\n<li>Mac: Install it with <a href=\"http://mxcl.github.com/homebrew/\" target=\"_blank\" rel=\"noopener\">Homebrew</a>, <a href=\"http://www.macports.org/\" target=\"_blank\" rel=\"noopener\">MacPorts</a> or <a href=\"http://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"noopener\">installer</a>.</li>\n<li>Linux (Ubuntu, Debian): <code>sudo apt-get install git-core</code></li>\n<li>Linux (Fedora, Red Hat, CentOS): <code>sudo yum install git-core</code></li>\n</ul>\n<h3 id=\"Install-Node-js\"><a href=\"#Install-Node-js\" class=\"headerlink\" title=\"Install Node.js\"></a>Install Node.js</h3><p>The best way to install Node.js is with <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">Node Version Manager</a>.<br>Thankfully the creators of nvm provide a simple script that automatically installs nvm:</p>\n<p>cURL:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<p>Wget:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<p>Once nvm is installed, restart the terminal and run the following command to install Node.js:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ nvm install stable</span><br></pre></td></tr></table></figure>\n<p>Alternatively, download and run <a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">the installer</a>.</p>\n<h3 id=\"Install-Hexo\"><a href=\"#Install-Hexo\" class=\"headerlink\" title=\"Install Hexo\"></a>Install Hexo</h3><p>Once all the requirements are installed, you can install Hexo with npm:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67a000wkoeowp3p5rbq",
				"title": "Plugins",
				"markdown": "Hexo has a powerful plugin system, which makes it easy to extend functions without modifying the source code of the core module. There are two kinds of plugins in Hexo:\n\n### Script\n\nIf your plugin is relatively simple, it's recommended to use a script. All you need to do is put your JavaScript files in the `scripts` folder and Hexo will load them during initialization.\n\n### Plugin\n\nIf your code is complicated or if you want to publish it to the NPM registry, we recommend using a plugin. First, create a folder in the `node_modules` folder. The name of this folder must begin with `hexo-` or Hexo will ignore it.\n\nYour new folder must contain at least two files: one containing the actual JavaScript code and one `package.json` file that describes the purpose of the plugin and sets its dependencies.\n\n``` plain\n.\n├── index.js\n└── package.json\n```\n\nAt the very least, you should set the `name`, `version` and `main` entries in `package.json`. For example:\n\n``` json package.json\n{\n  \"name\": \"hexo-my-plugin\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index\"\n}\n```\n\nYou'll also need to list your plugin as a dependency in the root `package.json` of your hexo instance in order for Hexo to detect and load it.\n\n### Tools\n\nYou can make use of the official tools provided by Hexo to accelerate development:\n\n- [hexo-fs]：File IO\n- [hexo-util]：Utilities\n- [hexo-i18n]：Localization (i18n)\n- [hexo-pagination]：Generate pagination data\n\n### Publishing\n\nWhen your plugin is ready, you may consider publishing it to the [plugin list](/plugins) to invite other people to start using it. Publishing your own plugins is very similar to [updating documentation](contributing.html#Updating_Documentation).\n\n1. Fork [hexojs/site]\n2. Clone the repository to your computer and install dependencies.\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. Edit `source/_data/plugins.yml` and add your plugin. For example:\n\n    {% code %}\n    - name: hexo-server\n      description: Server module for Hexo.\n      link: https://github.com/hexojs/hexo-server\n      tags:\n        - official\n        - server\n        - console\n    {% endcode %}\n\n4. Push the branch.\n5. Create a pull request and describe the change.\n\n[hexo-fs]: https://github.com/hexojs/hexo-fs\n[hexo-util]: https://github.com/hexojs/hexo-util\n[hexo-i18n]: https://github.com/hexojs/hexo-i18n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<p>Hexo has a powerful plugin system, which makes it easy to extend functions without modifying the source code of the core module. There are two kinds of plugins in Hexo:</p>\n<h3 id=\"Script\"><a href=\"#Script\" class=\"headerlink\" title=\"Script\"></a>Script</h3><p>If your plugin is relatively simple, it’s recommended to use a script. All you need to do is put your JavaScript files in the <code>scripts</code> folder and Hexo will load them during initialization.</p>\n<h3 id=\"Plugin\"><a href=\"#Plugin\" class=\"headerlink\" title=\"Plugin\"></a>Plugin</h3><p>If your code is complicated or if you want to publish it to the NPM registry, we recommend using a plugin. First, create a folder in the <code>node_modules</code> folder. The name of this folder must begin with <code>hexo-</code> or Hexo will ignore it.</p>\n<p>Your new folder must contain at least two files: one containing the actual JavaScript code and one <code>package.json</code> file that describes the purpose of the plugin and sets its dependencies.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── index.js</span><br><span class=\"line\">└── package.json</span><br></pre></td></tr></table></figure>\n<p>At the very least, you should set the <code>name</code>, <code>version</code> and <code>main</code> entries in <code>package.json</code>. For example:</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-my-plugin\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>You’ll also need to list your plugin as a dependency in the root <code>package.json</code> of your hexo instance in order for Hexo to detect and load it.</p>\n<h3 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h3><p>You can make use of the official tools provided by Hexo to accelerate development:</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-fs\" target=\"_blank\" rel=\"noopener\">hexo-fs</a>：File IO</li>\n<li><a href=\"https://github.com/hexojs/hexo-util\" target=\"_blank\" rel=\"noopener\">hexo-util</a>：Utilities</li>\n<li><a href=\"https://github.com/hexojs/hexo-i18n\" target=\"_blank\" rel=\"noopener\">hexo-i18n</a>：Localization (i18n)</li>\n<li><a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a>：Generate pagination data</li>\n</ul>\n<h3 id=\"Publishing\"><a href=\"#Publishing\" class=\"headerlink\" title=\"Publishing\"></a>Publishing</h3><p>When your plugin is ready, you may consider publishing it to the <a href=\"/plugins\">plugin list</a> to invite other people to start using it. Publishing your own plugins is very similar to <a href=\"contributing.html#Updating_Documentation\">updating documentation</a>.</p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Edit <code>source/_data/plugins.yml</code> and add your plugin. For example:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">- name: hexo-server</span><br><span class=\"line\">  description: Server module for Hexo.</span><br><span class=\"line\">  link: https://github.com/hexojs/hexo-server</span><br><span class=\"line\">  tags:</span><br><span class=\"line\">    - official</span><br><span class=\"line\">    - server</span><br><span class=\"line\">    - console</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Push the branch.</p>\n</li>\n<li>Create a pull request and describe the change.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67b000xkoeo5tlq5y79",
				"title": "Permalinks",
				"markdown": "You can specify the permalinks for your site in `_config.yml` or in the front-matter for each post.\n\n### Variables\n\nBesides the following variables, you can use any attributes in the permalink.\n\nVariable | Description\n--- | ---\n`:year` | Published year of posts (4-digit)\n`:month` | Published month of posts (2-digit)\n`:i_month` | Published month of posts (Without leading zeros)\n`:day` | Published day of posts (2-digit)\n`:i_day` | Published day of posts (Without leading zeros)\n`:title` | Filename\n`:post_title` | Post title\n`:id` | Post ID\n`:category` | Categories. If the post is uncategorized, it will use the `default_category` value.\n\nYou can define the default value of each variable in the permalink through the `permalink_defaults` setting:\n\n``` yaml\npermalink_defaults:\n  lang: en\n```\n\n### Examples\n\nGiven a post named `hello-world.md` in the `source/_posts` folder with the following content.\n\n``` yaml\ntitle: Hello World\ndate: 2013-07-14 17:01:34\ncategories:\n- foo\n- bar\n```\n\nSetting | Result\n--- | ---\n`:year/:month/:day/:title/` | 2013/07/14/hello-world\n`:year-:month-:day-:title.html` | 2013-07-14-hello-world.html\n`:category/:title` | foo/bar/hello-world\n\n### Multi-language Support\n\nTo create a multi-language site, you can modify the `new_post_name` and `permalink` settings like this:\n\n``` yaml\nnew_post_name: :lang/:title.md\npermalink: :lang/:title/\n```\n\nWhen you create a new post, the post will be saved to:\n\n``` bash\n$ hexo new \"Hello World\" --lang tw\n# => source/_posts/tw/Hello-World.md\n```\n\nand the URL will be:\n\n``` plain\nhttp://localhost:4000/tw/hello-world/\n```\n",
				"html": "<p>You can specify the permalinks for your site in <code>_config.yml</code> or in the front-matter for each post.</p>\n<h3 id=\"Variables\"><a href=\"#Variables\" class=\"headerlink\" title=\"Variables\"></a>Variables</h3><p>Besides the following variables, you can use any attributes in the permalink.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year</code></td>\n<td>Published year of posts (4-digit)</td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>Published month of posts (2-digit)</td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>Published month of posts (Without leading zeros)</td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>Published day of posts (2-digit)</td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>Published day of posts (Without leading zeros)</td>\n</tr>\n<tr>\n<td><code>:title</code></td>\n<td>Filename</td>\n</tr>\n<tr>\n<td><code>:post_title</code></td>\n<td>Post title</td>\n</tr>\n<tr>\n<td><code>:id</code></td>\n<td>Post ID</td>\n</tr>\n<tr>\n<td><code>:category</code></td>\n<td>Categories. If the post is uncategorized, it will use the <code>default_category</code> value.</td>\n</tr>\n</tbody>\n</table>\n<p>You can define the default value of each variable in the permalink through the <code>permalink_defaults</code> setting:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">permalink_defaults:</span></span><br><span class=\"line\"><span class=\"attr\">  lang:</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><p>Given a post named <code>hello-world.md</code> in the <code>source/_posts</code> folder with the following content.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"bullet\">-07</span><span class=\"bullet\">-14</span> <span class=\"number\">17</span><span class=\"string\">:01:34</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">foo</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">bar</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year/:month/:day/:title/</code></td>\n<td>2013/07/14/hello-world</td>\n</tr>\n<tr>\n<td><code>:year-:month-:day-:title.html</code></td>\n<td>2013-07-14-hello-world.html</td>\n</tr>\n<tr>\n<td><code>:category/:title</code></td>\n<td>foo/bar/hello-world</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Multi-language-Support\"><a href=\"#Multi-language-Support\" class=\"headerlink\" title=\"Multi-language Support\"></a>Multi-language Support</h3><p>To create a multi-language site, you can modify the <code>new_post_name</code> and <code>permalink</code> settings like this:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:lang/:title.md</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:lang/:title/</span></span><br></pre></td></tr></table></figure>\n<p>When you create a new post, the post will be saved to:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"Hello World\"</span> --lang tw</span><br><span class=\"line\"><span class=\"comment\"># =&gt; source/_posts/tw/Hello-World.md</span></span><br></pre></td></tr></table></figure>\n<p>and the URL will be:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://localhost:4000/tw/hello-world/</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67b000ykoeo8vswc472",
				"title": "Server",
				"markdown": "## [hexo-server]\n\nWith the release of Hexo 3, the server has been separated from the main module. To start using the server, you will first have to install [hexo-server].\n\n``` bash\n$ npm install hexo-server --save\n```\n\nOnce the server has been installed, run the following command to start the server. Your website will run at `http://localhost:4000` by default. When the server is running, Hexo will watch for file changes and update automatically so it's not necessary to manually restart the server.\n\n``` bash\n$ hexo server\n```\n\nIf you want to change the port or if you're encountering `EADDRINUSE` errors, use the `-p` option to set a different port.\n\n``` bash\n$ hexo server -p 5000\n```\n\n### Static Mode\n\nIn static mode, only files in the `public` folder will be served and file watching is disabled. You have to run `hexo generate` before starting the server. Usually used in production.\n\n``` bash\n$ hexo server -s\n```\n\n### Custom IP\n\nHexo runs the server at `0.0.0.0` by default. You can override the default IP setting.\n\n``` bash\n$ hexo server -i 192.168.1.1\n```\n\n## Pow\n\n[Pow] is a zero-config Rack server for Mac.\n\n### Install\n\n``` bash\n$ curl get.pow.cx | sh\n```\n\n### Setup\n\nSymlink the folder into `~/.pow`\n\n``` bash\n$ cd ~/.pow\n$ ln -s /path/to/myapp\n```\n\nYour website will be up and running at `http://myapp.test`. The URL is based on the name of the symlink.\n\n[hexo-server]: https://github.com/hexojs/hexo-server\n[Pow]: http://pow.cx/\n",
				"html": "<h2 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo-server\"></a><a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a></h2><p>With the release of Hexo 3, the server has been separated from the main module. To start using the server, you will first have to install <a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure>\n<p>Once the server has been installed, run the following command to start the server. Your website will run at <code>http://localhost:4000</code> by default. When the server is running, Hexo will watch for file changes and update automatically so it’s not necessary to manually restart the server.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>If you want to change the port or if you’re encountering <code>EADDRINUSE</code> errors, use the <code>-p</code> option to set a different port.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h3 id=\"Static-Mode\"><a href=\"#Static-Mode\" class=\"headerlink\" title=\"Static Mode\"></a>Static Mode</h3><p>In static mode, only files in the <code>public</code> folder will be served and file watching is disabled. You have to run <code>hexo generate</code> before starting the server. Usually used in production.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -s</span><br></pre></td></tr></table></figure>\n<h3 id=\"Custom-IP\"><a href=\"#Custom-IP\" class=\"headerlink\" title=\"Custom IP\"></a>Custom IP</h3><p>Hexo runs the server at <code>0.0.0.0</code> by default. You can override the default IP setting.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -i 192.168.1.1</span><br></pre></td></tr></table></figure>\n<h2 id=\"Pow\"><a href=\"#Pow\" class=\"headerlink\" title=\"Pow\"></a>Pow</h2><p><a href=\"http://pow.cx/\" target=\"_blank\" rel=\"noopener\">Pow</a> is a zero-config Rack server for Mac.</p>\n<h3 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl get.pow.cx | sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"Setup\"><a href=\"#Setup\" class=\"headerlink\" title=\"Setup\"></a>Setup</h3><p>Symlink the folder into <code>~/.pow</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/.pow</span><br><span class=\"line\">$ ln -s /path/to/myapp</span><br></pre></td></tr></table></figure>\n<p>Your website will be up and running at <code>http://myapp.test</code>. The URL is based on the name of the symlink.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67b000zkoeog0zosh8u",
				"title": "Setup",
				"markdown": "\n{% youtube 0m2HnATkHOk %}\n\nOnce Hexo is installed, run the following commands to initialise Hexo in the target `<folder>`.\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\nOnce initialised, here's what your project folder will look like:\n\n``` plain\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\nSite [configuration](configuration.html) file. You can configure most settings here.\n\n### package.json\n\nApplication data. The [EJS](http://embeddedjs.com/), [Stylus](http://learnboost.github.io/stylus/) and [Markdown](http://daringfireball.net/projects/markdown/) renderers are installed by default. If you want, you can uninstall them later.\n\n``` json package.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### scaffolds\n\n[Scaffold](writing.html#Scaffolds) folder. When you create a new post, Hexo bases the new file on the scaffold.\n\n### source\n\nSource folder. This is where you put your site's content. Hexo ignores hidden files and files or folders whose names are prefixed with `_` (underscore) - except the `_posts` folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the `public` folder, while other files will simply be copied.\n\n### themes\n\n[Theme](themes.html) folder. Hexo generates a static website by combining the site contents with the theme.\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/0m2HnATkHOk\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>Once Hexo is installed, run the following commands to initialise Hexo in the target <code>&lt;folder&gt;</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>Once initialised, here’s what your project folder will look like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Site <a href=\"configuration.html\">configuration</a> file. You can configure most settings here.</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>Application data. The <a href=\"http://embeddedjs.com/\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"http://learnboost.github.io/stylus/\" target=\"_blank\" rel=\"noopener\">Stylus</a> and <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a> renderers are installed by default. If you want, you can uninstall them later.</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-site\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"private\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"hexo\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-archive\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-category\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-index\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-tag\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-ejs\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-stylus\"</span>: <span class=\"string\">\"^0.2.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-marked\"</span>: <span class=\"string\">\"^0.2.4\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-server\"</span>: <span class=\"string\">\"^0.1.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p><a href=\"writing.html#Scaffolds\">Scaffold</a> folder. When you create a new post, Hexo bases the new file on the scaffold.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Source folder. This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with <code>_</code> (underscore) - except the <code>_posts</code> folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the <code>public</code> folder, while other files will simply be copied.</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p><a href=\"themes.html\">Theme</a> folder. Hexo generates a static website by combining the site contents with the theme.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67c0010koeojwkhm8cm",
				"title": "Templates",
				"markdown": "Templates define the presentation of your website by describing what each page should look like. The table below shows the corresponding template for every available page. At the very least, a theme should contain an `index` template.\n\n{% youtube mb65bQ4iUc4 %}\n\nTemplate | Page | Fallback\n--- | --- | ---\n`index` | Home page |\n`post` | Posts | `index`\n`page` | Pages | `index`\n`archive` | Archives | `index`\n`category` | Category archives | `archive`\n`tag` | Tag archives | `archive`\n\n## Layouts\n\nWhen pages share a similar structure - for instance, when two templates have both a header and a footer - you can consider using a `layout` to declare these structural similarities. Every layout file should contain a `body` variable to display the contents of the template in question. For example:\n\n``` html index.ejs\nindex\n```\n\n``` html layout.ejs\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n```\n\nyields:\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>index</body>\n</html>\n```\n\nBy default, the `layout` template is used by all other templates. You can specify additional layouts in the front-matter or set it to `false` to disable it. It's even possible to build a complex nested structure by including more layout templates in your top layout.\n\n## Partials\n\nPartials are useful for sharing components between your templates. Typical examples include headers, footers or sidebars. You may want to put your partials in separate files to make maintaining your website significantly more convenient. For example:\n\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\nyields:\n\n``` html\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n```\n\n## Local Variables\n\nYou can define local variables in templates and use them in other templates.\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\nyields:\n\n``` html\n<h1 id=\"logo\">Hello World</h1>\n<div id=\"content\">Home page</div>\n```\n\n## Optimization\n\nIf your theme is exceedingly complex or if the number of files to generate becomes too large, Hexo's file generation performance may begin to decrease considerably. Aside from simplifying your theme, you may also try Fragment Caching, which was introduced in Hexo 2.7.\n\nThis feature was borrowed from [Ruby on Rails](http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching). It causes content to be saved as fragments and cached for when additional requests are made. This can reduce the number of database queries and can also speed up file generation.\n\nFragment caching is best used for headers, footers, sidebars or other static content that is unlikely to change from template to template. For example:\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\nThough it may be easier to use partials:\n\n``` js\n<%- partial('header', {}, {cache: true});\n```\n\nDon't use fragment caching when the `relative_link` setting has been enabled. This may cause issues because relative links can and probably will be different depending on the pages they appear in.\n",
				"html": "<p>Templates define the presentation of your website by describing what each page should look like. The table below shows the corresponding template for every available page. At the very least, a theme should contain an <code>index</code> template.</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/mb65bQ4iUc4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<table>\n<thead>\n<tr>\n<th>Template</th>\n<th>Page</th>\n<th>Fallback</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>index</code></td>\n<td>Home page</td>\n<td></td>\n</tr>\n<tr>\n<td><code>post</code></td>\n<td>Posts</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>Pages</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>archive</code></td>\n<td>Archives</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>Category archives</td>\n<td><code>archive</code></td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td>Tag archives</td>\n<td><code>archive</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Layouts\"><a href=\"#Layouts\" class=\"headerlink\" title=\"Layouts\"></a>Layouts</h2><p>When pages share a similar structure - for instance, when two templates have both a header and a footer - you can consider using a <code>layout</code> to declare these structural similarities. Every layout file should contain a <code>body</code> variable to display the contents of the template in question. For example:</p>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">index</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>By default, the <code>layout</code> template is used by all other templates. You can specify additional layouts in the front-matter or set it to <code>false</code> to disable it. It’s even possible to build a complex nested structure by including more layout templates in your top layout.</p>\n<h2 id=\"Partials\"><a href=\"#Partials\" class=\"headerlink\" title=\"Partials\"></a>Partials</h2><p>Partials are useful for sharing components between your templates. Typical examples include headers, footers or sidebars. You may want to put your partials in separate files to make maintaining your website significantly more convenient. For example:</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>') %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>My Site<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Local-Variables\"><a href=\"#Local-Variables\" class=\"headerlink\" title=\"Local Variables\"></a>Local Variables</h2><p>You can define local variables in templates and use them in other templates.</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>', &#123;<span class=\"attr\">title:</span> '<span class=\"attr\">Hello</span> <span class=\"attr\">World</span>'&#125;) %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Optimization\"><a href=\"#Optimization\" class=\"headerlink\" title=\"Optimization\"></a>Optimization</h2><p>If your theme is exceedingly complex or if the number of files to generate becomes too large, Hexo’s file generation performance may begin to decrease considerably. Aside from simplifying your theme, you may also try Fragment Caching, which was introduced in Hexo 2.7.</p>\n<p>This feature was borrowed from <a href=\"http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\" target=\"_blank\" rel=\"noopener\">Ruby on Rails</a>. It causes content to be saved as fragments and cached for when additional requests are made. This can reduce the number of database queries and can also speed up file generation.</p>\n<p>Fragment caching is best used for headers, footers, sidebars or other static content that is unlikely to change from template to template. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Though it may be easier to use partials:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p>Don’t use fragment caching when the <code>relative_link</code> setting has been enabled. This may cause issues because relative links can and probably will be different depending on the pages they appear in.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67c0011koeoh4yy15v9",
				"title": "Tag Plugins",
				"markdown": "Tag plugins are different from post tags. They are ported from Octopress and provide a useful way for you to quickly add specific content to your posts.\n\n{% youtube I07XMi7MHd4 %}\n\n## Block Quote\n\nPerfect for adding quotes to your post, with optional author, source and title information.\n\n**Alias:** quote\n\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n### Examples\n\n**No arguments. Plain blockquote.**\n\n```\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n```\n\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n\n**Quote from a book**\n\n```\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n```\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n**Quote from Twitter**\n\n```\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n```\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n**Quote from an article on the web**\n\n```\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n```\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n## Code Block\n\nUseful feature for adding code snippets to your post.\n\n**Alias:** code\n\n```\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n\n### Examples\n\n**A plain code block**\n\n```\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**Specifying the language**\n\n```\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n```\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n\n**Adding a caption to the code block**\n\n```\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n```\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n\n**Adding a caption and a URL**\n\n```\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n```\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n## Backtick Code Block\n\nThis is identical to using a code block, but instead uses three backticks to delimit the block.\n\n{% raw %}\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n{% endraw %}\n\n## Pull Quote\n\nTo add pull quotes to your posts:\n\n```\n{% pullquote [class] %}\ncontent\n{% endpullquote %}\n```\n\n## jsFiddle\n\nTo embed a jsFiddle snippet:\n\n```\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\n\n## Gist\n\nTo embed a Gist snippet:\n\n```\n{% gist gist_id [filename] %}\n```\n\n## iframe\n\nTo embed an iframe:\n\n```\n{% iframe url [width] [height] %}\n```\n\n## Image\n\nInserts an image with specified size.\n\n```\n{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}\n```\n\n## Link\n\nInserts a link with `target=\"_blank\"` attribute.\n\n```\n{% link text url [external] [title] %}\n```\n\n## Include Code\n\nInserts code snippets in `source/downloads/code` folder.\n\n```\n{% include_code [title] [lang:language] path/to/file %}\n```\n\n## YouTube\n\nInserts a YouTube video.\n\n```\n{% youtube video_id %}\n```\n\n## Vimeo\n\nInserts a responsive or specified size Vimeo video.\n\n```\n{% vimeo video_id [width] [height] %}\n```\n\n## Include Posts\n\nInclude links to other posts.\n\n```\n{% post_path filename %}\n{% post_link filename [optional text] %}\n```\n\nYou can ignore permalink and folder information, like languages and dates, when using this tag. \n\nFor instance: `{% raw %}{% post_link how-to-bake-a-cake %}{% endraw %}`.\n\nThis will work as long as the filename of the post is `how-to-bake-a-cake.md`, even if the post is located at `source/posts/2015-02-my-family-holiday` and has permalink `2018/en/how-to-bake-a-cake`.\n\nYou can customize the text to display, instead of displaying the post's title. Using `post_path` inside Markdown syntax `[]()` is not supported.\n\nFor instance:\n\n**Display title of the post.**\n\n`{% raw %}{% post_link 2018-10-19-hexo-3-8-released %}{% endraw %}`\n\n{% post_link 2018-10-19-hexo-3-8-released %}\n\n**Display custom text.**\n\n`{% raw %}{% post_link 2018-10-19-hexo-3-8-released 'Link to a post' %}{% endraw %}`\n\n{% post_link 2018-10-19-hexo-3-8-released 'Link to a post' %}\n\n\n## Include Assets\n\nInclude post assets.\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n## Raw\n\nIf certain content is causing processing issues in your posts, wrap it with the `raw` tag to avoid rendering errors.\n\n```\n{% raw %}\ncontent\n{% endraw %}\n```\n\n\n## Post Excerpt\n\nUse text placed before the `<!-- more -->` tag as an excerpt for the post.\n\n**Examples:**\n\n``` \nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n<!-- more -->\nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n```\n",
				"html": "<p>Tag plugins are different from post tags. They are ported from Octopress and provide a useful way for you to quickly add specific content to your posts.</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/I07XMi7MHd4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h2 id=\"Block-Quote\"><a href=\"#Block-Quote\" class=\"headerlink\" title=\"Block Quote\"></a>Block Quote</h2><p>Perfect for adding quotes to your post, with optional author, source and title information.</p>\n<p><strong>Alias:</strong> quote</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><p><strong>No arguments. Plain blockquote.</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote %&#125;</span><br><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>\n</blockquote>\n<p><strong>Quote from a book</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class=\"line\">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n<p><strong>Quote from Twitter</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;</span><br><span class=\"line\">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\" target=\"_blank\" rel=\"noopener\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\" target=\"_blank\" rel=\"noopener\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<p><strong>Quote from an article on the web</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</span><br><span class=\"line\">Every interaction is both precious and an opportunity to delight.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\" target=\"_blank\" rel=\"noopener\">Welcome to Island Marketing</a></cite></footer></blockquote>\n<h2 id=\"Code-Block\"><a href=\"#Code-Block\" class=\"headerlink\" title=\"Code Block\"></a>Code Block</h2><p>Useful feature for adding code snippets to your post.</p>\n<p><strong>Alias:</strong> code</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class=\"line\">code snippet</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Examples-1\"><a href=\"#Examples-1\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><p><strong>A plain code block</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock %&#125;</span><br><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br></pre></td></tr></table></figure>\n<p><strong>Specifying the language</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock lang:objc %&#125;</span><br><span class=\"line\">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"code\"><pre><span class=\"line\">[rectangle setX: <span class=\"number\">10</span> y: <span class=\"number\">10</span> width: <span class=\"number\">20</span> height: <span class=\"number\">20</span>];</span><br></pre></td></tr></table></figure>\n<p><strong>Adding a caption to the code block</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock Array.map %&#125;</span><br><span class=\"line\">array.map(callback[, thisArg])</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>\n<p><strong>Adding a caption and a URL</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock _.compact http://underscorejs.org/#compact Underscore.js %&#125;</span><br><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>_.compact</span><a href=\"http://underscorejs.org/#compact\" target=\"_blank\" rel=\"noopener\">Underscore.js</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>\n<h2 id=\"Backtick-Code-Block\"><a href=\"#Backtick-Code-Block\" class=\"headerlink\" title=\"Backtick Code Block\"></a>Backtick Code Block</h2><p>This is identical to using a code block, but instead uses three backticks to delimit the block.</p>\n\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n\n<h2 id=\"Pull-Quote\"><a href=\"#Pull-Quote\" class=\"headerlink\" title=\"Pull Quote\"></a>Pull Quote</h2><p>To add pull quotes to your posts:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% pullquote [class] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"jsFiddle\"><a href=\"#jsFiddle\" class=\"headerlink\" title=\"jsFiddle\"></a>jsFiddle</h2><p>To embed a jsFiddle snippet:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h2><p>To embed a Gist snippet:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"iframe\"><a href=\"#iframe\" class=\"headerlink\" title=\"iframe\"></a>iframe</h2><p>To embed an iframe:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2><p>Inserts an image with specified size.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><p>Inserts a link with <code>target=&quot;_blank&quot;</code> attribute.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-Code\"><a href=\"#Include-Code\" class=\"headerlink\" title=\"Include Code\"></a>Include Code</h2><p>Inserts code snippets in <code>source/downloads/code</code> folder.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% include_code [title] [lang:language] path/to/file %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"YouTube\"><a href=\"#YouTube\" class=\"headerlink\" title=\"YouTube\"></a>YouTube</h2><p>Inserts a YouTube video.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% youtube video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Vimeo\"><a href=\"#Vimeo\" class=\"headerlink\" title=\"Vimeo\"></a>Vimeo</h2><p>Inserts a responsive or specified size Vimeo video.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% vimeo video_id [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-Posts\"><a href=\"#Include-Posts\" class=\"headerlink\" title=\"Include Posts\"></a>Include Posts</h2><p>Include links to other posts.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% post_path filename %&#125;</span><br><span class=\"line\">&#123;% post_link filename [optional text] %&#125;</span><br></pre></td></tr></table></figure>\n<p>You can ignore permalink and folder information, like languages and dates, when using this tag. </p>\n<p>For instance: <code>{% post_link how-to-bake-a-cake %}</code>.</p>\n<p>This will work as long as the filename of the post is <code>how-to-bake-a-cake.md</code>, even if the post is located at <code>source/posts/2015-02-my-family-holiday</code> and has permalink <code>2018/en/how-to-bake-a-cake</code>.</p>\n<p>You can customize the text to display, instead of displaying the post’s title. Using <code>post_path</code> inside Markdown syntax <code>[]()</code> is not supported.</p>\n<p>For instance:</p>\n<p><strong>Display title of the post.</strong></p>\n<p><code>{% post_link 2018-10-19-hexo-3-8-released %}</code></p>\n\n<p><strong>Display custom text.</strong></p>\n<p><code>{% post_link 2018-10-19-hexo-3-8-released 'Link to a post' %}</code></p>\n\n<h2 id=\"Include-Assets\"><a href=\"#Include-Assets\" class=\"headerlink\" title=\"Include Assets\"></a>Include Assets</h2><p>Include post assets.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Raw\"><a href=\"#Raw\" class=\"headerlink\" title=\"Raw\"></a>Raw</h2><p>If certain content is causing processing issues in your posts, wrap it with the <code>raw</code> tag to avoid rendering errors.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Post-Excerpt\"><a href=\"#Post-Excerpt\" class=\"headerlink\" title=\"Post Excerpt\"></a>Post Excerpt</h2><p>Use text placed before the <code>&lt;!-- more --&gt;</code> tag as an excerpt for the post.</p>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class=\"line\">&lt;!-- more --&gt;</span><br><span class=\"line\">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67c0012koeorvsv5927",
				"title": "Themes",
				"markdown": "\n{% youtube 5ROIU_9dYe4 %}\n\nIt's easy to build a Hexo theme - you just have to create a new folder. To start using your theme, modify the `theme` setting in your site's `_config.yml`. A theme should have the following structure:\n\n``` plain\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n### _config.yml\n\nTheme configuration file. Modifying this doesn't require a server restart.\n\n### languages\n\nLanguage folder. See [internationalization (i18n)](internationalization.html) for more info.\n\n### layout\n\nLayout folder. This folder contains the theme's template files, which define the appearance of your website. Hexo provides the [Swig] template engine by default, but you can easily install additional plugins to support alternative engines such as [EJS], [Haml], [Jade], or [Pug]. Hexo chooses the template engine based on the file extension of the template. For example:\n\n``` plain\nlayout.ejs   - uses EJS\nlayout.swig  - uses Swig\n```\n\nSee [templates](templates.html) for more info.\n\n### scripts\n\nScript folder. Hexo will automatically load all JavaScript files in this folder during initialization. For more info, see [plugins](plugins.html).\n\n### source\n\nSource folder. Place your assets (e.g. CSS and JavaScript files) here. Hexo ignores hidden files and files or folders prefixed with `_` (underscore).\n\nHexo will process and save all renderable files to the `public` folder. Non-renderable files will be copied to the `public` folder directly.\n\n### Publishing\n\nWhen you have finished building your theme, you can publish it to the [theme list](/themes). Before doing so, you should run the [theme unit test](https://github.com/hexojs/hexo-theme-unit-test) to ensure that everything works. The steps for publishing a theme are very similar to those for [updating documentation](contributing.html#Updating_Documentation).\n\n1. Fork [hexojs/site]\n2. Clone the repository to your computer and install dependencies.\n\n    ```shell\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    ```\n\n3. Edit `source/_data/themes.yml` and add your theme. For example:\n\n    ```yaml\n    - name: landscape\n      description: A brand new default theme for Hexo.\n      link: https://github.com/hexojs/hexo-theme-landscape\n      preview: http://hexo.io/hexo-theme-landscape\n      tags:\n        - official\n        - responsive\n        - widget\n        - two_column\n        - one_column\n    ```\n\n4. Add a screenshot (with the same name as the theme) to `source/themes/screenshots`. It must be a 800*500px PNG.\n5. Push the branch.\n6. Create a pull request and describe the change.\n\n[EJS]: https://github.com/hexojs/hexo-renderer-ejs\n[Swig]: https://github.com/paularmstrong/swig\n[Haml]: https://github.com/hexojs/hexo-renderer-haml\n[Jade]: https://github.com/hexojs/hexo-renderer-jade\n[Pug]: https://github.com/maxknee/hexo-render-pug\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/5ROIU_9dYe4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>It’s easy to build a Hexo theme - you just have to create a new folder. To start using your theme, modify the <code>theme</code> setting in your site’s <code>_config.yml</code>. A theme should have the following structure:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── languages</span><br><span class=\"line\">├── layout</span><br><span class=\"line\">├── scripts</span><br><span class=\"line\">└── source</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Theme configuration file. Modifying this doesn’t require a server restart.</p>\n<h3 id=\"languages\"><a href=\"#languages\" class=\"headerlink\" title=\"languages\"></a>languages</h3><p>Language folder. See <a href=\"internationalization.html\">internationalization (i18n)</a> for more info.</p>\n<h3 id=\"layout\"><a href=\"#layout\" class=\"headerlink\" title=\"layout\"></a>layout</h3><p>Layout folder. This folder contains the theme’s template files, which define the appearance of your website. Hexo provides the <a href=\"https://github.com/paularmstrong/swig\" target=\"_blank\" rel=\"noopener\">Swig</a> template engine by default, but you can easily install additional plugins to support alternative engines such as <a href=\"https://github.com/hexojs/hexo-renderer-ejs\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"https://github.com/hexojs/hexo-renderer-haml\" target=\"_blank\" rel=\"noopener\">Haml</a>, <a href=\"https://github.com/hexojs/hexo-renderer-jade\" target=\"_blank\" rel=\"noopener\">Jade</a>, or <a href=\"https://github.com/maxknee/hexo-render-pug\" target=\"_blank\" rel=\"noopener\">Pug</a>. Hexo chooses the template engine based on the file extension of the template. For example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">layout.ejs   - uses EJS</span><br><span class=\"line\">layout.swig  - uses Swig</span><br></pre></td></tr></table></figure>\n<p>See <a href=\"templates.html\">templates</a> for more info.</p>\n<h3 id=\"scripts\"><a href=\"#scripts\" class=\"headerlink\" title=\"scripts\"></a>scripts</h3><p>Script folder. Hexo will automatically load all JavaScript files in this folder during initialization. For more info, see <a href=\"plugins.html\">plugins</a>.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Source folder. Place your assets (e.g. CSS and JavaScript files) here. Hexo ignores hidden files and files or folders prefixed with <code>_</code> (underscore).</p>\n<p>Hexo will process and save all renderable files to the <code>public</code> folder. Non-renderable files will be copied to the <code>public</code> folder directly.</p>\n<h3 id=\"Publishing\"><a href=\"#Publishing\" class=\"headerlink\" title=\"Publishing\"></a>Publishing</h3><p>When you have finished building your theme, you can publish it to the <a href=\"/themes\">theme list</a>. Before doing so, you should run the <a href=\"https://github.com/hexojs/hexo-theme-unit-test\" target=\"_blank\" rel=\"noopener\">theme unit test</a> to ensure that everything works. The steps for publishing a theme are very similar to those for <a href=\"contributing.html#Updating_Documentation\">updating documentation</a>.</p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> https://github.com/&lt;username&gt;/site.git</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> site</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Edit <code>source/_data/themes.yml</code> and add your theme. For example:</p>\n <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">- name:</span> <span class=\"string\">landscape</span></span><br><span class=\"line\"><span class=\"attr\">  description:</span> <span class=\"string\">A</span> <span class=\"string\">brand</span> <span class=\"string\">new</span> <span class=\"string\">default</span> <span class=\"string\">theme</span> <span class=\"string\">for</span> <span class=\"string\">Hexo.</span></span><br><span class=\"line\"><span class=\"attr\">  link:</span> <span class=\"attr\">https://github.com/hexojs/hexo-theme-landscape</span></span><br><span class=\"line\"><span class=\"attr\">  preview:</span> <span class=\"attr\">http://hexo.io/hexo-theme-landscape</span></span><br><span class=\"line\"><span class=\"attr\">  tags:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">official</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">responsive</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">widget</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">two_column</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">one_column</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Add a screenshot (with the same name as the theme) to <code>source/themes/screenshots</code>. It must be a 800*500px PNG.</p>\n</li>\n<li>Push the branch.</li>\n<li>Create a pull request and describe the change.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67d0013koeol2mxxec2",
				"title": "Troubleshooting",
				"markdown": "In case you're experiencing problems with using Hexo, here is a list of solutions to some frequently encountered issues. If this page doesn't help you solve your problem, try doing a search on [GitHub](https://github.com/hexojs/hexo/issues) or our [Google Group](https://groups.google.com/group/hexo).\n\n## YAML Parsing Error\n\n``` plain\nJS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:\n      last_updated: Last updated: %s\n```\n\nWrap the string with quotations if it contains colons.\n\n``` plain\nJS-YAML: bad indentation of a mapping entry at line 18, column 31:\n      last_updated:\"Last updated: %s\"\n```\n\nMake sure you are using soft tabs and add a space after colons.\n\nYou can see [YAML Spec](http://www.yaml.org/spec/1.2/spec.html) for more info.\n\n## EMFILE Error\n\n``` plain\nError: EMFILE, too many open files\n```\n\nThough Node.js has non-blocking I/O, the maximum number of synchronous I/O is still limited by the system. You may come across an EMFILE error when trying to generate a large number of files. You can try to run the following command to increase the number of allowed synchronous I/O operations.\n\n``` bash\n$ ulimit -n 10000\n```\n\n## Process Out of Memory\n\nWhen you encounter this error during generation:\n```\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory\n```\n\nIncrease Node.js heap memory size by changing the first line of `hexo-cli` (`which hexo` to look for the file).\n```\n#!/usr/bin/env node --max_old_space_size=8192\n```\n\n[Out of memory while generating a huge blog · Issue #1735 · hexojs/hexo](https://github.com/hexojs/hexo/issues/1735)\n\n## Git Deployment Problems\n\n### RPC failed\n``` plain\nerror: RPC failed; result=22, HTTP code = 403\n\nfatal: 'username.github.io' does not appear to be a git repository\n```\n\nMake sure you have [set up git](https://help.github.com/articles/set-up-git) on your computer properly or try to use HTTPS repository URL instead.\n\n### Error: ENOENT: no such file or directory\nIf you get an error like `Error: ENOENT: no such file or directory` it's probably due to to mixing uppercase and lowercase letters in your tags, categories, or filenames. Git cannot automatically merge this change so it breaks the automatic branching.\n\nTo fix this, try\n1. Check every tag's and category's case and make sure they are the same.\n1. Commit\n1. Clean and build: `./node_modules/.bin/hexo clean && ./node_modules/.bin/hexo generate`\n1. Manually copy the public folder to your desktop\n1. Switch branch from your master branch to your deployment branch locally\n1. Copy the contents of the public folder from your desktop into the deployment branch\n1. Commit. You should see any merge conflicts appear that you can manually resolve.\n1. Switch back to your master branch and deploy normally: `./node_modules/.bin/hexo deploy`\n\n## Server Problems\n\n``` plain\nError: listen EADDRINUSE\n```\n\nYou may have started two Hexo servers at the same time or there might be another application using the same port. Try to modify the `port` setting or start the Hexo server with the `-p` flag.\n\n``` bash\n$ hexo server -p 5000\n```\n\n## Plugin Installation Problems\n\n``` plain\nnpm ERR! node-waf configure build\n```\n\nThis error may occur when trying to install a plugin written in C, C++ or another non-JavaScript language. Make sure you have installed the right compiler on your computer.\n\n## Error with DTrace (Mac OS X)\n\n```plain\n{ [Error: Cannot find module './build/Release/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/default/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/Debug/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n```\n\nDTrace install may have issue, use this:\n```sh\n$ npm install hexo --no-optional\n```\nSee [#1326](https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796)\n\n## Iterate Data Model on Jade or Swig\n\nHexo uses [Warehouse] for its data model. It's not an array so you may have to transform objects into iterables.\n\n```\n{% for post in site.posts.toArray() %}\n{% endfor %}\n```\n\n## Data Not Updated\n\nSome data cannot be updated, or the newly generated files are identical to those of the last version. Clean the cache and try again.\n\n``` bash\n$ hexo clean\n```\n\n## No command is executed\n\nWhen you can't get any command except `help`, `init` and `version` to work and you keep getting content of `hexo help`, it could be caused by a missing `hexo` in `package.json`:\n\n```json\n{\n  \"hexo\": {\n    \"version\": \"3.2.2\"\n  }\n}\n```\n\n## Escape Contents\n\nHexo uses [Nunjucks] to render posts ([Swig] was used in older version, which share a similar syntax). Content wrapped with `{% raw %}{{ }}{% endraw %}` or `{% raw %}{% %}{% endraw %}` will get parsed and may cause problems. You can wrap sensitive content with the `raw` tag plugin.\n\n```\n{% raw %}\nHello {{ sensitive }}\n{% endraw %}\n```\n\n## ENOSPC Error (Linux)\n\nSometimes when running the command `$ hexo server` it returns an error:\n```\nError: watch ENOSPC ...\n```\nIt can be fixed by running `$ npm dedupe` or, if that doesn't help, try the following in the Linux console:\n```\n$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\nThis will increase the limit for the number of files you can watch.\n\n## EMPERM Error (Windows Subsystem for Linux)\n\nWhen running `$ hexo server` in a BashOnWindows environment, it returns the following error:\n```\nError: watch /path/to/hexo/theme/ EMPERM\n```\nUnfortunately, WSL does not currently support filesystem watchers. Therefore, the live updating feature of hexo's server is currently unavailable. You can still run the server from a WSL environment by first generating the files and then running it as a static server:\n``` sh\n$ hexo generate\n$ hexo server -s\n```\nThis is [a known BashOnWindows issue](https://github.com/Microsoft/BashOnWindows/issues/216), and on 15 Aug 2016, the Windows team said they would work on it. You can get progress updates and encourage them to prioritize it on [the issue's UserVoice suggestion page](https://wpdev.uservoice.com/forums/266908-command-prompt-console-bash-on-ubuntu-on-windo/suggestions/13469097-support-for-filesystem-watchers-like-inotify).\n\n## Template render error\n\nSometimes when running the command `$ hexo generate` it returns an error:\n```\nFATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html\nTemplate render error: (unknown path)\n```\nIt means that there are some unrecognizable words in your file.There are two possibilities One is your new page/post, and the other one is `_config.yml`.\nIn `_config.yml`, don't forget add whitespace before a list in hash. There is the wiki page about [YAML](https://en.wikipedia.org/wiki/YAML).\nThe error one:\n```\nplugins:\n- hexo-generator-feed\n- hexo-generator-sitemap\n```\nThe correct one:\n```\nplugins:\n  - hexo-generator-feed\n  - hexo-generator-sitemap\n```\n\n[Warehouse]: https://github.com/hexojs/warehouse\n[Swig]: http://paularmstrong.github.io/swig/\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n",
				"html": "<p>In case you’re experiencing problems with using Hexo, here is a list of solutions to some frequently encountered issues. If this page doesn’t help you solve your problem, try doing a search on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> or our <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a>.</p>\n<h2 id=\"YAML-Parsing-Error\"><a href=\"#YAML-Parsing-Error\" class=\"headerlink\" title=\"YAML Parsing Error\"></a>YAML Parsing Error</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:</span><br><span class=\"line\">      last_updated: Last updated: %s</span><br></pre></td></tr></table></figure>\n<p>Wrap the string with quotations if it contains colons.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: bad indentation of a mapping entry at line 18, column 31:</span><br><span class=\"line\">      last_updated:&quot;Last updated: %s&quot;</span><br></pre></td></tr></table></figure>\n<p>Make sure you are using soft tabs and add a space after colons.</p>\n<p>You can see <a href=\"http://www.yaml.org/spec/1.2/spec.html\" target=\"_blank\" rel=\"noopener\">YAML Spec</a> for more info.</p>\n<h2 id=\"EMFILE-Error\"><a href=\"#EMFILE-Error\" class=\"headerlink\" title=\"EMFILE Error\"></a>EMFILE Error</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: EMFILE, too many open files</span><br></pre></td></tr></table></figure>\n<p>Though Node.js has non-blocking I/O, the maximum number of synchronous I/O is still limited by the system. You may come across an EMFILE error when trying to generate a large number of files. You can try to run the following command to increase the number of allowed synchronous I/O operations.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ulimit</span> -n 10000</span><br></pre></td></tr></table></figure>\n<h2 id=\"Process-Out-of-Memory\"><a href=\"#Process-Out-of-Memory\" class=\"headerlink\" title=\"Process Out of Memory\"></a>Process Out of Memory</h2><p>When you encounter this error during generation:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory</span><br></pre></td></tr></table></figure></p>\n<p>Increase Node.js heap memory size by changing the first line of <code>hexo-cli</code> (<code>which hexo</code> to look for the file).<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env node --max_old_space_size=8192</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/hexojs/hexo/issues/1735\" target=\"_blank\" rel=\"noopener\">Out of memory while generating a huge blog · Issue #1735 · hexojs/hexo</a></p>\n<h2 id=\"Git-Deployment-Problems\"><a href=\"#Git-Deployment-Problems\" class=\"headerlink\" title=\"Git Deployment Problems\"></a>Git Deployment Problems</h2><h3 id=\"RPC-failed\"><a href=\"#RPC-failed\" class=\"headerlink\" title=\"RPC failed\"></a>RPC failed</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">error: RPC failed; result=22, HTTP code = 403</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: &apos;username.github.io&apos; does not appear to be a git repository</span><br></pre></td></tr></table></figure>\n<p>Make sure you have <a href=\"https://help.github.com/articles/set-up-git\" target=\"_blank\" rel=\"noopener\">set up git</a> on your computer properly or try to use HTTPS repository URL instead.</p>\n<h3 id=\"Error-ENOENT-no-such-file-or-directory\"><a href=\"#Error-ENOENT-no-such-file-or-directory\" class=\"headerlink\" title=\"Error: ENOENT: no such file or directory\"></a>Error: ENOENT: no such file or directory</h3><p>If you get an error like <code>Error: ENOENT: no such file or directory</code> it’s probably due to to mixing uppercase and lowercase letters in your tags, categories, or filenames. Git cannot automatically merge this change so it breaks the automatic branching.</p>\n<p>To fix this, try</p>\n<ol>\n<li>Check every tag’s and category’s case and make sure they are the same.</li>\n<li>Commit</li>\n<li>Clean and build: <code>./node_modules/.bin/hexo clean &amp;&amp; ./node_modules/.bin/hexo generate</code></li>\n<li>Manually copy the public folder to your desktop</li>\n<li>Switch branch from your master branch to your deployment branch locally</li>\n<li>Copy the contents of the public folder from your desktop into the deployment branch</li>\n<li>Commit. You should see any merge conflicts appear that you can manually resolve.</li>\n<li>Switch back to your master branch and deploy normally: <code>./node_modules/.bin/hexo deploy</code></li>\n</ol>\n<h2 id=\"Server-Problems\"><a href=\"#Server-Problems\" class=\"headerlink\" title=\"Server Problems\"></a>Server Problems</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: listen EADDRINUSE</span><br></pre></td></tr></table></figure>\n<p>You may have started two Hexo servers at the same time or there might be another application using the same port. Try to modify the <code>port</code> setting or start the Hexo server with the <code>-p</code> flag.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h2 id=\"Plugin-Installation-Problems\"><a href=\"#Plugin-Installation-Problems\" class=\"headerlink\" title=\"Plugin Installation Problems\"></a>Plugin Installation Problems</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm ERR! node-waf configure build</span><br></pre></td></tr></table></figure>\n<p>This error may occur when trying to install a plugin written in C, C++ or another non-JavaScript language. Make sure you have installed the right compiler on your computer.</p>\n<h2 id=\"Error-with-DTrace-Mac-OS-X\"><a href=\"#Error-with-DTrace-Mac-OS-X\" class=\"headerlink\" title=\"Error with DTrace (Mac OS X)\"></a>Error with DTrace (Mac OS X)</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/default/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Debug/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br></pre></td></tr></table></figure>\n<p>DTrace install may have issue, use this:<br><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo --no-optional</span><br></pre></td></tr></table></figure></p>\n<p>See <a href=\"https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796\" target=\"_blank\" rel=\"noopener\">#1326</a></p>\n<h2 id=\"Iterate-Data-Model-on-Jade-or-Swig\"><a href=\"#Iterate-Data-Model-on-Jade-or-Swig\" class=\"headerlink\" title=\"Iterate Data Model on Jade or Swig\"></a>Iterate Data Model on Jade or Swig</h2><p>Hexo uses <a href=\"https://github.com/hexojs/warehouse\" target=\"_blank\" rel=\"noopener\">Warehouse</a> for its data model. It’s not an array so you may have to transform objects into iterables.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% for post in site.posts.toArray() %&#125;</span><br><span class=\"line\">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Data-Not-Updated\"><a href=\"#Data-Not-Updated\" class=\"headerlink\" title=\"Data Not Updated\"></a>Data Not Updated</h2><p>Some data cannot be updated, or the newly generated files are identical to those of the last version. Clean the cache and try again.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<h2 id=\"No-command-is-executed\"><a href=\"#No-command-is-executed\" class=\"headerlink\" title=\"No command is executed\"></a>No command is executed</h2><p>When you can’t get any command except <code>help</code>, <code>init</code> and <code>version</code> to work and you keep getting content of <code>hexo help</code>, it could be caused by a missing <code>hexo</code> in <code>package.json</code>:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.2.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Escape-Contents\"><a href=\"#Escape-Contents\" class=\"headerlink\" title=\"Escape Contents\"></a>Escape Contents</h2><p>Hexo uses <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> to render posts (<a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a> was used in older version, which share a similar syntax). Content wrapped with <code>{{ }}</code> or <code>{% %}</code> will get parsed and may cause problems. You can wrap sensitive content with the <code>raw</code> tag plugin.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">Hello &#123;&#123; sensitive &#125;&#125;</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ENOSPC-Error-Linux\"><a href=\"#ENOSPC-Error-Linux\" class=\"headerlink\" title=\"ENOSPC Error (Linux)\"></a>ENOSPC Error (Linux)</h2><p>Sometimes when running the command <code>$ hexo server</code> it returns an error:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: watch ENOSPC ...</span><br></pre></td></tr></table></figure></p>\n<p>It can be fixed by running <code>$ npm dedupe</code> or, if that doesn’t help, try the following in the Linux console:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure></p>\n<p>This will increase the limit for the number of files you can watch.</p>\n<h2 id=\"EMPERM-Error-Windows-Subsystem-for-Linux\"><a href=\"#EMPERM-Error-Windows-Subsystem-for-Linux\" class=\"headerlink\" title=\"EMPERM Error (Windows Subsystem for Linux)\"></a>EMPERM Error (Windows Subsystem for Linux)</h2><p>When running <code>$ hexo server</code> in a BashOnWindows environment, it returns the following error:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: watch /path/to/hexo/theme/ EMPERM</span><br></pre></td></tr></table></figure></p>\n<p>Unfortunately, WSL does not currently support filesystem watchers. Therefore, the live updating feature of hexo’s server is currently unavailable. You can still run the server from a WSL environment by first generating the files and then running it as a static server:<br><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">$ hexo server -s</span><br></pre></td></tr></table></figure></p>\n<p>This is <a href=\"https://github.com/Microsoft/BashOnWindows/issues/216\" target=\"_blank\" rel=\"noopener\">a known BashOnWindows issue</a>, and on 15 Aug 2016, the Windows team said they would work on it. You can get progress updates and encourage them to prioritize it on <a href=\"https://wpdev.uservoice.com/forums/266908-command-prompt-console-bash-on-ubuntu-on-windo/suggestions/13469097-support-for-filesystem-watchers-like-inotify\" target=\"_blank\" rel=\"noopener\">the issue’s UserVoice suggestion page</a>.</p>\n<h2 id=\"Template-render-error\"><a href=\"#Template-render-error\" class=\"headerlink\" title=\"Template render error\"></a>Template render error</h2><p>Sometimes when running the command <code>$ hexo generate</code> it returns an error:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class=\"line\">Template render error: (unknown path)</span><br></pre></td></tr></table></figure></p>\n<p>It means that there are some unrecognizable words in your file.There are two possibilities One is your new page/post, and the other one is <code>_config.yml</code>.<br>In <code>_config.yml</code>, don’t forget add whitespace before a list in hash. There is the wiki page about <a href=\"https://en.wikipedia.org/wiki/YAML\" target=\"_blank\" rel=\"noopener\">YAML</a>.<br>The error one:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">plugins:</span><br><span class=\"line\">- hexo-generator-feed</span><br><span class=\"line\">- hexo-generator-sitemap</span><br></pre></td></tr></table></figure></p>\n<p>The correct one:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">plugins:</span><br><span class=\"line\">  - hexo-generator-feed</span><br><span class=\"line\">  - hexo-generator-sitemap</span><br></pre></td></tr></table></figure></p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67d0014koeo7xk4oaln",
				"title": "Writing",
				"markdown": "\n{% youtube AIqBubK6ZLc %}\n\nTo create a new post or a new page, you can run the following command:\n\n``` bash\n$ hexo new [layout] <title>\n```\n\n`post` is the default `layout`, but you can supply your own. You can change the default layout by editing the `default_layout` setting in `_config.yml`.\n\n### Layout\n\nThere are three default layouts in Hexo: `post`, `page` and `draft`. Files created by each of them is saved to a different path. Newly created posts are saved to the `source/_posts` folder.\n\nLayout | Path\n--- | ---\n`post` | `source/_posts`\n`page` | `source`\n`draft` | `source/_drafts`\n\n{% note tip Don't process my posts! %}\nIf you don't want your posts processed, you can set `layout: false` in front-matter.\n{% endnote %}\n\n### Filename\n\nBy default, Hexo uses the post title as its filename. You can edit the `new_post_name` setting in `_config.yml` to change the default filename. For example, `:year-:month-:day-:title.md` will prefix filenames with the post creation date. You can use the following placeholders:\n\nPlaceholder | Description\n--- | ---\n`:title` | Post title (lower case, with spaces replaced by hyphens)\n`:year` | Created year, e.g. `2015`\n`:month` | Created month (leading zeros), e.g. `04`\n`:i_month` | Created month (no leading zeros), e.g. `4`\n`:day` | Created day (leading zeros), e.g. `07`\n`:i_day` | Created day (no leading zeros), e.g. `7`\n\n### Drafts\n\nPreviously, we mentioned a special layout in Hexo: `draft`. Posts initialized with this layout are saved to the `source/_drafts` folder. You can use the `publish` command to move drafts to the `source/_posts` folder. `publish` works in a similar way to the `new` command.\n\n``` bash\n$ hexo publish [layout] <title>\n```\n\nDrafts are not displayed by default. You can add the `--draft` option when running Hexo or enable the `render_drafts` setting in `_config.yml` to render drafts.\n\n### Scaffolds\n\nWhen creating posts, Hexo will build files based on the corresponding file in `scaffolds` folder. For example:\n\n``` bash\n$ hexo new photo \"My Gallery\"\n```\n\nWhen you run this command, Hexo will try to find `photo.md` in the `scaffolds` folder and build the post based on it. The following placeholders are available in scaffolds:\n\nPlaceholder | Description\n--- | ---\n`layout` | Layout\n`title` | Title\n`date` | File created date\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/AIqBubK6ZLc\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>To create a new post or a new page, you can run the following command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p><code>post</code> is the default <code>layout</code>, but you can supply your own. You can change the default layout by editing the <code>default_layout</code> setting in <code>_config.yml</code>.</p>\n<h3 id=\"Layout\"><a href=\"#Layout\" class=\"headerlink\" title=\"Layout\"></a>Layout</h3><p>There are three default layouts in Hexo: <code>post</code>, <code>page</code> and <code>draft</code>. Files created by each of them is saved to a different path. Newly created posts are saved to the <code>source/_posts</code> folder.</p>\n<table>\n<thead>\n<tr>\n<th>Layout</th>\n<th>Path</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post</code></td>\n<td><code>source/_posts</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>draft</code></td>\n<td><code>source/_drafts</code></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note tip\"><strong class=\"note-title\">Don't process my posts!</strong><p>If you don’t want your posts processed, you can set <code>layout: false</code> in front-matter.</p>\n</blockquote>\n<h3 id=\"Filename\"><a href=\"#Filename\" class=\"headerlink\" title=\"Filename\"></a>Filename</h3><p>By default, Hexo uses the post title as its filename. You can edit the <code>new_post_name</code> setting in <code>_config.yml</code> to change the default filename. For example, <code>:year-:month-:day-:title.md</code> will prefix filenames with the post creation date. You can use the following placeholders:</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:title</code></td>\n<td>Post title (lower case, with spaces replaced by hyphens)</td>\n</tr>\n<tr>\n<td><code>:year</code></td>\n<td>Created year, e.g. <code>2015</code></td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>Created month (leading zeros), e.g. <code>04</code></td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>Created month (no leading zeros), e.g. <code>4</code></td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>Created day (leading zeros), e.g. <code>07</code></td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>Created day (no leading zeros), e.g. <code>7</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Drafts\"><a href=\"#Drafts\" class=\"headerlink\" title=\"Drafts\"></a>Drafts</h3><p>Previously, we mentioned a special layout in Hexo: <code>draft</code>. Posts initialized with this layout are saved to the <code>source/_drafts</code> folder. You can use the <code>publish</code> command to move drafts to the <code>source/_posts</code> folder. <code>publish</code> works in a similar way to the <code>new</code> command.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>Drafts are not displayed by default. You can add the <code>--draft</code> option when running Hexo or enable the <code>render_drafts</code> setting in <code>_config.yml</code> to render drafts.</p>\n<h3 id=\"Scaffolds\"><a href=\"#Scaffolds\" class=\"headerlink\" title=\"Scaffolds\"></a>Scaffolds</h3><p>When creating posts, Hexo will build files based on the corresponding file in <code>scaffolds</code> folder. For example:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new photo <span class=\"string\">\"My Gallery\"</span></span><br></pre></td></tr></table></figure>\n<p>When you run this command, Hexo will try to find <code>photo.md</code> in the <code>scaffolds</code> folder and build the post based on it. The following placeholders are available in scaffolds:</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>Layout</td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>Title</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>File created date</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67d0015koeocngt6cvf",
				"title": "Variables",
				"markdown": "\n{% youtube T9oAax-IRw0 %}\n\n### Global Variables\n\nVariable | Description | Type\n--- | --- | ---\n`site` | Sitewide information. | `object`; see [Site Variables]\n`page` | Page specific information and custom variables set in front-matter. | `object`; see [Page Variables]\n`config` | Site configuration. | `object` (your site's _config file)\n`theme` | Theme configuration. Inherits from site configuration. | `object` (your theme's _config file)\n`_` (single underscore) | Lodash library | see [Lodash](https://lodash.com/  \"Lodash\" target=\"_blank\") documentation\n`path` | Path of current page | `string`\n`url` | Full URL of current page | `string`\n`env` | Environment variables | ???\n\n### Site Variables\n\nVariable | Description | Type\n--- | --- | ---\n`site.posts` | All posts | `array` of `post` objects\n`site.pages` | All pages | `array` of `page` objects\n`site.categories` | All categories | `array` of ???\n`site.tags` | All tags | `array` of ???\n\n### Page Variables\n\n**Article (`page`)**\n\nVariable | Description | Type\n--- | --- | ---\n`page.title` | Article title | `string`\n`page.date` | Article created date | [Moment.js] object\n`page.updated` | Article last updated date | [Moment.js] object\n`page.comments` | Comment enabled or not | `boolean`\n`page.layout` | Layout name | `string`\n`page.content` | The full processed content of the article | `string`\n`page.excerpt` | Article excerpt | `string`\n`page.more` | Contents except article excerpt | `string`\n`page.source` | The path of the source file | `string`\n`page.full_source` | Full path of the source file | `string`\n`page.path` | The URL of the article without root URL. We usually use `url_for(page.path)` in theme. | `string`\n`page.permalink` | Full URL of the article | `string`\n`page.prev` | The previous post, `null` if the post is the first post | ???\n`page.next` | The next post, `null` if the post is the last post | ???\n`page.raw` | The raw data of the article | ???\n`page.photos` | The photos of the article (Used in gallery posts) | array of ???\n`page.link` | The external link of the article (Used in link posts) | `string`\n\n**Post (`post`):** Same as `page` layout but add the following variables.\n\nVariable | Description | Type\n--- | --- | ---\n`page.published` | True if the post is not a draft | `boolean`\n`page.categories` | All categories of the post | `array` of ???\n`page.tags` | All tags of the post | `array` of ???\n\n**Home (`index`)**\n\nVariable | Description | Type\n--- | --- | ---\n`page.per_page` | Posts displayed per page | `number`\n`page.total` | Total number of pages | `number`\n`page.current` | Current page number | `number`\n`page.current_url` | The URL of current page | `string`\n`page.posts` | Posts in this page ([Data Model](https://hexojs.github.io/warehouse/)) | `object`\n`page.prev` | Previous page number. `0` if the current page is the first. | `number`\n`page.prev_link` | The URL of previous page. `''` if the current page is the first. | `string`\n`page.next` | Next page number. `0` if the current page is the last. | `number`\n`page.next_link` | The URL of next page. `''` if the current page is the last. | `string`\n`page.path` | The URL of current page without root URL. We usually use `url_for(page.path)` in theme. | `string`\n\n**Archive (`archive`):** Same as `index` layout but add the following variables.\n\nVariable | Description | Type\n--- | --- | ---\n`page.archive` | Equals `true` | `boolean`\n`page.year` | Archive year (4-digit) | `number`\n`page.month` | Archive month (2-digit without leading zeros) | `number`\n\n**Category (`category`):** Same as `index` layout but add the following variables.\n\nVariable | Description | Type\n--- | --- | ---\n`page.category` | Category name | `string`\n\n**Tag (`tag`):** Same as `index` layout but add the following variables.\n\nVariable | Description | Type\n--- | --- | ---\n`page.tag` | Tag name | `string`\n\n[Moment.js]: http://momentjs.com/\n[Site Variables]: #Site-Variables\n[Page Variables]: #Page-Variables\n",
				"html": "<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/T9oAax-IRw0\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h3 id=\"Global-Variables\"><a href=\"#Global-Variables\" class=\"headerlink\" title=\"Global Variables\"></a>Global Variables</h3><table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site</code></td>\n<td>Sitewide information.</td>\n<td><code>object</code>; see <a href=\"#Site-Variables\">Site Variables</a></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>Page specific information and custom variables set in front-matter.</td>\n<td><code>object</code>; see <a href=\"#Page-Variables\">Page Variables</a></td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>Site configuration.</td>\n<td><code>object</code> (your site’s _config file)</td>\n</tr>\n<tr>\n<td><code>theme</code></td>\n<td>Theme configuration. Inherits from site configuration.</td>\n<td><code>object</code> (your theme’s _config file)</td>\n</tr>\n<tr>\n<td><code>_</code> (single underscore)</td>\n<td>Lodash library</td>\n<td>see <a href=\"https://lodash.com/\" title=\"Lodash&quot; target=&quot;_blank\" target=\"_blank\" rel=\"noopener\">Lodash</a> documentation</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Path of current page</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>Full URL of current page</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>env</code></td>\n<td>Environment variables</td>\n<td>???</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Site-Variables\"><a href=\"#Site-Variables\" class=\"headerlink\" title=\"Site Variables\"></a>Site Variables</h3><table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site.posts</code></td>\n<td>All posts</td>\n<td><code>array</code> of <code>post</code> objects</td>\n</tr>\n<tr>\n<td><code>site.pages</code></td>\n<td>All pages</td>\n<td><code>array</code> of <code>page</code> objects</td>\n</tr>\n<tr>\n<td><code>site.categories</code></td>\n<td>All categories</td>\n<td><code>array</code> of ???</td>\n</tr>\n<tr>\n<td><code>site.tags</code></td>\n<td>All tags</td>\n<td><code>array</code> of ???</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Page-Variables\"><a href=\"#Page-Variables\" class=\"headerlink\" title=\"Page Variables\"></a>Page Variables</h3><p><strong>Article (<code>page</code>)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.title</code></td>\n<td>Article title</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.date</code></td>\n<td>Article created date</td>\n<td><a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object</td>\n</tr>\n<tr>\n<td><code>page.updated</code></td>\n<td>Article last updated date</td>\n<td><a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object</td>\n</tr>\n<tr>\n<td><code>page.comments</code></td>\n<td>Comment enabled or not</td>\n<td><code>boolean</code></td>\n</tr>\n<tr>\n<td><code>page.layout</code></td>\n<td>Layout name</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.content</code></td>\n<td>The full processed content of the article</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.excerpt</code></td>\n<td>Article excerpt</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.more</code></td>\n<td>Contents except article excerpt</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.source</code></td>\n<td>The path of the source file</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.full_source</code></td>\n<td>Full path of the source file</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>The URL of the article without root URL. We usually use <code>url_for(page.path)</code> in theme.</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.permalink</code></td>\n<td>Full URL of the article</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>The previous post, <code>null</code> if the post is the first post</td>\n<td>???</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>The next post, <code>null</code> if the post is the last post</td>\n<td>???</td>\n</tr>\n<tr>\n<td><code>page.raw</code></td>\n<td>The raw data of the article</td>\n<td>???</td>\n</tr>\n<tr>\n<td><code>page.photos</code></td>\n<td>The photos of the article (Used in gallery posts)</td>\n<td>array of ???</td>\n</tr>\n<tr>\n<td><code>page.link</code></td>\n<td>The external link of the article (Used in link posts)</td>\n<td><code>string</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Post (<code>post</code>):</strong> Same as <code>page</code> layout but add the following variables.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.published</code></td>\n<td>True if the post is not a draft</td>\n<td><code>boolean</code></td>\n</tr>\n<tr>\n<td><code>page.categories</code></td>\n<td>All categories of the post</td>\n<td><code>array</code> of ???</td>\n</tr>\n<tr>\n<td><code>page.tags</code></td>\n<td>All tags of the post</td>\n<td><code>array</code> of ???</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Home (<code>index</code>)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.per_page</code></td>\n<td>Posts displayed per page</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.total</code></td>\n<td>Total number of pages</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.current</code></td>\n<td>Current page number</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.current_url</code></td>\n<td>The URL of current page</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.posts</code></td>\n<td>Posts in this page (<a href=\"https://hexojs.github.io/warehouse/\" target=\"_blank\" rel=\"noopener\">Data Model</a>)</td>\n<td><code>object</code></td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>Previous page number. <code>0</code> if the current page is the first.</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.prev_link</code></td>\n<td>The URL of previous page. <code>&#39;&#39;</code> if the current page is the first.</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>Next page number. <code>0</code> if the current page is the last.</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.next_link</code></td>\n<td>The URL of next page. <code>&#39;&#39;</code> if the current page is the last.</td>\n<td><code>string</code></td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>The URL of current page without root URL. We usually use <code>url_for(page.path)</code> in theme.</td>\n<td><code>string</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Archive (<code>archive</code>):</strong> Same as <code>index</code> layout but add the following variables.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.archive</code></td>\n<td>Equals <code>true</code></td>\n<td><code>boolean</code></td>\n</tr>\n<tr>\n<td><code>page.year</code></td>\n<td>Archive year (4-digit)</td>\n<td><code>number</code></td>\n</tr>\n<tr>\n<td><code>page.month</code></td>\n<td>Archive month (2-digit without leading zeros)</td>\n<td><code>number</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Category (<code>category</code>):</strong> Same as <code>index</code> layout but add the following variables.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.category</code></td>\n<td>Category name</td>\n<td><code>string</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Tag (<code>tag</code>):</strong> Same as <code>index</code> layout but add the following variables.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.tag</code></td>\n<td>Tag name</td>\n<td><code>string</code></td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67d0016koeocxvwrifp",
				"title": "",
				"markdown": "ul#intro-feature-list\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-bolt\n      h3.intro-feature-title 엄청나게 빠른 속도\n      p.intro-feature-desc Node.js는 몇 초만에 수백개의 파일을 빌드할 수 있을 정도로 빠른 생성 속도를 제공합니다.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-pencil\n      h3.intro-feature-title Markdown 지원\n      p.intro-feature-desc 친화적인 Markdown의 모든 기능을 지원하며 거의 모든 Octopress 플러그인들을 사용할 수 있습니다.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cloud-upload\n      h3.intro-feature-title 한 번의 명령으로 Deployment 하기\n      p.intro-feature-desc 단지 하나의 명령어로 당신의 웹 사이트를 GitHub나 Heroku에 deploy할 수 있습니다.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cog\n      h3.intro-feature-title 다양한 플러그인\n      p.intro-feature-desc Hexo는 강력한 플러그인 시스템을 가지고 있습니다. 사용자는 Jade와 CoffeeScript를 위한 플러그인들을 설치할 수도 있습니다.",
				"html": "<ul id=\"intro-feature-list\"><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-bolt\"></i></div><h3 class=\"intro-feature-title\">엄청나게 빠른 속도</h3><p class=\"intro-feature-desc\">Node.js는 몇 초만에 수백개의 파일을 빌드할 수 있을 정도로 빠른 생성 속도를 제공합니다.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-pencil\"></i></div><h3 class=\"intro-feature-title\">Markdown 지원</h3><p class=\"intro-feature-desc\">친화적인 Markdown의 모든 기능을 지원하며 거의 모든 Octopress 플러그인들을 사용할 수 있습니다.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cloud-upload\"></i></div><h3 class=\"intro-feature-title\">한 번의 명령으로 Deployment 하기</h3><p class=\"intro-feature-desc\">단지 하나의 명령어로 당신의 웹 사이트를 GitHub나 Heroku에 deploy할 수 있습니다.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cog\"></i></div><h3 class=\"intro-feature-title\">다양한 플러그인</h3><p class=\"intro-feature-desc\">Hexo는 강력한 플러그인 시스템을 가지고 있습니다. 사용자는 Jade와 CoffeeScript를 위한 플러그인들을 설치할 수도 있습니다.</p></div></li></ul>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67e0017koeoasihttig",
				"title": "Plugins",
				"markdown": "",
				"html": "",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67e0018koeoimqccmnl",
				"title": "",
				"markdown": "ul#intro-feature-list\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-bolt\n      h3.intro-feature-title Rápido\n      p.intro-feature-desc O Node.js proporciona uma incrível velocidade na hora de gerar o conteúdo. Centenas de aquivos são gerados em alguns segundos.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-pencil\n      h3.intro-feature-title Suporta Markdown\n      p.intro-feature-desc Todos os recursos do GitHub Flavored Markdown são suportados. Você pode até usar a maioria dos plugins do Octopress no Hexo.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cloud-upload\n      h3.intro-feature-title Deploy com Apenas um Comando\n      p.intro-feature-desc Você só precisa de um comando para implantar seu site no Github Pages, Heroku ou outras hospedagens.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cog\n      h3.intro-feature-title Vários Plugins\n      p.intro-feature-desc O Hexo tem um poderoso sistema de plugins. Você pode instalar mais plugins como: Jade/Pug, CoffeeScript e etc....\n",
				"html": "<ul id=\"intro-feature-list\"><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-bolt\"></i></div><h3 class=\"intro-feature-title\">Rápido</h3><p class=\"intro-feature-desc\">O Node.js proporciona uma incrível velocidade na hora de gerar o conteúdo. Centenas de aquivos são gerados em alguns segundos.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-pencil\"></i></div><h3 class=\"intro-feature-title\">Suporta Markdown</h3><p class=\"intro-feature-desc\">Todos os recursos do GitHub Flavored Markdown são suportados. Você pode até usar a maioria dos plugins do Octopress no Hexo.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cloud-upload\"></i></div><h3 class=\"intro-feature-title\">Deploy com Apenas um Comando</h3><p class=\"intro-feature-desc\">Você só precisa de um comando para implantar seu site no Github Pages, Heroku ou outras hospedagens.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cog\"></i></div><h3 class=\"intro-feature-title\">Vários Plugins</h3><p class=\"intro-feature-desc\">O Hexo tem um poderoso sistema de plugins. Você pode instalar mais plugins como: Jade/Pug, CoffeeScript e etc....</p></div></li></ul>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67f0019koeo9tvgtjht",
				"title": "",
				"markdown": "ul#intro-feature-list\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-bolt\n      h3.intro-feature-title Молниеносный\n      p.intro-feature-desc Node.js даёт молниеносную скорость. Генерация сотни файлов занимает всего несколько секунд.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-pencil\n      h3.intro-feature-title Поддержка Markdown\n      p.intro-feature-desc Поддерживаются все возможности GitHub Flavored Markdown. Возможность использовать большинство плагинов Octopress в Hexo.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cloud-upload\n      h3.intro-feature-title Размещение одной командой\n      p.intro-feature-desc Нужна лишь одна команда для размещения сайта на GitHub Pages, Heroku и других хостингах.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cog\n      h3.intro-feature-title Различные плагины\n      p.intro-feature-desc Hexo обладает мощной системой плагинов. Можно установить различные расширения для Jade и CoffeeScript.\n",
				"html": "<ul id=\"intro-feature-list\"><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-bolt\"></i></div><h3 class=\"intro-feature-title\">Молниеносный</h3><p class=\"intro-feature-desc\">Node.js даёт молниеносную скорость. Генерация сотни файлов занимает всего несколько секунд.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-pencil\"></i></div><h3 class=\"intro-feature-title\">Поддержка Markdown</h3><p class=\"intro-feature-desc\">Поддерживаются все возможности GitHub Flavored Markdown. Возможность использовать большинство плагинов Octopress в Hexo.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cloud-upload\"></i></div><h3 class=\"intro-feature-title\">Размещение одной командой</h3><p class=\"intro-feature-desc\">Нужна лишь одна команда для размещения сайта на GitHub Pages, Heroku и других хостингах.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cog\"></i></div><h3 class=\"intro-feature-title\">Различные плагины</h3><p class=\"intro-feature-desc\">Hexo обладает мощной системой плагинов. Можно установить различные расширения для Jade и CoffeeScript.</p></div></li></ul>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67f001akoeohxh1og2g",
				"title": "Themes",
				"markdown": "",
				"html": "",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y67f001bkoeoa9gfk1qq",
				"title": "",
				"markdown": "ul#intro-feature-list\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-bolt\n      h3.intro-feature-title รวดเร็ว\n      p.intro-feature-desc โดย Node.js คุณสามารถเริ่มใช้งานได้อย่างรวดเร็วและไม่กี่วินาก็สร้างขึ้นหลายร้อยไฟล์ได้\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-pencil\n      h3.intro-feature-title สนับสนุน Markdown\n      p.intro-feature-desc Hexo สนับสนุนฟีเจอร์ทั้งหมดของ GitHub Flavored\n        Markdown คุณยังสามารถใช้ปลั๊กอินส่วมมากของ Octopress\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cloud-upload\n      h3.intro-feature-title Deploy ด้วยคำสั้งบรรทัดเดียว\n      p.intro-feature-desc คุณสามารถ deploy หน้าเว็บไปยัง GitHub Pages Herokuหรือเว็บไซต์อื่นๆด้วยคำสั้งบรรทัดเดียวก็พอ\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cog\n      h3.intro-feature-title ปลั๊กอินมากมาย\n      p.intro-feature-desc Hexo มีระบบปลั๊กอินที่มีประสิทธิภาพ โดยปลั๊กอินต่างๆ Hexo ของคุณจะสามารถสนับสนุน Jade และ CoffeeScript\n",
				"html": "<ul id=\"intro-feature-list\"><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-bolt\"></i></div><h3 class=\"intro-feature-title\">รวดเร็ว</h3><p class=\"intro-feature-desc\">โดย Node.js คุณสามารถเริ่มใช้งานได้อย่างรวดเร็วและไม่กี่วินาก็สร้างขึ้นหลายร้อยไฟล์ได้</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-pencil\"></i></div><h3 class=\"intro-feature-title\">สนับสนุน Markdown</h3><p class=\"intro-feature-desc\">Hexo สนับสนุนฟีเจอร์ทั้งหมดของ GitHub Flavored<markdown>คุณยังสามารถใช้ปลั๊กอินส่วมมากของ Octopress</markdown></p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cloud-upload\"></i></div><h3 class=\"intro-feature-title\">Deploy ด้วยคำสั้งบรรทัดเดียว</h3><p class=\"intro-feature-desc\">คุณสามารถ deploy หน้าเว็บไปยัง GitHub Pages Herokuหรือเว็บไซต์อื่นๆด้วยคำสั้งบรรทัดเดียวก็พอ</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cog\"></i></div><h3 class=\"intro-feature-title\">ปลั๊กอินมากมาย</h3><p class=\"intro-feature-desc\">Hexo มีระบบปลั๊กอินที่มีประสิทธิภาพ โดยปลั๊กอินต่างๆ Hexo ของคุณจะสามารถสนับสนุน Jade และ CoffeeScript</p></div></li></ul>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6260000koeo3yl203jw",
				"title": "",
				"markdown": "ul#intro-feature-list\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-bolt\n      h3.intro-feature-title Blazing Fast\n      p.intro-feature-desc Node.js brings you incredible generating speed. Hundreds of files take only seconds to build.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-pencil\n      h3.intro-feature-title Markdown Support\n      p.intro-feature-desc All features of GitHub Flavored Markdown are supported. You can even use most Octopress plugins in Hexo.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cloud-upload\n      h3.intro-feature-title One-Command Deployment\n      p.intro-feature-desc You only need one command to deploy your site to GitHub Pages, Heroku or other sites.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cog\n      h3.intro-feature-title Various Plugins\n      p.intro-feature-desc Hexo has a powerful plugin system. You can install more plugins for Jade, CoffeeScript plugins.",
				"html": "<ul id=\"intro-feature-list\"><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-bolt\"></i></div><h3 class=\"intro-feature-title\">Blazing Fast</h3><p class=\"intro-feature-desc\">Node.js brings you incredible generating speed. Hundreds of files take only seconds to build.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-pencil\"></i></div><h3 class=\"intro-feature-title\">Markdown Support</h3><p class=\"intro-feature-desc\">All features of GitHub Flavored Markdown are supported. You can even use most Octopress plugins in Hexo.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cloud-upload\"></i></div><h3 class=\"intro-feature-title\">One-Command Deployment</h3><p class=\"intro-feature-desc\">You only need one command to deploy your site to GitHub Pages, Heroku or other sites.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cog\"></i></div><h3 class=\"intro-feature-title\">Various Plugins</h3><p class=\"intro-feature-desc\">Hexo has a powerful plugin system. You can install more plugins for Jade, CoffeeScript plugins.</p></div></li></ul>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y66t0003koeob69pg5s3",
				"title": "Deployer",
				"markdown": "A deployer helps users quickly deploy their site to a remote server without complicated commands.\n\n## Synopsis\n\n``` js\nhexo.extend.deployer.register(name, function(args){\n  // ...\n});\n```\n\nAn argument `args` will be passed into the function. It contains the `deploy` value set in `_config.yml`, as well as the exact input users typed into their terminal.\n",
				"html": "<p>A deployer helps users quickly deploy their site to a remote server without complicated commands.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.deployer.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>An argument <code>args</code> will be passed into the function. It contains the <code>deploy</code> value set in <code>_config.yml</code>, as well as the exact input users typed into their terminal.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68f001ekoeoaspnjfbx",
				"title": "Helpers",
				"markdown": "Helpers are used in templates to help you insert snippets quickly.  Helpers cannot be used in source files.\n\nYou could easily [write your own custom helper](https://hexo.io/api/helper.html) or use our ready-made helpers.\n\n{% youtube Uc53pW0GJHU %}\n\n## URL\n\n### url_for\n\nReturns a url with the root path prefixed. You should use this helper instead of `config.root + path` since Hexo 2.7.\n\n``` js\n<%- url_for(path) %>\n```\n\n### relative_url\n\nReturns the relative URL from `from` to `to`.\n\n``` js\n<%- relative_url(from, to) %>\n```\n\n### gravatar\n\nInserts a Gravatar image.\nIf you don't specify the [options] parameter, the default options will apply. Otherwise, you can set it to a number which will then be passed on as the size parameter to Gravatar. Finally, if you set it to an object, it will be converted into a query string of parameters for Gravatar.\n\n``` js\n<%- gravatar(email, [options]);\n```\n\n**Examples:**\n\n``` js\n<%- gravatar('a@abc.com') %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787\n\n<%- gravatar('a@abc.com', 40) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40\n\n<%- gravatar('a@abc.com' {s: 40, d: 'http://example.com/image.png'}) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&d=http%3A%2F%2Fexample.com%2Fimage.png\n```\n\n## HTML Tags\n\n### css\n\nLoads CSS files. `path` can be an array or a string. If `path` isn't prefixed with `/` or any protocol, it'll get prefixed with the root URL. If you didn't add the `.css` extension after `path`, it will be added automatically.\n\n``` js\n<%- css(path, ...) %>\n```\n\n**Examples:**\n\n``` js\n<%- css('style.css') %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n\n<%- css(['style.css', 'screen.css']) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n// <link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\">\n```\n\n### js\n\nLoads JavaScript files. `path` can be an array or a string. If `path` isn't prefixed with `/` or any protocol, it'll get prefixed with the root URL. If you didn't add the `.js` extension after `path`, it will be added automatically.\n\n``` js\n<%- js(path, ...) %>\n```\n\n**Examples:**\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n\n<%- js(['script.js', 'gallery.js']) %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n// <script type=\"text/javascript\" src=\"/gallery.js\"></script>\n```\n\n### link_to\n\nInserts a link.\n\n``` js\n<%- link_to(path, [text], [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`external` | Opens the link in a new tab | false\n`class` | Class name |\n`id` | ID |\n\n**Examples:**\n\n``` js\n<%- link_to('http://www.google.com') %>\n// <a href=\"http://www.google.com\" title=\"http://www.google.com\">http://www.google.com</a>\n\n<%- link_to('http://www.google.com', 'Google') %>\n// <a href=\"http://www.google.com\" title=\"Google\">Google</a>\n\n<%- link_to('http://www.google.com', 'Google', {external: true}) %>\n// <a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\">Google</a>\n```\n\n### mail_to\n\nInserts a mail link.\n\n``` js\n<%- mail_to(path, [text], [options]) %>\n```\n\nOption | Description\n--- | ---\n`class` | Class name\n`id` | ID\n`subject` | Mail subject\n`cc` | CC\n`bcc` | BCC\n`body` | Mail content\n\n**Examples:**\n\n``` js\n<%- mail_to('a@abc.com') %>\n// <a href=\"mailto:a@abc.com\" title=\"a@abc.com\">a@abc.com</a>\n\n<%- mail_to('a@abc.com', 'Email') %>\n// <a href=\"mailto:a@abc.com\" title=\"Email\">Email</a>\n```\n\n### image_tag\n\nInserts an image.\n\n``` js\n<%- image_tag(path, [options]) %>\n```\n\nOption | Description\n--- | ---\n`alt` | Alternative text of the image\n`class` | Class name\n`id` | ID\n`width` | Image width\n`height` | Image height\n\n### favicon_tag\n\nInserts a favicon.\n\n``` js\n<%- favicon_tag(path) %>\n```\n\n### feed_tag\n\nInserts a feed link.\n\n``` js\n<%- feed_tag(path, [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`title` | Feed title |\n`type` | Feed type | atom\n\n## Conditional Tags\n\n### is_current\n\nCheck whether `path` matches the URL of the current page. Use `strict` options to enable strict matching.\n\n``` js\n<%- is_current(path, [strict]) %>\n```\n\n### is_home\n\nCheck whether the current page is home page.\n\n``` js\n<%- is_home() %>\n```\n\n### is_post\n\nCheck whether the current page is a post.\n\n``` js\n<%- is_post() %>\n```\n\n### is_archive\n\nCheck whether the current page is an archive page.\n\n``` js\n<%- is_archive() %>\n```\n\n### is_year\n\nCheck whether the current page is a yearly archive page.\n\n``` js\n<%- is_year() %>\n```\n\n### is_month\n\nCheck whether the current page is a monthly archive page.\n\n``` js\n<%- is_month() %>\n```\n\n### is_category\n\nCheck whether the current page is a category page.\nIf a string is given as parameter, check whether the current page match the given category.\n\n``` js\n<%- is_category() %>\n<%- is_category('hobby') %>\n```\n\n### is_tag\n\nCheck whether the current page is a tag page.\nIf a string is given as parameter, check whether the current page match the given tag.\n\n``` js\n<%- is_tag() %>\n<%- is_tag('hobby') %>\n```\n\n## String Manipulation\n\n### trim\n\nRemoves prefixing and trailing spaces of a string.\n\n``` js\n<%- trim(string) %>\n```\n\n### strip_html\n\nSanitizes all HTML tags in a string.\n\n``` js\n<%- strip_html(string) %>\n```\n\n**Examples:**\n\n``` js\n<%- strip_html('It's not <b>important</b> anymore!') %>\n// It's not important anymore!\n```\n\n### titlecase\n\nTransforms a string into proper title caps.\n\n``` js\n<%- titlecase(string) %>\n```\n\n**Examples:**\n\n``` js\n<%- titlecase('this is an apple') %>\n# This is an Apple\n```\n\n### markdown\n\nRenders a string with Markdown.\n\n``` js\n<%- markdown(str) %>\n```\n\n**Examples:**\n\n``` js\n<%- markdown('make me **strong**') %>\n// make me <strong>strong</strong>\n```\n\n### render\n\nRenders a string.\n\n``` js\n<%- render(str, engine, [options]) %>\n```\n\n### word_wrap\n\nWraps text into lines no longer than `length`. `length` is 80 by default.\n\n``` js\n<%- word_wrap(str, [length]) %>\n```\n\n**Examples:**\n\n``` js\n<%- word_wrap('Once upon a time', 8) %>\n// Once upon\\n a time\n```\n\n### truncate\n\nTruncates text after certain `length`. Default is 30 characters.\n\n``` js\n<%- truncate(text, [options]) %>\n```\n\n**Examples:**\n\n``` js\n<%- truncate('Once upon a time in a world far far away', {length: 17}) %>\n// Once upon a ti...\n\n<%- truncate('Once upon a time in a world far far away', {length: 17, separator: ' '}) %>\n// Once upon a...\n\n<%- truncate('And they found that many people were sleeping better.', {length: 25, omission: '... (continued)'}) %>\n// And they f... (continued)\n```\n\n## Templates\n\n### partial\n\nLoads other template files. You can define local variables in `locals`.\n\n``` js\n<%- partial(layout, [locals], [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`cache` | Cache contents (Use fragment cache) | `false`\n`only` | Strict local variables. Only use variables set in `locals` in templates. | `false`\n\n### fragment_cache\n\nCaches the contents in a fragment. It saves the contents within a fragment and serves the cache when the next request comes in.\n\n``` js\n<%- fragment_cache(id, fn);\n```\n\n**Examples:**\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}) %>\n```\n\n## Date & Time\n\n### date\n\nInserts formatted date. `date` can be unix time, ISO string, date object, or [Moment.js] object. `format` is `date_format` setting by default.\n\n``` js\n<%- date(date, [format]) %>\n```\n\n**Examples:**\n\n``` js\n<%- date(Date.now()) %>\n// 2013-01-01\n\n<%- date(Date.now(), 'YYYY/M/D') %>\n// Jan 1 2013\n```\n\n### date_xml\n\nInserts date in XML format. `date` can be unix time, ISO string, date object, or [Moment.js] object.\n\n``` js\n<%- date_xml(date) %>\n```\n\n**Examples:**\n\n``` js\n<%- date_xml(Date.now()) %>\n// 2013-01-01T00:00:00.000Z\n```\n\n### time\n\nInserts formatted time. `date` can be unix time, ISO string, date object, or [Moment.js] object. `format` is `time_format` setting by default.\n\n``` js\n<%- time(date, [format]) %>\n```\n\n**Examples:**\n\n``` js\n<%- time(Date.now()) %>\n// 13:05:12\n\n<%- time(Date.now(), 'h:mm:ss a') %>\n// 1:05:12 pm\n```\n\n### full_date\n\nInserts formatted date and time. `date` can be unix time, ISO string, date object, or [Moment.js] object. `format` is `date_format + time_format` setting by default.\n\n``` js\n<%- full_date(date, [format]) %>\n```\n\n**Examples:**\n\n``` js\n<%- full_date(new Date()) %>\n// Jan 1, 2013 0:00:00\n\n<%- full_date(new Date(), 'dddd, MMMM Do YYYY, h:mm:ss a') %>\n// Tuesday, January 1st 2013, 12:00:00 am\n```\n\n### moment\n\n[Moment.js] library.\n\n## List\n\n### list_categories\n\nInserts a list of all categories.\n\n``` js\n<%- list_categories([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of categories | name\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each category | true\n`style` | Style to display the category list. `list` displays categories in an unordered list.  | list\n`separator` | Separator between categories. (Only works if `style` is not `list`) | ,\n`depth` | Levels of categories to be displayed. `0` displays all categories and child categories; `-1` is similar to `0` but displayed in flat; `1` displays only top level categories. | 0\n`class` | Class name of category list. | category\n`transform` | The function that changes the display of category name. |\n`suffix` | Add a suffix to link. | None\n\n### list_tags\n\nInserts a list of all tags.\n\n``` js\n<%- list_tags([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of categories | name\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each tag | true\n`style` | Style to display the tag list. `list` displays tags in an unordered list.  | list\n`separator` | Separator between categories. (Only works if `style` is not `list`) | ,\n`class` | Class name of tag list. | tag\n`transform` | The function that changes the display of tag name. |\n`amount` | The number of tags to display (0 = unlimited) | 0\n`suffix` | Add a suffix to link. | None\n\n### list_archives\n\nInserts a list of archives.\n\n``` js\n<%- list_archives([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`type` | Type. This value can be `yearly` or `monthly`. | monthly\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each archive | true\n`format` | Date format | MMMM YYYY\n`style` | Style to display the archive list. `list` displays archives in an unordered list.  | list\n`separator` | Separator between archives. (Only works if `style` is not `list`) | ,\n`class` | Class name of archive list. | archive\n`transform` | The function that changes the display of archive name. |\n\n### list_posts\n\nInserts a list of posts.\n\n``` js\n<%- list_posts([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of posts | date\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`style` | Style to display the post list. `list` displays posts in an unordered list.  | list\n`separator` | Separator between posts. (Only works if `style` is not `list`) | ,\n`class` | Class name of post list. | post\n`amount` | The number of posts to display (0 = unlimited) | 6\n`transform` | The function that changes the display of post name. |\n\n### tagcloud\n\nInserts a tag cloud.\n\n``` js\n<%- tagcloud([tags], [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`min_font` | Minimal font size | 10\n`max_font` | Maximum font size | 20\n`unit` | Unit of font size | px\n`amount` | Total amount of tags | 40\n`orderby` | Order of tags | name\n`order` | Sort order. `1`, `sac` as ascending; `-1`, `desc` as descending | 1\n`color` | Colorizes the tag cloud | false\n`start_color` | Start color. You can use hex (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`) or [color keywords]. This option only works when `color` is true. |\n`end_color` | End color. You can use hex (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`) or [color keywords]. This option only works when `color` is true. |\n\n## Miscellaneous\n\n### paginator\n\nInserts a paginator.\n\n``` js\n<%- paginator(options) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`base` | Base URL | /\n`format` | URL format | page/%d/\n`total` | The number of pages | 1\n`current` | Current page number | 0\n`prev_text` | The link text of previous page. Works only if `prev_next` is set to true. | Prev\n`next_text` | The link text of next page. Works only if `prev_next` is set to true. | Next\n`space` | The space text | &hellp;\n`prev_next` | Display previous and next links | true\n`end_size` | The number of pages displayed on the start and the end side | 1\n`mid_size` | The number of pages displayed between current page, but not including current page | 2\n`show_all` | Display all pages. If this is set true, `end_size` and `mid_size` will not works. | false\n\n### search_form\n\nInserts a Google search form.\n\n``` js\n<%- search_form(options) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`class` | The class name of form | search-form\n`text` | Search hint word | Search\n`button` | Display search button. The value can be a boolean or a string. When the value is a string, it'll be the text of the button. | false\n\n### number_format\n\nFormats a number.\n\n``` js\n<%- number_format(number, [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`precision` | The precision of number. The value can be `false` or a nonnegative integer. | false\n`delimiter` | The thousands delimiter | ,\n`separator` | The separator between the fractional and integer digits. | .\n\n**Examples:**\n\n``` js\n<%- number_format(12345.67, {precision: 1}) %>\n// 12,345.68\n\n<%- number_format(12345.67, {precision: 4}) %>\n// 12,345.6700\n\n<%- number_format(12345.67, {precision: 0}) %>\n// 12,345\n\n<%- number_format(12345.67, {delimiter: ''}) %>\n// 12345.67\n\n<%- number_format(12345.67, {separator: '/'}) %>\n// 12,345/67\n```\n\n### open_graph\n\nInserts [Open Graph] data.\n\n``` js\n<%- open_graph([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`title` | Page title (`og:title`) | `page.title`\n`type` | Page type (`og:type`) | blog\n`url` | Page URL (`og:url`) | `url`\n`image` | Page cover (`og:image`) | First image in the content\n`site_name` | Site name (`og:site_name`) | `config.title`\n`description` | Page description (`og:desription`) | Page excerpt or first 200 characters of the content\n`twitter_card` | Twitter card type (`twitter:card`) | summary\n`twitter_id` | Twitter ID (`twitter:creator`) |\n`twitter_site` | Twitter Site (`twitter:site`) |\n`google_plus` | Google+ profile link |\n`fb_admins` | Facebook admin ID |\n`fb_app_id` | Facebook App ID |\n\n### toc\n\nParses all heading tags (h1~h6) in the content and inserts a table of contents.\n\n``` js\n<%- toc(str, [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`class` | Class name | toc\n`list_number` | Displays list number | true\n`max_depth` | Maximum heading depth of generated toc | 6\n\n**Examples:**\n\n``` js\n<%- toc(page.content) %>\n```\n\n[color keywords]: http://www.w3.org/TR/css3-color/#svg-color\n[Moment.js]: http://momentjs.com/\n[Open Graph]: http://ogp.me/\n",
				"html": "<p>Helpers are used in templates to help you insert snippets quickly.  Helpers cannot be used in source files.</p>\n<p>You could easily <a href=\"https://hexo.io/api/helper.html\">write your own custom helper</a> or use our ready-made helpers.</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/Uc53pW0GJHU\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h2 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h2><h3 id=\"url-for\"><a href=\"#url-for\" class=\"headerlink\" title=\"url_for\"></a>url_for</h3><p>Returns a url with the root path prefixed. You should use this helper instead of <code>config.root + path</code> since Hexo 2.7.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- url_for(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"relative-url\"><a href=\"#relative-url\" class=\"headerlink\" title=\"relative_url\"></a>relative_url</h3><p>Returns the relative URL from <code>from</code> to <code>to</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- relative_url(<span class=\"keyword\">from</span>, to) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"gravatar\"><a href=\"#gravatar\" class=\"headerlink\" title=\"gravatar\"></a>gravatar</h3><p>Inserts a Gravatar image.<br>If you don’t specify the [options] parameter, the default options will apply. Otherwise, you can set it to a number which will then be passed on as the size parameter to Gravatar. Finally, if you set it to an object, it will be converted into a query string of parameters for Gravatar.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(email, [options]);</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>, <span class=\"number\">40</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span> &#123;<span class=\"attr\">s</span>: <span class=\"number\">40</span>, <span class=\"attr\">d</span>: <span class=\"string\">'http://example.com/image.png'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&amp;d=http%3A%2F%2Fexample.com%2Fimage.png</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"HTML-Tags\"><a href=\"#HTML-Tags\" class=\"headerlink\" title=\"HTML Tags\"></a>HTML Tags</h2><h3 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h3><p>Loads CSS files. <code>path</code> can be an array or a string. If <code>path</code> isn’t prefixed with <code>/</code> or any protocol, it’ll get prefixed with the root URL. If you didn’t add the <code>.css</code> extension after <code>path</code>, it will be added automatically.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(<span class=\"string\">'style.css'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- css([<span class=\"string\">'style.css'</span>, <span class=\"string\">'screen.css'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\"&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h3><p>Loads JavaScript files. <code>path</code> can be an array or a string. If <code>path</code> isn’t prefixed with <code>/</code> or any protocol, it’ll get prefixed with the root URL. If you didn’t add the <code>.js</code> extension after <code>path</code>, it will be added automatically.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- js([<span class=\"string\">'script.js'</span>, <span class=\"string\">'gallery.js'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/gallery.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"link-to\"><a href=\"#link-to\" class=\"headerlink\" title=\"link_to\"></a>link_to</h3><p>Inserts a link.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>external</code></td>\n<td>Opens the link in a new tab</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n<td></td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"http://www.google.com\"&gt;http://www.google.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\"&gt;Google&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>, &#123;<span class=\"attr\">external</span>: <span class=\"literal\">true</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\"&gt;Google&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"mail-to\"><a href=\"#mail-to\" class=\"headerlink\" title=\"mail_to\"></a>mail_to</h3><p>Inserts a mail link.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>subject</code></td>\n<td>Mail subject</td>\n</tr>\n<tr>\n<td><code>cc</code></td>\n<td>CC</td>\n</tr>\n<tr>\n<td><code>bcc</code></td>\n<td>BCC</td>\n</tr>\n<tr>\n<td><code>body</code></td>\n<td>Mail content</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"a@abc.com\"&gt;a@abc.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>, <span class=\"string\">'Email'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"Email\"&gt;Email&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"image-tag\"><a href=\"#image-tag\" class=\"headerlink\" title=\"image_tag\"></a>image_tag</h3><p>Inserts an image.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- image_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>alt</code></td>\n<td>Alternative text of the image</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>width</code></td>\n<td>Image width</td>\n</tr>\n<tr>\n<td><code>height</code></td>\n<td>Image height</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"favicon-tag\"><a href=\"#favicon-tag\" class=\"headerlink\" title=\"favicon_tag\"></a>favicon_tag</h3><p>Inserts a favicon.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- favicon_tag(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"feed-tag\"><a href=\"#feed-tag\" class=\"headerlink\" title=\"feed_tag\"></a>feed_tag</h3><p>Inserts a feed link.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- feed_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Feed title</td>\n<td></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Feed type</td>\n<td>atom</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Conditional-Tags\"><a href=\"#Conditional-Tags\" class=\"headerlink\" title=\"Conditional Tags\"></a>Conditional Tags</h2><h3 id=\"is-current\"><a href=\"#is-current\" class=\"headerlink\" title=\"is_current\"></a>is_current</h3><p>Check whether <code>path</code> matches the URL of the current page. Use <code>strict</code> options to enable strict matching.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_current(path, [strict]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-home\"><a href=\"#is-home\" class=\"headerlink\" title=\"is_home\"></a>is_home</h3><p>Check whether the current page is home page.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_home() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-post\"><a href=\"#is-post\" class=\"headerlink\" title=\"is_post\"></a>is_post</h3><p>Check whether the current page is a post.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_post() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-archive\"><a href=\"#is-archive\" class=\"headerlink\" title=\"is_archive\"></a>is_archive</h3><p>Check whether the current page is an archive page.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_archive() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-year\"><a href=\"#is-year\" class=\"headerlink\" title=\"is_year\"></a>is_year</h3><p>Check whether the current page is a yearly archive page.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_year() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-month\"><a href=\"#is-month\" class=\"headerlink\" title=\"is_month\"></a>is_month</h3><p>Check whether the current page is a monthly archive page.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_month() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-category\"><a href=\"#is-category\" class=\"headerlink\" title=\"is_category\"></a>is_category</h3><p>Check whether the current page is a category page.<br>If a string is given as parameter, check whether the current page match the given category.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_category() %&gt;</span><br><span class=\"line\">&lt;%- is_category(<span class=\"string\">'hobby'</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-tag\"><a href=\"#is-tag\" class=\"headerlink\" title=\"is_tag\"></a>is_tag</h3><p>Check whether the current page is a tag page.<br>If a string is given as parameter, check whether the current page match the given tag.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_tag() %&gt;</span><br><span class=\"line\">&lt;%- is_tag(<span class=\"string\">'hobby'</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"String-Manipulation\"><a href=\"#String-Manipulation\" class=\"headerlink\" title=\"String Manipulation\"></a>String Manipulation</h2><h3 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\"trim\"></a>trim</h3><p>Removes prefixing and trailing spaces of a string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- trim(string) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"strip-html\"><a href=\"#strip-html\" class=\"headerlink\" title=\"strip_html\"></a>strip_html</h3><p>Sanitizes all HTML tags in a string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(<span class=\"string\">'It'</span>s not &lt;b&gt;important&lt;<span class=\"regexp\">/b&gt; anymore!') %&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ It's not important anymore!</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"titlecase\"><a href=\"#titlecase\" class=\"headerlink\" title=\"titlecase\"></a>titlecase</h3><p>Transforms a string into proper title caps.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(<span class=\"string\">'this is an apple'</span>) %&gt;</span><br><span class=\"line\"># This is an Apple</span><br></pre></td></tr></table></figure>\n<h3 id=\"markdown\"><a href=\"#markdown\" class=\"headerlink\" title=\"markdown\"></a>markdown</h3><p>Renders a string with Markdown.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(str) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(<span class=\"string\">'make me **strong**'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// make me &lt;strong&gt;strong&lt;/strong&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h3><p>Renders a string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- render(str, engine, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"word-wrap\"><a href=\"#word-wrap\" class=\"headerlink\" title=\"word_wrap\"></a>word_wrap</h3><p>Wraps text into lines no longer than <code>length</code>. <code>length</code> is 80 by default.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(str, [length]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(<span class=\"string\">'Once upon a time'</span>, <span class=\"number\">8</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon\\n a time</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"truncate\"><a href=\"#truncate\" class=\"headerlink\" title=\"truncate\"></a>truncate</h3><p>Truncates text after certain <code>length</code>. Default is 30 characters.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(text, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon a ti...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>, <span class=\"attr\">separator</span>: <span class=\"string\">' '</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon a...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- truncate(<span class=\"string\">'And they found that many people were sleeping better.'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">25</span>, <span class=\"attr\">omission</span>: <span class=\"string\">'... (continued)'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// And they f... (continued)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Templates\"><a href=\"#Templates\" class=\"headerlink\" title=\"Templates\"></a>Templates</h2><h3 id=\"partial\"><a href=\"#partial\" class=\"headerlink\" title=\"partial\"></a>partial</h3><p>Loads other template files. You can define local variables in <code>locals</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(layout, [locals], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cache</code></td>\n<td>Cache contents (Use fragment cache)</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>only</code></td>\n<td>Strict local variables. Only use variables set in <code>locals</code> in templates.</td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fragment-cache\"><a href=\"#fragment-cache\" class=\"headerlink\" title=\"fragment_cache\"></a>fragment_cache</h3><p>Caches the contents in a fragment. It saves the contents within a fragment and serves the cache when the next request comes in.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(id, fn);</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;) %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Date-amp-Time\"><a href=\"#Date-amp-Time\" class=\"headerlink\" title=\"Date &amp; Time\"></a>Date &amp; Time</h2><h3 id=\"date\"><a href=\"#date\" class=\"headerlink\" title=\"date\"></a>date</h3><p>Inserts formatted date. <code>date</code> can be unix time, ISO string, date object, or <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object. <code>format</code> is <code>date_format</code> setting by default.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'YYYY/M/D'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1 2013</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"date-xml\"><a href=\"#date-xml\" class=\"headerlink\" title=\"date_xml\"></a>date_xml</h3><p>Inserts date in XML format. <code>date</code> can be unix time, ISO string, date object, or <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(date) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01T00:00:00.000Z</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"time\"><a href=\"#time\" class=\"headerlink\" title=\"time\"></a>time</h3><p>Inserts formatted time. <code>date</code> can be unix time, ISO string, date object, or <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object. <code>format</code> is <code>time_format</code> setting by default.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 13:05:12</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 1:05:12 pm</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"full-date\"><a href=\"#full-date\" class=\"headerlink\" title=\"full_date\"></a>full_date</h3><p>Inserts formatted date and time. <code>date</code> can be unix time, ISO string, date object, or <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object. <code>format</code> is <code>date_format + time_format</code> setting by default.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1, 2013 0:00:00</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(), <span class=\"string\">'dddd, MMMM Do YYYY, h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Tuesday, January 1st 2013, 12:00:00 am</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"moment\"><a href=\"#moment\" class=\"headerlink\" title=\"moment\"></a>moment</h3><p><a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> library.</p>\n<h2 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h2><h3 id=\"list-categories\"><a href=\"#list-categories\" class=\"headerlink\" title=\"list_categories\"></a>list_categories</h3><p>Inserts a list of all categories.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_categories([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of categories</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Display the number of posts for each category</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the category list. <code>list</code> displays categories in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between categories. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>depth</code></td>\n<td>Levels of categories to be displayed. <code>0</code> displays all categories and child categories; <code>-1</code> is similar to <code>0</code> but displayed in flat; <code>1</code> displays only top level categories.</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of category list.</td>\n<td>category</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of category name.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>Add a suffix to link.</td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-tags\"><a href=\"#list-tags\" class=\"headerlink\" title=\"list_tags\"></a>list_tags</h3><p>Inserts a list of all tags.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_tags([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of categories</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Display the number of posts for each tag</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the tag list. <code>list</code> displays tags in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between categories. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of tag list.</td>\n<td>tag</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of tag name.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>The number of tags to display (0 = unlimited)</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>Add a suffix to link.</td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-archives\"><a href=\"#list-archives\" class=\"headerlink\" title=\"list_archives\"></a>list_archives</h3><p>Inserts a list of archives.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_archives([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>type</code></td>\n<td>Type. This value can be <code>yearly</code> or <code>monthly</code>.</td>\n<td>monthly</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Display the number of posts for each archive</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>Date format</td>\n<td>MMMM YYYY</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the archive list. <code>list</code> displays archives in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between archives. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of archive list.</td>\n<td>archive</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of archive name.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-posts\"><a href=\"#list-posts\" class=\"headerlink\" title=\"list_posts\"></a>list_posts</h3><p>Inserts a list of posts.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_posts([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of posts</td>\n<td>date</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the post list. <code>list</code> displays posts in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between posts. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of post list.</td>\n<td>post</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>The number of posts to display (0 = unlimited)</td>\n<td>6</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of post name.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tagcloud\"><a href=\"#tagcloud\" class=\"headerlink\" title=\"tagcloud\"></a>tagcloud</h3><p>Inserts a tag cloud.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- tagcloud([tags], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>min_font</code></td>\n<td>Minimal font size</td>\n<td>10</td>\n</tr>\n<tr>\n<td><code>max_font</code></td>\n<td>Maximum font size</td>\n<td>20</td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td>Unit of font size</td>\n<td>px</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>Total amount of tags</td>\n<td>40</td>\n</tr>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of tags</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort order. <code>1</code>, <code>sac</code> as ascending; <code>-1</code>, <code>desc</code> as descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>Colorizes the tag cloud</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>start_color</code></td>\n<td>Start color. You can use hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) or <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">color keywords</a>. This option only works when <code>color</code> is true.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>end_color</code></td>\n<td>End color. You can use hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) or <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">color keywords</a>. This option only works when <code>color</code> is true.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Miscellaneous\"><a href=\"#Miscellaneous\" class=\"headerlink\" title=\"Miscellaneous\"></a>Miscellaneous</h2><h3 id=\"paginator\"><a href=\"#paginator\" class=\"headerlink\" title=\"paginator\"></a>paginator</h3><p>Inserts a paginator.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- paginator(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>base</code></td>\n<td>Base URL</td>\n<td>/</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>URL format</td>\n<td>page/%d/</td>\n</tr>\n<tr>\n<td><code>total</code></td>\n<td>The number of pages</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>current</code></td>\n<td>Current page number</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>prev_text</code></td>\n<td>The link text of previous page. Works only if <code>prev_next</code> is set to true.</td>\n<td>Prev</td>\n</tr>\n<tr>\n<td><code>next_text</code></td>\n<td>The link text of next page. Works only if <code>prev_next</code> is set to true.</td>\n<td>Next</td>\n</tr>\n<tr>\n<td><code>space</code></td>\n<td>The space text</td>\n<td>&hellp;</td>\n</tr>\n<tr>\n<td><code>prev_next</code></td>\n<td>Display previous and next links</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>end_size</code></td>\n<td>The number of pages displayed on the start and the end side</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>mid_size</code></td>\n<td>The number of pages displayed between current page, but not including current page</td>\n<td>2</td>\n</tr>\n<tr>\n<td><code>show_all</code></td>\n<td>Display all pages. If this is set true, <code>end_size</code> and <code>mid_size</code> will not works.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"search-form\"><a href=\"#search-form\" class=\"headerlink\" title=\"search_form\"></a>search_form</h3><p>Inserts a Google search form.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- search_form(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>The class name of form</td>\n<td>search-form</td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>Search hint word</td>\n<td>Search</td>\n</tr>\n<tr>\n<td><code>button</code></td>\n<td>Display search button. The value can be a boolean or a string. When the value is a string, it’ll be the text of the button.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"number-format\"><a href=\"#number-format\" class=\"headerlink\" title=\"number_format\"></a>number_format</h3><p>Formats a number.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(number, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>precision</code></td>\n<td>The precision of number. The value can be <code>false</code> or a nonnegative integer.</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>delimiter</code></td>\n<td>The thousands delimiter</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>The separator between the fractional and integer digits.</td>\n<td>.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">1</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.68</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">4</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.6700</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">0</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">delimiter</span>: <span class=\"string\">''</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12345.67</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">separator</span>: <span class=\"string\">'/'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345/67</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"open-graph\"><a href=\"#open-graph\" class=\"headerlink\" title=\"open_graph\"></a>open_graph</h3><p>Inserts <a href=\"http://ogp.me/\" target=\"_blank\" rel=\"noopener\">Open Graph</a> data.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- open_graph([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Page title (<code>og:title</code>)</td>\n<td><code>page.title</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Page type (<code>og:type</code>)</td>\n<td>blog</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>Page URL (<code>og:url</code>)</td>\n<td><code>url</code></td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>Page cover (<code>og:image</code>)</td>\n<td>First image in the content</td>\n</tr>\n<tr>\n<td><code>site_name</code></td>\n<td>Site name (<code>og:site_name</code>)</td>\n<td><code>config.title</code></td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>Page description (<code>og:desription</code>)</td>\n<td>Page excerpt or first 200 characters of the content</td>\n</tr>\n<tr>\n<td><code>twitter_card</code></td>\n<td>Twitter card type (<code>twitter:card</code>)</td>\n<td>summary</td>\n</tr>\n<tr>\n<td><code>twitter_id</code></td>\n<td>Twitter ID (<code>twitter:creator</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>twitter_site</code></td>\n<td>Twitter Site (<code>twitter:site</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>google_plus</code></td>\n<td>Google+ profile link</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_admins</code></td>\n<td>Facebook admin ID</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_app_id</code></td>\n<td>Facebook App ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"toc\"><a href=\"#toc\" class=\"headerlink\" title=\"toc\"></a>toc</h3><p>Parses all heading tags (h1~h6) in the content and inserts a table of contents.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(str, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n<td>toc</td>\n</tr>\n<tr>\n<td><code>list_number</code></td>\n<td>Displays list number</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>max_depth</code></td>\n<td>Maximum heading depth of generated toc</td>\n<td>6</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(page.content) %&gt;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68f001fkoeoqq3j19gl",
				"title": "Deployer",
				"markdown": "Deployer는 복잡한 명령어를 사용하지 않고도 사용자가 사이트를 원격 서버에 빠르게 deploy할 수 있게 도와줍니다.\n\n## 개요\n\n``` js\nhexo.extend.deployer.register(name, function(args){\n  // ...\n});\n```\n\n`args`인자는 사용자가 터미널을 통해 입력한 값은 물론 `_config.yml` 파일 내의 `deploy` 값도 포함하여 함수 내로 전달됩니다.\n",
				"html": "<p>Deployer는 복잡한 명령어를 사용하지 않고도 사용자가 사이트를 원격 서버에 빠르게 deploy할 수 있게 도와줍니다.</p>\n<h2 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.deployer.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p><code>args</code>인자는 사용자가 터미널을 통해 입력한 값은 물론 <code>_config.yml</code> 파일 내의 <code>deploy</code> 값도 포함하여 함수 내로 전달됩니다.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68f001gkoeo19p4etq5",
				"title": "Events",
				"markdown": "Hexo는 [EventEmitter]를 상속합니다. `on` 메소드를 사용하여 Hexo가 emit한 이벤트를 listen할 수 있습니다. 그리고 `emit`메소드를 사용하여 이벤트를 emit합니다. 더 자세한 정보는 Node.js API 문서를 참고해 주시기 바랍니다.\n\n### deployBefore\n\nDeployment가 시작되기 전에 emit합니다.\n\n### deployAfter\n\nDeployment가 끝난 후에 emit합니다.\n\n### exit\n\nHexo가 종료되기 전에 emit합니다.\n\n### generateBefore\n\n생성(generation)이 시작되기 전에 emit합니다.\n\n### generateAfter\n\n생성(generation)이 끝난 후에 emit합니다.\n\n### new\n\n새로운 포스트가 생성된 후에 emit합니다. 이 이벤트는 포스트 데이터를 반환합니다:\n\n``` js\nhexo.on('new', function(post){\n  //\n});\n```\n\n데이터 | 설명\n--- | ---\n`post.path` | 포스트 파일의 전체경로\n`post.content` | 포스트 파일의 컨텐츠\n\n### processBefore\n\n프로세싱을 시작하기 전에 emit합니다. 이 이벤트는 box의 루트 디렉토리의 경로를 반환합니다.\n\n### processAfter\n\n프로세싱이 끝난 후에 emit합니다. 이 이벤트는 box의 루트 디렉토리의 경로를 반환합니다.\n\n### ready\n\n초기화 과정이 완료된 후 emit합니다.\n\n[EventEmitter]: http://nodejs.org/api/events.html\n",
				"html": "<p>Hexo는 <a href=\"http://nodejs.org/api/events.html\" target=\"_blank\" rel=\"noopener\">EventEmitter</a>를 상속합니다. <code>on</code> 메소드를 사용하여 Hexo가 emit한 이벤트를 listen할 수 있습니다. 그리고 <code>emit</code>메소드를 사용하여 이벤트를 emit합니다. 더 자세한 정보는 Node.js API 문서를 참고해 주시기 바랍니다.</p>\n<h3 id=\"deployBefore\"><a href=\"#deployBefore\" class=\"headerlink\" title=\"deployBefore\"></a>deployBefore</h3><p>Deployment가 시작되기 전에 emit합니다.</p>\n<h3 id=\"deployAfter\"><a href=\"#deployAfter\" class=\"headerlink\" title=\"deployAfter\"></a>deployAfter</h3><p>Deployment가 끝난 후에 emit합니다.</p>\n<h3 id=\"exit\"><a href=\"#exit\" class=\"headerlink\" title=\"exit\"></a>exit</h3><p>Hexo가 종료되기 전에 emit합니다.</p>\n<h3 id=\"generateBefore\"><a href=\"#generateBefore\" class=\"headerlink\" title=\"generateBefore\"></a>generateBefore</h3><p>생성(generation)이 시작되기 전에 emit합니다.</p>\n<h3 id=\"generateAfter\"><a href=\"#generateAfter\" class=\"headerlink\" title=\"generateAfter\"></a>generateAfter</h3><p>생성(generation)이 끝난 후에 emit합니다.</p>\n<h3 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h3><p>새로운 포스트가 생성된 후에 emit합니다. 이 이벤트는 포스트 데이터를 반환합니다:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.on(<span class=\"string\">'new'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>데이터</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post.path</code></td>\n<td>포스트 파일의 전체경로</td>\n</tr>\n<tr>\n<td><code>post.content</code></td>\n<td>포스트 파일의 컨텐츠</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"processBefore\"><a href=\"#processBefore\" class=\"headerlink\" title=\"processBefore\"></a>processBefore</h3><p>프로세싱을 시작하기 전에 emit합니다. 이 이벤트는 box의 루트 디렉토리의 경로를 반환합니다.</p>\n<h3 id=\"processAfter\"><a href=\"#processAfter\" class=\"headerlink\" title=\"processAfter\"></a>processAfter</h3><p>프로세싱이 끝난 후에 emit합니다. 이 이벤트는 box의 루트 디렉토리의 경로를 반환합니다.</p>\n<h3 id=\"ready\"><a href=\"#ready\" class=\"headerlink\" title=\"ready\"></a>ready</h3><p>초기화 과정이 완료된 후 emit합니다.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68g001hkoeo3p71y2bh",
				"title": "Box",
				"markdown": "Box는 특정 폴더 안의 파일들을 처리하기 위해 사용되는 컨테이너 입니다. Hexo는 `hexo.source`와 `hexo.theme` 두 가지 종류의 Box를 사용합니다: `hexo.source`는 `source` 폴더를 처리할 때 사용되고 `hexo.theme`는 `theme` 폴더를 처리할 때 사용됩니다.\n\n## 파일 불러오기\n\nBox는 `process`와 `watch` 두 가지 종류의 메소드를 지원합니다. `process`는 폴더 안의 모든 파일을 불러옵니다. `watch`도 동일한 동작을 수행하지만 파일이 변경되는 것을 감지(watching)합니다.\n\n``` js\nbox.process().then(function(){\n  // ...\n});\n\nbox.watch().then(function(){\n  // You can call box.unwatch() later to stop watching.\n});\n```\n\n## 경로 매칭\n\nBox는 다양한 방법을 통해 경로를 매칭시킵니다. 당신은 함수 또는 Express-style pattern string을 통해 정규 표현식을 사용할 수 있습니다. 아래는 예시입니다:\n\n``` plain\nposts/:id => posts/89\nposts/*path => posts/2015/title\n```\n\n[util.Pattern]에서 더 많은 정보를 확인하실 수 있습니다.\n\n## 프로세서\n\n프로세서는 Box의 핵심이 되는 요소이며, 파일을 처리할 때 사용됩니다. 경로 매칭을 사용하여 프로세서가 어떤 프로세스를 처리해야 하는지 제한할 수 있습니다. 새로운 프로세서는 `addProcessor` 메소드를 통해 등록할 수 있습니다.\n\n``` js\nbox.addProcessor('posts/:id', function(file){\n  //\n});\n```\n\nBox는 매칭된 파일의 콘텐츠를 프로세서로 넘겨줍니다. 이 정보는 callback의 `file` 인자로부터 직접 읽을 수 있습니다.\n\n속성 | 설명\n--- | ---\n`source` | 파일의 전체 경로\n`path` | 파일의 box에 대한 상대 경로\n`type` | 파일의 형식. `create`, `update`, `skip`, `delete` 네 가지 값을 가질 수 있습니다.\n`params` | 경로 매칭으로부터 얻은 정보.\n\nBox는 개발자의 부담을 덜어주기 위해 file IO에 대한 몇 가지 메소드를 제공합니다.\n\n메소드 | 설명\n--- | ---\n`read` | 파일을 읽습니다\n`readSync` | 파일을 동기적으로 읽습니다\n`stat` | 파일의 상태를 읽습니다\n`statSync` | 파일의 상태를 동기적으로 읽습니다\n`render` | 파일을 생성합니다\n`renderSync` | 파일을 동기적으로 생성합니다\n\n[util.Pattern]: https://github.com/hexojs/hexo-util#patternrule\n",
				"html": "<p>Box는 특정 폴더 안의 파일들을 처리하기 위해 사용되는 컨테이너 입니다. Hexo는 <code>hexo.source</code>와 <code>hexo.theme</code> 두 가지 종류의 Box를 사용합니다: <code>hexo.source</code>는 <code>source</code> 폴더를 처리할 때 사용되고 <code>hexo.theme</code>는 <code>theme</code> 폴더를 처리할 때 사용됩니다.</p>\n<h2 id=\"파일-불러오기\"><a href=\"#파일-불러오기\" class=\"headerlink\" title=\"파일 불러오기\"></a>파일 불러오기</h2><p>Box는 <code>process</code>와 <code>watch</code> 두 가지 종류의 메소드를 지원합니다. <code>process</code>는 폴더 안의 모든 파일을 불러옵니다. <code>watch</code>도 동일한 동작을 수행하지만 파일이 변경되는 것을 감지(watching)합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.process().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">box.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// You can call box.unwatch() later to stop watching.</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"경로-매칭\"><a href=\"#경로-매칭\" class=\"headerlink\" title=\"경로 매칭\"></a>경로 매칭</h2><p>Box는 다양한 방법을 통해 경로를 매칭시킵니다. 당신은 함수 또는 Express-style pattern string을 통해 정규 표현식을 사용할 수 있습니다. 아래는 예시입니다:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">posts/:id =&gt; posts/89</span><br><span class=\"line\">posts/*path =&gt; posts/2015/title</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/hexojs/hexo-util#patternrule\" target=\"_blank\" rel=\"noopener\">util.Pattern</a>에서 더 많은 정보를 확인하실 수 있습니다.</p>\n<h2 id=\"프로세서\"><a href=\"#프로세서\" class=\"headerlink\" title=\"프로세서\"></a>프로세서</h2><p>프로세서는 Box의 핵심이 되는 요소이며, 파일을 처리할 때 사용됩니다. 경로 매칭을 사용하여 프로세서가 어떤 프로세스를 처리해야 하는지 제한할 수 있습니다. 새로운 프로세서는 <code>addProcessor</code> 메소드를 통해 등록할 수 있습니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">box.addProcessor(<span class=\"string\">'posts/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Box는 매칭된 파일의 콘텐츠를 프로세서로 넘겨줍니다. 이 정보는 callback의 <code>file</code> 인자로부터 직접 읽을 수 있습니다.</p>\n<table>\n<thead>\n<tr>\n<th>속성</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>파일의 전체 경로</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>파일의 box에 대한 상대 경로</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>파일의 형식. <code>create</code>, <code>update</code>, <code>skip</code>, <code>delete</code> 네 가지 값을 가질 수 있습니다.</td>\n</tr>\n<tr>\n<td><code>params</code></td>\n<td>경로 매칭으로부터 얻은 정보.</td>\n</tr>\n</tbody>\n</table>\n<p>Box는 개발자의 부담을 덜어주기 위해 file IO에 대한 몇 가지 메소드를 제공합니다.</p>\n<table>\n<thead>\n<tr>\n<th>메소드</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>read</code></td>\n<td>파일을 읽습니다</td>\n</tr>\n<tr>\n<td><code>readSync</code></td>\n<td>파일을 동기적으로 읽습니다</td>\n</tr>\n<tr>\n<td><code>stat</code></td>\n<td>파일의 상태를 읽습니다</td>\n</tr>\n<tr>\n<td><code>statSync</code></td>\n<td>파일의 상태를 동기적으로 읽습니다</td>\n</tr>\n<tr>\n<td><code>render</code></td>\n<td>파일을 생성합니다</td>\n</tr>\n<tr>\n<td><code>renderSync</code></td>\n<td>파일을 동기적으로 생성합니다</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68g001ikoeoot0q1zpr",
				"title": "Console",
				"markdown": "Console은 Hexo와 사용자 간의 교두보 역할을 합니다. 사용 가능한 console 명령어를 등록하고 설명합니다.\n\n## 개요\n\n``` js\nhexo.extend.console.register(name, desc, options, function(args){\n  // ...\n});\n```\n\n인자 | 설명\n--- | ---\n`name` | 이름\n`desc` | 설명\n`options`| 옵션\n\n`args` 인자는 사용자가 터미널에 입력한 값을 포함하여 함수 내로 전달됩니다. [Minimist]에 의해 파싱됩니다.\n\n## 옵션\n\n### 사용법\n\nConsole 명령어의 사용법의 예시입니다:\n\n``` js\n{usage: '[layout] <title>'}\n// hexo new [layout] <title>\n```\n\n### 인자\n\nConsole 명령어의 각 인자에 대한 예시입니다:\n\n``` js\n{\n  arguments: [\n    {name: 'layout', desc: 'Post layout'},\n    {name: 'title', desc: 'Post title'}\n  ]\n}\n```\n\n### 옵션\n\nConsole 명령어의 각 옵션에 대한 예시입니다:\n\n``` js\n{\n  options: [\n    {name: '-r, --replace', desc: 'Replace existing files'}\n  ]\n}\n```\n\n### 설명\n\nConsole 명령어에 대한 더 자세한 정보입니다.\n\n## 예시\n\n``` js\nhexo.extend.console.register('config', 'Display configuration', function(args){\n  console.log(hexo.config);\n});\n```\n\n[Minimist]: https://github.com/substack/minimist\n",
				"html": "<p>Console은 Hexo와 사용자 간의 교두보 역할을 합니다. 사용 가능한 console 명령어를 등록하고 설명합니다.</p>\n<h2 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(name, desc, options, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>인자</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>이름</td>\n</tr>\n<tr>\n<td><code>desc</code></td>\n<td>설명</td>\n</tr>\n<tr>\n<td><code>options</code></td>\n<td>옵션</td>\n</tr>\n</tbody>\n</table>\n<p><code>args</code> 인자는 사용자가 터미널에 입력한 값을 포함하여 함수 내로 전달됩니다. <a href=\"https://github.com/substack/minimist\" target=\"_blank\" rel=\"noopener\">Minimist</a>에 의해 파싱됩니다.</p>\n<h2 id=\"옵션\"><a href=\"#옵션\" class=\"headerlink\" title=\"옵션\"></a>옵션</h2><h3 id=\"사용법\"><a href=\"#사용법\" class=\"headerlink\" title=\"사용법\"></a>사용법</h3><p>Console 명령어의 사용법의 예시입니다:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">usage</span>: <span class=\"string\">'[layout] &lt;title&gt;'</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">// hexo new [layout] &lt;title&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"인자\"><a href=\"#인자\" class=\"headerlink\" title=\"인자\"></a>인자</h3><p>Console 명령어의 각 인자에 대한 예시입니다:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"built_in\">arguments</span>: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'layout'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post layout'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'title'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post title'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"옵션-1\"><a href=\"#옵션-1\" class=\"headerlink\" title=\"옵션\"></a>옵션</h3><p>Console 명령어의 각 옵션에 대한 예시입니다:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  options: [</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'-r, --replace'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Replace existing files'</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"설명\"><a href=\"#설명\" class=\"headerlink\" title=\"설명\"></a>설명</h3><p>Console 명령어에 대한 더 자세한 정보입니다.</p>\n<h2 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.console.register(<span class=\"string\">'config'</span>, <span class=\"string\">'Display configuration'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(hexo.config);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68h001jkoeo5vhyyx77",
				"title": "Filter",
				"markdown": "Filter는 특정한 데이터를 수정할 때 사용합니다. Hexo는 데이터를 filter로 순차적으로 전달하고 filter들은 교대로 데이터를 수정할 수 있습니다. 이 컨셉은 [WordPress](http://codex.wordpress.org/Plugin_API#Filters)에서 차용하였습니다.\n\n## 개요\n\n``` js\nhexo.extend.filter.register(type, function(){\n  // ...\n}, priority);\n```\n\n당신은 `priority`을 정의할 수 있습니다. 기본값은 10이며, 값이 낮을 수록 먼저 실행됩니다.\n\n## Filter의 실행\n\n``` js\nhexo.extend.filter.exec(type, data, options);\nhexo.extend.filter.execSync(type, data, options);\n```\n\n옵션 | 설명\n--- | ---\n`context` | Context\n`args` | 인자. 이 값은 배열(array)입니다.\n\nFilter의 첫 번째 인자는 `data` 입니다. 다음 filter로 전달 된 `data`는 새 값으로 변경되어 반환될 수 있습니다. 아무런 값도 반환되지 않았다면 data의 값이 변경되지 않았다는 의미입니다. Filter의 다른 인자를 지정하기 위해 `args`를 사용할 수도 있습니다. 아래 예시를 봐주세요.\n \n``` js\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'some data'\n  // arg1 === 'foo'\n  // arg2 === 'bar'\n\n  return 'something';\n});\n\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'something'\n});\n\nhexo.extend.filter.exec('test', 'some data', {\n  args: ['foo', 'bar']\n});\n```\n\nFilter를 실행하기 위해 아래 메소드들을 사용할 수도 있습니다.\n\n``` js\nhexo.execFilter(type, data, options);\nhexo.execFilterSync(type, data, options);\n```\n\n## Filter의 등록 해제\n\n``` js\nhexo.extend.filter.unregister(type, filter);\n```\n\n## Filter 목록\n\nHexo에서 사용하는 filter의 목록은 아래와 같습니다.\n\n### before_post_render\n\nPost가 생성되기 전에 실행됩니다. 실행 단계에 대해 더 알아보시길 원한다면 [post rendering](posts.html#Render)를 참조해 주세요.\n\n아래 예시는 title을 소문자로 변경하는 것을 보여줍니다.\n\n``` js\nhexo.extend.filter.register('before_post_render', function(data){\n  data.title = data.title.toLowerCase();\n  return data;\n});\n```\n\n### after_post_render\n\nPost가 생성된 후 실행됩니다.\nExecuted after a post is rendered. 실행 단계에 대해 더 알아보시길 원한다면 [post rendering](posts.html#Render)를 참조해 주세요.\n\n아래 예시는 `@username`을 Twitter link로 대체하는 것을 보여줍니다.\n\n``` js\nhexo.extend.filter.register('after_post_render', function(data){\n  data.content = data.content.replace(/@(\\d+)/, '<a href=\"http://twitter.com/$1\">#$1</a>');\n  return data;\n});\n```\n\n### before_exit\n\nHexo가 종료되기 전에 실행됩니다. -- `hexo.exit`가 호출되는 즉시 실행됩니다.\n\n``` js\nhexo.extend.filter.register('before_exit', function(){\n  // ...\n});\n```\n\n### before_generate\n\n생성(generation)이 시작되기 전에 실행됩니다.\n\n``` js\nhexo.extend.filter.register('before_generate', function(){\n  // ...\n});\n```\n\n### after_generate\n\n생성(generation)이 끝난 후에 실행됩니다.\n\n``` js\nhexo.extend.filter.register('after_generate', function(){\n  // ...\n});\n```\n\n### template_locals\n\n템플릿에서 [지역 변수(Local variables)](../docs/variables.html)를 수정합니다.\n\n아래 예시는 템플릿의 지역 변수에 현재 시간을 추가합니다.\n\n``` js\nhexo.extend.filter.register('template_locals', function(locals){\n  locals.now = Date.now();\n  return locals;\n});\n```\n\n### after_init\n\nHexo가 초기화 작업이 완료된 후 실행됩니다. -- `hexo.init`이 완료되는 즉시 실행됩니다.\n\n``` js\nhexo.extend.filter.register('after_init', function(){\n  // ...\n});\n```\n\n### new_post_path\n\n새로운 포스트가 생성될 때 포스트의 경로를 결정하기 위해 실행됩니다.\n\n``` js\nhexo.extend.filter.register('new_post_path', function(data, replace){\n  // ...\n});\n```\n\n### post_permalink\n\nPost의 permalink를 결정하기 위해 사용합니다.\n\n``` js\nhexo.extend.filter.register('post_permalink', function(data){\n  // ...\n});\n```\n\n### after_render\n\n렌더링이 완료된 후 실행됩니다. [Rendering](rendering.html#after_render_Filters)에서 더 많은 정보를 확인하실 수 있습니다.\n\n### server_middleware\n\n서버에 미들웨어를 추가합니다. `app`은 [Connect] 인스턴스입니다.\n\n아래 예시는 response header에 `X-Powered-By: Hexo`를 추가합니다.\n\n``` js\nhexo.extend.filter.register('server_middleware', function(app){\n  app.use(function(req, res, next){\n    res.setHeader('X-Powered-By', 'Hexo');\n    next();\n  });\n});\n```\n\n[Connect]: https://github.com/senchalabs/connect\n",
				"html": "<p>Filter는 특정한 데이터를 수정할 때 사용합니다. Hexo는 데이터를 filter로 순차적으로 전달하고 filter들은 교대로 데이터를 수정할 수 있습니다. 이 컨셉은 <a href=\"http://codex.wordpress.org/Plugin_API#Filters\" target=\"_blank\" rel=\"noopener\">WordPress</a>에서 차용하였습니다.</p>\n<h2 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(type, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, priority);</span><br></pre></td></tr></table></figure>\n<p>당신은 <code>priority</code>을 정의할 수 있습니다. 기본값은 10이며, 값이 낮을 수록 먼저 실행됩니다.</p>\n<h2 id=\"Filter의-실행\"><a href=\"#Filter의-실행\" class=\"headerlink\" title=\"Filter의 실행\"></a>Filter의 실행</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.exec(type, data, options);</span><br><span class=\"line\">hexo.extend.filter.execSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>context</code></td>\n<td>Context</td>\n</tr>\n<tr>\n<td><code>args</code></td>\n<td>인자. 이 값은 배열(array)입니다.</td>\n</tr>\n</tbody>\n</table>\n<p>Filter의 첫 번째 인자는 <code>data</code> 입니다. 다음 filter로 전달 된 <code>data</code>는 새 값으로 변경되어 반환될 수 있습니다. 아무런 값도 반환되지 않았다면 data의 값이 변경되지 않았다는 의미입니다. Filter의 다른 인자를 지정하기 위해 <code>args</code>를 사용할 수도 있습니다. 아래 예시를 봐주세요.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'some data'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg1 === 'foo'</span></span><br><span class=\"line\">  <span class=\"comment\">// arg2 === 'bar'</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'something'</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// data === 'something'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.exec(<span class=\"string\">'test'</span>, <span class=\"string\">'some data'</span>, &#123;</span><br><span class=\"line\">  args: [<span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span>]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Filter를 실행하기 위해 아래 메소드들을 사용할 수도 있습니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.execFilter(type, data, options);</span><br><span class=\"line\">hexo.execFilterSync(type, data, options);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Filter의-등록-해제\"><a href=\"#Filter의-등록-해제\" class=\"headerlink\" title=\"Filter의 등록 해제\"></a>Filter의 등록 해제</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.unregister(type, filter);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Filter-목록\"><a href=\"#Filter-목록\" class=\"headerlink\" title=\"Filter 목록\"></a>Filter 목록</h2><p>Hexo에서 사용하는 filter의 목록은 아래와 같습니다.</p>\n<h3 id=\"before-post-render\"><a href=\"#before-post-render\" class=\"headerlink\" title=\"before_post_render\"></a>before_post_render</h3><p>Post가 생성되기 전에 실행됩니다. 실행 단계에 대해 더 알아보시길 원한다면 <a href=\"posts.html#Render\">post rendering</a>를 참조해 주세요.</p>\n<p>아래 예시는 title을 소문자로 변경하는 것을 보여줍니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.title = data.title.toLowerCase();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-post-render\"><a href=\"#after-post-render\" class=\"headerlink\" title=\"after_post_render\"></a>after_post_render</h3><p>Post가 생성된 후 실행됩니다.<br>Executed after a post is rendered. 실행 단계에 대해 더 알아보시길 원한다면 <a href=\"posts.html#Render\">post rendering</a>를 참조해 주세요.</p>\n<p>아래 예시는 <code>@username</code>을 Twitter link로 대체하는 것을 보여줍니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  data.content = data.content.replace(<span class=\"regexp\">/@(\\d+)/</span>, <span class=\"string\">'&lt;a href=\"http://twitter.com/$1\"&gt;#$1&lt;/a&gt;'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-exit\"><a href=\"#before-exit\" class=\"headerlink\" title=\"before_exit\"></a>before_exit</h3><p>Hexo가 종료되기 전에 실행됩니다. – <code>hexo.exit</code>가 호출되는 즉시 실행됩니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_exit'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"before-generate\"><a href=\"#before-generate\" class=\"headerlink\" title=\"before_generate\"></a>before_generate</h3><p>생성(generation)이 시작되기 전에 실행됩니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-generate\"><a href=\"#after-generate\" class=\"headerlink\" title=\"after_generate\"></a>after_generate</h3><p>생성(generation)이 끝난 후에 실행됩니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"template-locals\"><a href=\"#template-locals\" class=\"headerlink\" title=\"template_locals\"></a>template_locals</h3><p>템플릿에서 <a href=\"../docs/variables.html\">지역 변수(Local variables)</a>를 수정합니다.</p>\n<p>아래 예시는 템플릿의 지역 변수에 현재 시간을 추가합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'template_locals'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  locals.now = <span class=\"built_in\">Date</span>.now();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-init\"><a href=\"#after-init\" class=\"headerlink\" title=\"after_init\"></a>after_init</h3><p>Hexo가 초기화 작업이 완료된 후 실행됩니다. – <code>hexo.init</code>이 완료되는 즉시 실행됩니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_init'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"new-post-path\"><a href=\"#new-post-path\" class=\"headerlink\" title=\"new_post_path\"></a>new_post_path</h3><p>새로운 포스트가 생성될 때 포스트의 경로를 결정하기 위해 실행됩니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'new_post_path'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, replace</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"post-permalink\"><a href=\"#post-permalink\" class=\"headerlink\" title=\"post_permalink\"></a>post_permalink</h3><p>Post의 permalink를 결정하기 위해 사용합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'post_permalink'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"after-render\"><a href=\"#after-render\" class=\"headerlink\" title=\"after_render\"></a>after_render</h3><p>렌더링이 완료된 후 실행됩니다. <a href=\"rendering.html#after_render_Filters\">Rendering</a>에서 더 많은 정보를 확인하실 수 있습니다.</p>\n<h3 id=\"server-middleware\"><a href=\"#server-middleware\" class=\"headerlink\" title=\"server_middleware\"></a>server_middleware</h3><p>서버에 미들웨어를 추가합니다. <code>app</code>은 <a href=\"https://github.com/senchalabs/connect\" target=\"_blank\" rel=\"noopener\">Connect</a> 인스턴스입니다.</p>\n<p>아래 예시는 response header에 <code>X-Powered-By: Hexo</code>를 추가합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'server_middleware'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>)</span>&#123;</span><br><span class=\"line\">  app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;</span><br><span class=\"line\">    res.setHeader(<span class=\"string\">'X-Powered-By'</span>, <span class=\"string\">'Hexo'</span>);</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68h001kkoeo4yh561qo",
				"title": "Generator",
				"markdown": "Generator는 처리된 파일들을 기준으로 경로(route)를 생성합니다.\n\n## 개요\n\n``` js\nhexo.extend.generator.register(name, function(locals){\n  // ...\n});\n```\n\n`locals`인자는 [사이트 변수(site variables)](../docs/variables.html#Site-Variables)를 포함하며 함수를 통해 전달될 것입니다. 이 인자를 사용하면 데이터베이스에 직접 접근하지 않고도 웹 사이트의 데이터를 얻을 수 있습니다.\n\n## 경로(route) 업데이트\n\n``` js\nhexo.extend.generator.register('test', function(locals){\n  // Object\n  return {\n    path: 'foo',\n    data: 'foo'\n  };\n\n  // Array\n  return [\n    {path: 'foo', data: 'foo'},\n    {path: 'bar', data: 'bar'}\n  ];\n});\n```\n\n속성 | 설명\n--- | ---\n`path` | 접두사 `/`를 포함하지 않는 경로.\n`data` | 데이터\n`layout` | 레이아웃. 렌더링할 레이아웃을 지정합니다. 이 값은 string 또는 array입니다. 이 값이 무시된다면 `data`의 직접적인 경로가 반환됩니다.\n\n소스 파일들이 업데이트 되면, Hexo는 모든 generator들을 실행하고 경로(route)를 재구성합니다. **제발 라우터에 직접 접근하지 마시고 데이터를 리턴하세요.**\n\n## 예제\n\n### Archive Page\n\nArchive page를 `archives/index.html`에 생성합니다. 우리는 모든 포스트 데이터를 템플릿으로 전달합니다.이 데이터는 템플릿의 `page` 변수와 같습니다.\n\n다음, 테마 템플릿 렌더링을 위한 `layout` 속성을 설정합니다. 아래 예시에서 두 개의 레이아웃 설정을 확인할 수 있습니다. 만약 `archive` 레이아웃이 존재하지 않는다면 `index` 레이아웃이 사용될 것입니다.\n\n``` js\nhexo.extend.generator.register('archive', function(locals){\n  return {\n    path: 'archives/index.html',\n    data: locals.posts,\n    layout: ['archive', 'index']\n  }\n});\n```\n\n### Archive Page에 Pagination 사용하기\n\nHexo 공식 툴인 [hexo-pagination]을 사용하여 간편하게 pagination을 구현할 수 있습니다.\n\n``` js\nvar pagination = require('hexo-pagination');\n\nhexo.extend.generator.register('archive', function(locals){\n  return pagination('archives/index.html', locals.posts, {\n    perPage: 10,\n    layout: ['archive', 'index'],\n    data: {}\n  });\n});\n```\n\n### 모든 포스트 생성하기\n\n`locals.posts`에 포함된 모든 포스트들을 순회하고 각각의 포스트에 대한 경로(route)를 생성합니다.\n\n``` js\nhexo.extend.generator.register('post', function(locals){\n  return locals.posts.map(function(post){\n    return {\n      path: post.path,\n      data: post,\n      layout: 'post'\n    };\n  });\n});\n```\n\n### 파일 복사\n\n이 시점에 우리는 명시적인 데이터를 반환하지 않고 필요한 경우에만 경로(route)는 `fs.ReadStream`를 생성하기 위해 함수에 `data`를 설정합니다.\n\n``` js\nvar fs = require('hexo-fs');\n\nhexo.extend.generator.register('asset', function(locals){\n  return {\n    path: 'file.txt',\n    data: function(){\n      return fs.createReadStream('path/to/file.txt')\n    }\n  };\n});\n```\n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n",
				"html": "<p>Generator는 처리된 파일들을 기준으로 경로(route)를 생성합니다.</p>\n<h2 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p><code>locals</code>인자는 <a href=\"../docs/variables.html#Site-Variables\">사이트 변수(site variables)</a>를 포함하며 함수를 통해 전달될 것입니다. 이 인자를 사용하면 데이터베이스에 직접 접근하지 않고도 웹 사이트의 데이터를 얻을 수 있습니다.</p>\n<h2 id=\"경로-route-업데이트\"><a href=\"#경로-route-업데이트\" class=\"headerlink\" title=\"경로(route) 업데이트\"></a>경로(route) 업데이트</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Object</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'foo'</span>,</span><br><span class=\"line\">    data: <span class=\"string\">'foo'</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Array</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> [</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'foo'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'foo'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'bar'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'bar'</span>&#125;</span><br><span class=\"line\">  ];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>속성</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>path</code></td>\n<td>접두사 <code>/</code>를 포함하지 않는 경로.</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>데이터</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>레이아웃. 렌더링할 레이아웃을 지정합니다. 이 값은 string 또는 array입니다. 이 값이 무시된다면 <code>data</code>의 직접적인 경로가 반환됩니다.</td>\n</tr>\n</tbody>\n</table>\n<p>소스 파일들이 업데이트 되면, Hexo는 모든 generator들을 실행하고 경로(route)를 재구성합니다. <strong>제발 라우터에 직접 접근하지 마시고 데이터를 리턴하세요.</strong></p>\n<h2 id=\"예제\"><a href=\"#예제\" class=\"headerlink\" title=\"예제\"></a>예제</h2><h3 id=\"Archive-Page\"><a href=\"#Archive-Page\" class=\"headerlink\" title=\"Archive Page\"></a>Archive Page</h3><p>Archive page를 <code>archives/index.html</code>에 생성합니다. 우리는 모든 포스트 데이터를 템플릿으로 전달합니다.이 데이터는 템플릿의 <code>page</code> 변수와 같습니다.</p>\n<p>다음, 테마 템플릿 렌더링을 위한 <code>layout</code> 속성을 설정합니다. 아래 예시에서 두 개의 레이아웃 설정을 확인할 수 있습니다. 만약 <code>archive</code> 레이아웃이 존재하지 않는다면 <code>index</code> 레이아웃이 사용될 것입니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'archives/index.html'</span>,</span><br><span class=\"line\">    data: locals.posts,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Archive-Page에-Pagination-사용하기\"><a href=\"#Archive-Page에-Pagination-사용하기\" class=\"headerlink\" title=\"Archive Page에 Pagination 사용하기\"></a>Archive Page에 Pagination 사용하기</h3><p>Hexo 공식 툴인 <a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a>을 사용하여 간편하게 pagination을 구현할 수 있습니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pagination(<span class=\"string\">'archives/index.html'</span>, locals.posts, &#123;</span><br><span class=\"line\">    perPage: <span class=\"number\">10</span>,</span><br><span class=\"line\">    layout: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>],</span><br><span class=\"line\">    data: &#123;&#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"모든-포스트-생성하기\"><a href=\"#모든-포스트-생성하기\" class=\"headerlink\" title=\"모든 포스트 생성하기\"></a>모든 포스트 생성하기</h3><p><code>locals.posts</code>에 포함된 모든 포스트들을 순회하고 각각의 포스트에 대한 경로(route)를 생성합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'post'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> locals.posts.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      path: post.path,</span><br><span class=\"line\">      data: post,</span><br><span class=\"line\">      layout: <span class=\"string\">'post'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"파일-복사\"><a href=\"#파일-복사\" class=\"headerlink\" title=\"파일 복사\"></a>파일 복사</h3><p>이 시점에 우리는 명시적인 데이터를 반환하지 않고 필요한 경우에만 경로(route)는 <code>fs.ReadStream</code>를 생성하기 위해 함수에 <code>data</code>를 설정합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.generator.register(<span class=\"string\">'asset'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'file.txt'</span>,</span><br><span class=\"line\">    data: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> fs.createReadStream(<span class=\"string\">'path/to/file.txt'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68i001lkoeo1q2vfqkv",
				"title": "Helper",
				"markdown": "Helper는 템플릿에 쉽고 빠르게 정보(snippet)을 추가할 수 있게 도와줍니다. 우리는 당신이 복잡한 코드를 다룰 때 템플릿 대신 helper를 사용하는 것을 추천합니다.\n\n## 개요\n\n``` js\nhexo.extend.helper.register(name, function(){\n  // ...\n});\n```\n\n## 예시\n\n``` js\nhexo.extend.helper.register('js', function(path){\n  return '<script type=\"text/javascript\" src=\"' + path + '\"></script>';\n});\n```\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"script.js\"></script>\n```\n",
				"html": "<p>Helper는 템플릿에 쉽고 빠르게 정보(snippet)을 추가할 수 있게 도와줍니다. 우리는 당신이 복잡한 코드를 다룰 때 템플릿 대신 helper를 사용하는 것을 추천합니다.</p>\n<h2 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.helper.register(<span class=\"string\">'js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script type=\"text/javascript\" src=\"'</span> + path + <span class=\"string\">'\"&gt;&lt;/script&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68i001mkoeoqs60d9ls",
				"title": "API",
				"markdown": "이 문서는 API에 대해 더 자세한 정보를 담고 있습니다. Hexo 소스 코드를 수정하길 원하는 사용자나 새로운 플러그인을 작성하고자 하는 사용자에게 많은 도움이 될 것입니다. 당신이 Hexo의 기본 사용법에 대해 흥미가 있다면 [docs](../docs)를 확인해보세요.\n\n이 문서는 Hexo 3 이상의 버전에 맞추어 작성되었습니다.\n\n## 초기화\n\n우선, 우리는 Hexo 인스턴스를 생성할 필요가 있습니다. 새로운 인스턴스는 두 개의 인자를 갖게 됩니다. 웹 사이트의 루트 디렉토리를 의미하는 `base_dir`와 초기화 옵션을 가지고 있는 객체입니다. 다음으로, `init` 메소드를 호출함으로써 이 인스턴스를 초기화 합니다. 초기화 시 Hexo는 설정값과 플러그인을 불러옵니다.\n\n``` js\nvar Hexo = require('hexo');\nvar hexo = new Hexo(process.cwd(), {});\n\nhexo.init().then(function(){\n  // ...\n});\n```\n\n옵션 | 설명 | 기본값\n--- | --- | ---\n`debug` | 디버그 모드를 활성화 합니다. 디버그 메시지는 터미널에 출력되고 루트 디렉토리의 `debug.log`파일에 저장됩니다. | `false`\n`safe` | 보호 모드를 활성화 합니다. 플러그인을 불러오지 않습니다. | `false`\n`silent` | 조용한 모드를 활성화 합니다. 어떠한 메시지도 터미널에 표시하지 않습니다. | `false`\n`config` | 환경 설정 파일의 경로를 지정합니다. | `_config.yml`\n\n## 파일 불러오기\n\nHexo는 파일을 불러오기 위해 두 가지의 메소드를 지원합니다. `load`와 `watch` 입니다. `load`는 `source` 테마 데이터를 포함하여 폴더 안의 모든 파일을 불러옵니다. `watch`도 동일한 동작을 수행하지만 파일이 수정되는 것을 감지(watching)합니다.\n\n두 메소드 모드 파일의 목록을 불러와서 적절한 프로세서로 전달합니다. 모든 파일들이 처리된 후, 경로(route)를 생성하기 위해 generator들을 호출합니다.\n\n``` js\nhexo.load().then(function(){\n  // ...\n});\n\nhexo.watch().then(function(){\n  // You can call hexo.unwatch() later to stop watching.\n});\n```\n\n## 명령어의 실행\n\nHexo 인스턴스의 `call` 메소드를 통해 모든 콘솔 명령어를 호출할 수 있습니다. 호출할 때는 콘솔 명령어와 옵션 두 개의 인자를 포함합니다. 각각의 콘솔 명령어마다 서로 다른 옵션을 가지고 있습니다.\n\n``` js\nhexo.call('generate', {}).then(function(){\n  // ...\n});\n```\n\n## 종료\n\n`exit`를 호출하여 콘솔 명령어의 성공적/비성공적 종료를 할 수 있습니다. 이 명령어를 통해 Hexo를 정상적으로 종료하고 데이터베이스를 저장한다거나 하는 중요한 동작들을 마무리할 수 있습니다.\n\n``` js\nhexo.call('generate').then(function(){\n  return hexo.exit();\n}).catch(function(err){\n  return hexo.exit(err);\n});\n```\n",
				"html": "<p>이 문서는 API에 대해 더 자세한 정보를 담고 있습니다. Hexo 소스 코드를 수정하길 원하는 사용자나 새로운 플러그인을 작성하고자 하는 사용자에게 많은 도움이 될 것입니다. 당신이 Hexo의 기본 사용법에 대해 흥미가 있다면 <a href=\"../docs\">docs</a>를 확인해보세요.</p>\n<p>이 문서는 Hexo 3 이상의 버전에 맞추어 작성되었습니다.</p>\n<h2 id=\"초기화\"><a href=\"#초기화\" class=\"headerlink\" title=\"초기화\"></a>초기화</h2><p>우선, 우리는 Hexo 인스턴스를 생성할 필요가 있습니다. 새로운 인스턴스는 두 개의 인자를 갖게 됩니다. 웹 사이트의 루트 디렉토리를 의미하는 <code>base_dir</code>와 초기화 옵션을 가지고 있는 객체입니다. 다음으로, <code>init</code> 메소드를 호출함으로써 이 인스턴스를 초기화 합니다. 초기화 시 Hexo는 설정값과 플러그인을 불러옵니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Hexo = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> hexo = <span class=\"keyword\">new</span> Hexo(process.cwd(), &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.init().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>debug</code></td>\n<td>디버그 모드를 활성화 합니다. 디버그 메시지는 터미널에 출력되고 루트 디렉토리의 <code>debug.log</code>파일에 저장됩니다.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>safe</code></td>\n<td>보호 모드를 활성화 합니다. 플러그인을 불러오지 않습니다.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>silent</code></td>\n<td>조용한 모드를 활성화 합니다. 어떠한 메시지도 터미널에 표시하지 않습니다.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>환경 설정 파일의 경로를 지정합니다.</td>\n<td><code>_config.yml</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"파일-불러오기\"><a href=\"#파일-불러오기\" class=\"headerlink\" title=\"파일 불러오기\"></a>파일 불러오기</h2><p>Hexo는 파일을 불러오기 위해 두 가지의 메소드를 지원합니다. <code>load</code>와 <code>watch</code> 입니다. <code>load</code>는 <code>source</code> 테마 데이터를 포함하여 폴더 안의 모든 파일을 불러옵니다. <code>watch</code>도 동일한 동작을 수행하지만 파일이 수정되는 것을 감지(watching)합니다.</p>\n<p>두 메소드 모드 파일의 목록을 불러와서 적절한 프로세서로 전달합니다. 모든 파일들이 처리된 후, 경로(route)를 생성하기 위해 generator들을 호출합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.load().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// You can call hexo.unwatch() later to stop watching.</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"명령어의-실행\"><a href=\"#명령어의-실행\" class=\"headerlink\" title=\"명령어의 실행\"></a>명령어의 실행</h2><p>Hexo 인스턴스의 <code>call</code> 메소드를 통해 모든 콘솔 명령어를 호출할 수 있습니다. 호출할 때는 콘솔 명령어와 옵션 두 개의 인자를 포함합니다. 각각의 콘솔 명령어마다 서로 다른 옵션을 가지고 있습니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>, &#123;&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"종료\"><a href=\"#종료\" class=\"headerlink\" title=\"종료\"></a>종료</h2><p><code>exit</code>를 호출하여 콘솔 명령어의 성공적/비성공적 종료를 할 수 있습니다. 이 명령어를 통해 Hexo를 정상적으로 종료하고 데이터베이스를 저장한다거나 하는 중요한 동작들을 마무리할 수 있습니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.call(<span class=\"string\">'generate'</span>).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit();</span><br><span class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo.exit(err);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68j001nkoeos9pcp6nz",
				"title": "Local Variables",
				"markdown": "지역 변수는 템플릿의 `site` 변수처럼 템플릿 렌더링을 위해 사용됩니다.\n\n## 기본적인 변수\n\n변수 | 설명\n--- | ---\n`posts` | 모든 포스트\n`pages` | 모든 페이지\n`categories` | 모든 카테고리\n`tags` | 모든 태그\n\n## 변수 얻어오기\n\n``` js\nhexo.locals.get('posts')\n```\n\n## 변수 설정\n\n``` js\nhexo.locals.set('posts', function(){\n  return ...\n});\n```\n\n## 변수 제거\n\n``` js\nhexo.locals.remove('posts');\n```\n\n## 모든 변수 얻어오기\n\n``` js\nhexo.locals.toObject();\n```\n\n## 캐시 무효화\n\n``` js\nhexo.locals.invalidate();\n```",
				"html": "<p>지역 변수는 템플릿의 <code>site</code> 변수처럼 템플릿 렌더링을 위해 사용됩니다.</p>\n<h2 id=\"기본적인-변수\"><a href=\"#기본적인-변수\" class=\"headerlink\" title=\"기본적인 변수\"></a>기본적인 변수</h2><table>\n<thead>\n<tr>\n<th>변수</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>posts</code></td>\n<td>모든 포스트</td>\n</tr>\n<tr>\n<td><code>pages</code></td>\n<td>모든 페이지</td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>모든 카테고리</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>모든 태그</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"변수-얻어오기\"><a href=\"#변수-얻어오기\" class=\"headerlink\" title=\"변수 얻어오기\"></a>변수 얻어오기</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.get(<span class=\"string\">'posts'</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"변수-설정\"><a href=\"#변수-설정\" class=\"headerlink\" title=\"변수 설정\"></a>변수 설정</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.set(<span class=\"string\">'posts'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"변수-제거\"><a href=\"#변수-제거\" class=\"headerlink\" title=\"변수 제거\"></a>변수 제거</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.remove(<span class=\"string\">'posts'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"모든-변수-얻어오기\"><a href=\"#모든-변수-얻어오기\" class=\"headerlink\" title=\"모든 변수 얻어오기\"></a>모든 변수 얻어오기</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.toObject();</span><br></pre></td></tr></table></figure>\n<h2 id=\"캐시-무효화\"><a href=\"#캐시-무효화\" class=\"headerlink\" title=\"캐시 무효화\"></a>캐시 무효화</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.locals.invalidate();</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68j001okoeokga07bfj",
				"title": "Posts",
				"markdown": "## 포스트 생성\n\n``` js\nhexo.post.create(data, replace);\n```\n\n인자 | 설명\n--- | ---\n`data` | 데이터\n`replace` | 존재하는 파일을 대체함\n\n포스트의 속성은 `data`에 정의할 수 있습니다. 아래의 표는 완벽하진 않습니다. 추가 속성은 앞의 내용(front-matter)에 추가할 수 있습니다.\n\n데이터 | 설명\n--- | ---\n`title` | 타이틀\n`slug` | URL\n`layout` | 레이아웃. 기본 값은 `default_layout` 설정을 따릅니다.\n`path` | 경로. Hexo는 기본적으로 `new_post_path`를 기반으로 경로를 설정합니다.\n`date` | 날짜. 기본 값은 현재 시간입니다.\n\n## Draft 배포\n\n``` js\nhexo.post.publish(data, replace);\n```\n\n인자 | 설명\n--- | ---\n`data` | 데이터\n`replace` | 존재하는 파일을 대체함\n\n포스트의 속성은 `data`에 정의할 수 있습니다. 아래의 표는 완벽하진 않습니다. 추가 속성은 앞의 내용(front-matter)에 추가할 수 있습니다.\n\n데이터 | 설명\n--- | ---\n`slug` | 파일명 (Required)\n`layout` | 레이아웃. 기본 값은 `default_layout` 설정을 따릅니다.\n\n## 그리기 (Render)\n\n``` js\nhexo.post.render(source, data);\n```\n\n인자 | 설명\n--- | ---\n`source` | 파일의 전체 경로 (Optional)\n`data` | 데이터\n\n데이터는 반드시 `content` 속성 내에 포함되어야 합니다. 그렇지 않을 경우, Hexo는 원본 파일을 읽으려고 시도할 것입니다. 이 함수의 실행 단계는 아래와 같습니다.\n\n- `before_post_render` filter를 실행합니다.\n- Markdown 또는 다른 렌더러를 통해 렌더링 합니다. (확장자명에 따라 다릅니다.)\n- [Nunjucks]를 사용하여 렌더링 합니다.\n- `after_post_render` filter를 실행합니다.\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n",
				"html": "<h2 id=\"포스트-생성\"><a href=\"#포스트-생성\" class=\"headerlink\" title=\"포스트 생성\"></a>포스트 생성</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.create(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>인자</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>데이터</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>존재하는 파일을 대체함</td>\n</tr>\n</tbody>\n</table>\n<p>포스트의 속성은 <code>data</code>에 정의할 수 있습니다. 아래의 표는 완벽하진 않습니다. 추가 속성은 앞의 내용(front-matter)에 추가할 수 있습니다.</p>\n<table>\n<thead>\n<tr>\n<th>데이터</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>타이틀</td>\n</tr>\n<tr>\n<td><code>slug</code></td>\n<td>URL</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>레이아웃. 기본 값은 <code>default_layout</code> 설정을 따릅니다.</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>경로. Hexo는 기본적으로 <code>new_post_path</code>를 기반으로 경로를 설정합니다.</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>날짜. 기본 값은 현재 시간입니다.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Draft-배포\"><a href=\"#Draft-배포\" class=\"headerlink\" title=\"Draft 배포\"></a>Draft 배포</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.publish(data, replace);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>인자</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>데이터</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>존재하는 파일을 대체함</td>\n</tr>\n</tbody>\n</table>\n<p>포스트의 속성은 <code>data</code>에 정의할 수 있습니다. 아래의 표는 완벽하진 않습니다. 추가 속성은 앞의 내용(front-matter)에 추가할 수 있습니다.</p>\n<table>\n<thead>\n<tr>\n<th>데이터</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>slug</code></td>\n<td>파일명 (Required)</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>레이아웃. 기본 값은 <code>default_layout</code> 설정을 따릅니다.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"그리기-Render\"><a href=\"#그리기-Render\" class=\"headerlink\" title=\"그리기 (Render)\"></a>그리기 (Render)</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.post.render(source, data);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>인자</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>파일의 전체 경로 (Optional)</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>데이터</td>\n</tr>\n</tbody>\n</table>\n<p>데이터는 반드시 <code>content</code> 속성 내에 포함되어야 합니다. 그렇지 않을 경우, Hexo는 원본 파일을 읽으려고 시도할 것입니다. 이 함수의 실행 단계는 아래와 같습니다.</p>\n<ul>\n<li><code>before_post_render</code> filter를 실행합니다.</li>\n<li>Markdown 또는 다른 렌더러를 통해 렌더링 합니다. (확장자명에 따라 다릅니다.)</li>\n<li><a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a>를 사용하여 렌더링 합니다.</li>\n<li><code>after_post_render</code> filter를 실행합니다.</li>\n</ul>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68k001pkoeoe3dljuk4",
				"title": "Migrator",
				"markdown": "Migrator는 다른 시스템을 사용하던 사용자가 Hexo로의 마이그레이션을 할 수 있게 도와줍니다.\n\n## 개요\n\n``` js\nhexo.extend.migrator.register(name, function(args){\n  // ...\n});\n```\n\n`args` 인자는 사용자가 터미널에 입력한 값을 포함하여 함수 내로 전달됩니다.",
				"html": "<p>Migrator는 다른 시스템을 사용하던 사용자가 Hexo로의 마이그레이션을 할 수 있게 도와줍니다.</p>\n<h2 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.migrator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p><code>args</code> 인자는 사용자가 터미널에 입력한 값을 포함하여 함수 내로 전달됩니다.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68k001qkoeo9rpq7bt6",
				"title": "Processor",
				"markdown": "`source` 폴더 내의 소스 파일들을 처리할 때 프로세서를 사용합니다.\n\n## 개요\n\n``` js\nhexo.extend.processor.register(rule, function(file){\n // ...\n});\n```\n\n더 많은 정보를 원하신다면 [box](box.html)를 확인하세요.\n",
				"html": "<p><code>source</code> 폴더 내의 소스 파일들을 처리할 때 프로세서를 사용합니다.</p>\n<h2 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.processor.register(rule, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>더 많은 정보를 원하신다면 <a href=\"box.html\">box</a>를 확인하세요.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68l001rkoeo6301fp1k",
				"title": "Renderer",
				"markdown": "Renderer는 내용들을 그릴(render) 때 사용합니다.\n\n## 개요\n\n``` js\nhexo.extend.renderer.register(name, output, function(data, options){\n  // ...\n}, sync);\n```\n\n인자 | 설명\n--- | ---\n`name` | 입력 파일의 확장자 (소문자, '.' 사용 불가)\n`output` | 출력 파일의 확장자 (소문자, '.' 사용 불가)\n`sync` | 동기(Sync) 모드\n\n\n두 개의 인자가 render 함수로 전달됩니다:\n\n인자 | 설명\n--- | ---\n`data` |두 개의 속성을 포함합니다: 파일 경로인 `path`와 파일 컨텐츠인 `text`. `path`는 없어도 됩니다.\n`option` | 옵션\n\n## 예시\n\n### 비동기(Async) 모드\n\n``` js\nvar stylus = require('stylus');\n\n// Callback\nhexo.extend.renderer.register('styl', 'css', function(data, options, callback){\n  stylus(data.text).set('filename', data.path).render(callback);\n});\n\n// Promise\nhexo.extend.renderer.register('styl', 'css', function(data, options){\n  return new Promise(function(resolve, reject){\n    resolve('test');\n  });\n});\n```\n\n### 동기(Sync) Mode\n\n``` js\nvar ejs = require('ejs');\n\nhexo.extend.renderer.register('ejs', 'html', function(data, options){\n  options.filename = data.path;\n  return ejs.render(data.text, options);\n}, true);\n```\n",
				"html": "<p>Renderer는 내용들을 그릴(render) 때 사용합니다.</p>\n<h2 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.renderer.register(name, output, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, sync);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>인자</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>입력 파일의 확장자 (소문자, ‘.’ 사용 불가)</td>\n</tr>\n<tr>\n<td><code>output</code></td>\n<td>출력 파일의 확장자 (소문자, ‘.’ 사용 불가)</td>\n</tr>\n<tr>\n<td><code>sync</code></td>\n<td>동기(Sync) 모드</td>\n</tr>\n</tbody>\n</table>\n<p>두 개의 인자가 render 함수로 전달됩니다:</p>\n<table>\n<thead>\n<tr>\n<th>인자</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>두 개의 속성을 포함합니다: 파일 경로인 <code>path</code>와 파일 컨텐츠인 <code>text</code>. <code>path</code>는 없어도 됩니다.</td>\n</tr>\n<tr>\n<td><code>option</code></td>\n<td>옵션</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h2><h3 id=\"비동기-Async-모드\"><a href=\"#비동기-Async-모드\" class=\"headerlink\" title=\"비동기(Async) 모드\"></a>비동기(Async) 모드</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> stylus = <span class=\"built_in\">require</span>(<span class=\"string\">'stylus'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Callback</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options, callback</span>)</span>&#123;</span><br><span class=\"line\">  stylus(data.text).set(<span class=\"string\">'filename'</span>, data.path).render(callback);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Promise</span></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'test'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"동기-Sync-Mode\"><a href=\"#동기-Sync-Mode\" class=\"headerlink\" title=\"동기(Sync) Mode\"></a>동기(Sync) Mode</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'ejs'</span>, <span class=\"string\">'html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</span><br><span class=\"line\">  options.filename = data.path;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, options);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68m001skoeocc4ugxl5",
				"title": "Rendering",
				"markdown": "Hexo에서 파일 또는 문자열을 렌더링 하기위해 두 가지의 메소드를 사용할 수 있습니다. 비동기 메소드인 `hexo.render.render`와 동기 메소드인 `hexo.render.renderSync`입니다. 두 가지의 메소드는 매우 유사하기 때문에 이 문서에서는 비동기 메소드인 `hexo.render.render` 에 대해 알아보겠습니다.\n\n## 문자열의 렌더링\n\n문자열을 렌더링하기 위해 Hexo가 어떤 엔진을 사용하여 렌더링하면 되는지 `engine` 을 통해 알려줘야 합니다.\n\n``` js\nhexo.render.render({text: 'example', engine: 'swig'}).then(function(result){\n  // ...\n});\n```\n\n## 파일의 렌더링\n\n파일을 렌더링할 때에는 `engine`을 반드시 지정할 필요는 없습니다. 왜냐하면 Hexo는 파일 확장자를 보고 자동으로 연관된 렌더링 엔진을 찾기 때문입니다. 물론, 명시적으로 `engine`을 지정해도 상관 없습니다.\n\n``` js\nhexo.render.render({path: 'path/to/file.swig'}).then(function(result){\n  // ...\n});\n```\n\n## 렌더링 옵션\n\n두 번째 인자인 옵션은 꼭 넣지 않아도 됩니다.\n\n``` js\nhexo.render.render({text: ''}, {foo: 'foo'}).then(function(result){\n  // ...\n});\n```\n\n## after_render Filters\n\n렌더링이 완료되면 Hexo는 적절한 `after_render` filter를 실행합니다. 예를 들어, 우리는 이 기능을 JavaScript minifier를 구현하는데 사용할 수 있습니다.\n\n``` js\nvar UglifyJS = require('uglify-js');\n\nhexo.extend.filter.register('after_render:js', function(str, data){\n  var result = UglifyJS.minify(str);\n  return result.code;\n});\n```\n\n## 렌더링 가능한 파일인지 확인하기\n\n파일의 경로가 렌더링 가능한지 확인하기 위해 `isRenderable` 또는 `isRenderableSync` 메소드를 사용할 수 있습니다. 이 메소드는 적절한 렌더러가 등록되어 있을 때에만 true를 반환합니다.\n\n``` js\nhexo.render.isRenderable('layout.swig') // true\nhexo.render.isRenderable('image.png') // false\n```\n\n## 출력 확장자 가져오기\n\n`getOutput`메소드를 사용하면 렌더링된 출력의 확장자를 불러올 수 있습니다. 파일이 렌더링 불가능하다면, 이 메소드는 빈 문자열을 반환할 것입니다.\n\n``` js\nhexo.render.getOutput('layout.swig') // html\nhexo.render.getOutput('image.png') // '''\n```\n",
				"html": "<p>Hexo에서 파일 또는 문자열을 렌더링 하기위해 두 가지의 메소드를 사용할 수 있습니다. 비동기 메소드인 <code>hexo.render.render</code>와 동기 메소드인 <code>hexo.render.renderSync</code>입니다. 두 가지의 메소드는 매우 유사하기 때문에 이 문서에서는 비동기 메소드인 <code>hexo.render.render</code> 에 대해 알아보겠습니다.</p>\n<h2 id=\"문자열의-렌더링\"><a href=\"#문자열의-렌더링\" class=\"headerlink\" title=\"문자열의 렌더링\"></a>문자열의 렌더링</h2><p>문자열을 렌더링하기 위해 Hexo가 어떤 엔진을 사용하여 렌더링하면 되는지 <code>engine</code> 을 통해 알려줘야 합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">'example'</span>, <span class=\"attr\">engine</span>: <span class=\"string\">'swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"파일의-렌더링\"><a href=\"#파일의-렌더링\" class=\"headerlink\" title=\"파일의 렌더링\"></a>파일의 렌더링</h2><p>파일을 렌더링할 때에는 <code>engine</code>을 반드시 지정할 필요는 없습니다. 왜냐하면 Hexo는 파일 확장자를 보고 자동으로 연관된 렌더링 엔진을 찾기 때문입니다. 물론, 명시적으로 <code>engine</code>을 지정해도 상관 없습니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">path</span>: <span class=\"string\">'path/to/file.swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"렌더링-옵션\"><a href=\"#렌더링-옵션\" class=\"headerlink\" title=\"렌더링 옵션\"></a>렌더링 옵션</h2><p>두 번째 인자인 옵션은 꼭 넣지 않아도 됩니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">''</span>&#125;, &#123;<span class=\"attr\">foo</span>: <span class=\"string\">'foo'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"after-render-Filters\"><a href=\"#after-render-Filters\" class=\"headerlink\" title=\"after_render Filters\"></a>after_render Filters</h2><p>렌더링이 완료되면 Hexo는 적절한 <code>after_render</code> filter를 실행합니다. 예를 들어, 우리는 이 기능을 JavaScript minifier를 구현하는데 사용할 수 있습니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> UglifyJS = <span class=\"built_in\">require</span>(<span class=\"string\">'uglify-js'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_render:js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str, data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = UglifyJS.minify(str);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result.code;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"렌더링-가능한-파일인지-확인하기\"><a href=\"#렌더링-가능한-파일인지-확인하기\" class=\"headerlink\" title=\"렌더링 가능한 파일인지 확인하기\"></a>렌더링 가능한 파일인지 확인하기</h2><p>파일의 경로가 렌더링 가능한지 확인하기 위해 <code>isRenderable</code> 또는 <code>isRenderableSync</code> 메소드를 사용할 수 있습니다. 이 메소드는 적절한 렌더러가 등록되어 있을 때에만 true를 반환합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\">hexo.render.isRenderable(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"출력-확장자-가져오기\"><a href=\"#출력-확장자-가져오기\" class=\"headerlink\" title=\"출력 확장자 가져오기\"></a>출력 확장자 가져오기</h2><p><code>getOutput</code>메소드를 사용하면 렌더링된 출력의 확장자를 불러올 수 있습니다. 파일이 렌더링 불가능하다면, 이 메소드는 빈 문자열을 반환할 것입니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// html</span></span><br><span class=\"line\">hexo.render.getOutput(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// '''</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68m001tkoeop3oi6jhm",
				"title": "Scaffolds",
				"markdown": "## Scaffold 얻어오기\n\n``` js\nhexo.scaffold.get(name);\n```\n\n## Scaffold 설정하기\n\n``` js\nhexo.scaffold.set(name, content);\n```\n\n## Scaffold의 제거\n\n``` js\nhexo.scaffold.remove(name);\n```",
				"html": "<h2 id=\"Scaffold-얻어오기\"><a href=\"#Scaffold-얻어오기\" class=\"headerlink\" title=\"Scaffold 얻어오기\"></a>Scaffold 얻어오기</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.get(name);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Scaffold-설정하기\"><a href=\"#Scaffold-설정하기\" class=\"headerlink\" title=\"Scaffold 설정하기\"></a>Scaffold 설정하기</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.set(name, content);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Scaffold의-제거\"><a href=\"#Scaffold의-제거\" class=\"headerlink\" title=\"Scaffold의 제거\"></a>Scaffold의 제거</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.scaffold.remove(name);</span><br></pre></td></tr></table></figure>",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68n001ukoeovawiid4g",
				"title": "Router",
				"markdown": "Router는 사이트의 모든 경로를 저장합니다.\n\n## 경로 가져오기\n\n`get` 메소드는 [Stream]을 반환합니다. 아래는 특정한 목적지로 가기 위한 경로 데이터를 저장하는 동작 예시입니다.\n\n``` js\nvar data = hexo.route.get('index.html');\nvar dest = fs.createWriteStream('somewhere');\n\ndata.pipe(dest);\n```\n\n## 경로 설정하기\n\n`set` 메소드는 문자열과 [Buffer] 또는 함수를 통해 얻어옵니다.\n\n``` js\n// String\nhexo.route.set('index.html', 'index')\n\n// Buffer\nhexo.route.set('index.html', new Buffer('index'));\n\n// Function (Promise)\nhexo.route.set('index.html', function(){\n  return new Promise(function(resolve, reject){\n    resolve('index');\n  });\n});\n\n// Function (Callback)\nhexo.route.set('index.html', function(callback){\n  callback(null, 'index');\n});\n```\n\n경로가 수정되었는지 아닌지에 대해 boolean값을 통해 확인할 수 있습니다. 이는 수정되지 않은 파일을 무시하여 파일의 빠른 생성을 도와줍니다.\n\n``` js\nhexo.route.set('index.html', {\n    data: 'index',\n    modified: false\n});\n\n// hexo.route.isModified('index.html') => false\n```\n\n## 경로 제거하기\n\n``` js\nhexo.route.remove('index.html');\n```\n\n## 경로(route) 목록 가져오기\n\n``` js\nhexo.route.list();\n```\n\n## 경로 형식 지정하기\n\n`format` 메소드는 문자열을 사용 가능한 경로로 변환해줍니다.\n\n``` js\nhexo.route.format('archives/');\n// archives/index.html\n```\n\n[Stream]: http://nodejs.org/api/stream.html\n[Buffer]: http://nodejs.org/api/buffer.html\n",
				"html": "<p>Router는 사이트의 모든 경로를 저장합니다.</p>\n<h2 id=\"경로-가져오기\"><a href=\"#경로-가져오기\" class=\"headerlink\" title=\"경로 가져오기\"></a>경로 가져오기</h2><p><code>get</code> 메소드는 <a href=\"http://nodejs.org/api/stream.html\" target=\"_blank\" rel=\"noopener\">Stream</a>을 반환합니다. 아래는 특정한 목적지로 가기 위한 경로 데이터를 저장하는 동작 예시입니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = hexo.route.get(<span class=\"string\">'index.html'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dest = fs.createWriteStream(<span class=\"string\">'somewhere'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">data.pipe(dest);</span><br></pre></td></tr></table></figure>\n<h2 id=\"경로-설정하기\"><a href=\"#경로-설정하기\" class=\"headerlink\" title=\"경로 설정하기\"></a>경로 설정하기</h2><p><code>set</code> 메소드는 문자열과 <a href=\"http://nodejs.org/api/buffer.html\" target=\"_blank\" rel=\"noopener\">Buffer</a> 또는 함수를 통해 얻어옵니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// String</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"string\">'index'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Buffer</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"keyword\">new</span> Buffer(<span class=\"string\">'index'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Function (Promise)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'index'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Function (Callback)</span></span><br><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">callback</span>)</span>&#123;</span><br><span class=\"line\">  callback(<span class=\"literal\">null</span>, <span class=\"string\">'index'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>경로가 수정되었는지 아닌지에 대해 boolean값을 통해 확인할 수 있습니다. 이는 수정되지 않은 파일을 무시하여 파일의 빠른 생성을 도와줍니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, &#123;</span><br><span class=\"line\">    data: <span class=\"string\">'index'</span>,</span><br><span class=\"line\">    modified: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// hexo.route.isModified('index.html') =&gt; false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"경로-제거하기\"><a href=\"#경로-제거하기\" class=\"headerlink\" title=\"경로 제거하기\"></a>경로 제거하기</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.remove(<span class=\"string\">'index.html'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"경로-route-목록-가져오기\"><a href=\"#경로-route-목록-가져오기\" class=\"headerlink\" title=\"경로(route) 목록 가져오기\"></a>경로(route) 목록 가져오기</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.list();</span><br></pre></td></tr></table></figure>\n<h2 id=\"경로-형식-지정하기\"><a href=\"#경로-형식-지정하기\" class=\"headerlink\" title=\"경로 형식 지정하기\"></a>경로 형식 지정하기</h2><p><code>format</code> 메소드는 문자열을 사용 가능한 경로로 변환해줍니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.route.format(<span class=\"string\">'archives/'</span>);</span><br><span class=\"line\"><span class=\"comment\">// archives/index.html</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68n001vkoeo3m3088pa",
				"title": "Tag",
				"markdown": "태그는 사용자가 포스트 내부에 정보(snippet)을 쉽고 빠르게 삽입할 수 있게 도와줍니다.\n\n## 개요\n\n``` js\nhexo.extend.tag.register(name, function(args, content){\n  // ...\n}, options);\n```\n\n`args`, `content` 두 개의 인자가 함수를 통해 전달됩니다. `args`는 태그 플러그인으로 전달되는 인자들을 포함하고 `content`는 태그 플러그인에서 사용할 포장된 내용(wrapped content)을 나타냅니다.\n\nHexo 3에서 비동기 렌더링을 도입한 이후, 우리는 렌더링을 위해 [Nunjucks]를 사용합니다. 이 동작은 [Swig]과는 조금 다를 수 있습니다.\n\n## 옵션\n\n### ends\n\nend 태그를 사용합니다. 기본값은 `false`입니다.\n\n### async\n\n비동기(async) 모드를 활성화 합니다. 기본값은 `false`입니다.\n\n## 예시\n\n### End 태그를 사용하지 않을 때\n\nYoutube video를 삽입하는 예시입니다.\n\n``` js\nhexo.extend.tag.register('youtube', function(args){\n  var id = args[0];\n  return '<div class=\"video-container\"><iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/' + id + '\" frameborder=\"0\" allowfullscreen></iframe></div>';\n});\n```\n\n### End 태그를 사용했을 때\n\nPull quote를 삽입하는 예시입니다.\n\n``` js\nhexo.extend.tag.register('pullquote', function(args, content){\n  var className =  args.join(' ');\n  return '<blockquote class=\"pullquote' + className + '\">' + content + '</blockquote>';\n}, {ends: true});\n```\n\n### 비동기 렌더링\n\n파일을 삽입하는 예시입니다.\n\n``` js\nvar fs = require('hexo-fs');\nvar pathFn = require('path');\n\nhexo.extend.tag.register('include_code', function(args){\n  var filename = args[0];\n  var path = pathFn.join(hexo.source_dir, filename);\n\n  return fs.readFile(path).then(function(content){\n    return '<pre><code>' + content + '</code></pre>';\n  });\n}, {async: true});\n```\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n[Swig]: http://paularmstrong.github.io/swig/\n",
				"html": "<p>태그는 사용자가 포스트 내부에 정보(snippet)을 쉽고 빠르게 삽입할 수 있게 도와줍니다.</p>\n<h2 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;, options);</span><br></pre></td></tr></table></figure>\n<p><code>args</code>, <code>content</code> 두 개의 인자가 함수를 통해 전달됩니다. <code>args</code>는 태그 플러그인으로 전달되는 인자들을 포함하고 <code>content</code>는 태그 플러그인에서 사용할 포장된 내용(wrapped content)을 나타냅니다.</p>\n<p>Hexo 3에서 비동기 렌더링을 도입한 이후, 우리는 렌더링을 위해 <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a>를 사용합니다. 이 동작은 <a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a>과는 조금 다를 수 있습니다.</p>\n<h2 id=\"옵션\"><a href=\"#옵션\" class=\"headerlink\" title=\"옵션\"></a>옵션</h2><h3 id=\"ends\"><a href=\"#ends\" class=\"headerlink\" title=\"ends\"></a>ends</h3><p>end 태그를 사용합니다. 기본값은 <code>false</code>입니다.</p>\n<h3 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h3><p>비동기(async) 모드를 활성화 합니다. 기본값은 <code>false</code>입니다.</p>\n<h2 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h2><h3 id=\"End-태그를-사용하지-않을-때\"><a href=\"#End-태그를-사용하지-않을-때\" class=\"headerlink\" title=\"End 태그를 사용하지 않을 때\"></a>End 태그를 사용하지 않을 때</h3><p>Youtube video를 삽입하는 예시입니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'youtube'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> id = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;div class=\"video-container\"&gt;&lt;iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/'</span> + id + <span class=\"string\">'\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"End-태그를-사용했을-때\"><a href=\"#End-태그를-사용했을-때\" class=\"headerlink\" title=\"End 태그를 사용했을 때\"></a>End 태그를 사용했을 때</h3><p>Pull quote를 삽입하는 예시입니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'pullquote'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> className =  args.join(<span class=\"string\">' '</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;blockquote class=\"pullquote'</span> + className + <span class=\"string\">'\"&gt;'</span> + content + <span class=\"string\">'&lt;/blockquote&gt;'</span>;</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">ends</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"비동기-렌더링\"><a href=\"#비동기-렌더링\" class=\"headerlink\" title=\"비동기 렌더링\"></a>비동기 렌더링</h3><p>파일을 삽입하는 예시입니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> pathFn = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'include_code'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> filename = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> path = pathFn.join(hexo.source_dir, filename);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> fs.readFile(path).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">content</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;pre&gt;&lt;code&gt;'</span> + content + <span class=\"string\">'&lt;/code&gt;&lt;/pre&gt;'</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">async</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68n001wkoeo1arocrz7",
				"title": "Themes",
				"markdown": "`hexo.theme`는 [Box](box.html)를 상속하며, 템플릿을 저장합니다.\n\n## View 얻어오기\n\n``` js\nhexo.theme.getView(path);\n```\n\n## View 설정하기\n\n``` js\nhexo.theme.setView(path, data);\n```\n\n## View 제거하기\n\n``` js\nhexo.theme.removeView(path);\n```\n\n## View\n\nView는 `render`와 `renderSync` 두 개의 메소드를 가지고 있습니다. 이 두 메소드들은 같은 동작을 수행하지만 `render`는 비동기적으로 동작하고 `renderSync`는 동기적으로 동작합니다. 단순한 설명을 위해, 여기에서는 `render`에 대해서만 다루겠습니다.\n\n``` js\nvar view = hexo.theme.getView('layout.swig');\n\nview.render({foo: 1, bar: 2}).then(function(result){\n  // ...\n});\n```\n\n당신은 `render` 메소드로 옵션을 전달할 수 있습니다. 이는 적절한 renderer를 통해 템플릿을 처리하고 [helpers](helper.html)를 로딩합니다. 렌더링이 끝나면, 레이아웃이 존재하는지 확인합니다. 만약 `layout`이 `false`이거나 없다면, 결과가 직접 반환될 것이빈다.\n",
				"html": "<p><code>hexo.theme</code>는 <a href=\"box.html\">Box</a>를 상속하며, 템플릿을 저장합니다.</p>\n<h2 id=\"View-얻어오기\"><a href=\"#View-얻어오기\" class=\"headerlink\" title=\"View 얻어오기\"></a>View 얻어오기</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.getView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"View-설정하기\"><a href=\"#View-설정하기\" class=\"headerlink\" title=\"View 설정하기\"></a>View 설정하기</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.setView(path, data);</span><br></pre></td></tr></table></figure>\n<h2 id=\"View-제거하기\"><a href=\"#View-제거하기\" class=\"headerlink\" title=\"View 제거하기\"></a>View 제거하기</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.theme.removeView(path);</span><br></pre></td></tr></table></figure>\n<h2 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h2><p>View는 <code>render</code>와 <code>renderSync</code> 두 개의 메소드를 가지고 있습니다. 이 두 메소드들은 같은 동작을 수행하지만 <code>render</code>는 비동기적으로 동작하고 <code>renderSync</code>는 동기적으로 동작합니다. 단순한 설명을 위해, 여기에서는 <code>render</code>에 대해서만 다루겠습니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> view = hexo.theme.getView(<span class=\"string\">'layout.swig'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">view.render(&#123;<span class=\"attr\">foo</span>: <span class=\"number\">1</span>, <span class=\"attr\">bar</span>: <span class=\"number\">2</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>당신은 <code>render</code> 메소드로 옵션을 전달할 수 있습니다. 이는 적절한 renderer를 통해 템플릿을 처리하고 <a href=\"helper.html\">helpers</a>를 로딩합니다. 렌더링이 끝나면, 레이아웃이 존재하는지 확인합니다. 만약 <code>layout</code>이 <code>false</code>이거나 없다면, 결과가 직접 반환될 것이빈다.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68o001xkoeo1xwnrpgj",
				"title": "Asset Folders",
				"markdown": "## 전역 Asset 폴더\n\nAsset은 포스트 파일이 아니며 `source` 폴더에 위치합니다. 이미지, CSS, JavaScript 파일이 이에 해당합니다. 예를 들어, Hexo에서 이미지 파일을 사용하고 싶을 때 간단하게 `source/images` 디렉토리에 넣어두면 됩니다. 포스트 내에서 사용하고 싶을 때는 그냥 이렇게 부르면 됩니다. `![](/images/image.jpg)`\n\n## Post Asset 폴더\n\n꾸준히 이미지 또는 다른 asset들을 제공해야 하고 포스트 단위로 asset을 관리하고 싶어하는 사용자들을 위해 Hexo는 asset을 관리할 수 있는 방법을 제공합니다. `_config.yml` 파일의 `post_asset_folder`을 true로 설정하면 됩니다.\n\n``` yaml _config.yml\npost_asset_folder: true\n```\n\nAsset 폴더 관리 기능을 활성화 시켰다면, Hexo는 당신이 `hexo new [layout] <title>` 명령어로 새로운 포스트를 생성할 때마다 새 폴더를 생성합니다. 이 asset 폴더는 post의 markdown 파일명과 동일한 이름으로 생성됩니다. 당신의 post와 연관된 모든 asset들이 이 폴더에 위치하게 되고 상대 경로를 통해 이들을 사용할 수 있습니다.\n\n## 상대 경로 참조를 위한 태그 플러그인\n\n일반적인 markdown 구문에서 상대 경로를 사용하여 이미지 또는 다른 asset 파일들을 참조할 때 아카이브 또는 인덱스 페이지에서 이를 표시하지 못하는 문제가 있습니다. Hexo 커뮤니티에서는 Hexo 2에서의 이 주소 문제를 해결하기 위해 플러그인을 만들었습니다. 하지만, Hexo 3의 릴리즈와 함께 몇몇 새로운 태그 플러그인들이 코어에 추가되었습니다. 이 플러그인들은 asset들을 더 쉽게 참조할 수 있도록 도와줍니다.\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n예를 들어, post asset 폴더가 활성화 상태 일 때 `example.jpg` 파일을 asset folder에 넣어놓고 `![](/example.jpg)` 구문으로 상대 경로를 사용하여 참조한다면 이 이미지는 인덱스 페이지에서 *보이지 않을 것*입니다. (하지만, 포스트 내부에서는 정상 동작할 것 입니다.)\n\n이미지 참조의 올바른 방법은 markdown 대신 태그 플러그인 구문을 사용하는 것 입니다.\n\n```\n{% asset_img example.jpg This is an example image %}\n{% asset_img \"spaced asset.jpg\" \"spaced title\" %}\n```\n\n이 방법을 통해, 이미지 파일은 포스트 내부나 인덱스 페이지나 아카이브 페이지에서 모두 정상적으로 표시될 것 입니다.\n",
				"html": "<h2 id=\"전역-Asset-폴더\"><a href=\"#전역-Asset-폴더\" class=\"headerlink\" title=\"전역 Asset 폴더\"></a>전역 Asset 폴더</h2><p>Asset은 포스트 파일이 아니며 <code>source</code> 폴더에 위치합니다. 이미지, CSS, JavaScript 파일이 이에 해당합니다. 예를 들어, Hexo에서 이미지 파일을 사용하고 싶을 때 간단하게 <code>source/images</code> 디렉토리에 넣어두면 됩니다. 포스트 내에서 사용하고 싶을 때는 그냥 이렇게 부르면 됩니다. <code>![](/images/image.jpg)</code></p>\n<h2 id=\"Post-Asset-폴더\"><a href=\"#Post-Asset-폴더\" class=\"headerlink\" title=\"Post Asset 폴더\"></a>Post Asset 폴더</h2><p>꾸준히 이미지 또는 다른 asset들을 제공해야 하고 포스트 단위로 asset을 관리하고 싶어하는 사용자들을 위해 Hexo는 asset을 관리할 수 있는 방법을 제공합니다. <code>_config.yml</code> 파일의 <code>post_asset_folder</code>을 true로 설정하면 됩니다.</p>\n<figure class=\"highlight yaml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>Asset 폴더 관리 기능을 활성화 시켰다면, Hexo는 당신이 <code>hexo new [layout] &lt;title&gt;</code> 명령어로 새로운 포스트를 생성할 때마다 새 폴더를 생성합니다. 이 asset 폴더는 post의 markdown 파일명과 동일한 이름으로 생성됩니다. 당신의 post와 연관된 모든 asset들이 이 폴더에 위치하게 되고 상대 경로를 통해 이들을 사용할 수 있습니다.</p>\n<h2 id=\"상대-경로-참조를-위한-태그-플러그인\"><a href=\"#상대-경로-참조를-위한-태그-플러그인\" class=\"headerlink\" title=\"상대 경로 참조를 위한 태그 플러그인\"></a>상대 경로 참조를 위한 태그 플러그인</h2><p>일반적인 markdown 구문에서 상대 경로를 사용하여 이미지 또는 다른 asset 파일들을 참조할 때 아카이브 또는 인덱스 페이지에서 이를 표시하지 못하는 문제가 있습니다. Hexo 커뮤니티에서는 Hexo 2에서의 이 주소 문제를 해결하기 위해 플러그인을 만들었습니다. 하지만, Hexo 3의 릴리즈와 함께 몇몇 새로운 태그 플러그인들이 코어에 추가되었습니다. 이 플러그인들은 asset들을 더 쉽게 참조할 수 있도록 도와줍니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<p>예를 들어, post asset 폴더가 활성화 상태 일 때 <code>example.jpg</code> 파일을 asset folder에 넣어놓고 <code>![](/example.jpg)</code> 구문으로 상대 경로를 사용하여 참조한다면 이 이미지는 인덱스 페이지에서 <em>보이지 않을 것</em>입니다. (하지만, 포스트 내부에서는 정상 동작할 것 입니다.)</p>\n<p>이미지 참조의 올바른 방법은 markdown 대신 태그 플러그인 구문을 사용하는 것 입니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</span><br><span class=\"line\">&#123;% asset_img &quot;spaced asset.jpg&quot; &quot;spaced title&quot; %&#125;</span><br></pre></td></tr></table></figure>\n<p>이 방법을 통해, 이미지 파일은 포스트 내부나 인덱스 페이지나 아카이브 페이지에서 모두 정상적으로 표시될 것 입니다.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68p001ykoeox2o4uup5",
				"title": "Configuration",
				"markdown": "`_config.yml` 파일의 사이트 환경 설정을 수정할 수 있습니다.\n\n### Site\n\n설정 | 설명\n--- | ---\n`title` | 웹 사이트의 제목\n`subtitle` | 웹 사이트의 부제\n`description` | 웹 사이트에 대한 설명\n`author` | 작성자 이름\n`language` | 웹 사이트의 주 사용언어. [2-lettter ISO-639-1 code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) 참조. 기본값은 `en`.\n`timezone` | 웹 사이트에서 사용하는 timezone. Hexo는 기본적으로 PC의 시간값을 사용합니다. 사용 가능한 timezone의 종류는 [여기](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)에서 확인할 수 있습니다. 다음과 같은 형식으로 사용하세요. `America/New_York`, `Japan`, `UTC`.\n\n### URL\n\n설정 | 설명 | 기본값\n--- | --- | ---\n`url` | 웹 사이트의 URL |\n`root` | 웹 사이트의 루트 디렉토리 |\n`permalink` | 게시글의 [permalink](permalinks.html) 형식 | `:year/:month/:day/:title/`\n`permalink_defaults` | Permalink 각 부분(segment)의 기본값 |\n\n{% note info Website in subdirectory %}\n당신의 웹 사이트가 `http://example.org/blog`와 같이 서브디렉토리에 있다면 `url`은 `http://example.org/blog`고 설정하고 `root`는 `/blog/`로 설정하세요.\n{% endnote %}\n\n### Directory\n\n설정 | 설명 | 기본값\n--- | --- | ---\n`source_dir` | 컨텐츠들이 저장되어 있는 소스 폴더 | `source`\n`public_dir` | 생성된 정적 사이트들이 저장될 공용 폴더 | `public`\n`tag_dir` | 태그 디렉토리 | `tags`\n`archive_dir` | 저장소 디렉토리 | `archives`\n`category_dir` | 카테고리 디렉토리 | `categories`\n`code_dir` | Code 디렉토리 | `downloads/code`\n`i18n_dir` | i18n 디렉토리 | `:lang`\n`skip_render` | 렌더링하지 않을 경로. 경로 매칭을 위해 [glob expressions](https://github.com/isaacs/minimatch)를 사용할 수 있습니다. |\n\n### Writing\n\n설정 | 설명 | 기본값\n--- | --- | ---\n`new_post_name` | 새 포스트의 파일명 형식 | `:title.md`\n`default_layout` | 기본 레이아웃 | `post`\n`titlecase` | 제목을 제목에 맞는 대/소문자로 변경할 것인지 선택 | `false`\n`external_link` | 외부 링크를 새 탭에서 열 것인지 선택 | `true`\n`filename_case` | 파일명을 소문자(`1`) 또는 대문자(`2`)로 변경 | `0`\n`render_drafts` | Draft 문서를 표시할 것인지 선택 | `false`\n`post_asset_folder` | [Asset 폴더](asset-folders.html)를 활성화 할 것인지 선택 | `false`\n`relative_link` | 루트 폴더에 대한 상대 경로로 링크를 만들 것인지 선택 | `false`\n`future` | 미래의 포스트를 표시할 것인지 선택 | `true`\n`highlight` | Code block의 설정 |\n\n### Category & Tag\n\n설정 | 설명 | 기본값\n--- | --- | ---\n`default_category` | 기본 분류 | `uncategorized`\n`category_map` | 분류 목록 |\n`tag_map` | 태그 목록 |\n\n### Date / Time format\n\nHexo는 날짜 처리 시 [Moment.js](http://momentjs.com/)를 사용합니다.\n\n설정 | 설명 | 기본값\n--- | --- | ---\n`date_format` | 날짜 형식 | `YYYY-MM-DD`\n`time_format` | 시간 형식 | `H:mm:ss`\n\n### Pagination\n\n설정 | 설명 | 기본값\n--- | --- | ---\n`per_page` | 하나의 페이지에 표시할 포스트의 개수. `0`이면 pagination을 표시하지 않습니다. | `10`\n`pagination_dir` | Pagination 디렉토리 | `page`\n\n### Extensions\n\n설정 | 설명\n--- | ---\n`theme` | 테마명. `false`라면 테마를 끕니다.\n`deploy` | Deployment 설정\n",
				"html": "<p><code>_config.yml</code> 파일의 사이트 환경 설정을 수정할 수 있습니다.</p>\n<h3 id=\"Site\"><a href=\"#Site\" class=\"headerlink\" title=\"Site\"></a>Site</h3><table>\n<thead>\n<tr>\n<th>설정</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>웹 사이트의 제목</td>\n</tr>\n<tr>\n<td><code>subtitle</code></td>\n<td>웹 사이트의 부제</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>웹 사이트에 대한 설명</td>\n</tr>\n<tr>\n<td><code>author</code></td>\n<td>작성자 이름</td>\n</tr>\n<tr>\n<td><code>language</code></td>\n<td>웹 사이트의 주 사용언어. <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"_blank\" rel=\"noopener\">2-lettter ISO-639-1 code</a> 참조. 기본값은 <code>en</code>.</td>\n</tr>\n<tr>\n<td><code>timezone</code></td>\n<td>웹 사이트에서 사용하는 timezone. Hexo는 기본적으로 PC의 시간값을 사용합니다. 사용 가능한 timezone의 종류는 <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" target=\"_blank\" rel=\"noopener\">여기</a>에서 확인할 수 있습니다. 다음과 같은 형식으로 사용하세요. <code>America/New_York</code>, <code>Japan</code>, <code>UTC</code>.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h3><table>\n<thead>\n<tr>\n<th>설정</th>\n<th>설명</th>\n<th>기본값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>url</code></td>\n<td>웹 사이트의 URL</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>웹 사이트의 루트 디렉토리</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>게시글의 <a href=\"permalinks.html\">permalink</a> 형식</td>\n<td><code>:year/:month/:day/:title/</code></td>\n</tr>\n<tr>\n<td><code>permalink_defaults</code></td>\n<td>Permalink 각 부분(segment)의 기본값</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note info\"><strong class=\"note-title\">Website in subdirectory</strong><p>당신의 웹 사이트가 <code>http://example.org/blog</code>와 같이 서브디렉토리에 있다면 <code>url</code>은 <code>http://example.org/blog</code>고 설정하고 <code>root</code>는 <code>/blog/</code>로 설정하세요.</p>\n</blockquote>\n<h3 id=\"Directory\"><a href=\"#Directory\" class=\"headerlink\" title=\"Directory\"></a>Directory</h3><table>\n<thead>\n<tr>\n<th>설정</th>\n<th>설명</th>\n<th>기본값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source_dir</code></td>\n<td>컨텐츠들이 저장되어 있는 소스 폴더</td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>public_dir</code></td>\n<td>생성된 정적 사이트들이 저장될 공용 폴더</td>\n<td><code>public</code></td>\n</tr>\n<tr>\n<td><code>tag_dir</code></td>\n<td>태그 디렉토리</td>\n<td><code>tags</code></td>\n</tr>\n<tr>\n<td><code>archive_dir</code></td>\n<td>저장소 디렉토리</td>\n<td><code>archives</code></td>\n</tr>\n<tr>\n<td><code>category_dir</code></td>\n<td>카테고리 디렉토리</td>\n<td><code>categories</code></td>\n</tr>\n<tr>\n<td><code>code_dir</code></td>\n<td>Code 디렉토리</td>\n<td><code>downloads/code</code></td>\n</tr>\n<tr>\n<td><code>i18n_dir</code></td>\n<td>i18n 디렉토리</td>\n<td><code>:lang</code></td>\n</tr>\n<tr>\n<td><code>skip_render</code></td>\n<td>렌더링하지 않을 경로. 경로 매칭을 위해 <a href=\"https://github.com/isaacs/minimatch\" target=\"_blank\" rel=\"noopener\">glob expressions</a>를 사용할 수 있습니다.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Writing\"><a href=\"#Writing\" class=\"headerlink\" title=\"Writing\"></a>Writing</h3><table>\n<thead>\n<tr>\n<th>설정</th>\n<th>설명</th>\n<th>기본값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>new_post_name</code></td>\n<td>새 포스트의 파일명 형식</td>\n<td><code>:title.md</code></td>\n</tr>\n<tr>\n<td><code>default_layout</code></td>\n<td>기본 레이아웃</td>\n<td><code>post</code></td>\n</tr>\n<tr>\n<td><code>titlecase</code></td>\n<td>제목을 제목에 맞는 대/소문자로 변경할 것인지 선택</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>external_link</code></td>\n<td>외부 링크를 새 탭에서 열 것인지 선택</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>filename_case</code></td>\n<td>파일명을 소문자(<code>1</code>) 또는 대문자(<code>2</code>)로 변경</td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>render_drafts</code></td>\n<td>Draft 문서를 표시할 것인지 선택</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>post_asset_folder</code></td>\n<td><a href=\"asset-folders.html\">Asset 폴더</a>를 활성화 할 것인지 선택</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>relative_link</code></td>\n<td>루트 폴더에 대한 상대 경로로 링크를 만들 것인지 선택</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>future</code></td>\n<td>미래의 포스트를 표시할 것인지 선택</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>highlight</code></td>\n<td>Code block의 설정</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Category-amp-Tag\"><a href=\"#Category-amp-Tag\" class=\"headerlink\" title=\"Category &amp; Tag\"></a>Category &amp; Tag</h3><table>\n<thead>\n<tr>\n<th>설정</th>\n<th>설명</th>\n<th>기본값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>default_category</code></td>\n<td>기본 분류</td>\n<td><code>uncategorized</code></td>\n</tr>\n<tr>\n<td><code>category_map</code></td>\n<td>분류 목록</td>\n<td></td>\n</tr>\n<tr>\n<td><code>tag_map</code></td>\n<td>태그 목록</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Date-Time-format\"><a href=\"#Date-Time-format\" class=\"headerlink\" title=\"Date / Time format\"></a>Date / Time format</h3><p>Hexo는 날짜 처리 시 <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a>를 사용합니다.</p>\n<table>\n<thead>\n<tr>\n<th>설정</th>\n<th>설명</th>\n<th>기본값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>date_format</code></td>\n<td>날짜 형식</td>\n<td><code>YYYY-MM-DD</code></td>\n</tr>\n<tr>\n<td><code>time_format</code></td>\n<td>시간 형식</td>\n<td><code>H:mm:ss</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Pagination\"><a href=\"#Pagination\" class=\"headerlink\" title=\"Pagination\"></a>Pagination</h3><table>\n<thead>\n<tr>\n<th>설정</th>\n<th>설명</th>\n<th>기본값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>per_page</code></td>\n<td>하나의 페이지에 표시할 포스트의 개수. <code>0</code>이면 pagination을 표시하지 않습니다.</td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td><code>pagination_dir</code></td>\n<td>Pagination 디렉토리</td>\n<td><code>page</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Extensions\"><a href=\"#Extensions\" class=\"headerlink\" title=\"Extensions\"></a>Extensions</h3><table>\n<thead>\n<tr>\n<th>설정</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>theme</code></td>\n<td>테마명. <code>false</code>라면 테마를 끕니다.</td>\n</tr>\n<tr>\n<td><code>deploy</code></td>\n<td>Deployment 설정</td>\n</tr>\n</tbody>\n</table>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68q001zkoeojcr9iga3",
				"title": "Data Files",
				"markdown": "포스트 내에서 직접 호출하여 사용이 불가능한 데이터나 다른 장소에서 사용한 데이터를 당신의 템플릿에서 재사용하고 싶을 때를 위하여 Hexo 3에서는 새로운 **Data files** 을 제공합니다. 이 기능은 `source/_data` 폴더의 YAML 또는 JSON 파일을 불러와서 사용할 수 있게 만들어줍니다.\n\n아래의 예시에서 `source/_data`폴더에 `menu.yml`을 추가합니다.\n\n``` yaml\nHome: /\nGallery: /gallery/\nArchives: /archives/\n```\n\n템플릿 안에서는 다음과 같이 사용할 수 있습니다.\n\n```\n<% for (var link in site.data.menu) { %>\n  <a href=\"<%= site.data.menu[link] %>\"> <%= link %> </a>\n<% } %>\n```\n",
				"html": "<p>포스트 내에서 직접 호출하여 사용이 불가능한 데이터나 다른 장소에서 사용한 데이터를 당신의 템플릿에서 재사용하고 싶을 때를 위하여 Hexo 3에서는 새로운 <strong>Data files</strong> 을 제공합니다. 이 기능은 <code>source/_data</code> 폴더의 YAML 또는 JSON 파일을 불러와서 사용할 수 있게 만들어줍니다.</p>\n<p>아래의 예시에서 <code>source/_data</code>폴더에 <code>menu.yml</code>을 추가합니다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Home:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">Gallery:</span> <span class=\"string\">/gallery/</span></span><br><span class=\"line\"><span class=\"attr\">Archives:</span> <span class=\"string\">/archives/</span></span><br></pre></td></tr></table></figure>\n<p>템플릿 안에서는 다음과 같이 사용할 수 있습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;% for (var link in site.data.menu) &#123; %&gt;</span><br><span class=\"line\">  &lt;a href=&quot;&lt;%= site.data.menu[link] %&gt;&quot;&gt; &lt;%= link %&gt; &lt;/a&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68q0020koeoja7hklt3",
				"title": "Commands",
				"markdown": "## init\n\n``` bash\n$ hexo init [folder]\n```\n\n웹 사이트를 초기화합니다. `folder`가 준비되어 있지 않다면 Hexo는 현재 디렉토리에 웹 사이트를 세팅합니다.\n\n## new\n\n``` bash\n$ hexo new [layout] <title>\n```\n\n새 글(article)을 생성합니다. `layout`이 준비되어 있지 않다면, Hexo는 [_config.yml](configuration.html)에 정의된 `default_layout`을 사용합니다. 만약 `title`에 공백이 포함된다면 따옴표로 감싸주세요.\n\n## generate\n\n``` bash\n$ hexo generate\n```\n\n정적 파일들을 생성합니다.\n\n옵션 | 설명\n--- | ---\n`-d`, `--deploy` | 생성이 종료된 후 deploy 합니다.\n`-w`, `--watch` | 파일의 변경사항을 감시(watch)합니다.\n\n## publish\n\n``` bash\n$ hexo publish [layout] <filename>\n```\n\n작성한 내용을 배포합니다.\n\n## server\n\n``` bash\n$ hexo server\n```\n\n로컬 서버를 구동시킵니다. 기본적으로 `http://localhost:4000/` 를 사용합니다.\n\n옵션 | 설명\n--- | ---\n`-p`, `--port` | 기본 포트를 덮어씁니다.\n`-s`, `--static` | 정적인 파일만 구동합니다.\n`-l`, `--log` | Logger를 활성화 시킵니다. Logger 형식을 덮어씁니다.\n\n## deploy\n\n``` bash\n$ hexo deploy\n```\n\n웹 사이트를 deploy 합니다.\n\n옵션 | 설명\n--- | ---\n`-g`, `--generate` | Deploy 하기 전에 generate를 수행합니다.\n\n## render\n\n``` bash\n$ hexo render <file1> [file2] ...\n```\n\n파일을 렌더링합니다.\n\n옵션 | 설명\n--- | ---\n`-o`, `--output` | Output destination\n\n## migrate\n\n``` bash\n$ hexo migrate <type>\n```\n\n다른 블로그 시스템의 내용을 Hexo로 [마이그레이션](migration.html) 합니다.\n\n## clean\n\n``` bash\n$ hexo clean\n```\n\n캐시 파일 (`db.json`) 및 생성된 파일들 (`public`) 을 삭제합니다.\n\n## list\n\n``` bash\n$ hexo list <type>\n```\n\n경로(route) 목록을 보여줍니다.\n\n## version\n\n``` bash\n$ hexo version\n```\n\n버전 정보를 보여줍니다.\n\n## 옵션\n\n### 안전 모드\n\n``` bash\n$ hexo --safe\n```\n\n플러그인과 스크립트를 불러오지 않습니다. 새로운 플러그인을 설치한 후 문제가 생기면 이 모드를 사용해 보시기 바랍니다.\n\n### 디버그 모드\n\n``` bash\n$ hexo --debug\n```\n\n터미널에 verbose 로그 메시지를 출력하고 `debug.log` 파일에 저장합니다. Hexo에 문제 발생 시 사용해 보시기 바랍니다. 에러 발견 시 [raise a GitHub issue](https://github.com/hexojs/hexo/issues/new)에 등록해 주세요.\n\n### Silent 모드\n\n``` bash\n$ hexo --silent\n```\n\n터미널에 내용을 출력하지 않습니다.\n\n### 설정 파일의 변경(customizing)\n\n``` bash\n$ hexo --config custom.yml\n```\n\n`_config.yml` 대신 커스터미이징한 설정 파일을 사용할 수 있습니다.\n\n### Draft 포스트 표시\n\n``` bash\n$ hexo --draft\n```\n\nDraft 포스트를 보여줍니다(`source/_drafts` 폴더에 저장되어 있습니다).\n\n### 현재 작업 디렉토리의 변경(customizing)\n\n``` bash\n$ hexo --cwd /path/to/cwd\n```\n\n현재 작업 디렉토리의 경로를 변경할 수 있습니다.\n",
				"html": "<h2 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init [folder]</span><br></pre></td></tr></table></figure>\n<p>웹 사이트를 초기화합니다. <code>folder</code>가 준비되어 있지 않다면 Hexo는 현재 디렉토리에 웹 사이트를 세팅합니다.</p>\n<h2 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>새 글(article)을 생성합니다. <code>layout</code>이 준비되어 있지 않다면, Hexo는 <a href=\"configuration.html\">_config.yml</a>에 정의된 <code>default_layout</code>을 사용합니다. 만약 <code>title</code>에 공백이 포함된다면 따옴표로 감싸주세요.</p>\n<h2 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>정적 파일들을 생성합니다.</p>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-d</code>, <code>--deploy</code></td>\n<td>생성이 종료된 후 deploy 합니다.</td>\n</tr>\n<tr>\n<td><code>-w</code>, <code>--watch</code></td>\n<td>파일의 변경사항을 감시(watch)합니다.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"publish\"><a href=\"#publish\" class=\"headerlink\" title=\"publish\"></a>publish</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<p>작성한 내용을 배포합니다.</p>\n<h2 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>로컬 서버를 구동시킵니다. 기본적으로 <code>http://localhost:4000/</code> 를 사용합니다.</p>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-p</code>, <code>--port</code></td>\n<td>기본 포트를 덮어씁니다.</td>\n</tr>\n<tr>\n<td><code>-s</code>, <code>--static</code></td>\n<td>정적인 파일만 구동합니다.</td>\n</tr>\n<tr>\n<td><code>-l</code>, <code>--log</code></td>\n<td>Logger를 활성화 시킵니다. Logger 형식을 덮어씁니다.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>웹 사이트를 deploy 합니다.</p>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-g</code>, <code>--generate</code></td>\n<td>Deploy 하기 전에 generate를 수행합니다.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>\n<p>파일을 렌더링합니다.</p>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-o</code>, <code>--output</code></td>\n<td>Output destination</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"migrate\"><a href=\"#migrate\" class=\"headerlink\" title=\"migrate\"></a>migrate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>다른 블로그 시스템의 내용을 Hexo로 <a href=\"migration.html\">마이그레이션</a> 합니다.</p>\n<h2 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>캐시 파일 (<code>db.json</code>) 및 생성된 파일들 (<code>public</code>) 을 삭제합니다.</p>\n<h2 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo list &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>경로(route) 목록을 보여줍니다.</p>\n<h2 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n<p>버전 정보를 보여줍니다.</p>\n<h2 id=\"옵션\"><a href=\"#옵션\" class=\"headerlink\" title=\"옵션\"></a>옵션</h2><h3 id=\"안전-모드\"><a href=\"#안전-모드\" class=\"headerlink\" title=\"안전 모드\"></a>안전 모드</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --safe</span><br></pre></td></tr></table></figure>\n<p>플러그인과 스크립트를 불러오지 않습니다. 새로운 플러그인을 설치한 후 문제가 생기면 이 모드를 사용해 보시기 바랍니다.</p>\n<h3 id=\"디버그-모드\"><a href=\"#디버그-모드\" class=\"headerlink\" title=\"디버그 모드\"></a>디버그 모드</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --debug</span><br></pre></td></tr></table></figure>\n<p>터미널에 verbose 로그 메시지를 출력하고 <code>debug.log</code> 파일에 저장합니다. Hexo에 문제 발생 시 사용해 보시기 바랍니다. 에러 발견 시 <a href=\"https://github.com/hexojs/hexo/issues/new\" target=\"_blank\" rel=\"noopener\">raise a GitHub issue</a>에 등록해 주세요.</p>\n<h3 id=\"Silent-모드\"><a href=\"#Silent-모드\" class=\"headerlink\" title=\"Silent 모드\"></a>Silent 모드</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --silent</span><br></pre></td></tr></table></figure>\n<p>터미널에 내용을 출력하지 않습니다.</p>\n<h3 id=\"설정-파일의-변경-customizing\"><a href=\"#설정-파일의-변경-customizing\" class=\"headerlink\" title=\"설정 파일의 변경(customizing)\"></a>설정 파일의 변경(customizing)</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure>\n<p><code>_config.yml</code> 대신 커스터미이징한 설정 파일을 사용할 수 있습니다.</p>\n<h3 id=\"Draft-포스트-표시\"><a href=\"#Draft-포스트-표시\" class=\"headerlink\" title=\"Draft 포스트 표시\"></a>Draft 포스트 표시</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --draft</span><br></pre></td></tr></table></figure>\n<p>Draft 포스트를 보여줍니다(<code>source/_drafts</code> 폴더에 저장되어 있습니다).</p>\n<h3 id=\"현재-작업-디렉토리의-변경-customizing\"><a href=\"#현재-작업-디렉토리의-변경-customizing\" class=\"headerlink\" title=\"현재 작업 디렉토리의 변경(customizing)\"></a>현재 작업 디렉토리의 변경(customizing)</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure>\n<p>현재 작업 디렉토리의 경로를 변경할 수 있습니다.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68r0021koeo8rzquty6",
				"title": "Contributing",
				"markdown": "## 개발\n\n우리는 당신이 Hexo의 개발에 참여하는 것을 환영합니다. 이 문서는 당신의 개발 프로세스에 도움을 줄 겁니다.\n\n### 시작하기 전에...\n\n아래의 코딩 스타일을 지켜주세요.\n\n- [Google JavaScript Style Guide](https://google.github.io/styleguide/jsguide.html)를 따릅니다.\n- 두 개의 공백을 사용한 soft-tab을 사용합니다.\n- 콤마로 시작하지 마세요.\n\n### 워크플로우\n\n1. Fork [hexojs/hexo].\n2. 저장소를 당신의 컴퓨터에 clone하고 의존 사항들을 설치합니다.\n\n    {% code %}\n    $ git clone https://github.com/<username>/hexo.git\n    $ cd hexo\n    $ npm install\n    $ git submodule update --init\n    {% endcode %}\n\n3. 기능 branch를 생성합니다.\n\n    {% code %}\n    $ git checkout -b new_feature\n    {% endcode %}\n\n4. 개발합니다.\n5. Branch를 push합니다.\n\n    {% code %}\n    $ git push origin new_feature\n    {% endcode %}\n\n6. 변경사항에 대한 설명을 포함하여 Pull request를 생성합니다.\n\n### 공지사항\n\n- `package.json`의 version number는 수정하지 마세요.\n- 당신의 Pull request는 테스트를 통과했을 때에만 merge됩니다. 반영하기 전에 test를 돌려보세요.\n\n    {% code %}\n    $ npm test\n    {% endcode %}\n\n## 문서의 갱신\n\nHexo 문서는 opensource이며 [hexojs/site]에서 소스 코드를 검색할 수 있습니다.\n\n### Workflow\n\n1. Fork [hexojs/site]\n2. 저장소를 당신의 컴퓨터에 clone하고 의존 사항들을 설치합니다.\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. 문서를 수정하세요. Server를 돌려서 실시간으로 확인할 수 있습니다.\n\n    {% code %}\n    $ hexo server\n    {% endcode %}\n\n4. Branch를 push합니다.\n5. 당신의 변경사항에 대한 설명을 포함하여 Pull request를 생성합니다.\n\n### 번역\n\n1. `source` 폴더 안에 새 언어에 대한 폴더를 생성하세요. (소문자로 생성하세요.)\n2. `source` 폴더의 Markdown 및 템플릿 파일들을 새 언어 폴더에 복사하세요.\n3. `source/_data/language.yml`에 새 언어를 추가하세요.\n4. `themes/navy/languages`에 `en.yml` 파일을 복사하고 새 언어로 이름을 변경하세요. (소문자로 변경하세요.)\n\n## 이슈 보고\n\nHexo를 사용하다가 문제를 발견하면, [Troubleshooting](troubleshooting.html), [GitHub](https://github.com/hexojs/hexo/issues), [Google Group](https://groups.google.com/group/hexo)에서 이슈에 대해 답을 찾아보세요. 만약 답이 없다면 Github에 문제를 보고해 주세요.\n\n1. 문제 재현은 [debug mode](commands.html#Debug_mode)에서 해주세요.\n2. `hexo version`명령을 수행해서 버전 정보를 알려주세요.\n3. 디버그 메시지와 버전 정보를 Github에 올려주세요.\n\n[hexojs/hexo]: https://github.com/hexojs/hexo\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<h2 id=\"개발\"><a href=\"#개발\" class=\"headerlink\" title=\"개발\"></a>개발</h2><p>우리는 당신이 Hexo의 개발에 참여하는 것을 환영합니다. 이 문서는 당신의 개발 프로세스에 도움을 줄 겁니다.</p>\n<h3 id=\"시작하기-전에…\"><a href=\"#시작하기-전에…\" class=\"headerlink\" title=\"시작하기 전에…\"></a>시작하기 전에…</h3><p>아래의 코딩 스타일을 지켜주세요.</p>\n<ul>\n<li><a href=\"https://google.github.io/styleguide/jsguide.html\" target=\"_blank\" rel=\"noopener\">Google JavaScript Style Guide</a>를 따릅니다.</li>\n<li>두 개의 공백을 사용한 soft-tab을 사용합니다.</li>\n<li>콤마로 시작하지 마세요.</li>\n</ul>\n<h3 id=\"워크플로우\"><a href=\"#워크플로우\" class=\"headerlink\" title=\"워크플로우\"></a>워크플로우</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">hexojs/hexo</a>.</li>\n<li><p>저장소를 당신의 컴퓨터에 clone하고 의존 사항들을 설치합니다.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/hexo.git</span><br><span class=\"line\">$ cd hexo</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">$ git submodule update --init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>기능 branch를 생성합니다.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout -b new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>개발합니다.</p>\n</li>\n<li><p>Branch를 push합니다.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push origin new_feature</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>변경사항에 대한 설명을 포함하여 Pull request를 생성합니다.</p>\n</li>\n</ol>\n<h3 id=\"공지사항\"><a href=\"#공지사항\" class=\"headerlink\" title=\"공지사항\"></a>공지사항</h3><ul>\n<li><code>package.json</code>의 version number는 수정하지 마세요.</li>\n<li><p>당신의 Pull request는 테스트를 통과했을 때에만 merge됩니다. 반영하기 전에 test를 돌려보세요.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm test</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"문서의-갱신\"><a href=\"#문서의-갱신\" class=\"headerlink\" title=\"문서의 갱신\"></a>문서의 갱신</h2><p>Hexo 문서는 opensource이며 <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a>에서 소스 코드를 검색할 수 있습니다.</p>\n<h3 id=\"Workflow\"><a href=\"#Workflow\" class=\"headerlink\" title=\"Workflow\"></a>Workflow</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>저장소를 당신의 컴퓨터에 clone하고 의존 사항들을 설치합니다.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>문서를 수정하세요. Server를 돌려서 실시간으로 확인할 수 있습니다.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Branch를 push합니다.</p>\n</li>\n<li>당신의 변경사항에 대한 설명을 포함하여 Pull request를 생성합니다.</li>\n</ol>\n<h3 id=\"번역\"><a href=\"#번역\" class=\"headerlink\" title=\"번역\"></a>번역</h3><ol>\n<li><code>source</code> 폴더 안에 새 언어에 대한 폴더를 생성하세요. (소문자로 생성하세요.)</li>\n<li><code>source</code> 폴더의 Markdown 및 템플릿 파일들을 새 언어 폴더에 복사하세요.</li>\n<li><code>source/_data/language.yml</code>에 새 언어를 추가하세요.</li>\n<li><code>themes/navy/languages</code>에 <code>en.yml</code> 파일을 복사하고 새 언어로 이름을 변경하세요. (소문자로 변경하세요.)</li>\n</ol>\n<h2 id=\"이슈-보고\"><a href=\"#이슈-보고\" class=\"headerlink\" title=\"이슈 보고\"></a>이슈 보고</h2><p>Hexo를 사용하다가 문제를 발견하면, <a href=\"troubleshooting.html\">Troubleshooting</a>, <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>, <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a>에서 이슈에 대해 답을 찾아보세요. 만약 답이 없다면 Github에 문제를 보고해 주세요.</p>\n<ol>\n<li>문제 재현은 <a href=\"commands.html#Debug_mode\">debug mode</a>에서 해주세요.</li>\n<li><code>hexo version</code>명령을 수행해서 버전 정보를 알려주세요.</li>\n<li>디버그 메시지와 버전 정보를 Github에 올려주세요.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68r0022koeo0248w4fg",
				"title": "Generating",
				"markdown": "Hexo를 사용하여 매우 쉽고 빠르게 정적인 파일을 생성할 수 있습니다.\n\n``` bash\n$ hexo generate\n```\n\n### 파일 변경을 감시(watch)하기\n\nHexo는 파일이 변경되거나 새로 생성되는 경우 쉽게 알아챌 수 있습니다. Hexo는 SHA1 checksum을 비교하여 파일의 변경을 확인합니다.\n\n``` bash\n$ hexo generate --watch\n```\n\n### 생성 후의 deploy\n\n생성 후에 deploy 하기위해 다음 명령어 중 하나를 실행해야 합니다. 두 명령어는 동일한 동작을 수행합니다.\n\n``` bash\n$ hexo generate --deploy\n$ hexo deploy --generate\n```\n",
				"html": "<p>Hexo를 사용하여 매우 쉽고 빠르게 정적인 파일을 생성할 수 있습니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<h3 id=\"파일-변경을-감시-watch-하기\"><a href=\"#파일-변경을-감시-watch-하기\" class=\"headerlink\" title=\"파일 변경을 감시(watch)하기\"></a>파일 변경을 감시(watch)하기</h3><p>Hexo는 파일이 변경되거나 새로 생성되는 경우 쉽게 알아챌 수 있습니다. Hexo는 SHA1 checksum을 비교하여 파일의 변경을 확인합니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --watch</span><br></pre></td></tr></table></figure>\n<h3 id=\"생성-후의-deploy\"><a href=\"#생성-후의-deploy\" class=\"headerlink\" title=\"생성 후의 deploy\"></a>생성 후의 deploy</h3><p>생성 후에 deploy 하기위해 다음 명령어 중 하나를 실행해야 합니다. 두 명령어는 동일한 동작을 수행합니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --deploy</span><br><span class=\"line\">$ hexo deploy --generate</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68r0023koeol7gm8k28",
				"title": "Front-matter",
				"markdown": "Front-matter는 파일 시작 시 작성하는 YAML 또는 JSON 구역입니다. 게시물에 대한 환경 설정을 이 곳에서 합니다. Front-matter가 끝나는 부분은 YAML의 경우 세 개의 대시(-) 로, JSON의 경우 세 개의 세미콜론(;)을 넣어서 구분합니다.\n\n**YAML**\n``` yaml\ntitle: Hello World\ndate: 2013/7/13 20:46:25\n---\n```\n\n**JSON**\n``` json\n\"title\": \"Hello World\",\n\"date\": \"2013/7/13 20:46:25\"\n;;;\n```\n\n### 환경설정 및 기본 값\n\n설정 | 설명 | 기본 값\n--- | --- | ---\n`layout` | 레이아웃 |\n`title` | 타이틀 |\n`date` | 발행일 | 파일이 생성된 날짜\n`updated` | 갱신일 | 파일이 업로드된 날짜\n`comments` | 포스트에서 comment 기능을 사용할지 여부 | true\n`tags` | 태그 (page에서는 사용 불가능) |\n`categories` | 카테고리 (page에서는 사용 불가능) |\n`permalink` | 포스트의 기본 permalink를 override합니다. |\n\n#### 카테고리와 태그\n\n카테고리와 태그는 포스트에서만 사용이 가능합니다. 카테고리는 분류와 하위 분류의 계층적인 관계를 가지고 포스트에 적용됩니다. 태그는 모두 같은 계층 단계에 정의되어 있으므로 순서와 상관 없이 작성해도 됩니다.\n\n**Example**\n\n``` yaml\ncategories:\n- Sports\n- Baseball\ntags:\n- Injury\n- Fight\n- Shocking\n```\n",
				"html": "<p>Front-matter는 파일 시작 시 작성하는 YAML 또는 JSON 구역입니다. 게시물에 대한 환경 설정을 이 곳에서 합니다. Front-matter가 끝나는 부분은 YAML의 경우 세 개의 대시(-) 로, JSON의 경우 세 개의 세미콜론(;)을 넣어서 구분합니다.</p>\n<p><strong>YAML</strong><br><figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"string\">/7/13</span> <span class=\"number\">20</span><span class=\"string\">:46:25</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>JSON</strong><br><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"title\": \"Hello World\",</span><br><span class=\"line\">\"date\": \"2013/7/13 20:46:25\"</span><br><span class=\"line\">;;;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"환경설정-및-기본-값\"><a href=\"#환경설정-및-기본-값\" class=\"headerlink\" title=\"환경설정 및 기본 값\"></a>환경설정 및 기본 값</h3><table>\n<thead>\n<tr>\n<th>설정</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>레이아웃</td>\n<td></td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>타이틀</td>\n<td></td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>발행일</td>\n<td>파일이 생성된 날짜</td>\n</tr>\n<tr>\n<td><code>updated</code></td>\n<td>갱신일</td>\n<td>파일이 업로드된 날짜</td>\n</tr>\n<tr>\n<td><code>comments</code></td>\n<td>포스트에서 comment 기능을 사용할지 여부</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>태그 (page에서는 사용 불가능)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>카테고리 (page에서는 사용 불가능)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>포스트의 기본 permalink를 override합니다.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"카테고리와-태그\"><a href=\"#카테고리와-태그\" class=\"headerlink\" title=\"카테고리와 태그\"></a>카테고리와 태그</h4><p>카테고리와 태그는 포스트에서만 사용이 가능합니다. 카테고리는 분류와 하위 분류의 계층적인 관계를 가지고 포스트에 적용됩니다. 태그는 모두 같은 계층 단계에 정의되어 있으므로 순서와 상관 없이 작성해도 됩니다.</p>\n<p><strong>Example</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Sports</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Baseball</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Injury</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Fight</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Shocking</span></span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68r0024koeohwk1juby",
				"title": "Deployment",
				"markdown": "Hexo는 빠르고 쉬운 deployment전략을 제공합니다. 웹 사이트를 서버에 deploy하기 위해 하나의 명령어만 수행하면 됩니다.\n\n``` bash\n$ hexo deploy\n```\n\n처음 개발을 진행하기 전에, `_config.yml` 파일의 설정을 수정할 필요가 있습니다. Deployment를 원하는 곳을 아래 예시처럼 `type` 필드에 넣습니다.\n\n``` yaml\ndeploy:\n  type: git\n```\n\n여러 곳에 동시에 deploy할 수도 있습니다. Hexo는 순차적으로 deploy를 수행합니다.\n\n``` yaml\ndeploy:\n- type: git\n  repo:\n- type: heroku\n  repo:\n```\n\n## Git\n\n[hexo-deployer-git]을 설치합니다.\n\n``` bash\n$ npm install hexo-deployer-git --save\n```\n\n설정을 수정합니다.\n\n``` yaml\ndeploy:\n  type: git\n  repo: <repository url>\n  branch: [branch]\n  message: [message]\n```\n\n옵션 | 설명\n--- | ---\n`repo` | GitHub 저장소 URL\n`branch` | Branch명. 당신이 GitHub 또는 GitCafe를 사용한다면 deployer는 자동으로 branch를 찾아냅니다.\n`message` | Commit message를 수정합니다. (기본값 - `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## Heroku\n\n[hexo-deployer-heroku]을 설치합니다.\n\n``` bash\n$ npm install hexo-deployer-heroku --save\n```\n\n설정을 수정합니다.\n\n``` yaml\ndeploy:\n  type: heroku\n  repo: <repository url>\n  message: [message]\n```\n\n옵션 | 설명\n--- | ---\n`repo`, `repository` | Heroku 저장소 URL\n`message` | Commit message를 수정합니다. (기본값 - `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## Rsync\n\n[hexo-deployer-rsync]를 설치합니다.\n\n``` bash\n$ npm install hexo-deployer-rsync --save\n```\n\n설정을 수정합니다.\n\n``` yaml\ndeploy:\n  type: rsync\n  host: <host>\n  user: <user>\n  root: <root>\n  port: [port]\n  delete: [true|false]\n  verbose: [true|false]\n  ignore_errors: [true|false]\n```\n\n옵션 | 설명 | 기본값\n--- | --- | ---\n`host` | 원격 호스트의 주소 |\n`user` | 사용자명 |\n`root` | 원격 호스트의 루트 디렉토리 |\n`port` | 포트 | 22\n`delete` | 원격 호스트의 오래된 파일을 삭제합니다. | true\n`verbose` | Verbose 메시지를 표시합니다. | true\n`ignore_errors` | 에러를 무시합니다. | false\n\n## OpenShift\n\n[hexo-deployer-openshift]를 설치합니다.\n\n``` bash\n$ npm install hexo-deployer-openshift --save\n```\n\n설정을 수정합니다.\n\n``` yaml\ndeploy:\n  type: openshift\n  repo: <repository url>\n  message: [message]\n```\n\n옵션 | 설명\n--- | ---\n`repo` | OpenShift 저장소 URL\n`message` | Commit message를 수정합니다. (기본값 - `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## FTPSync\n\n[hexo-deployer-ftpsync]를 설치합니다.\n\n``` bash\n$ npm install hexo-deployer-ftpsync --save\n```\n\n설정을 수정합니다.\n\n``` yaml\ndeploy:\n  type: ftpsync\n  host: <host>\n  user: <user>\n  pass: <password>\n  remote: [remote]\n  port: [port]\n  ignore: [ignore]\n  connections: [connections]\n  verbose: [true|false]\n```\n\n옵션 | 설명 | 기본값\n--- | --- | ---\n`host` | 원격 호스트의 주소 |\n`user` | 사용자명 |\n`pass` | 비밀번호 |\n`remote` | 원격 호스트의 루트 디렉토리 | `/`\n`port` | 포트 | 21\n`ignore` | 호스트 파일들과 원격 파일들을 무시합니다. |\n`connections` | 연결 번호 | 1\n`verbose` | Verbose 메시지를 표시합니다. | false\n\n## 다른 메소드들\n\n생성되는 모든 파일들은 `public` 폴더에 저장됩니다. 이 파일들을 당신이 원하는 곳 아무데나 복사하여 사용할 수 있습니다.\n\n[hexo-deployer-git]: https://github.com/hexojs/hexo-deployer-git\n[hexo-deployer-heroku]: https://github.com/hexojs/hexo-deployer-heroku\n[hexo-deployer-rsync]: https://github.com/hexojs/hexo-deployer-rsync\n[hexo-deployer-openshift]: https://github.com/hexojs/hexo-deployer-openshift\n[hexo-deployer-ftpsync]: https://github.com/hexojs/hexo-deployer-ftpsync\n",
				"html": "<p>Hexo는 빠르고 쉬운 deployment전략을 제공합니다. 웹 사이트를 서버에 deploy하기 위해 하나의 명령어만 수행하면 됩니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>처음 개발을 진행하기 전에, <code>_config.yml</code> 파일의 설정을 수정할 필요가 있습니다. Deployment를 원하는 곳을 아래 예시처럼 <code>type</code> 필드에 넣습니다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br></pre></td></tr></table></figure>\n<p>여러 곳에 동시에 deploy할 수도 있습니다. Hexo는 순차적으로 deploy를 수행합니다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><p><a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a>을 설치합니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>설정을 수정합니다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">[branch]</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>GitHub 저장소 URL</td>\n</tr>\n<tr>\n<td><code>branch</code></td>\n<td>Branch명. 당신이 GitHub 또는 GitCafe를 사용한다면 deployer는 자동으로 branch를 찾아냅니다.</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Commit message를 수정합니다. (기본값 - <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Heroku\"><a href=\"#Heroku\" class=\"headerlink\" title=\"Heroku\"></a>Heroku</h2><p><a href=\"https://github.com/hexojs/hexo-deployer-heroku\" target=\"_blank\" rel=\"noopener\">hexo-deployer-heroku</a>을 설치합니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-heroku --save</span><br></pre></td></tr></table></figure>\n<p>설정을 수정합니다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code>, <code>repository</code></td>\n<td>Heroku 저장소 URL</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Commit message를 수정합니다. (기본값 - <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Rsync\"><a href=\"#Rsync\" class=\"headerlink\" title=\"Rsync\"></a>Rsync</h2><p><a href=\"https://github.com/hexojs/hexo-deployer-rsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-rsync</a>를 설치합니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-rsync --save</span><br></pre></td></tr></table></figure>\n<p>설정을 수정합니다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">rsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  root:</span> <span class=\"string\">&lt;root&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  delete:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore_errors:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>원격 호스트의 주소</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>사용자명</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>원격 호스트의 루트 디렉토리</td>\n<td></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>포트</td>\n<td>22</td>\n</tr>\n<tr>\n<td><code>delete</code></td>\n<td>원격 호스트의 오래된 파일을 삭제합니다.</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Verbose 메시지를 표시합니다.</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>ignore_errors</code></td>\n<td>에러를 무시합니다.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"OpenShift\"><a href=\"#OpenShift\" class=\"headerlink\" title=\"OpenShift\"></a>OpenShift</h2><p><a href=\"https://github.com/hexojs/hexo-deployer-openshift\" target=\"_blank\" rel=\"noopener\">hexo-deployer-openshift</a>를 설치합니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-openshift --save</span><br></pre></td></tr></table></figure>\n<p>설정을 수정합니다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">openshift</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>OpenShift 저장소 URL</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Commit message를 수정합니다. (기본값 - <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"FTPSync\"><a href=\"#FTPSync\" class=\"headerlink\" title=\"FTPSync\"></a>FTPSync</h2><p><a href=\"https://github.com/hexojs/hexo-deployer-ftpsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-ftpsync</a>를 설치합니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-ftpsync --save</span><br></pre></td></tr></table></figure>\n<p>설정을 수정합니다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">ftpsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  pass:</span> <span class=\"string\">&lt;password&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  remote:</span> <span class=\"string\">[remote]</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore:</span> <span class=\"string\">[ignore]</span></span><br><span class=\"line\"><span class=\"attr\">  connections:</span> <span class=\"string\">[connections]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>원격 호스트의 주소</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>사용자명</td>\n<td></td>\n</tr>\n<tr>\n<td><code>pass</code></td>\n<td>비밀번호</td>\n<td></td>\n</tr>\n<tr>\n<td><code>remote</code></td>\n<td>원격 호스트의 루트 디렉토리</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>포트</td>\n<td>21</td>\n</tr>\n<tr>\n<td><code>ignore</code></td>\n<td>호스트 파일들과 원격 파일들을 무시합니다.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>connections</code></td>\n<td>연결 번호</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Verbose 메시지를 표시합니다.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"다른-메소드들\"><a href=\"#다른-메소드들\" class=\"headerlink\" title=\"다른 메소드들\"></a>다른 메소드들</h2><p>생성되는 모든 파일들은 <code>public</code> 폴더에 저장됩니다. 이 파일들을 당신이 원하는 곳 아무데나 복사하여 사용할 수 있습니다.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68s0025koeo9lt1uetv",
				"title": "Internationalization (i18n)",
				"markdown": "당신의 웹 사이트를 서로 다른 언어로 표시하기 위해 internationalization을 사용할 수 있습니다. 기본 언어의 변경은 `_config.yml` 파일의 `language`를 수정하면 됩니다. 다중 언어를 설정할 수도 있고 기본 언어의 순서를 수정할 수도 있습니다.\n\n``` yaml\nlanguage: zh-tw\n\nlanguage:\n- zh-tw\n- en\n```\n\n### 언어 파일\n\n언어 파일로 YAML 또는 JSON 파일을 사용할 수 있습니다. 테마의 `languages` 폴더에 이 파일을 넣어두면 됩니다. 언어 파일의 [printf format](https://github.com/alexei/sprintf.js)을 지원합니다. \n\n### 템플릿\n\n`__` 또는 `_p`를 사용하면 템플릿에서의 문자열의 번역을 위한 helper를 사용할 수 있습니다. `__`는 일반적인 사용 방법이고 `_p`는 여러 개의 문자열을 위해 사용하는 방법입니다. 아래 예시를 보세요.\n\n``` yaml en.yml\nindex:\n  title: Home\n  add: Add\n  video:\n    zero: No videos\n    one: One video\n    other: %d videos\n```\n\n``` js\n<%= __('index.title') %>\n// Home\n\n<%= _p('index.video', 3) %>\n// 3 videos\n```\n\n### 경로\n\n페이지에서 사용할 언어는 front-matter에서도 설정이 가능합니다. `_config.yml` 파일의 `i18n_dir` 항목을 수정하면 Hexo가 자동으로 감지할 수 있습니다.\n\n``` yaml\ni18n_dir: :lang\n```\n\n`i18n_dir` 설정의 기본 값은 `:lang` 이며, Hexo는 URL의 첫 번째 세그먼트에서 언어를 감지합니다.\n\n``` plain\n/index.html => en\n/archives/index.html => en\n/zh-tw/index.html => zh-tw\n```\n\n언어 파일이 존재할 때에만 문자열이 서로 다른 언어로 제공됩니다. 따라서 위 예시에서 `/archives/index.html`의 `archives`는 다른 언어로 제공되지 않습니다.\n",
				"html": "<p>당신의 웹 사이트를 서로 다른 언어로 표시하기 위해 internationalization을 사용할 수 있습니다. 기본 언어의 변경은 <code>_config.yml</code> 파일의 <code>language</code>를 수정하면 됩니다. 다중 언어를 설정할 수도 있고 기본 언어의 순서를 수정할 수도 있습니다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-tw</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">language:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">zh-tw</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"언어-파일\"><a href=\"#언어-파일\" class=\"headerlink\" title=\"언어 파일\"></a>언어 파일</h3><p>언어 파일로 YAML 또는 JSON 파일을 사용할 수 있습니다. 테마의 <code>languages</code> 폴더에 이 파일을 넣어두면 됩니다. 언어 파일의 <a href=\"https://github.com/alexei/sprintf.js\" target=\"_blank\" rel=\"noopener\">printf format</a>을 지원합니다. </p>\n<h3 id=\"템플릿\"><a href=\"#템플릿\" class=\"headerlink\" title=\"템플릿\"></a>템플릿</h3><p><code>__</code> 또는 <code>_p</code>를 사용하면 템플릿에서의 문자열의 번역을 위한 helper를 사용할 수 있습니다. <code>__</code>는 일반적인 사용 방법이고 <code>_p</code>는 여러 개의 문자열을 위해 사용하는 방법입니다. 아래 예시를 보세요.</p>\n<figure class=\"highlight yaml\"><figcaption><span>en.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">index:</span></span><br><span class=\"line\"><span class=\"attr\">  title:</span> <span class=\"string\">Home</span></span><br><span class=\"line\"><span class=\"attr\">  add:</span> <span class=\"string\">Add</span></span><br><span class=\"line\"><span class=\"attr\">  video:</span></span><br><span class=\"line\"><span class=\"attr\">    zero:</span> <span class=\"literal\">No</span> <span class=\"string\">videos</span></span><br><span class=\"line\"><span class=\"attr\">    one:</span> <span class=\"string\">One</span> <span class=\"string\">video</span></span><br><span class=\"line\"><span class=\"attr\">    other:</span> <span class=\"string\">%d</span> <span class=\"string\">videos</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%= __(<span class=\"string\">'index.title'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Home</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%= _p(<span class=\"string\">'index.video'</span>, <span class=\"number\">3</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 3 videos</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"경로\"><a href=\"#경로\" class=\"headerlink\" title=\"경로\"></a>경로</h3><p>페이지에서 사용할 언어는 front-matter에서도 설정이 가능합니다. <code>_config.yml</code> 파일의 <code>i18n_dir</code> 항목을 수정하면 Hexo가 자동으로 감지할 수 있습니다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">i18n_dir:</span> <span class=\"string\">:lang</span></span><br></pre></td></tr></table></figure>\n<p><code>i18n_dir</code> 설정의 기본 값은 <code>:lang</code> 이며, Hexo는 URL의 첫 번째 세그먼트에서 언어를 감지합니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">/index.html =&gt; en</span><br><span class=\"line\">/archives/index.html =&gt; en</span><br><span class=\"line\">/zh-tw/index.html =&gt; zh-tw</span><br></pre></td></tr></table></figure>\n<p>언어 파일이 존재할 때에만 문자열이 서로 다른 언어로 제공됩니다. 따라서 위 예시에서 <code>/archives/index.html</code>의 <code>archives</code>는 다른 언어로 제공되지 않습니다.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68s0026koeottyhu6oa",
				"title": "Documentation",
				"markdown": "Hexo 문서에 오신 것을 환영합니다. Hexo 사용 중 문제가 발생한다면 [troubleshooting guide](troubleshooting.html)를 살펴보세요. 이슈가 발생했다면 [GitHub](https://github.com/hexojs/hexo/issues) 또는 [Google Group](https://groups.google.com/group/hexo) 에 내용을 등록해 주세요.\n\n## Hexo는 무엇인가요?\n\nHexo는 빠르고 간단하고 파워풀한 블로그 프레임워크입니다. [Markdown](http://daringfireball.net/projects/markdown/)(또는 다른 언어)을 사용하여 포스트를 작성하면 Hexo는 금세 멋진 테마를 가미해서 정적인 파일을 생성해 드립니다.\n\n## 설치하기\n\nHexo는 눈 깜박할 새에 설치할 수 있습니다. 설치 시 문제가 생겼는데 해결책을 찾지 못했다면, [submit a GitHub issue](https://github.com/hexojs/hexo/issues)에 등록해 주세요. 제가 해결해 드리겠습니다.\n\n### 요구사항\n\nHexo의 설치는 꽤 쉽습니다. 하지만, 설치 전에 몇 가지 요구사항이 있습니다.\n\n- [Node.js](http://nodejs.org/)\n- [Git](http://git-scm.com/)\n\n컴퓨터에 이미 이런 것들이 설치되어 있다면, 축하드립니다! 이제 npm을 이용하여 Hexo를 설치하기만 하면 됩니다.\n\n``` bash\n$ npm install -g hexo-cli\n```\n\n설치되어 있지 않다면, 아래의 설명을 따라 요구사항들을 설치하세요.\n\n{% note warn For Mac users %}\n컴파일 중에 몇 가지 문제가 발생할 수 있습니다. 우선 앱스토어를 통해 Xcode를 설치하세요. 그 다음, Xcode를 실행하고 **Preferences -> Download -> Command Line Tools -> Install** 의 방법으로 command line tool을 설치하세요.\n{% endnote %}\n\n### Git을 설치하세요\n\n- Windows: [git](https://git-scm.com/download/win) 에서 다운로드해서 설치하세요.\n- Mac: [Homebrew](http://mxcl.github.com/homebrew/), [MacPorts](http://www.macports.org/), [installer](http://sourceforge.net/projects/git-osx-installer/) 중 하나 선택해서 설치하세요.\n- Linux (Ubuntu, Debian): `sudo apt-get install git-core`\n- Linux (Fedora, Red Hat, CentOS): `sudo yum install git-core`\n\n### Node.js를 설치하세요\n\nNode.js는 [nvm](https://github.com/creationix/nvm)을 통해 설치하는 것이 가장 좋습니다.\n\ncURL:\n\n``` bash\n$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh\n```\n\nWget:\n\n``` bash\n$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh\n```\n\nnvm이 설치되어 있다면, 터미널을 재시작하고 아래 명령어를 수행하세요.\n\n``` bash\n$ nvm install stable\n```\n\n이런 방법 대신, [installer](http://nodejs.org/)를 다운로드 받아서 설치하는 방법도 있습니다.\n\n### Hexo 설치하기\n\n위의 요구사항을 모두 설치하셨다면, npm을 통해 Hexo를 설치하세요.\n\n``` bash\n$ npm install -g hexo-cli\n```\n",
				"html": "<p>Hexo 문서에 오신 것을 환영합니다. Hexo 사용 중 문제가 발생한다면 <a href=\"troubleshooting.html\">troubleshooting guide</a>를 살펴보세요. 이슈가 발생했다면 <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a> 또는 <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a> 에 내용을 등록해 주세요.</p>\n<h2 id=\"Hexo는-무엇인가요\"><a href=\"#Hexo는-무엇인가요\" class=\"headerlink\" title=\"Hexo는 무엇인가요?\"></a>Hexo는 무엇인가요?</h2><p>Hexo는 빠르고 간단하고 파워풀한 블로그 프레임워크입니다. <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a>(또는 다른 언어)을 사용하여 포스트를 작성하면 Hexo는 금세 멋진 테마를 가미해서 정적인 파일을 생성해 드립니다.</p>\n<h2 id=\"설치하기\"><a href=\"#설치하기\" class=\"headerlink\" title=\"설치하기\"></a>설치하기</h2><p>Hexo는 눈 깜박할 새에 설치할 수 있습니다. 설치 시 문제가 생겼는데 해결책을 찾지 못했다면, <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">submit a GitHub issue</a>에 등록해 주세요. 제가 해결해 드리겠습니다.</p>\n<h3 id=\"요구사항\"><a href=\"#요구사항\" class=\"headerlink\" title=\"요구사항\"></a>요구사항</h3><p>Hexo의 설치는 꽤 쉽습니다. 하지만, 설치 전에 몇 가지 요구사항이 있습니다.</p>\n<ul>\n<li><a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node.js</a></li>\n<li><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></li>\n</ul>\n<p>컴퓨터에 이미 이런 것들이 설치되어 있다면, 축하드립니다! 이제 npm을 이용하여 Hexo를 설치하기만 하면 됩니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>설치되어 있지 않다면, 아래의 설명을 따라 요구사항들을 설치하세요.</p>\n<blockquote class=\"note warn\"><strong class=\"note-title\">For Mac users</strong><p>컴파일 중에 몇 가지 문제가 발생할 수 있습니다. 우선 앱스토어를 통해 Xcode를 설치하세요. 그 다음, Xcode를 실행하고 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 의 방법으로 command line tool을 설치하세요.</p>\n</blockquote>\n<h3 id=\"Git을-설치하세요\"><a href=\"#Git을-설치하세요\" class=\"headerlink\" title=\"Git을 설치하세요\"></a>Git을 설치하세요</h3><ul>\n<li>Windows: <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a> 에서 다운로드해서 설치하세요.</li>\n<li>Mac: <a href=\"http://mxcl.github.com/homebrew/\" target=\"_blank\" rel=\"noopener\">Homebrew</a>, <a href=\"http://www.macports.org/\" target=\"_blank\" rel=\"noopener\">MacPorts</a>, <a href=\"http://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"noopener\">installer</a> 중 하나 선택해서 설치하세요.</li>\n<li>Linux (Ubuntu, Debian): <code>sudo apt-get install git-core</code></li>\n<li>Linux (Fedora, Red Hat, CentOS): <code>sudo yum install git-core</code></li>\n</ul>\n<h3 id=\"Node-js를-설치하세요\"><a href=\"#Node-js를-설치하세요\" class=\"headerlink\" title=\"Node.js를 설치하세요\"></a>Node.js를 설치하세요</h3><p>Node.js는 <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">nvm</a>을 통해 설치하는 것이 가장 좋습니다.</p>\n<p>cURL:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br></pre></td></tr></table></figure>\n<p>Wget:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br></pre></td></tr></table></figure>\n<p>nvm이 설치되어 있다면, 터미널을 재시작하고 아래 명령어를 수행하세요.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ nvm install stable</span><br></pre></td></tr></table></figure>\n<p>이런 방법 대신, <a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">installer</a>를 다운로드 받아서 설치하는 방법도 있습니다.</p>\n<h3 id=\"Hexo-설치하기\"><a href=\"#Hexo-설치하기\" class=\"headerlink\" title=\"Hexo 설치하기\"></a>Hexo 설치하기</h3><p>위의 요구사항을 모두 설치하셨다면, npm을 통해 Hexo를 설치하세요.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68t0027koeo0clfnh77",
				"title": "Migration",
				"markdown": "## RSS\n\n먼저 `hexo-migrator-rss` 플러그인을 설치하세요.\n\n``` bash\n$ npm install hexo-migrator-rss --save\n```\n\n플러그인 설치 후에는 아래의 명령어를 수행하여 RSS의 모든 포스트를 마이그레이션 하세요. `source`에는 파일 경로나 URL를 사용할 수 있습니다.\n\n``` bash\n$ hexo migrate rss <source>\n```\n\n## Jekyll\n\nJekyll의 `_posts` 폴더의 모든 파일을 Hexo의 `source/_posts` 폴더로 옮기세요.\n\n`_config.yml`파일의 `new_post_name` 설정을 다음과 같이 수정하세요.\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## Octopress\n\nOctopress `source/_posts` 폴더의 모든 파일을 Hexo의 `source/_posts` 폴더로 옮기세요.\n\n`_config.yml`파일의 `new_post_name` 설정을 다음과 같이 수정하세요.\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## WordPress\n\n먼저, `hexo-migrator-wordpress` plugin을 설치하세요.\n\n``` bash\n$ npm install hexo-migrator-wordpress --save\n```\n\nWordPress의 dashboard에서 \"Tools\" → \"Export\" → \"WordPress\" 를 통해 사용하던 WordPress 사이트를 Export하세요. ([WordPress support page](http://en.support.wordpress.com/export/)에 더 자세한 정보가 있습니다.)\n\n그 후 아래 명령어를 수행하세요:\n\n``` bash\n$ hexo migrate wordpress <source>\n```\n\n여기서 `source`는 WordPress의 export 파일이 있는 파일 경로 또는 URL을 의미합니다.\n\n## Joomla\n\n먼저, `hexo-migrator-joomla` 플러그인을 설치하세요.\n\n```bash\n$ npm install hexo-migrator-joomla --save\n```\n\nJoomla 게시물을 [J2XML](http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D)를 사용하여 export하세요.\n\n그 후 아래 명령어를 ㅅ수행하세요:\n\n```bash\n$ hexo migrate joomla <source>\n```\n\n여기서 `source`는 Joonla의 export 파일이 있는 파일 경로 또는 URL을 의미합니다.\n",
				"html": "<h2 id=\"RSS\"><a href=\"#RSS\" class=\"headerlink\" title=\"RSS\"></a>RSS</h2><p>먼저 <code>hexo-migrator-rss</code> 플러그인을 설치하세요.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-rss --save</span><br></pre></td></tr></table></figure>\n<p>플러그인 설치 후에는 아래의 명령어를 수행하여 RSS의 모든 포스트를 마이그레이션 하세요. <code>source</code>에는 파일 경로나 URL를 사용할 수 있습니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate rss &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Jekyll\"><a href=\"#Jekyll\" class=\"headerlink\" title=\"Jekyll\"></a>Jekyll</h2><p>Jekyll의 <code>_posts</code> 폴더의 모든 파일을 Hexo의 <code>source/_posts</code> 폴더로 옮기세요.</p>\n<p><code>_config.yml</code>파일의 <code>new_post_name</code> 설정을 다음과 같이 수정하세요.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Octopress\"><a href=\"#Octopress\" class=\"headerlink\" title=\"Octopress\"></a>Octopress</h2><p>Octopress <code>source/_posts</code> 폴더의 모든 파일을 Hexo의 <code>source/_posts</code> 폴더로 옮기세요.</p>\n<p><code>_config.yml</code>파일의 <code>new_post_name</code> 설정을 다음과 같이 수정하세요.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year-:month-:day-:title.md</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"WordPress\"><a href=\"#WordPress\" class=\"headerlink\" title=\"WordPress\"></a>WordPress</h2><p>먼저, <code>hexo-migrator-wordpress</code> plugin을 설치하세요.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-wordpress --save</span><br></pre></td></tr></table></figure>\n<p>WordPress의 dashboard에서 “Tools” → “Export” → “WordPress” 를 통해 사용하던 WordPress 사이트를 Export하세요. (<a href=\"http://en.support.wordpress.com/export/\" target=\"_blank\" rel=\"noopener\">WordPress support page</a>에 더 자세한 정보가 있습니다.)</p>\n<p>그 후 아래 명령어를 수행하세요:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate wordpress &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>여기서 <code>source</code>는 WordPress의 export 파일이 있는 파일 경로 또는 URL을 의미합니다.</p>\n<h2 id=\"Joomla\"><a href=\"#Joomla\" class=\"headerlink\" title=\"Joomla\"></a>Joomla</h2><p>먼저, <code>hexo-migrator-joomla</code> 플러그인을 설치하세요.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-migrator-joomla --save</span><br></pre></td></tr></table></figure>\n<p>Joomla 게시물을 <a href=\"http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D\" target=\"_blank\" rel=\"noopener\">J2XML</a>를 사용하여 export하세요.</p>\n<p>그 후 아래 명령어를 ㅅ수행하세요:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo migrate joomla &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>여기서 <code>source</code>는 Joonla의 export 파일이 있는 파일 경로 또는 URL을 의미합니다.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68t0028koeooj646c4r",
				"title": "Server",
				"markdown": "## [hexo-server]\n\nHexo 3의 릴리즈와 함께, server를 메인 모듈과 분리시켰습니다. server를 사용하여 시작하기 위해서는 먼저 [hexo-server]를 설치해야 합니다.\n\n``` bash\n$ npm install hexo-server --save\n```\n\n설치가 완료되었다면 server를 시작하기 위해 아래 명령을 수행해야 합니다. 당신의 웹 사이트는 기본값에 의해 `http://localhost:4000`로 실행됩니다. server가 구동되는 동안 Hexo는 파일이 변경되는 것을 감지하여 자동으로 업데이트 합니다. 따라서 수동으로 server를 재시작할 필요가 없습니다.\n\n``` bash\n$ hexo server\n```\n\n포트를 변경하고 싶거나 `EADDRINUSE` 에러가 발생한다면 `-p` 옵션을 사용하여 다른 포트를 설정해 보세요.\n\n``` bash\n$ hexo server -p 5000\n```\n\n### Static Mode\n\nStatic mode에서는 `public` 폴더의 파일들만 제공되며 파일 감시 기능은 비활성화됩니다. server를 시작하기 전에 `hexo generate`를 수행해야 합니다. 이 방법은 production에서 주로 사용됩니다.\n\n``` bash\n$ hexo server -s\n```\n\n### IP 변경\n\nHexo는 기본적으로 `0.0.0.0`을 기본값으로 수행됩니다. 아래와 같은 방법으로 IP 설정을 변경할 수 있습니다.\n\n``` bash\n$ hexo server -i 192.168.1.1\n```\n\n## Pow\n\n[Pow]는 Mac을 위한 zero-config Rack server입니다.\n\n### 설치하기\n\n``` bash\n$ curl get.pow.cx | sh\n```\n\n### 설정하기\n\n`~/.pow`에 대해 심볼릭 링크를 설정합니다.\n\n``` bash\n$ cd ~/.pow\n$ ln -s /path/to/myapp\n```\n\n당신의 웹 사이트는 `http://myapp.dev` 상에서 실행될 것입니다. URL은 심볼릭 링크의 이름을 기준으로 합니다.\n\n[hexo-server]: https://github.com/hexojs/hexo-server\n[Pow]: http://pow.cx/\n",
				"html": "<h2 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo-server\"></a><a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a></h2><p>Hexo 3의 릴리즈와 함께, server를 메인 모듈과 분리시켰습니다. server를 사용하여 시작하기 위해서는 먼저 <a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"noopener\">hexo-server</a>를 설치해야 합니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure>\n<p>설치가 완료되었다면 server를 시작하기 위해 아래 명령을 수행해야 합니다. 당신의 웹 사이트는 기본값에 의해 <code>http://localhost:4000</code>로 실행됩니다. server가 구동되는 동안 Hexo는 파일이 변경되는 것을 감지하여 자동으로 업데이트 합니다. 따라서 수동으로 server를 재시작할 필요가 없습니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>포트를 변경하고 싶거나 <code>EADDRINUSE</code> 에러가 발생한다면 <code>-p</code> 옵션을 사용하여 다른 포트를 설정해 보세요.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h3 id=\"Static-Mode\"><a href=\"#Static-Mode\" class=\"headerlink\" title=\"Static Mode\"></a>Static Mode</h3><p>Static mode에서는 <code>public</code> 폴더의 파일들만 제공되며 파일 감시 기능은 비활성화됩니다. server를 시작하기 전에 <code>hexo generate</code>를 수행해야 합니다. 이 방법은 production에서 주로 사용됩니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -s</span><br></pre></td></tr></table></figure>\n<h3 id=\"IP-변경\"><a href=\"#IP-변경\" class=\"headerlink\" title=\"IP 변경\"></a>IP 변경</h3><p>Hexo는 기본적으로 <code>0.0.0.0</code>을 기본값으로 수행됩니다. 아래와 같은 방법으로 IP 설정을 변경할 수 있습니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -i 192.168.1.1</span><br></pre></td></tr></table></figure>\n<h2 id=\"Pow\"><a href=\"#Pow\" class=\"headerlink\" title=\"Pow\"></a>Pow</h2><p><a href=\"http://pow.cx/\" target=\"_blank\" rel=\"noopener\">Pow</a>는 Mac을 위한 zero-config Rack server입니다.</p>\n<h3 id=\"설치하기\"><a href=\"#설치하기\" class=\"headerlink\" title=\"설치하기\"></a>설치하기</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ curl get.pow.cx | sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"설정하기\"><a href=\"#설정하기\" class=\"headerlink\" title=\"설정하기\"></a>설정하기</h3><p><code>~/.pow</code>에 대해 심볼릭 링크를 설정합니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/.pow</span><br><span class=\"line\">$ ln -s /path/to/myapp</span><br></pre></td></tr></table></figure>\n<p>당신의 웹 사이트는 <code>http://myapp.dev</code> 상에서 실행될 것입니다. URL은 심볼릭 링크의 이름을 기준으로 합니다.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6b3007tkoeochpzibpo",
				"title": "Deployment",
				"markdown": "hexo สนับสนุนวิธีรวดเร็วและเรียบง่ายสำหรับ deployment คุณ deploy \nเว็บไซต์ของคุณไปถึงเซร์ฟเวอร์ได้ด้วยคำสั่งบรรทัดเดียว\n\n``` bash\n$ hexo deploy\n```\n\nก่อน deployment ครั้งแรกของคุณ คุณต้องการแก้ไขการตั้งค่าบางอย่างใน `_config\n.yml`  การตั้งค่า deployment ท่ีเกิดผลได้ต้องมี field ท่ีเป็น `type` \nยกตัวอย่างเช่น:\n\n``` yaml\ndeploy:\n  type: git\n```\n\nคุณยังเลื่อก deployer ได้หลายตัว hexo จะ execute deployer ทุกตัวตามลำดับ\n\n``` yaml\ndeploy:\n- type: git\n  repo:\n- type: heroku\n  repo:\n```\n\n## Git\n\n1. ติดตั้ง [hexo-deployer-git].\n``` bash\n$ npm install hexo-deployer-git --save\n```\n2. แก้ไข **_config.yml** (คอมเมนต์ต่อไปเป็นตัวอย่างของการตั้งค่า):\n\n```yaml\ndeploy:\n  type: git   \n  repo: <repository url>  #https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io\n  branch: [branch] #published\n  message: [message]  #leave this blank\n```\nOption | Description\n--- | ---\n`repo` | GitHub/Bitbucket/Coding/GitLab repository URL\n`branch` | Branch name. The deployer will detect the branch automatically if you are using GitHub or GitCafe.\n`message` | Customize commit message (Default to `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n3. อัพโหลดไซต์ของคุณ: `./node_modules/.bin/hexo clean && \n./node_modules/\n.bin/hexo deploy` (หรือ `hexo clean && hexo deploy` ในเมื่อท่ีคุณติดตั้ง hexo\n globally).\n4. ใน Github/BitBucket/Gitlab คุณไปถึงท่ีตั้งค่า repository \nและเปลี่ยนสาขาหลักจาก `master` ไปเป็น `published` \n（หรือชื่อสาขาอื่นๆท่ีคุณตั้งให้ในไฟล์ _config.yml ของคุณ ） \nแล้วไซต์ของคุณจะดูเหมือนท่ีคุณตั้งค่าให้\n### How does it work exactly?\nเวลาคุณสร้างขึ้นมาแรกๆ repository ของคุณจะมีสาขา **master**  \nคุณต้องอยู่ในสาขานี้ในเมื่อสร้างไซต์ของตน เมื่อ deploy hexo \nจะสร้างหรืออัพเดทสาขาใหม่บนไซต์ remote (เรียกว่า **published** ใน config \nดังกล่าว) deployment นั้นจะไม่สร้างสาขาใหม่ locally และไม่ยุ่งกับ source code\n ท่ีมีอยู่ locally หรือ on the remote คุณยังต้องการ push commit ไปถึงสาขา \n master ของ code ท่ีอยู่ remote ด้วยตนเพื่อจะอัพเดทข้อมูลได้ทันที\n\n## Heroku\n\nติดตั้ง [hexo-deployer-heroku].\n\n``` bash\n$ npm install hexo-deployer-heroku --save\n```\n\nแก้ไขการตั้งค่า\n\n``` yaml\ndeploy:\n  type: heroku\n  repo: <repository url>\n  message: [message]\n```\n\nOption | Description\n--- | ---\n`repo`, `repository` | Heroku repository URL\n`message` | Customize commit message (Default to `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## Netlify\n\n[Netlify](https://www.netlify.com/) สนับสนุน deployment ต่อเนื่องกัน \n(ซึ้งสร้างด้วย git) สนับสนุน CDN แบบทั่วโลก DNS ทุกอย่าง（รวม domain \nท่ีตั้งค่าด้วยตนด้วย）HTTPS ท่ีควบคุมโดยขบวนการอัตโนมัติ \nการเพิ่มความเร็วของวัตถุดิบ และสิ่งอื่นๆอีกมากมาย Netlify \nเป็นแพลตฟอร์มซึ่งรวมทุกอย่างเป็นหนึ่งเดียว \nทำให้การสร้างไซต์หรือแอปของแว็บท่ีมีแระสิทธิภาพและรักษาได้ง่ายนั้นเป็นขบวนการอัตโนมัติ\n\n \n มีทั้งหมดสองวิธีในเรื่อง deploy เว็บไซต์ของตน  วิธีทั่วไปท่ีสุดคือการใช้ web\n  UI คุณสามารถไปท่ี [create a new site page](https://app.netlify.com/start) และเลือก repo ของ project คุณจาก Github Gitlab หรือ Bitbucket และทำตามวิธีการใช้\n\nวิธีท่ีสองคือ การใช้เครื่องมือ [Node based CLI](https://www.netlify.com/docs/cli/) ของ Netlify เพื่อบริหารและ deploy ไซต์บน Netlify \nโดยไม่ต้องผ่าน terminal\n\nคุณสามารถเพิ่ม [Deploy to Netlify Button](https://www.netlify.com/docs/deploy-button/) ไปถึงไฟล์ README ของคุณ ดังนั้นจะอนุญาตให้คนอื่น \ncopy respository ของคุณและ deploy ไปถึง Netlify ด้วยคลิกเดียว\n\n\n## Rsync\n\nติดตั้ง [hexo-deployer-rsync].\n\n``` bash\n$ npm install hexo-deployer-rsync --save\n```\n\nแก้ไขการตั้งค่า\n\n``` yaml\ndeploy:\n  type: rsync\n  host: <host>\n  user: <user>\n  root: <root>\n  port: [port]\n  delete: [true|false]\n  verbose: [true|false]\n  ignore_errors: [true|false]\n```\n\nOption | Description | Default\n--- | --- | ---\n`host` | Address of remote host |\n`user` | Username |\n`root` | Root directory of remote host |\n`port` | Port | 22\n`delete` | Delete old files on remote host | true\n`verbose` | Display verbose messages | true\n`ignore_errors` | Ignore errors | false\n\n## OpenShift\n\nติดตั้ง [hexo-deployer-openshift].\n\n``` bash\n$ npm install hexo-deployer-openshift --save\n```\n\nแก้ไขการตั้งค่า\n\n``` yaml\ndeploy:\n  type: openshift\n  repo: <repository url>\n  message: [message]\n```\n\nOption | Description\n--- | ---\n`repo` | OpenShift repository URL\n`message` | Customize commit message (Default to `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## FTPSync\n\nติดตั้ง [hexo-deployer-ftpsync].\n\n``` bash\n$ npm install hexo-deployer-ftpsync --save\n```\n\nแก้ไขการตั้งค่า\n\n``` yaml\ndeploy:\n  type: ftpsync\n  host: <host>\n  user: <user>\n  pass: <password>\n  remote: [remote]\n  port: [port]\n  ignore: [ignore]\n  connections: [connections]\n  verbose: [true|false]\n```\n\nOption | Description | Default\n--- | --- | ---\n`host` | Address of remote host |\n`user` | Username |\n`pass` | Password |\n`remote` | Root directory of remote host | `/`\n`port` | Port | 21\n`ignore` | Ignore the files on either host or remote |\n`connections` | Connections number | 1\n`verbose` | Display verbose messages | false\n\n## SFTP\n\nติดตั้ง [hexo-deployer-sftp]. deploy ไซต์ได้โดย SFTP และใช้ password ได้ด้วย ssh-agent\n\n``` bash\n$ npm install hexo-deployer-sftp --save\n```\n\nแก้ไขการตั้งค่า\n\n``` yaml\ndeploy:\n  type: sftp\n  host: <host>\n  user: <user>\n  pass: <password>\n  remotePath: [remote path]\n  port: [port]\n  privateKey: [path/to/privateKey]\n  passphrase: [passphrase]\n  agent: [path/to/agent/socket]\n```\n\nOption | Description | Default\n--- | --- | ---\n`host` | Address of remote host |\n`user` | Username |\n`pass` | Password |\n`remotePath` | Root directory of remote host | `/`\n`port` | Port | 22\n`privateKey` | Path to a ssh private key |\n`passphrase` | Optional passphrase for the private key | \n`agent` | Path to the ssh-agent socket | `$SSH_AUTH_SOCK`\n\n## Other Methods\n\nไฟล์ท่ีต้องการ generate จะบันทึกอยู่ใน folder `public` คุณสามารถ copy \nไลฟ์เหล่านี้ไปถึงท่ีท่ีคุณอยากย้ายไป\n\n[hexo-deployer-git]: https://github.com/hexojs/hexo-deployer-git\n[hexo-deployer-heroku]: https://github.com/hexojs/hexo-deployer-heroku\n[hexo-deployer-rsync]: https://github.com/hexojs/hexo-deployer-rsync\n[hexo-deployer-openshift]: https://github.com/hexojs/hexo-deployer-openshift\n[hexo-deployer-ftpsync]: https://github.com/hexojs/hexo-deployer-ftpsync\n",
				"html": "<p>hexo สนับสนุนวิธีรวดเร็วและเรียบง่ายสำหรับ deployment คุณ deploy<br>เว็บไซต์ของคุณไปถึงเซร์ฟเวอร์ได้ด้วยคำสั่งบรรทัดเดียว</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>ก่อน deployment ครั้งแรกของคุณ คุณต้องการแก้ไขการตั้งค่าบางอย่างใน <code>_config\n.yml</code>  การตั้งค่า deployment ท่ีเกิดผลได้ต้องมี field ท่ีเป็น <code>type</code><br>ยกตัวอย่างเช่น:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br></pre></td></tr></table></figure>\n<p>คุณยังเลื่อก deployer ได้หลายตัว hexo จะ execute deployer ทุกตัวตามลำดับ</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br><span class=\"line\"><span class=\"attr\">- type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><ol>\n<li><p>ติดตั้ง <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>แก้ไข <strong>_config.yml</strong> (คอมเมนต์ต่อไปเป็นตัวอย่างของการตั้งค่า):</p>\n</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span>   </span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span>  <span class=\"comment\">#https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">[branch]</span> <span class=\"comment\">#published</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span>  <span class=\"comment\">#leave this blank</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>GitHub/Bitbucket/Coding/GitLab repository URL</td>\n</tr>\n<tr>\n<td><code>branch</code></td>\n<td>Branch name. The deployer will detect the branch automatically if you are using GitHub or GitCafe.</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li>อัพโหลดไซต์ของคุณ: <code>./node_modules/.bin/hexo clean &amp;&amp; \n./node_modules/\n.bin/hexo deploy</code> (หรือ <code>hexo clean &amp;&amp; hexo deploy</code> ในเมื่อท่ีคุณติดตั้ง hexo<br>globally).</li>\n<li>ใน Github/BitBucket/Gitlab คุณไปถึงท่ีตั้งค่า repository<br>และเปลี่ยนสาขาหลักจาก <code>master</code> ไปเป็น <code>published</code><br>（หรือชื่อสาขาอื่นๆท่ีคุณตั้งให้ในไฟล์ _config.yml ของคุณ ）<br>แล้วไซต์ของคุณจะดูเหมือนท่ีคุณตั้งค่าให้<h3 id=\"How-does-it-work-exactly\"><a href=\"#How-does-it-work-exactly\" class=\"headerlink\" title=\"How does it work exactly?\"></a>How does it work exactly?</h3>เวลาคุณสร้างขึ้นมาแรกๆ repository ของคุณจะมีสาขา <strong>master</strong><br>คุณต้องอยู่ในสาขานี้ในเมื่อสร้างไซต์ของตน เมื่อ deploy hexo<br>จะสร้างหรืออัพเดทสาขาใหม่บนไซต์ remote (เรียกว่า <strong>published</strong> ใน config<br>ดังกล่าว) deployment นั้นจะไม่สร้างสาขาใหม่ locally และไม่ยุ่งกับ source code<br>ท่ีมีอยู่ locally หรือ on the remote คุณยังต้องการ push commit ไปถึงสาขา<br>master ของ code ท่ีอยู่ remote ด้วยตนเพื่อจะอัพเดทข้อมูลได้ทันที</li>\n</ol>\n<h2 id=\"Heroku\"><a href=\"#Heroku\" class=\"headerlink\" title=\"Heroku\"></a>Heroku</h2><p>ติดตั้ง <a href=\"https://github.com/hexojs/hexo-deployer-heroku\" target=\"_blank\" rel=\"noopener\">hexo-deployer-heroku</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-heroku --save</span><br></pre></td></tr></table></figure>\n<p>แก้ไขการตั้งค่า</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">heroku</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code>, <code>repository</code></td>\n<td>Heroku repository URL</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Netlify\"><a href=\"#Netlify\" class=\"headerlink\" title=\"Netlify\"></a>Netlify</h2><p><a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"noopener\">Netlify</a> สนับสนุน deployment ต่อเนื่องกัน<br>(ซึ้งสร้างด้วย git) สนับสนุน CDN แบบทั่วโลก DNS ทุกอย่าง（รวม domain<br>ท่ีตั้งค่าด้วยตนด้วย）HTTPS ท่ีควบคุมโดยขบวนการอัตโนมัติ<br>การเพิ่มความเร็วของวัตถุดิบ และสิ่งอื่นๆอีกมากมาย Netlify<br>เป็นแพลตฟอร์มซึ่งรวมทุกอย่างเป็นหนึ่งเดียว<br>ทำให้การสร้างไซต์หรือแอปของแว็บท่ีมีแระสิทธิภาพและรักษาได้ง่ายนั้นเป็นขบวนการอัตโนมัติ</p>\n<p> มีทั้งหมดสองวิธีในเรื่อง deploy เว็บไซต์ของตน  วิธีทั่วไปท่ีสุดคือการใช้ web<br>  UI คุณสามารถไปท่ี <a href=\"https://app.netlify.com/start\" target=\"_blank\" rel=\"noopener\">create a new site page</a> และเลือก repo ของ project คุณจาก Github Gitlab หรือ Bitbucket และทำตามวิธีการใช้</p>\n<p>วิธีท่ีสองคือ การใช้เครื่องมือ <a href=\"https://www.netlify.com/docs/cli/\" target=\"_blank\" rel=\"noopener\">Node based CLI</a> ของ Netlify เพื่อบริหารและ deploy ไซต์บน Netlify<br>โดยไม่ต้องผ่าน terminal</p>\n<p>คุณสามารถเพิ่ม <a href=\"https://www.netlify.com/docs/deploy-button/\" target=\"_blank\" rel=\"noopener\">Deploy to Netlify Button</a> ไปถึงไฟล์ README ของคุณ ดังนั้นจะอนุญาตให้คนอื่น<br>copy respository ของคุณและ deploy ไปถึง Netlify ด้วยคลิกเดียว</p>\n<h2 id=\"Rsync\"><a href=\"#Rsync\" class=\"headerlink\" title=\"Rsync\"></a>Rsync</h2><p>ติดตั้ง <a href=\"https://github.com/hexojs/hexo-deployer-rsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-rsync</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-rsync --save</span><br></pre></td></tr></table></figure>\n<p>แก้ไขการตั้งค่า</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">rsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  root:</span> <span class=\"string\">&lt;root&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  delete:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore_errors:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Address of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Username</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>Root directory of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Port</td>\n<td>22</td>\n</tr>\n<tr>\n<td><code>delete</code></td>\n<td>Delete old files on remote host</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Display verbose messages</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>ignore_errors</code></td>\n<td>Ignore errors</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"OpenShift\"><a href=\"#OpenShift\" class=\"headerlink\" title=\"OpenShift\"></a>OpenShift</h2><p>ติดตั้ง <a href=\"https://github.com/hexojs/hexo-deployer-openshift\" target=\"_blank\" rel=\"noopener\">hexo-deployer-openshift</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-openshift --save</span><br></pre></td></tr></table></figure>\n<p>แก้ไขการตั้งค่า</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">openshift</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">[message]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>OpenShift repository URL</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"FTPSync\"><a href=\"#FTPSync\" class=\"headerlink\" title=\"FTPSync\"></a>FTPSync</h2><p>ติดตั้ง <a href=\"https://github.com/hexojs/hexo-deployer-ftpsync\" target=\"_blank\" rel=\"noopener\">hexo-deployer-ftpsync</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-ftpsync --save</span><br></pre></td></tr></table></figure>\n<p>แก้ไขการตั้งค่า</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">ftpsync</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  pass:</span> <span class=\"string\">&lt;password&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  remote:</span> <span class=\"string\">[remote]</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  ignore:</span> <span class=\"string\">[ignore]</span></span><br><span class=\"line\"><span class=\"attr\">  connections:</span> <span class=\"string\">[connections]</span></span><br><span class=\"line\"><span class=\"attr\">  verbose:</span> <span class=\"string\">[true|false]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Address of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Username</td>\n<td></td>\n</tr>\n<tr>\n<td><code>pass</code></td>\n<td>Password</td>\n<td></td>\n</tr>\n<tr>\n<td><code>remote</code></td>\n<td>Root directory of remote host</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Port</td>\n<td>21</td>\n</tr>\n<tr>\n<td><code>ignore</code></td>\n<td>Ignore the files on either host or remote</td>\n<td></td>\n</tr>\n<tr>\n<td><code>connections</code></td>\n<td>Connections number</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Display verbose messages</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"SFTP\"><a href=\"#SFTP\" class=\"headerlink\" title=\"SFTP\"></a>SFTP</h2><p>ติดตั้ง [hexo-deployer-sftp]. deploy ไซต์ได้โดย SFTP และใช้ password ได้ด้วย ssh-agent</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-sftp --save</span><br></pre></td></tr></table></figure>\n<p>แก้ไขการตั้งค่า</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">sftp</span></span><br><span class=\"line\"><span class=\"attr\">  host:</span> <span class=\"string\">&lt;host&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  user:</span> <span class=\"string\">&lt;user&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  pass:</span> <span class=\"string\">&lt;password&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  remotePath:</span> <span class=\"string\">[remote</span> <span class=\"string\">path]</span></span><br><span class=\"line\"><span class=\"attr\">  port:</span> <span class=\"string\">[port]</span></span><br><span class=\"line\"><span class=\"attr\">  privateKey:</span> <span class=\"string\">[path/to/privateKey]</span></span><br><span class=\"line\"><span class=\"attr\">  passphrase:</span> <span class=\"string\">[passphrase]</span></span><br><span class=\"line\"><span class=\"attr\">  agent:</span> <span class=\"string\">[path/to/agent/socket]</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Address of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Username</td>\n<td></td>\n</tr>\n<tr>\n<td><code>pass</code></td>\n<td>Password</td>\n<td></td>\n</tr>\n<tr>\n<td><code>remotePath</code></td>\n<td>Root directory of remote host</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Port</td>\n<td>22</td>\n</tr>\n<tr>\n<td><code>privateKey</code></td>\n<td>Path to a ssh private key</td>\n<td></td>\n</tr>\n<tr>\n<td><code>passphrase</code></td>\n<td>Optional passphrase for the private key</td>\n<td></td>\n</tr>\n<tr>\n<td><code>agent</code></td>\n<td>Path to the ssh-agent socket</td>\n<td><code>$SSH_AUTH_SOCK</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Other-Methods\"><a href=\"#Other-Methods\" class=\"headerlink\" title=\"Other Methods\"></a>Other Methods</h2><p>ไฟล์ท่ีต้องการ generate จะบันทึกอยู่ใน folder <code>public</code> คุณสามารถ copy<br>ไลฟ์เหล่านี้ไปถึงท่ีท่ีคุณอยากย้ายไป</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6b4007ukoeoz02yeps5",
				"title": "Tag Plugins",
				"markdown": "ปลั๊กอินแท็กจะแตกต่างกับแท็กโพสต์ ปลั๊กอินแท็กนั้นยืมมาจาก Octopress \nและสนับสนุนวิธีท่ีเพิ่มเนื้อหาเฉพาะไปถึงโพสต์ของตนได้อย่างรวดเร็ว\n{% youtube I07XMi7MHd4 %}\n\n## Block Quote\n\nPerfect for adding quotes to your post, with optional author, source and title information.\nเหมาะสำหรับการเพิ่มการอ้างอิงไปถึงโพสต์ต่างๆ เช่นชื่อผู้เขียน \nที่มาและข้อมูลหัวข้อ\n\n**นามแฝง:** การอ้างอิง\n\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n### Examples\n\n**การอ้างอิงท่ีไม่มี argument**\n\n```\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n```\n\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n\n**การอ้างอิงจากหนังสือ**\n\n```\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n```\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n**การอ้างอิงจาก Twitter**\n\n```\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n```\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n**การอ้างอิงจากบทความในแว็บ**\n\n```\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n```\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n## Code Block\n\nคุณลักษณะท่ีมีส่วนช่วยในการเพิ่ม code snippet ไปถึงโพสต์ของตน\n\n**นามแฝง:** code\n\n```\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n\n### Examples\n\n**code block ท่ีไม่มี argument ใดๆ**\n\n```\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**ซี้ภาษาท่ีได้ใช้ของ code block นั้น**\n\n```\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n```\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n\n**เพิ่มแคปชั่นไปถึง code block**\n\n```\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n```\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n\n**เพิ่มแคปชั่นและ URL ไปถึง code block**\n\n```\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n```\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n## Backtick Code Block\n\nมันเหมือนกันกับการใช้ code block แต่จำกัดจำนวน block โดยใช้ backtick สามอัน\n{% raw %}\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n{% endraw %}\n\n## Pull Quote\n\nเพิ่ม pull quote ไปถึงโพสต์ของคุณ\n\n```\n{% pullquote [class] %}\ncontent\n{% endpullquote %}\n```\n\n## jsFiddle\n\nเสียบ jsFiddle snippet เข้า:\n\n```\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\n\n## Gist\n\nเสียบ Gist snippet เข้า:\n\n```\n{% gist gist_id [filename] %}\n```\n\n## iframe\n\nเสียบ iframe เข้า:\n\n```\n{% iframe url [width] [height] %}\n```\n\n## Image\n\nเสียบรูปภาพที่มีขนาดเฉพาะเข้า:\n\n```\n{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}\n```\n\n## Link\n\nเสียบลิงก์ท่ีมี attribute ว่า `target=\"_blank\"` เข้า:\n\n```\n{% link text url [external] [title] %}\n```\n\n## Include Code\n\nเสียบ code snippet เข้าไปใน folder `source/downloads/code`:\n\n```\n{% include_code [title] [lang:language] path/to/file %}\n```\n\n## YouTube\n\nเสียบวิดีโอ YouTube เข้า:\n\n```\n{% youtube video_id %}\n```\n\n## Vimeo\n\nเสียบวิดีโอ Vimeo ท่ีมีขนาดเฉพาะหรือไม่ได้บ่งชีิขนาดให้ชั้ดเจนเข้า:\n\n```\n{% vimeo video_id [width] [height] %}\n```\n\n## Include Posts\n\nรวมลิงก์ของโพสต์อื่นๆเข้าไปใน  block:\n\n```\n{% post_path filename %}\n{% post_link filename [optional text] %}\n```\n\nเวลาใช้แท็กนี้ ข้อมูล permalink และ folder เช่น ภาษาและวันเดือนปี จะถูกละเลย\n\nยกตัวอย่างเช่น: `{% raw %}{% post_link how-to-bake-a-cake %}{% endraw %}`\n\nโพสต์ท่ีมีชื่อว่า `how-to-bake-a-cake.md` จะ render \nได้แม้ว่าโพสต์นั้นจะอยู่ใน folder `source/posts/2015-02-my-family-holiday` \nและมี permalink เป็น `2018/en/how-to-bake-a-cake`\n\nแทนท่ีจะแสดงให้เห็นหัวข้อโพสต์  คุณสามารถตั้งค่าว่าอะไรของ text \nจะโชว์ให้เห็นได้ดัวยการตั้งค่า `post_path` ส่วน syntax ท่ีเป็น `[]()` \nจะไม่สนับสนุนโดย hexo ในท่ีนี่\n\nยกตัวอย่างเช่น:\n\n**โชว์หัวข้อโพสต์**\n\n`{% raw %}{% post_link 2018-10-19-hexo-3-8-released %}{% endraw %}`\n\n{% post_link 2018-10-19-hexo-3-8-released %}\n\n**โชว์ text ท่ีตั้งค่าด้วยตน**\n\n`{% raw %}{% post_link 2018-10-19-hexo-3-8-released 'Link to a post' %}{% endraw %}`\n\n{% post_link 2018-10-19-hexo-3-8-released 'Link to a post' %}\n\n\n## Include Assets\n\nรวม post asset อยู่ใน block\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n## Raw\n\nถ้าเนื้อหาใน block ก้อนให้เกิด issue สำหรับการ render โพสต์ของคุณ \nกรุณาห่อด้วยแท็ก `raw` \n\n```\n{% raw %}\ncontent\n{% endraw %}\n```\n\n\n## Post Excerpt\n\ntext ท่ีวางก่อนแท็ก `<!-- more -->` จะถือเป็นส่วนที่ตัดตอนมาจากโพสต์\n\n**ยกตัวอย่างเช่น:**\n\n``` \nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n<!-- more -->\nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n```\n",
				"html": "<p>ปลั๊กอินแท็กจะแตกต่างกับแท็กโพสต์ ปลั๊กอินแท็กนั้นยืมมาจาก Octopress<br>และสนับสนุนวิธีท่ีเพิ่มเนื้อหาเฉพาะไปถึงโพสต์ของตนได้อย่างรวดเร็ว<br><div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/I07XMi7MHd4\" frameborder=\"0\" allowfullscreen></iframe></div></p>\n<h2 id=\"Block-Quote\"><a href=\"#Block-Quote\" class=\"headerlink\" title=\"Block Quote\"></a>Block Quote</h2><p>Perfect for adding quotes to your post, with optional author, source and title information.<br>เหมาะสำหรับการเพิ่มการอ้างอิงไปถึงโพสต์ต่างๆ เช่นชื่อผู้เขียน<br>ที่มาและข้อมูลหัวข้อ</p>\n<p><strong>นามแฝง:</strong> การอ้างอิง</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><p><strong>การอ้างอิงท่ีไม่มี argument</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote %&#125;</span><br><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>\n</blockquote>\n<p><strong>การอ้างอิงจากหนังสือ</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class=\"line\">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n<p><strong>การอ้างอิงจาก Twitter</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;</span><br><span class=\"line\">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\" target=\"_blank\" rel=\"noopener\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\" target=\"_blank\" rel=\"noopener\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<p><strong>การอ้างอิงจากบทความในแว็บ</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</span><br><span class=\"line\">Every interaction is both precious and an opportunity to delight.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\" target=\"_blank\" rel=\"noopener\">Welcome to Island Marketing</a></cite></footer></blockquote>\n<h2 id=\"Code-Block\"><a href=\"#Code-Block\" class=\"headerlink\" title=\"Code Block\"></a>Code Block</h2><p>คุณลักษณะท่ีมีส่วนช่วยในการเพิ่ม code snippet ไปถึงโพสต์ของตน</p>\n<p><strong>นามแฝง:</strong> code</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class=\"line\">code snippet</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Examples-1\"><a href=\"#Examples-1\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><p><strong>code block ท่ีไม่มี argument ใดๆ</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock %&#125;</span><br><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">alert(&apos;Hello World!&apos;);</span><br></pre></td></tr></table></figure>\n<p><strong>ซี้ภาษาท่ีได้ใช้ของ code block นั้น</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock lang:objc %&#125;</span><br><span class=\"line\">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"code\"><pre><span class=\"line\">[rectangle setX: <span class=\"number\">10</span> y: <span class=\"number\">10</span> width: <span class=\"number\">20</span> height: <span class=\"number\">20</span>];</span><br></pre></td></tr></table></figure>\n<p><strong>เพิ่มแคปชั่นไปถึง code block</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock Array.map %&#125;</span><br><span class=\"line\">array.map(callback[, thisArg])</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>\n<p><strong>เพิ่มแคปชั่นและ URL ไปถึง code block</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock _.compact http://underscorejs.org/#compact Underscore.js %&#125;</span><br><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>_.compact</span><a href=\"http://underscorejs.org/#compact\" target=\"_blank\" rel=\"noopener\">Underscore.js</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>\n<h2 id=\"Backtick-Code-Block\"><a href=\"#Backtick-Code-Block\" class=\"headerlink\" title=\"Backtick Code Block\"></a>Backtick Code Block</h2><p>มันเหมือนกันกับการใช้ code block แต่จำกัดจำนวน block โดยใช้ backtick สามอัน<br>\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n</p>\n<h2 id=\"Pull-Quote\"><a href=\"#Pull-Quote\" class=\"headerlink\" title=\"Pull Quote\"></a>Pull Quote</h2><p>เพิ่ม pull quote ไปถึงโพสต์ของคุณ</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% pullquote [class] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"jsFiddle\"><a href=\"#jsFiddle\" class=\"headerlink\" title=\"jsFiddle\"></a>jsFiddle</h2><p>เสียบ jsFiddle snippet เข้า:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h2><p>เสียบ Gist snippet เข้า:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"iframe\"><a href=\"#iframe\" class=\"headerlink\" title=\"iframe\"></a>iframe</h2><p>เสียบ iframe เข้า:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2><p>เสียบรูปภาพที่มีขนาดเฉพาะเข้า:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><p>เสียบลิงก์ท่ีมี attribute ว่า <code>target=&quot;_blank&quot;</code> เข้า:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-Code\"><a href=\"#Include-Code\" class=\"headerlink\" title=\"Include Code\"></a>Include Code</h2><p>เสียบ code snippet เข้าไปใน folder <code>source/downloads/code</code>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% include_code [title] [lang:language] path/to/file %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"YouTube\"><a href=\"#YouTube\" class=\"headerlink\" title=\"YouTube\"></a>YouTube</h2><p>เสียบวิดีโอ YouTube เข้า:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% youtube video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Vimeo\"><a href=\"#Vimeo\" class=\"headerlink\" title=\"Vimeo\"></a>Vimeo</h2><p>เสียบวิดีโอ Vimeo ท่ีมีขนาดเฉพาะหรือไม่ได้บ่งชีิขนาดให้ชั้ดเจนเข้า:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% vimeo video_id [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-Posts\"><a href=\"#Include-Posts\" class=\"headerlink\" title=\"Include Posts\"></a>Include Posts</h2><p>รวมลิงก์ของโพสต์อื่นๆเข้าไปใน  block:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% post_path filename %&#125;</span><br><span class=\"line\">&#123;% post_link filename [optional text] %&#125;</span><br></pre></td></tr></table></figure>\n<p>เวลาใช้แท็กนี้ ข้อมูล permalink และ folder เช่น ภาษาและวันเดือนปี จะถูกละเลย</p>\n<p>ยกตัวอย่างเช่น: <code>{% post_link how-to-bake-a-cake %}</code></p>\n<p>โพสต์ท่ีมีชื่อว่า <code>how-to-bake-a-cake.md</code> จะ render<br>ได้แม้ว่าโพสต์นั้นจะอยู่ใน folder <code>source/posts/2015-02-my-family-holiday</code><br>และมี permalink เป็น <code>2018/en/how-to-bake-a-cake</code></p>\n<p>แทนท่ีจะแสดงให้เห็นหัวข้อโพสต์  คุณสามารถตั้งค่าว่าอะไรของ text<br>จะโชว์ให้เห็นได้ดัวยการตั้งค่า <code>post_path</code> ส่วน syntax ท่ีเป็น <code>[]()</code><br>จะไม่สนับสนุนโดย hexo ในท่ีนี่</p>\n<p>ยกตัวอย่างเช่น:</p>\n<p><strong>โชว์หัวข้อโพสต์</strong></p>\n<p><code>{% post_link 2018-10-19-hexo-3-8-released %}</code></p>\n\n<p><strong>โชว์ text ท่ีตั้งค่าด้วยตน</strong></p>\n<p><code>{% post_link 2018-10-19-hexo-3-8-released 'Link to a post' %}</code></p>\n\n<h2 id=\"Include-Assets\"><a href=\"#Include-Assets\" class=\"headerlink\" title=\"Include Assets\"></a>Include Assets</h2><p>รวม post asset อยู่ใน block</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Raw\"><a href=\"#Raw\" class=\"headerlink\" title=\"Raw\"></a>Raw</h2><p>ถ้าเนื้อหาใน block ก้อนให้เกิด issue สำหรับการ render โพสต์ของคุณ<br>กรุณาห่อด้วยแท็ก <code>raw</code> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Post-Excerpt\"><a href=\"#Post-Excerpt\" class=\"headerlink\" title=\"Post Excerpt\"></a>Post Excerpt</h2><p>text ท่ีวางก่อนแท็ก <code>&lt;!-- more --&gt;</code> จะถือเป็นส่วนที่ตัดตอนมาจากโพสต์</p>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class=\"line\">&lt;!-- more --&gt;</span><br><span class=\"line\">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6b4007vkoeo070tiwif",
				"title": "Troubleshooting",
				"markdown": "ถ้าหากว่าคุณพบเจอปัญหาเมื่อใช้  hexo   \nท่ีนี่มีตารางของวิธีการแก้ปัญหาที่พบเจอบ่อยครั้ง ถ้าเกิดปัญหาท่ีไซตืนี้ไม่มี \nลองค้นหาวิธีการแก้ไขปัญหาใน  [GitHub](https://github.com/hexojs/hexo/issues) \nหรือ  [Google Group](https://groups.google.com/group/hexo)\n\n## YAML Parsing Error\n\n``` plain\nJS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:\n      last_updated: Last updated: %s\n```\n\nปกคลุม string ด้วย quotation ถ้ามันมีเครื่องหมาย (:) อยู่ด้วย\n\n``` plain\nJS-YAML: bad indentation of a mapping entry at line 18, column 31:\n      last_updated:\"Last updated: %s\"\n```\n\nทำให้แน่ใจว่าคุณกำลังใช้ soft tab และเพิ่ม space หลังเครื่องหมาย (:)\n\nสำหรับข้อมูลเพิ่มเติม ไปดูท่ี [YAML Spec](http://www.yaml.org/spec/1.2/spec.html)\n\n## EMFILE Error\n\n``` plain\nError: EMFILE, too many open files\n```\n\nแม้ว่า Node.js มี I/O ท่ี non-blocking ปริมาณมากท่ีสุดของ I/O ท่ี synchronous\n ยังจำกัดอยู่เนื่องด้วยระบบของ hexo  คุณอาจจะพบเจอข้อผิดพลาดท่ีเป็น EMFILE \n error ในเมื่อลอง generate ไฟล์เป็นจำนวนมาก \n คุณอาจจะลองรันคำสั่งต่อไปเพื่อเพิ่มจำนวนของ I/O operation ท่ี synchronous \n และถูกอนุญาตแล้ว\n\n``` bash\n$ ulimit -n 10000\n```\n\n## Process Out of Memory\n\nเมื่อคุณพบข้อผิดพลาดนี้ในช่วง generation:\n```\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory\n```\n\nคุณเพิ่มขนาด heap memory ของ  Node.js ได้ด้วยการเปลี่ยนบรรทัดแรกของ `hexo-cli` (หาไฟล์นี้ได้ด้วยคำสั่ง `which hexo`) \n```\n#!/usr/bin/env node --max_old_space_size=8192\n```\n\n[Out of memory while generating a huge blog · Issue #1735 · hexojs/hexo](https://github.com/hexojs/hexo/issues/1735)\n\n## Git Deployment Problems\n\n### RPC failed\n``` plain\nerror: RPC failed; result=22, HTTP code = 403\n\nfatal: 'username.github.io' does not appear to be a git repository\n```\n\nคุณต้องตรวจให้แน่ใจว่าได้ตั้งค่า git อย่างถูกต้อง([set up git](https://help.github.com/articles/set-up-git)) \nในคอม หรือลองใช้ URL ของ HTTPS repository แทน\n\n\n### Error: ENOENT: no such file or directory\nถ้าคุณพบข้อผิดพลาดท่ีว่า `Error: ENOENT: no such file or directory` \nเหตุผลส่วนใหญ่จะเป็นการเขียนผิดอักษรตัวใหญ่กับตัวเล็กในแท็ก \nประเภทหรือชื่อไฟล์ของคุณ git ไม่สามารถ merge การเปลี่ยนแปลงนี้ได้โดยอัตโนมัติ \nจึงทำให้การบวนการ automatic branching ถูกหยุดไป\n\nเพื่อแก้ไขข้อผิดพลาดนี้ ลองทำตามขั้นตอนต่อไปได้:\n1. Check every tag's and category's case and make sure they are the same.\n1. Commit\n1. Clean and build: `./node_modules/.bin/hexo clean && ./node_modules/.bin/hexo generate`\n1. Manually copy the public folder to your desktop\n1. Switch branch from your master branch to your deployment branch locally\n1. Copy the contents of the public folder from your desktop into the deployment branch\n1. Commit. You should see any merge conflicts appear that you can manually resolve.\n1. Switch back to your master branch and deploy normally: `./node_modules/.bin/hexo deploy`\n\n## Server Problems\n\n``` plain\nError: listen EADDRINUSE\n```\n\nคุณอาจจะเปิด hexo server มากกว่าหนึ่งตัวในขณะเดียวกัน หรือแอปอื่นกำลังใช้ \nport เดียวกัน สำหรับการแก้ไขเรื่องนี้ลองแก้ไขการตั้งค่าของ \n`port`หรือเปิดเซร์ฟเวอร์ hexo ใน port ท่ีตั้งค่าโดยแท็ก`-p`\n\n``` bash\n$ hexo server -p 5000\n```\n\n## Plugin Installation Problems\n\n``` plain\nnpm ERR! node-waf configure build\n```\n\nข้อผิดำพลาดนี้เกิดขึ้นเมื่อคุณลองใช้ปลั๊กอินท่ีเขียนด้วยภาษา C, C++ หรือ \nภาษาอื่นๆ ท่ีไม้ใช่ javascript คุณต้องทำให้แน่ใจว่าได้ติดตั้ง compiler \nท่ีถูกต้องแล้วในคอม\n\n## Error with DTrace (Mac OS X)\n\n```plain\n{ [Error: Cannot find module './build/Release/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/default/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/Debug/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n```\n\nการติดตั้ง DTrace อาจจะพบ issue บ้าง กรุณาใช้คำสั่งต่อไป:\n```sh\n$ npm install hexo --no-optional\n```\nสำหรับข้อมูลเพิ่มเติม ไปดูท่ี [#1326](https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796)\n\n## Iterate Data Model on Jade or Swig\n\nhexo ใช้ [Warehouse] เป็นแบบจำลองข้อมูล เนื้องจากว่ามันไม่ใช่ array ก็เลยคุณต้องเปลี่ยนจาก object ไปเป็น iterable\n\n```\n{% for post in site.posts.toArray() %}\n{% endfor %}\n```\n\n## Data Not Updated\n\ndata บางอย่างอัพเดทไม่ได้ หรือไฟล์ท่ี generate \nใหม่นั้นเหมือกับไฟล์ของเวอร์ชั่นล่าสุด ถ้าเป็นอย่างนี้ กรุณาเคลีย cache \nและลองอีกครั้ง\n``` bash\n$ hexo clean\n```\n\n## No command is executed\n\nุถ้าคุณไม่สามารถรันคำสั่งนอกจาก `help` `init` และ  `version` \nและผลท่ีส่งกลับจากคำสั่งนั้นมีแต่เนื้อหาของ `hexo help` \nปัญหานี้อาจเกิดจากการขาดแคลน  `hexo` ในไฟล์ `package.json`:\n```json\n{\n  \"hexo\": {\n    \"version\": \"3.2.2\"\n  }\n}\n```\n\n## Escape Contents\n\nhexo ใช้ [Nunjucks] เพื่อ render โพสต์ (ในเวอร์ชั่นเก่าใช้ [Swig] ซึ่งมี \nsyntax เหมือนกัน) เนื้อหาที่ห่อด้วย `{% raw %}{{ }}{% endraw %}` หรือ `{% raw \n%}{% %}{% endraw %}` อาจจะถูก parse ไม่ถูกต้องและเกิดปัญหาบ้าง \nเพื่อป้องกันเรื่องนี้เกิดขึ้น คุณสามารถติดตั้งปลั๊กอินแท็ก `raw` \nและห่อเนื้อหาท่ีอาจจะถูก parse ไม่ถูกต้องนั้นด้วยแท็กนี้\n\n```\n{% raw %}\nHello {{ sensitive }}\n{% endraw %}\n```\n\n## ENOSPC Error (Linux)\n\nบางทีเมื่อรันคำสั่ง `$ hexo server` ผลท่ีส่งกลับมาเป็นข้อผิดพลาด:\n```\nError: watch ENOSPC ...\n```\nข้อผิดพลาดนี้แก้ไขได้โดยคำสั่ง `$ nom dedupe` \nถ้าคำสั่งนี้แก้ไขข้อผิดพลาดนี้ไม่ได้ ลองรันคำสั่งต่อไปใน console ของ Linux:\n```\n$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\nการรันคำสั่งดังกล่าวจะเพิ่มจำนวนไฟล์ท่ี hexo สามารถเฝ้าดูได้\n\n## EMPERM Error (Windows Subsystem for Linux)\n\nเมื่อรัน `$ hexo server` ในสภาพแวดล้อมของ BashOnWindows \nจะมีข้อผิดพลาดต่อไปส่งกลับมา:\n```\nError: watch /path/to/hexo/theme/ EMPERM\n```\nท่ีน่าเสียดายคือ WSL ไม่สนับสนุน watcher ของระบบไฟล์ ดังนั้น \nคุณลักษณะการเฝ้าดูการเปลี่ยนแปลงไฟล์โดยไม่ต้องเปิดเชร์ฟเวอร์ใหม่นั้นของ hexo \nจะไม่สามารถใช้ประโยชน์ได้ แต่คุณยังรันเซร์ฟเวอร์ได้ภายในสภาพแวดล้อม WSL โดย \ngenerate ไฟล์ก่อนแลัวรันเซร์ฟเวอร์แบบคงที่:\n``` sh\n$ hexo generate\n$ hexo server -s\n```\nนี่คือ [a known BashOnWindows issue](https://github.com/Microsoft/BashOnWindows/issues/216) \nและในวันท่ี 15 สิงหาคมของปี 2559 ทีมงาน Windows \nกล่าวว่าจะมุ่งแก้ไขเรื่องนี้ให้ได้ \nคุณสามารถรู้ความคืบหน้าของการแก้ไขเรื่องนี้และยกระดับ priority ในเพจ [the issue's UserVoice suggestion page](https://wpdev.uservoice.com/forums/266908-command-prompt-console-bash-on-ubuntu-on-windo/suggestions/13469097-support-for-filesystem-watchers-like-inotify)\n\n## Template render error\n\nบางทีการรันคำสั่ง`$ hexo generate` จะส่ง error กลับ:\n```\nFATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html\nTemplate render error: (unknown path)\n```\nถ้าเป็นอย่างนี้ หมายความว่ามีคำบางคำท่ีอ่านไม่ออกในไฟล์ เหตุผลท่ีก่อให้เกิดเรื่องนี้คือสองอย่าง อย่างแรกคือ page/post ใหม่ของคุณ อย่างท่ีสองคือ `_config.yml`  ในไฟล์ `_config.yml` อย่่าลืมเพิ่ม whitespace ก่อนไฟล์ท่ีเป็น hash ท่ีนี่มีเพจวิกิเกี่ยวกับ [YAML](https://en.wikipedia.org/wiki/YAML)\n\n\n\nตัวท่ีผิดพลาด:\n```\nplugins:\n- hexo-generator-feed\n- hexo-generator-sitemap\n```\nตัวท่ีถูกต้อง:\n```\nplugins:\n  - hexo-generator-feed\n  - hexo-generator-sitemap\n```\n\n[Warehouse]: https://github.com/hexojs/warehouse\n[Swig]: http://paularmstrong.github.io/swig/\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n",
				"html": "<p>ถ้าหากว่าคุณพบเจอปัญหาเมื่อใช้  hexo<br>ท่ีนี่มีตารางของวิธีการแก้ปัญหาที่พบเจอบ่อยครั้ง ถ้าเกิดปัญหาท่ีไซตืนี้ไม่มี<br>ลองค้นหาวิธีการแก้ไขปัญหาใน  <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a><br>หรือ  <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"noopener\">Google Group</a></p>\n<h2 id=\"YAML-Parsing-Error\"><a href=\"#YAML-Parsing-Error\" class=\"headerlink\" title=\"YAML Parsing Error\"></a>YAML Parsing Error</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:</span><br><span class=\"line\">      last_updated: Last updated: %s</span><br></pre></td></tr></table></figure>\n<p>ปกคลุม string ด้วย quotation ถ้ามันมีเครื่องหมาย (:) อยู่ด้วย</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">JS-YAML: bad indentation of a mapping entry at line 18, column 31:</span><br><span class=\"line\">      last_updated:&quot;Last updated: %s&quot;</span><br></pre></td></tr></table></figure>\n<p>ทำให้แน่ใจว่าคุณกำลังใช้ soft tab และเพิ่ม space หลังเครื่องหมาย (:)</p>\n<p>สำหรับข้อมูลเพิ่มเติม ไปดูท่ี <a href=\"http://www.yaml.org/spec/1.2/spec.html\" target=\"_blank\" rel=\"noopener\">YAML Spec</a></p>\n<h2 id=\"EMFILE-Error\"><a href=\"#EMFILE-Error\" class=\"headerlink\" title=\"EMFILE Error\"></a>EMFILE Error</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: EMFILE, too many open files</span><br></pre></td></tr></table></figure>\n<p>แม้ว่า Node.js มี I/O ท่ี non-blocking ปริมาณมากท่ีสุดของ I/O ท่ี synchronous<br> ยังจำกัดอยู่เนื่องด้วยระบบของ hexo  คุณอาจจะพบเจอข้อผิดพลาดท่ีเป็น EMFILE<br> error ในเมื่อลอง generate ไฟล์เป็นจำนวนมาก<br> คุณอาจจะลองรันคำสั่งต่อไปเพื่อเพิ่มจำนวนของ I/O operation ท่ี synchronous<br> และถูกอนุญาตแล้ว</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ulimit</span> -n 10000</span><br></pre></td></tr></table></figure>\n<h2 id=\"Process-Out-of-Memory\"><a href=\"#Process-Out-of-Memory\" class=\"headerlink\" title=\"Process Out of Memory\"></a>Process Out of Memory</h2><p>เมื่อคุณพบข้อผิดพลาดนี้ในช่วง generation:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory</span><br></pre></td></tr></table></figure></p>\n<p>คุณเพิ่มขนาด heap memory ของ  Node.js ได้ด้วยการเปลี่ยนบรรทัดแรกของ <code>hexo-cli</code> (หาไฟล์นี้ได้ด้วยคำสั่ง <code>which hexo</code>)<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env node --max_old_space_size=8192</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/hexojs/hexo/issues/1735\" target=\"_blank\" rel=\"noopener\">Out of memory while generating a huge blog · Issue #1735 · hexojs/hexo</a></p>\n<h2 id=\"Git-Deployment-Problems\"><a href=\"#Git-Deployment-Problems\" class=\"headerlink\" title=\"Git Deployment Problems\"></a>Git Deployment Problems</h2><h3 id=\"RPC-failed\"><a href=\"#RPC-failed\" class=\"headerlink\" title=\"RPC failed\"></a>RPC failed</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">error: RPC failed; result=22, HTTP code = 403</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: &apos;username.github.io&apos; does not appear to be a git repository</span><br></pre></td></tr></table></figure>\n<p>คุณต้องตรวจให้แน่ใจว่าได้ตั้งค่า git อย่างถูกต้อง(<a href=\"https://help.github.com/articles/set-up-git\" target=\"_blank\" rel=\"noopener\">set up git</a>)<br>ในคอม หรือลองใช้ URL ของ HTTPS repository แทน</p>\n<h3 id=\"Error-ENOENT-no-such-file-or-directory\"><a href=\"#Error-ENOENT-no-such-file-or-directory\" class=\"headerlink\" title=\"Error: ENOENT: no such file or directory\"></a>Error: ENOENT: no such file or directory</h3><p>ถ้าคุณพบข้อผิดพลาดท่ีว่า <code>Error: ENOENT: no such file or directory</code><br>เหตุผลส่วนใหญ่จะเป็นการเขียนผิดอักษรตัวใหญ่กับตัวเล็กในแท็ก<br>ประเภทหรือชื่อไฟล์ของคุณ git ไม่สามารถ merge การเปลี่ยนแปลงนี้ได้โดยอัตโนมัติ<br>จึงทำให้การบวนการ automatic branching ถูกหยุดไป</p>\n<p>เพื่อแก้ไขข้อผิดพลาดนี้ ลองทำตามขั้นตอนต่อไปได้:</p>\n<ol>\n<li>Check every tag’s and category’s case and make sure they are the same.</li>\n<li>Commit</li>\n<li>Clean and build: <code>./node_modules/.bin/hexo clean &amp;&amp; ./node_modules/.bin/hexo generate</code></li>\n<li>Manually copy the public folder to your desktop</li>\n<li>Switch branch from your master branch to your deployment branch locally</li>\n<li>Copy the contents of the public folder from your desktop into the deployment branch</li>\n<li>Commit. You should see any merge conflicts appear that you can manually resolve.</li>\n<li>Switch back to your master branch and deploy normally: <code>./node_modules/.bin/hexo deploy</code></li>\n</ol>\n<h2 id=\"Server-Problems\"><a href=\"#Server-Problems\" class=\"headerlink\" title=\"Server Problems\"></a>Server Problems</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: listen EADDRINUSE</span><br></pre></td></tr></table></figure>\n<p>คุณอาจจะเปิด hexo server มากกว่าหนึ่งตัวในขณะเดียวกัน หรือแอปอื่นกำลังใช้<br>port เดียวกัน สำหรับการแก้ไขเรื่องนี้ลองแก้ไขการตั้งค่าของ<br><code>port</code>หรือเปิดเซร์ฟเวอร์ hexo ใน port ท่ีตั้งค่าโดยแท็ก<code>-p</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<h2 id=\"Plugin-Installation-Problems\"><a href=\"#Plugin-Installation-Problems\" class=\"headerlink\" title=\"Plugin Installation Problems\"></a>Plugin Installation Problems</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm ERR! node-waf configure build</span><br></pre></td></tr></table></figure>\n<p>ข้อผิดำพลาดนี้เกิดขึ้นเมื่อคุณลองใช้ปลั๊กอินท่ีเขียนด้วยภาษา C, C++ หรือ<br>ภาษาอื่นๆ ท่ีไม้ใช่ javascript คุณต้องทำให้แน่ใจว่าได้ติดตั้ง compiler<br>ท่ีถูกต้องแล้วในคอม</p>\n<h2 id=\"Error-with-DTrace-Mac-OS-X\"><a href=\"#Error-with-DTrace-Mac-OS-X\" class=\"headerlink\" title=\"Error with DTrace (Mac OS X)\"></a>Error with DTrace (Mac OS X)</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/default/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Debug/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br></pre></td></tr></table></figure>\n<p>การติดตั้ง DTrace อาจจะพบ issue บ้าง กรุณาใช้คำสั่งต่อไป:<br><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo --no-optional</span><br></pre></td></tr></table></figure></p>\n<p>สำหรับข้อมูลเพิ่มเติม ไปดูท่ี <a href=\"https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796\" target=\"_blank\" rel=\"noopener\">#1326</a></p>\n<h2 id=\"Iterate-Data-Model-on-Jade-or-Swig\"><a href=\"#Iterate-Data-Model-on-Jade-or-Swig\" class=\"headerlink\" title=\"Iterate Data Model on Jade or Swig\"></a>Iterate Data Model on Jade or Swig</h2><p>hexo ใช้ <a href=\"https://github.com/hexojs/warehouse\" target=\"_blank\" rel=\"noopener\">Warehouse</a> เป็นแบบจำลองข้อมูล เนื้องจากว่ามันไม่ใช่ array ก็เลยคุณต้องเปลี่ยนจาก object ไปเป็น iterable</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% for post in site.posts.toArray() %&#125;</span><br><span class=\"line\">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Data-Not-Updated\"><a href=\"#Data-Not-Updated\" class=\"headerlink\" title=\"Data Not Updated\"></a>Data Not Updated</h2><p>data บางอย่างอัพเดทไม่ได้ หรือไฟล์ท่ี generate<br>ใหม่นั้นเหมือกับไฟล์ของเวอร์ชั่นล่าสุด ถ้าเป็นอย่างนี้ กรุณาเคลีย cache<br>และลองอีกครั้ง<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"No-command-is-executed\"><a href=\"#No-command-is-executed\" class=\"headerlink\" title=\"No command is executed\"></a>No command is executed</h2><p>ุถ้าคุณไม่สามารถรันคำสั่งนอกจาก <code>help</code> <code>init</code> และ  <code>version</code><br>และผลท่ีส่งกลับจากคำสั่งนั้นมีแต่เนื้อหาของ <code>hexo help</code><br>ปัญหานี้อาจเกิดจากการขาดแคลน  <code>hexo</code> ในไฟล์ <code>package.json</code>:<br><figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.2.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Escape-Contents\"><a href=\"#Escape-Contents\" class=\"headerlink\" title=\"Escape Contents\"></a>Escape Contents</h2><p>hexo ใช้ <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"noopener\">Nunjucks</a> เพื่อ render โพสต์ (ในเวอร์ชั่นเก่าใช้ <a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"noopener\">Swig</a> ซึ่งมี<br>syntax เหมือนกัน) เนื้อหาที่ห่อด้วย <code>{{ }}</code> หรือ <code>{% %}</code> อาจจะถูก parse ไม่ถูกต้องและเกิดปัญหาบ้าง<br>เพื่อป้องกันเรื่องนี้เกิดขึ้น คุณสามารถติดตั้งปลั๊กอินแท็ก <code>raw</code><br>และห่อเนื้อหาท่ีอาจจะถูก parse ไม่ถูกต้องนั้นด้วยแท็กนี้</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">Hello &#123;&#123; sensitive &#125;&#125;</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ENOSPC-Error-Linux\"><a href=\"#ENOSPC-Error-Linux\" class=\"headerlink\" title=\"ENOSPC Error (Linux)\"></a>ENOSPC Error (Linux)</h2><p>บางทีเมื่อรันคำสั่ง <code>$ hexo server</code> ผลท่ีส่งกลับมาเป็นข้อผิดพลาด:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: watch ENOSPC ...</span><br></pre></td></tr></table></figure></p>\n<p>ข้อผิดพลาดนี้แก้ไขได้โดยคำสั่ง <code>$ nom dedupe</code><br>ถ้าคำสั่งนี้แก้ไขข้อผิดพลาดนี้ไม่ได้ ลองรันคำสั่งต่อไปใน console ของ Linux:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure></p>\n<p>การรันคำสั่งดังกล่าวจะเพิ่มจำนวนไฟล์ท่ี hexo สามารถเฝ้าดูได้</p>\n<h2 id=\"EMPERM-Error-Windows-Subsystem-for-Linux\"><a href=\"#EMPERM-Error-Windows-Subsystem-for-Linux\" class=\"headerlink\" title=\"EMPERM Error (Windows Subsystem for Linux)\"></a>EMPERM Error (Windows Subsystem for Linux)</h2><p>เมื่อรัน <code>$ hexo server</code> ในสภาพแวดล้อมของ BashOnWindows<br>จะมีข้อผิดพลาดต่อไปส่งกลับมา:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: watch /path/to/hexo/theme/ EMPERM</span><br></pre></td></tr></table></figure></p>\n<p>ท่ีน่าเสียดายคือ WSL ไม่สนับสนุน watcher ของระบบไฟล์ ดังนั้น<br>คุณลักษณะการเฝ้าดูการเปลี่ยนแปลงไฟล์โดยไม่ต้องเปิดเชร์ฟเวอร์ใหม่นั้นของ hexo<br>จะไม่สามารถใช้ประโยชน์ได้ แต่คุณยังรันเซร์ฟเวอร์ได้ภายในสภาพแวดล้อม WSL โดย<br>generate ไฟล์ก่อนแลัวรันเซร์ฟเวอร์แบบคงที่:<br><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">$ hexo server -s</span><br></pre></td></tr></table></figure></p>\n<p>นี่คือ <a href=\"https://github.com/Microsoft/BashOnWindows/issues/216\" target=\"_blank\" rel=\"noopener\">a known BashOnWindows issue</a><br>และในวันท่ี 15 สิงหาคมของปี 2559 ทีมงาน Windows<br>กล่าวว่าจะมุ่งแก้ไขเรื่องนี้ให้ได้<br>คุณสามารถรู้ความคืบหน้าของการแก้ไขเรื่องนี้และยกระดับ priority ในเพจ <a href=\"https://wpdev.uservoice.com/forums/266908-command-prompt-console-bash-on-ubuntu-on-windo/suggestions/13469097-support-for-filesystem-watchers-like-inotify\" target=\"_blank\" rel=\"noopener\">the issue’s UserVoice suggestion page</a></p>\n<h2 id=\"Template-render-error\"><a href=\"#Template-render-error\" class=\"headerlink\" title=\"Template render error\"></a>Template render error</h2><p>บางทีการรันคำสั่ง<code>$ hexo generate</code> จะส่ง error กลับ:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class=\"line\">Template render error: (unknown path)</span><br></pre></td></tr></table></figure></p>\n<p>ถ้าเป็นอย่างนี้ หมายความว่ามีคำบางคำท่ีอ่านไม่ออกในไฟล์ เหตุผลท่ีก่อให้เกิดเรื่องนี้คือสองอย่าง อย่างแรกคือ page/post ใหม่ของคุณ อย่างท่ีสองคือ <code>_config.yml</code>  ในไฟล์ <code>_config.yml</code> อย่่าลืมเพิ่ม whitespace ก่อนไฟล์ท่ีเป็น hash ท่ีนี่มีเพจวิกิเกี่ยวกับ <a href=\"https://en.wikipedia.org/wiki/YAML\" target=\"_blank\" rel=\"noopener\">YAML</a></p>\n<p>ตัวท่ีผิดพลาด:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">plugins:</span><br><span class=\"line\">- hexo-generator-feed</span><br><span class=\"line\">- hexo-generator-sitemap</span><br></pre></td></tr></table></figure></p>\n<p>ตัวท่ีถูกต้อง:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">plugins:</span><br><span class=\"line\">  - hexo-generator-feed</span><br><span class=\"line\">  - hexo-generator-sitemap</span><br></pre></td></tr></table></figure></p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68t0029koeox2k1l823",
				"title": "Permalinks",
				"markdown": "`_config.yml` 파일 또는 각 포스트의 front-matter에 permalink의 형식을 지정할 수 있습니다.\n\n### 변수\n\n당신은 아래의 변수들은 물론 permalink의 모든 속성을 다 사용할 수 있습니다.\n\n변수 | 설명\n--- | ---\n`:year` | 포스트를 배포한 연도 (4-digit)\n`:month` | 포스트를 배포한 월 (2-digit)\n`:i_month` | 포스트를 배포한 월 (앞에 붙는 0은 생략)\n`:day` | 포스트를 배포한 날 (2-digit)\n`:i_day` | 포스트를 배포한 날 (앞에 붙는 0은 생략)\n`:title` | 파일명\n`:id` | 포스트 ID\n`:category` | 포스트가 속한 카테고리. 지정하지 않으면 `default_category` 값을 사용합니다.\n\nPermalink 내의 각 변수의 기본 값을 `permalink_defaults` 설정을 통해 정의할 수 있습니다.\n\n``` yaml\npermalink_defaults:\n  lang: en\n```\n\n### 예시\n\n`source/_posts` 내에 `hello-world.md`라는 포스트가 아래와 같이 있다고 하겠습니다.\n\n``` yaml\ntitle: Hello World\ndate: 2013-07-14 17:01:34\ncategories:\n- foo\n- bar\n```\n\n설정 | 결과\n--- | ---\n`:year/:month/:day/:title/` | 2013/07/14/hello-world\n`:year-:month-:day-:title.html` | 2013-07-14-hello-world.html\n`:category/:title` | foo/bar/hello-world\n\n### 다국어 지원\n\n다국어 지원 사이트를 생성하기 위해, `new_post_name`과 `permalink`를 다음과 같이 수정해야 합니다.\n\n``` yaml\nnew_post_name: :lang/:title.md\npermalink: :lang/:title/\n```\n\n새 post를 생성할 때, 다음과 같이 저장해야 합니다.\n\n``` bash\n$ hexo new \"Hello World\" --lang tw\n# => source/_posts/tw/Hello-World.md\n```\n\n그리고 URL은 다음과 같아야 합니다.\n\n``` plain\nhttp://localhost:4000/tw/hello-world/\n```\n",
				"html": "<p><code>_config.yml</code> 파일 또는 각 포스트의 front-matter에 permalink의 형식을 지정할 수 있습니다.</p>\n<h3 id=\"변수\"><a href=\"#변수\" class=\"headerlink\" title=\"변수\"></a>변수</h3><p>당신은 아래의 변수들은 물론 permalink의 모든 속성을 다 사용할 수 있습니다.</p>\n<table>\n<thead>\n<tr>\n<th>변수</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year</code></td>\n<td>포스트를 배포한 연도 (4-digit)</td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>포스트를 배포한 월 (2-digit)</td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>포스트를 배포한 월 (앞에 붙는 0은 생략)</td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>포스트를 배포한 날 (2-digit)</td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>포스트를 배포한 날 (앞에 붙는 0은 생략)</td>\n</tr>\n<tr>\n<td><code>:title</code></td>\n<td>파일명</td>\n</tr>\n<tr>\n<td><code>:id</code></td>\n<td>포스트 ID</td>\n</tr>\n<tr>\n<td><code>:category</code></td>\n<td>포스트가 속한 카테고리. 지정하지 않으면 <code>default_category</code> 값을 사용합니다.</td>\n</tr>\n</tbody>\n</table>\n<p>Permalink 내의 각 변수의 기본 값을 <code>permalink_defaults</code> 설정을 통해 정의할 수 있습니다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">permalink_defaults:</span></span><br><span class=\"line\"><span class=\"attr\">  lang:</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h3><p><code>source/_posts</code> 내에 <code>hello-world.md</code>라는 포스트가 아래와 같이 있다고 하겠습니다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"bullet\">-07</span><span class=\"bullet\">-14</span> <span class=\"number\">17</span><span class=\"string\">:01:34</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">foo</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">bar</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>설정</th>\n<th>결과</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year/:month/:day/:title/</code></td>\n<td>2013/07/14/hello-world</td>\n</tr>\n<tr>\n<td><code>:year-:month-:day-:title.html</code></td>\n<td>2013-07-14-hello-world.html</td>\n</tr>\n<tr>\n<td><code>:category/:title</code></td>\n<td>foo/bar/hello-world</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"다국어-지원\"><a href=\"#다국어-지원\" class=\"headerlink\" title=\"다국어 지원\"></a>다국어 지원</h3><p>다국어 지원 사이트를 생성하기 위해, <code>new_post_name</code>과 <code>permalink</code>를 다음과 같이 수정해야 합니다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:lang/:title.md</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:lang/:title/</span></span><br></pre></td></tr></table></figure>\n<p>새 post를 생성할 때, 다음과 같이 저장해야 합니다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"Hello World\"</span> --lang tw</span><br><span class=\"line\"><span class=\"comment\"># =&gt; source/_posts/tw/Hello-World.md</span></span><br></pre></td></tr></table></figure>\n<p>그리고 URL은 다음과 같아야 합니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://localhost:4000/tw/hello-world/</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68u002akoeojskacg9c",
				"title": "Setup",
				"markdown": "Hexo를 설치했다면, 타겟 `<folder>`의 Hexo를 초기화하기 위해 아래의 명령을 수행하세요.\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n초기화가 완료되면 다음과 같은 폴더 구조를 가지게 될 것입니다.\n\n``` plain\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\n이 파일은 [환경설정](configuration.html) 파일입니다. 대부분의 설정을 여기서 할 수 있습니다.\n\n### package.json\n\n어플리케이션 데이터 파일입니다. [EJS](http://embeddedjs.com/), [Stylus](http://learnboost.github.io/stylus/), [Markdown](http://daringfireball.net/projects/markdown/) 렌더러들이 기본으로 설치됩니다. 원한다면, 나중에 당신이 제거할 수도 있습니다.\n\n``` json package.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### scaffolds\n\n[Scaffold](writing.html#Scaffolds) 폴더입니다. 새로운 포스트를 생성할 때, Hexo는 scaffold를 기준으로 새 파일을 생성합니다.\n\n### source\n\n소스 폴더입니다. 당신의 웹 사이트 컨텐츠들을 위치시키는 곳 입니다. Hexo는 숨겨진 파일과 `_` (언더스코어)로 시작하는 파일 및 폴더들을 무시합니다. - `_posts` 폴더는 제외하고 말이죠. 렌더링이 가능한 파일들(예. Markdown, HTML)은 처리된 후 `public` 폴더로 들어가게 됩니다. 그 동안 다른 파일들은 단순히 복사됩니다.\n\n### themes\n\n[테마](themes.html) 폴더입니다. Hexo는 테마와 컨텐츠를 혼합하여 정적인 웹 사이트를 생성합니다.\n",
				"html": "<p>Hexo를 설치했다면, 타겟 <code>&lt;folder&gt;</code>의 Hexo를 초기화하기 위해 아래의 명령을 수행하세요.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>초기화가 완료되면 다음과 같은 폴더 구조를 가지게 될 것입니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>이 파일은 <a href=\"configuration.html\">환경설정</a> 파일입니다. 대부분의 설정을 여기서 할 수 있습니다.</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>어플리케이션 데이터 파일입니다. <a href=\"http://embeddedjs.com/\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"http://learnboost.github.io/stylus/\" target=\"_blank\" rel=\"noopener\">Stylus</a>, <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a> 렌더러들이 기본으로 설치됩니다. 원한다면, 나중에 당신이 제거할 수도 있습니다.</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-site\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"private\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"hexo\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-archive\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-category\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-index\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-tag\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-ejs\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-stylus\"</span>: <span class=\"string\">\"^0.2.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-marked\"</span>: <span class=\"string\">\"^0.2.4\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-server\"</span>: <span class=\"string\">\"^0.1.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p><a href=\"writing.html#Scaffolds\">Scaffold</a> 폴더입니다. 새로운 포스트를 생성할 때, Hexo는 scaffold를 기준으로 새 파일을 생성합니다.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>소스 폴더입니다. 당신의 웹 사이트 컨텐츠들을 위치시키는 곳 입니다. Hexo는 숨겨진 파일과 <code>_</code> (언더스코어)로 시작하는 파일 및 폴더들을 무시합니다. - <code>_posts</code> 폴더는 제외하고 말이죠. 렌더링이 가능한 파일들(예. Markdown, HTML)은 처리된 후 <code>public</code> 폴더로 들어가게 됩니다. 그 동안 다른 파일들은 단순히 복사됩니다.</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p><a href=\"themes.html\">테마</a> 폴더입니다. Hexo는 테마와 컨텐츠를 혼합하여 정적인 웹 사이트를 생성합니다.</p>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y68u002bkoeodqhrqwkh",
				"title": "Plugins",
				"markdown": "Hexo는 파워풀한 플러그인 시스템을 가지고 있습니다. 코어 모듈의 소스 코드를 수정하지 않고도 쉽게 확장 기능을 구현할 수 있습니다. 아래에서 두 가지 종류의 Hexo 플러그인을 소개해 드립니다.\n\n### 스크립트\n\n플러그인이 상대적으로 간단한 것이라면, 스크립트를 사용하는 것을 추천 합니다. `scripts` 폴더에 JavaScript 파일을 넣어두기만 하면 Hexo가 초기화 과정에서 알아서 로딩해 갑니다.\n\n### 플러그인\n\n코드가 복잡하거나 NPM registry에 배포하기를 원한다면, 플러그인을 사용하는 것을 추천 드립니다. 우선, `node_modules` 폴더 내에 새 폴더를 생성하세요. 폴더의 이름은 `hexo-`로 시작해야 합니다. 그렇지 않다면 Hexo는 그 폴더를 무시합니다.\n\n새 폴더는 반드시 다음 두 개의 파일을 가지고 있어야 합니다. 하나는 실제 JavaScript 코드이며, 하나는 플러그인의 목적 및 의존성에 대해 기술한 `package.json` 파일입니다.\n\n``` plain\n.\n├── index.js\n└── package.json\n```\n\n`package.json` 파일에는 최소한 `name`, `version`, `main` 세 가지 항목은 있어야 합니다.\n\n``` json package.json\n{\n  \"name\": \"hexo-my-plugin\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index\"\n}\n```\n\n또한, 루트의 `package.json`에도 당신이 구현한 플러그인의 의존성 대한 정보를 넣어야 합니다. 그래야 Hexo가 당신의 hexo 인스턴스를 발견하고 로딩할 수 있습니다.\n\n### 툴\n\n당신은 Hexo에서 빠른 개발을 위해 제공하는 공식 툴을 사용할 수 있습니다.\n\n- [hexo-fs]：File IO\n- [hexo-util]：Utilities\n- [hexo-i18n]：Localization (i18n)\n- [hexo-pagination]：Generate pagination data\n\n### 배포\n\n플러그인의 구현이 완료되면, 다른 사람들이 플러그인을 사용할 수 있도록 [플러그인 목록](/plugins)에 배포하는 것을 고려해야 합니다. 당신의 플러그인을 배포하는 것은 [문서를 업데이트 하는 것](contributing.html#Updating_Documentation)과 매우 유사합니다.\n\n1. Fork [hexojs/site]\n2. 저장소를 당신의 컴퓨터에 clone하고 종속성이 있는 것들을 모두 설치합니다.\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. `source/_data/plugins.yml` 파일을 수정하여 당신의 플러그인을 추가합니다.\n\n    {% code %}\n    - name: hexo-server\n      description: Server module for Hexo.\n      link: https://github.com/hexojs/hexo-server\n      tags:\n        - official\n        - server\n        - console\n    {% endcode %}\n\n4. Branch에 push합니다.\n5. Pull request를 생성하여 변경사항에 대해 기술합니다.\n\n[hexo-fs]: https://github.com/hexojs/hexo-fs\n[hexo-util]: https://github.com/hexojs/hexo-util\n[hexo-i18n]: https://github.com/hexojs/hexo-i18n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n[hexojs/site]: https://github.com/hexojs/site\n",
				"html": "<p>Hexo는 파워풀한 플러그인 시스템을 가지고 있습니다. 코어 모듈의 소스 코드를 수정하지 않고도 쉽게 확장 기능을 구현할 수 있습니다. 아래에서 두 가지 종류의 Hexo 플러그인을 소개해 드립니다.</p>\n<h3 id=\"스크립트\"><a href=\"#스크립트\" class=\"headerlink\" title=\"스크립트\"></a>스크립트</h3><p>플러그인이 상대적으로 간단한 것이라면, 스크립트를 사용하는 것을 추천 합니다. <code>scripts</code> 폴더에 JavaScript 파일을 넣어두기만 하면 Hexo가 초기화 과정에서 알아서 로딩해 갑니다.</p>\n<h3 id=\"플러그인\"><a href=\"#플러그인\" class=\"headerlink\" title=\"플러그인\"></a>플러그인</h3><p>코드가 복잡하거나 NPM registry에 배포하기를 원한다면, 플러그인을 사용하는 것을 추천 드립니다. 우선, <code>node_modules</code> 폴더 내에 새 폴더를 생성하세요. 폴더의 이름은 <code>hexo-</code>로 시작해야 합니다. 그렇지 않다면 Hexo는 그 폴더를 무시합니다.</p>\n<p>새 폴더는 반드시 다음 두 개의 파일을 가지고 있어야 합니다. 하나는 실제 JavaScript 코드이며, 하나는 플러그인의 목적 및 의존성에 대해 기술한 <code>package.json</code> 파일입니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── index.js</span><br><span class=\"line\">└── package.json</span><br></pre></td></tr></table></figure>\n<p><code>package.json</code> 파일에는 최소한 <code>name</code>, <code>version</code>, <code>main</code> 세 가지 항목은 있어야 합니다.</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-my-plugin\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>또한, 루트의 <code>package.json</code>에도 당신이 구현한 플러그인의 의존성 대한 정보를 넣어야 합니다. 그래야 Hexo가 당신의 hexo 인스턴스를 발견하고 로딩할 수 있습니다.</p>\n<h3 id=\"툴\"><a href=\"#툴\" class=\"headerlink\" title=\"툴\"></a>툴</h3><p>당신은 Hexo에서 빠른 개발을 위해 제공하는 공식 툴을 사용할 수 있습니다.</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-fs\" target=\"_blank\" rel=\"noopener\">hexo-fs</a>：File IO</li>\n<li><a href=\"https://github.com/hexojs/hexo-util\" target=\"_blank\" rel=\"noopener\">hexo-util</a>：Utilities</li>\n<li><a href=\"https://github.com/hexojs/hexo-i18n\" target=\"_blank\" rel=\"noopener\">hexo-i18n</a>：Localization (i18n)</li>\n<li><a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"noopener\">hexo-pagination</a>：Generate pagination data</li>\n</ul>\n<h3 id=\"배포\"><a href=\"#배포\" class=\"headerlink\" title=\"배포\"></a>배포</h3><p>플러그인의 구현이 완료되면, 다른 사람들이 플러그인을 사용할 수 있도록 <a href=\"/plugins\">플러그인 목록</a>에 배포하는 것을 고려해야 합니다. 당신의 플러그인을 배포하는 것은 <a href=\"contributing.html#Updating_Documentation\">문서를 업데이트 하는 것</a>과 매우 유사합니다.</p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"noopener\">hexojs/site</a></li>\n<li><p>저장소를 당신의 컴퓨터에 clone하고 종속성이 있는 것들을 모두 설치합니다.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class=\"line\">$ cd site</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>source/_data/plugins.yml</code> 파일을 수정하여 당신의 플러그인을 추가합니다.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">- name: hexo-server</span><br><span class=\"line\">  description: Server module for Hexo.</span><br><span class=\"line\">  link: https://github.com/hexojs/hexo-server</span><br><span class=\"line\">  tags:</span><br><span class=\"line\">    - official</span><br><span class=\"line\">    - server</span><br><span class=\"line\">    - console</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Branch에 push합니다.</p>\n</li>\n<li>Pull request를 생성하여 변경사항에 대해 기술합니다.</li>\n</ol>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6bc007zkoeof8ipwbnl",
				"title": "Helpers",
				"markdown": "Helper는 템플릿에 정보(snippet)를 쉽게 삽입할 수 있도록 도와줍니다. 소스 파일에서는 Helper를 사용할 수 없습니다.\n\n## URL\n\n### url_for\n\n루트 경로를 포함한 url을 반환합니다. Hexo 2.7부터 `config.root + path` 대신 이 helper를 사용할 수 있습니다.\n\n``` js\n<%- url_for(path) %>\n```\n\n### relative_url\n\n`from`부터 `to`까지의 상대 경로를 반환합니다.\n\n``` js\n<%- relative_url(from, to) %>\n```\n\n### gravatar\n\nGravatar 이미지를 삽입합니다.\n[options] 파라미터를 지정하지 않은 경우, 기본 값이 적용됩니다. [options] 파라미터를 지정할 경우 숫자로 크기를 지정하여 Gravatar에 전달할 수 있습니다. 또 다른 방법으로, object를 설정할 경우 Gravatar를 위한 query string으로 변환됩니다.\n\n``` js\n<%- gravatar(email, [options]);\n```\n\n**예시:**\n\n``` js\n<%- gravatar('a@abc.com') %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787\n\n<%- gravatar('a@abc.com', 40) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40\n\n<%- gravatar('a@abc.com' {s: 40, d: 'http://example.com/image.png'}) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&d=http%3A%2F%2Fexample.com%2Fimage.png\n```\n\n## HTML Tags\n\n### css\n\nCSS 파일들을 불러옵니다. `path`에는 문자열(string) 또는 배열(array)을 사용할 수 있습니다. 만약 `path`가 `/` 또는 프로토콜명으로 시작하지 않는다면, 루트 URL이 접두어로 붙습니다. `path` 뒤에 `.css` 파일을 기입하지 않으면 자동으로 추가합니다.\n\n``` js\n<%- css(path, ...) %>\n```\n\n**예시:**\n\n``` js\n<%- css('style.css') %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n\n<%- css(['style.css', 'screen.css']) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n// <link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\">\n```\n\n### js\n\nJavaScript 파일들을 불러옵니다. `path`에는 문자열(string) 또는 배열(array)을 사용할 수 있습니다. 만약 `path`가 `/` 또는 프로토콜명으로 시작하지 않는다면, 루트 URL이 접두어로 붙습니다. `path` 뒤에 `.js` 파일을 기입하지 않으면 자동으로 추가합니다.\n\n``` js\n<%- js(path, ...) %>\n```\n\n**예시:**\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n\n<%- js(['script.js', 'gallery.js']) %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n// <script type=\"text/javascript\" src=\"/gallery.js\"></script>\n```\n\n### link_to\n\n링크를 삽입합니다.\n\n``` js\n<%- link_to(path, [text], [options]) %>\n```\n\n옵션 | 설명 | 기본 값\n--- | --- | ---\n`external` | 링크를 새 탭에 엽니다. | false\n`class` | Class명 |\n`id` | ID |\n\n**예시:**\n\n``` js\n<%- link_to('http://www.google.com') %>\n// <a href=\"http://www.google.com\" title=\"http://www.google.com\">http://www.google.com</a>\n\n<%- link_to('http://www.google.com', 'Google') %>\n// <a href=\"http://www.google.com\" title=\"Google\">Google</a>\n\n<%- link_to('http://www.google.com', 'Google', {external: true}) %>\n// <a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\">Google</a>\n```\n\n### mail_to\n\n메일 링크를 삽입합니다.\n\n``` js\n<%- mail_to(path, [text], [options]) %>\n```\n\n옵션 | 설명\n--- | ---\n`class` | Class명\n`id` | ID\n`subject` | 메일 제목\n`cc` | 참조\n`bcc` | 비밀참조\n`body` | 메일 내용\n\n**예시:**\n\n``` js\n<%- mail_to('a@abc.com') %>\n// <a href=\"mailto:a@abc.com\" title=\"a@abc.com\">a@abc.com</a>\n\n<%- mail_to('a@abc.com', 'Email') %>\n// <a href=\"mailto:a@abc.com\" title=\"Email\">Email</a>\n```\n\n### image_tag\n\n이미지를 삽입합니다.\n\n``` js\n<%- image_tag(path, [options]) %>\n```\n\n옵션 | 설명\n--- | ---\n`alt` | 이미지 대신 표시할 텍스트\n`class` | Class명\n`id` | ID\n`width` | 이미지의 가로 크기\n`height` | 이미지의 세로 크기\n\n### favicon_tag\n\n파비콘을 삽입합니다.\n\n``` js\n<%- favicon_tag(path) %>\n```\n\n### feed_tag\n\nFeed 링크를 삽입합니다.\n\n``` js\n<%- feed_tag(path, [options]) %>\n```\n\n옵션 | 설명 | 기본 값\n--- | --- | ---\n`title` | Feed 제목 |\n`type` | Feed 형식 | atom\n\n### 조건 태그\n\n### is_current\n\n`path`가 현재 페이지의 URL과 동일한지 체크합니다. `strict` 옵션을 사용하면 제한적인 매칭을 활성화 합니다.\n\n``` js\n<%- is_current(path, [strict]) %>\n```\n\n### is_home\n\n현재 페이지가 home 페이지인지 체크합니다.\n\n``` js\n<%- is_home() %>\n```\n\n### is_post\n\n현재 페이지가 포스트인지 체크합니다.\n\n``` js\n<%- is_post() %>\n```\n\n### is_archive\n\n현재 페이지가 아카이브 페이지인지 체크합니다.\n\n``` js\n<%- is_archive() %>\n```\n\n### is_year\n\n현재 페이지가 연간 아카이브 페이지인지 체크합니다.\n\n``` js\n<%- is_year() %>\n```\n\n### is_month\n\n현재 페이지가 월간 아카이브 페이지인지 체크합니다.\n\n``` js\n<%- is_month() %>\n```\n\n### is_category\n\n현재 페이지가 카테고리 페이지인지 체크합니다.\n파라미터에 문자열을 넣으면, 현재 페이지가 해당 문자열의 카테고리에 속해있는지 체크합니다.\n\n``` js\n<%- is_category() %>\n<%- is_category('hobby') %>\n```\n\n### is_tag\n\n현재 페이지가 태그 페이지인지 체크합니다.\n파라미터에 문자열을 넣으면, 현재 페이지가 해당 문자열의 태그에 속해있는지 체크합니다.\n\n``` js\n<%- is_tag() %>\n<%- is_tag('hobby') %>\n```\n\n## 문자열 조작\n\n### trim\n\n문자열에서 공백을 제거합니다.\n\n``` js\n<%- trim(string) %>\n```\n\n### strip_html\n\n문자열에서 모든 HTML 태그를 제거합니다.\n\n``` js\n<%- strip_html(string) %>\n```\n\n**예시:**\n\n``` js\n<%- strip_html('It's not <b>important</b> anymore!') %>\n// It's not important anymore!\n```\n\n### titlecase\n\n문자열을 적절한 타이틀 케이스(소문자/대문자)에 맞게 변환합니다.\n\n``` js\n<%- titlecase(string) %>\n```\n\n**예시:**\n\n``` js\n<%- titlecase('this is an apple') %>\n# This is an Apple\n```\n\n### markdown\n\nMarkdown에 맞게 문자열을 렌더링합니다.\n\n``` js\n<%- markdown(str) %>\n```\n\n**예시:**\n\n``` js\n<%- markdown('make me **strong**') %>\n// make me <strong>strong</strong>\n```\n\n### render\n\n문자열을 렌더링합니다.\n\n``` js\n<%- render(str, engine, [options]) %>\n```\n\n### word_wrap\n\n주어진 `length`에 맞게 문자열을 포장합니다. `length`의 기본값은 80 입니다.\n\n``` js\n<%- word_wrap(str, [length]) %>\n```\n\n**예시:**\n\n``` js\n<%- word_wrap('Once upon a time', 8) %>\n// Once upon\\n a time\n```\n\n### truncate\n\n`length` 이후의 문자들을 잘라냅니다. 기본 값은 30 입니다.\n\n``` js\n<%- truncate(text, [options]) %>\n```\n\n**예시:**\n\n``` js\n<%- truncate('Once upon a time in a world far far away', {length: 17}) %>\n// Once upon a ti...\n\n<%- truncate('Once upon a time in a world far far away', {length: 17, separator: ' '}) %>\n// Once upon a...\n\n<%- truncate('And they found that many people were sleeping better.', {length: 25, omission: '... (continued)'}) %>\n// And they f... (continued)\n```\n\n## 템플릿\n\n### partial\n\n다른 템플릿 파일을 불러옵니다. 지역 변수인 `locals`에 정의할 수 있습니다.\n\n``` js\n<%- partial(layout, [locals], [options]) %>\n```\n\n옵션 | 설명 | 기본 값\n--- | --- | ---\n`cache` | 내용을 캐싱합니다. (Fragment cache 사용) | `false`\n`only` | 지역 변수에 한정합니다. 템플릿에서 `locals` 변수만 설정할 수 있습니다. | `false`\n\n### fragment_cache\n\nFragment에 컨텐츠를 캐싱합니다. 컨텐츠를 fragment단위로 저장하고 다음 요청이 들어오면 캐시를 제공합니다.\n\n``` js\n<%- fragment_cache(id, fn);\n```\n\n**예시:**\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}) %>\n```\n\n## 날짜와 시간\n\n### date\n\n형식이 정의된 날짜를 삽입합니다. `date`는 unix time, ISO string, date object, [Moment.js] 객체를 사용할 수 있습니다. `format`은 기본 값으로 정의된 `date_format`를 사용합니다.\n\n``` js\n<%- date(date, [format]) %>\n```\n\n**예시:**\n\n``` js\n<%- date(Date.now()) %>\n// 2013-01-01\n\n<%- date(Date.now(), 'YYYY/M/D') %>\n// Jan 1 2013\n```\n\n### date_xml\n\nXML 형식의 날짜를 삽입합니다. `date`는 unix time, ISO string, date object, [Moment.js] 객체를 사용할 수 있습니다.\n\n``` js\n<%- date_xml(date) %>\n```\n\n**예시:**\n\n``` js\n<%- date_xml(Date.now()) %>\n// 2013-01-01T00:00:00.000Z\n```\n\n### time\n\n형식이 정의된 시간을 사입합니다. `date`는 unix time, ISO string, date object, [Moment.js] 객체를 사용할 수 있습니다. `format`은 기본 값으로 정의된 `time_format`를 사용합니다.\n\n``` js\n<%- time(date, [format]) %>\n```\n\n**예시:**\n\n``` js\n<%- time(Date.now()) %>\n// 13:05:12\n\n<%- time(Date.now(), 'h:mm:ss a') %>\n// 1:05:12 pm\n```\n\n### full_date\n\n형식이 정의된 날짜와 시간을 삽입합니다. `date`는 unix time, ISO string, date object, [Moment.js] 객체를 사용할 수 있습니다. `format`은 기본 값으로 정의된 `date_format + time_format`를 사용합니다.\n\n``` js\n<%- full_date(date, [format]) %>\n```\n\n**예시:**\n\n``` js\n<%- full_date(new Date()) %>\n// Jan 1, 2013 0:00:00\n\n<%- full_date(new Date(), 'dddd, MMMM Do YYYY, h:mm:ss a') %>\n// Tuesday, January 1st 2013, 12:00:00 am\n```\n\n### moment\n\n[Moment.js] 라이브러리 입니다.\n\n## List\n\n### list_categories\n\n모든 카테고리의 목록을 삽입합니다.\n\n``` js\n<%- list_categories([options]) %>\n```\n\n옵션 | 설명 | 기본 값\n--- | --- | ---\n`orderby` | 카테고리 정렬 기준 | name\n`order` | 정렬 방식. `1`, `asc`은 오름차순; `-1`, `desc`은 내림차순 | 1\n`show_count` | 각 카테고리 별 포스트의 번호를 표시합니다. | true\n`style` | 카테고리 목록 표시의 스타일. `list`는 카테고리 목록을 순서없이 표시합니다. | list\n`separator` | 카테고리 별 구분자. (`style`이 `list`가 아닐 때만 동작합니다.) | ,\n`depth` | 카테고리의 계층을 표시합니다. `0`은 모든 카테고리 및 하위 카테고리를 표시합니다.; `-1`은 `0`과 비슷하지만 flat하게 표시합니다.; `1`은 최상위 계층의 카테고리들만 표시합니다. | 0\n`class` | 카테고리 목록의 Class명. | category\n`transform` | 카테고리 이름의 표시 방식을 변경하는 기능. |\n`suffix` | 링크에 접미사를 붙입니다. | None\n\n### list_tags\n\n모든 태그의 목록을 삽입합니다.\n\n``` js\n<%- list_tags([options]) %>\n```\n\n옵션 | 설명 | 기본 값\n--- | --- | ---\n`orderby` | 태그 정렬 기준 | name\n`order` | 정렬 방식. `1`, `asc`은 오름차순; `-1`, `desc`은 내림차순 | 1\n`show_count` | 각 태그 별 포스트의 번호를 표시합니다. | true\n`style` | 태그 목록 표시의 스타일. `list`는 태그 목록을 순서없이 표시합니다.  | list\n`separator` | 태그 별 구분자. (`style`이 `list`가 아닐 때만 동작합니다.) | ,\n`class` | 태그 목록의 Class명. | tag\n`transform` | 태그 이름의 표시 방식을 변경하는 기능. |\n`amount` | 표시되는 태그의 개수. (0 = 무한대) | 0\n`suffix` | 링크에 접미사를 붙입니다. | None\n\n### list_archives\n\n아카이브 목록을 삽입합니다.\n\n``` js\n<%- list_archives([options]) %>\n```\n\n옵션 | 설명 | 기본 값\n--- | --- | ---\n`type` | 형식. 이 값은 `yearly` 또는 `monthly`입니다. | monthly\n`order` | 정렬 방식. `1`, `asc`은 오름차순; `-1`, `desc`은 내림차순 | 1\n`show_count` | 각 아카이브에 대한 포스트의 개수를 표시합니다. | true\n`format` | 날짜 형태 | MMMM YYYY\n`style` | 아카이브 목록 표시의 스타일. `list`는 아카이브 목록을 순서없이 표시합니다.  | list\n`separator` | 아카이브 간 구분자. (`style`이 `list`가 아닐 때만 동작합니다.) | ,\n`class` | 아카이브 목록의 Class명. | archive\n`transform` | 아카이브 이름의 표시 방식을 변경하는 기능. |\n\n### list_posts\n\n포스트의 목록을 삽입합니다.\n\n``` js\n<%- list_posts([options]) %>\n```\n\n옵션 | 설명 | 기본 값\n--- | --- | ---\n`orderby` | 포스트 정렬 기준 | date\n`order` | 정렬 방식. `1`, `asc`은 오름차순; `-1`, `desc`은 내림차순 | 1\n`style` | 포스트 목록 표시의 스타일. `list`는 포스트 목록을 순서없이 표시합니다.  | list\n`separator` | 포스트 간 구분자. (`style`이 `list`각 아닐 때만 동작하빈다.) | ,\n`class` | 포스트 목록의 Class명. | post\n`amount` | 표시되는 포스트의 개수. (0 = 무한대) | 6\n`transform` | 포스트 이름의 표시 방식을 변경하는 기능. |\n\n### tagcloud\n\n태그 클라우드를 삽입합니다.\n\n``` js\n<%- tagcloud([tags], [options]) %>\n```\n\n옵션 | 설명 | 기본 값\n--- | --- | ---\n`min_font` | 최소 폰트 크기 | 10\n`max_font` | 최대 폰트 크기 | 20\n`unit` | 폰트 크기의 단위 | px\n`amount` | 태그의 총 개수 | 40\n`orderby` | 태그의 정렬 기준 | name\n`order` | 정렬 방식. `1`, `asc`은 오름차순; `-1`, `desc`은 내림차순 | 1\n`color` | 태그 클라우드에 색상을 입힙니다. | false\n`start_color` | 시작 색상. 16진수 색상 (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`), [color keywords]을 사용할 수 있습니다. 이 옵션은 `color`가 true일 때만 동작합니다. |\n`end_color` | 종료 색상. 16진수 색상 (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`), [color keywords]. 이 옵션은 `color`가 true일 때만 동작합니다. |\n\n## Miscellaneous\n\n### paginator\n\nPaginator를 삽입합니다.\n\n``` js\n<%- paginator(options) %>\n```\n\n옵션 | 설명 | 기본 값\n--- | --- | ---\n`base` | 기준 URL | /\n`format` | URL 형식 | page/%d/\n`total` | 페이지의 총 개수 | 1\n`current` | 현재 페이지의 번호 | 0\n`prev_text` | 이전 페이지의 링크 텍스트. `prev_next`가 true일 때만 동작합니다. | Prev\n`next_text` | 다음 페이지의 링크 텍스트. `prev_next`가 true일 때만 동작합니다. | Next\n`space` | 빈 공간을 나타내는 텍스트 | &hellp;\n`prev_next` | 이전, 다음 링크를 표시합니다. | true\n`end_size` | 시작/종료 측에 페이지의 개수를 표시합니다. | 1\n`mid_size` | 현재 페이지의 양쪽에 페이지의 개수를 표시합니다. 현재 페이지는 포함하지 않은 개수입니다. | 2\n`show_all` | 모든 페이지를 표시합니다. true로 설정되어있다면, `end_size`와 `mid_size`는 동작하지 않습니다. | false\n\n### search_form\n\nGoogle 검색 form을 삽입합니다.\n\n``` js\n<%- search_form(options) %>\n```\n\n옵션 | 설명 | 기본 값\n--- | --- | ---\n`class` | Form의 Class명 | search-form\n`text` | 검색의 hint에 들어갈 문장 | Search\n`button` | 검색 버튼을 표시합니다. boolean 또는 string 값을 가질 수 있습니다. 이 값이 string이면 해당 문자열은 버튼에 표시됩니다. | false\n\n### number_format\n\n숫자의 형식을 지정합니다.\n\n``` js\n<%- number_format(number, [options]) %>\n```\n\n옵션 | 설명 | 기본 값\n--- | --- | ---\n`precision` | 수의 정밀도. `false` 또는 음수가 아닌 정수 값을 가집니다. | false\n`delimiter` | 1000 단위의 구분자. | ,\n`separator` | 분수와 정수의 구분자. | .\n\n**예시:**\n\n``` js\n<%- number_format(12345.67, {precision: 1}) %>\n// 12,345.68\n\n<%- number_format(12345.67, {precision: 4}) %>\n// 12,345.6700\n\n<%- number_format(12345.67, {precision: 0}) %>\n// 12,345\n\n<%- number_format(12345.67, {delimiter: ''}) %>\n// 12345.67\n\n<%- number_format(12345.67, {separator: '/'}) %>\n// 12,345/67\n```\n\n### open_graph\n\n[Open Graph] 데이터를 삽입합니다.\n\n``` js\n<%- open_graph([options]) %>\n```\n\n옵션 | 설명 | 기본 값\n--- | --- | ---\n`title` | 페이지 제목 (`og:title`) | `page.title`\n`type` | 페이지 형태 (`og:type`) | blog\n`url` | 페이지 URL (`og:url`) | `url`\n`image` | 페이지 커버 (`og:image`) | First image in the content\n`site_name` | 사이트 이름 (`og:site_name`) | `config.title`\n`description` | 페이지 설명 (`og:desription`) | Page excerpt or first 200 characters of the content\n`twitter_card` | Twitter card type (`twitter:card`) | summary\n`twitter_id` | Twitter ID (`twitter:creator`) |\n`twitter_site` | Twitter Site (`twitter:site`) |\n`google_plus` | Google+ profile link |\n`fb_admins` | Facebook admin ID |\n`fb_app_id` | Facebook App ID |\n\n### toc\n\n헤딩 태그(h1~h6)를 파싱하여 목차(Table of Content)를 삽입합니다.\n\n``` js\n<%- toc(str, [options]) %>\n```\n\n옵션 | 설명 | 기본 값\n--- | --- | ---\n`class` | Class명 | toc\n`list_number` | 목록 번호를 표시합니다. | true\n\n**예시:**\n\n``` js\n<%- toc(page.content) %>\n```\n\n[color keywords]: http://www.w3.org/TR/css3-color/#svg-color\n[Moment.js]: http://momentjs.com/\n[Open Graph]: http://ogp.me/\n",
				"html": "<p>Helper는 템플릿에 정보(snippet)를 쉽게 삽입할 수 있도록 도와줍니다. 소스 파일에서는 Helper를 사용할 수 없습니다.</p>\n<h2 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h2><h3 id=\"url-for\"><a href=\"#url-for\" class=\"headerlink\" title=\"url_for\"></a>url_for</h3><p>루트 경로를 포함한 url을 반환합니다. Hexo 2.7부터 <code>config.root + path</code> 대신 이 helper를 사용할 수 있습니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- url_for(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"relative-url\"><a href=\"#relative-url\" class=\"headerlink\" title=\"relative_url\"></a>relative_url</h3><p><code>from</code>부터 <code>to</code>까지의 상대 경로를 반환합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- relative_url(<span class=\"keyword\">from</span>, to) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"gravatar\"><a href=\"#gravatar\" class=\"headerlink\" title=\"gravatar\"></a>gravatar</h3><p>Gravatar 이미지를 삽입합니다.<br>[options] 파라미터를 지정하지 않은 경우, 기본 값이 적용됩니다. [options] 파라미터를 지정할 경우 숫자로 크기를 지정하여 Gravatar에 전달할 수 있습니다. 또 다른 방법으로, object를 설정할 경우 Gravatar를 위한 query string으로 변환됩니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(email, [options]);</span><br></pre></td></tr></table></figure>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>, <span class=\"number\">40</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span> &#123;<span class=\"attr\">s</span>: <span class=\"number\">40</span>, <span class=\"attr\">d</span>: <span class=\"string\">'http://example.com/image.png'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&amp;d=http%3A%2F%2Fexample.com%2Fimage.png</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"HTML-Tags\"><a href=\"#HTML-Tags\" class=\"headerlink\" title=\"HTML Tags\"></a>HTML Tags</h2><h3 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h3><p>CSS 파일들을 불러옵니다. <code>path</code>에는 문자열(string) 또는 배열(array)을 사용할 수 있습니다. 만약 <code>path</code>가 <code>/</code> 또는 프로토콜명으로 시작하지 않는다면, 루트 URL이 접두어로 붙습니다. <code>path</code> 뒤에 <code>.css</code> 파일을 기입하지 않으면 자동으로 추가합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(<span class=\"string\">'style.css'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- css([<span class=\"string\">'style.css'</span>, <span class=\"string\">'screen.css'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\"&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h3><p>JavaScript 파일들을 불러옵니다. <code>path</code>에는 문자열(string) 또는 배열(array)을 사용할 수 있습니다. 만약 <code>path</code>가 <code>/</code> 또는 프로토콜명으로 시작하지 않는다면, 루트 URL이 접두어로 붙습니다. <code>path</code> 뒤에 <code>.js</code> 파일을 기입하지 않으면 자동으로 추가합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- js([<span class=\"string\">'script.js'</span>, <span class=\"string\">'gallery.js'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/gallery.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"link-to\"><a href=\"#link-to\" class=\"headerlink\" title=\"link_to\"></a>link_to</h3><p>링크를 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>external</code></td>\n<td>링크를 새 탭에 엽니다.</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class명</td>\n<td></td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"http://www.google.com\"&gt;http://www.google.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\"&gt;Google&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>, &#123;<span class=\"attr\">external</span>: <span class=\"literal\">true</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\"&gt;Google&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"mail-to\"><a href=\"#mail-to\" class=\"headerlink\" title=\"mail_to\"></a>mail_to</h3><p>메일 링크를 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class명</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>subject</code></td>\n<td>메일 제목</td>\n</tr>\n<tr>\n<td><code>cc</code></td>\n<td>참조</td>\n</tr>\n<tr>\n<td><code>bcc</code></td>\n<td>비밀참조</td>\n</tr>\n<tr>\n<td><code>body</code></td>\n<td>메일 내용</td>\n</tr>\n</tbody>\n</table>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"a@abc.com\"&gt;a@abc.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>, <span class=\"string\">'Email'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"Email\"&gt;Email&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"image-tag\"><a href=\"#image-tag\" class=\"headerlink\" title=\"image_tag\"></a>image_tag</h3><p>이미지를 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- image_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>alt</code></td>\n<td>이미지 대신 표시할 텍스트</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class명</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>width</code></td>\n<td>이미지의 가로 크기</td>\n</tr>\n<tr>\n<td><code>height</code></td>\n<td>이미지의 세로 크기</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"favicon-tag\"><a href=\"#favicon-tag\" class=\"headerlink\" title=\"favicon_tag\"></a>favicon_tag</h3><p>파비콘을 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- favicon_tag(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"feed-tag\"><a href=\"#feed-tag\" class=\"headerlink\" title=\"feed_tag\"></a>feed_tag</h3><p>Feed 링크를 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- feed_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Feed 제목</td>\n<td></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Feed 형식</td>\n<td>atom</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"조건-태그\"><a href=\"#조건-태그\" class=\"headerlink\" title=\"조건 태그\"></a>조건 태그</h3><h3 id=\"is-current\"><a href=\"#is-current\" class=\"headerlink\" title=\"is_current\"></a>is_current</h3><p><code>path</code>가 현재 페이지의 URL과 동일한지 체크합니다. <code>strict</code> 옵션을 사용하면 제한적인 매칭을 활성화 합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_current(path, [strict]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-home\"><a href=\"#is-home\" class=\"headerlink\" title=\"is_home\"></a>is_home</h3><p>현재 페이지가 home 페이지인지 체크합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_home() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-post\"><a href=\"#is-post\" class=\"headerlink\" title=\"is_post\"></a>is_post</h3><p>현재 페이지가 포스트인지 체크합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_post() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-archive\"><a href=\"#is-archive\" class=\"headerlink\" title=\"is_archive\"></a>is_archive</h3><p>현재 페이지가 아카이브 페이지인지 체크합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_archive() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-year\"><a href=\"#is-year\" class=\"headerlink\" title=\"is_year\"></a>is_year</h3><p>현재 페이지가 연간 아카이브 페이지인지 체크합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_year() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-month\"><a href=\"#is-month\" class=\"headerlink\" title=\"is_month\"></a>is_month</h3><p>현재 페이지가 월간 아카이브 페이지인지 체크합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_month() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-category\"><a href=\"#is-category\" class=\"headerlink\" title=\"is_category\"></a>is_category</h3><p>현재 페이지가 카테고리 페이지인지 체크합니다.<br>파라미터에 문자열을 넣으면, 현재 페이지가 해당 문자열의 카테고리에 속해있는지 체크합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_category() %&gt;</span><br><span class=\"line\">&lt;%- is_category(<span class=\"string\">'hobby'</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-tag\"><a href=\"#is-tag\" class=\"headerlink\" title=\"is_tag\"></a>is_tag</h3><p>현재 페이지가 태그 페이지인지 체크합니다.<br>파라미터에 문자열을 넣으면, 현재 페이지가 해당 문자열의 태그에 속해있는지 체크합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_tag() %&gt;</span><br><span class=\"line\">&lt;%- is_tag(<span class=\"string\">'hobby'</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"문자열-조작\"><a href=\"#문자열-조작\" class=\"headerlink\" title=\"문자열 조작\"></a>문자열 조작</h2><h3 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\"trim\"></a>trim</h3><p>문자열에서 공백을 제거합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- trim(string) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"strip-html\"><a href=\"#strip-html\" class=\"headerlink\" title=\"strip_html\"></a>strip_html</h3><p>문자열에서 모든 HTML 태그를 제거합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(<span class=\"string\">'It'</span>s not &lt;b&gt;important&lt;<span class=\"regexp\">/b&gt; anymore!') %&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ It's not important anymore!</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"titlecase\"><a href=\"#titlecase\" class=\"headerlink\" title=\"titlecase\"></a>titlecase</h3><p>문자열을 적절한 타이틀 케이스(소문자/대문자)에 맞게 변환합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(<span class=\"string\">'this is an apple'</span>) %&gt;</span><br><span class=\"line\"># This is an Apple</span><br></pre></td></tr></table></figure>\n<h3 id=\"markdown\"><a href=\"#markdown\" class=\"headerlink\" title=\"markdown\"></a>markdown</h3><p>Markdown에 맞게 문자열을 렌더링합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(str) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(<span class=\"string\">'make me **strong**'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// make me &lt;strong&gt;strong&lt;/strong&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h3><p>문자열을 렌더링합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- render(str, engine, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"word-wrap\"><a href=\"#word-wrap\" class=\"headerlink\" title=\"word_wrap\"></a>word_wrap</h3><p>주어진 <code>length</code>에 맞게 문자열을 포장합니다. <code>length</code>의 기본값은 80 입니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(str, [length]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(<span class=\"string\">'Once upon a time'</span>, <span class=\"number\">8</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon\\n a time</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"truncate\"><a href=\"#truncate\" class=\"headerlink\" title=\"truncate\"></a>truncate</h3><p><code>length</code> 이후의 문자들을 잘라냅니다. 기본 값은 30 입니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(text, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon a ti...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>, <span class=\"attr\">separator</span>: <span class=\"string\">' '</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon a...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- truncate(<span class=\"string\">'And they found that many people were sleeping better.'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">25</span>, <span class=\"attr\">omission</span>: <span class=\"string\">'... (continued)'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// And they f... (continued)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"템플릿\"><a href=\"#템플릿\" class=\"headerlink\" title=\"템플릿\"></a>템플릿</h2><h3 id=\"partial\"><a href=\"#partial\" class=\"headerlink\" title=\"partial\"></a>partial</h3><p>다른 템플릿 파일을 불러옵니다. 지역 변수인 <code>locals</code>에 정의할 수 있습니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(layout, [locals], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cache</code></td>\n<td>내용을 캐싱합니다. (Fragment cache 사용)</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>only</code></td>\n<td>지역 변수에 한정합니다. 템플릿에서 <code>locals</code> 변수만 설정할 수 있습니다.</td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fragment-cache\"><a href=\"#fragment-cache\" class=\"headerlink\" title=\"fragment_cache\"></a>fragment_cache</h3><p>Fragment에 컨텐츠를 캐싱합니다. 컨텐츠를 fragment단위로 저장하고 다음 요청이 들어오면 캐시를 제공합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(id, fn);</span><br></pre></td></tr></table></figure>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;) %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"날짜와-시간\"><a href=\"#날짜와-시간\" class=\"headerlink\" title=\"날짜와 시간\"></a>날짜와 시간</h2><h3 id=\"date\"><a href=\"#date\" class=\"headerlink\" title=\"date\"></a>date</h3><p>형식이 정의된 날짜를 삽입합니다. <code>date</code>는 unix time, ISO string, date object, <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 객체를 사용할 수 있습니다. <code>format</code>은 기본 값으로 정의된 <code>date_format</code>를 사용합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'YYYY/M/D'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1 2013</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"date-xml\"><a href=\"#date-xml\" class=\"headerlink\" title=\"date_xml\"></a>date_xml</h3><p>XML 형식의 날짜를 삽입합니다. <code>date</code>는 unix time, ISO string, date object, <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 객체를 사용할 수 있습니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(date) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01T00:00:00.000Z</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"time\"><a href=\"#time\" class=\"headerlink\" title=\"time\"></a>time</h3><p>형식이 정의된 시간을 사입합니다. <code>date</code>는 unix time, ISO string, date object, <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 객체를 사용할 수 있습니다. <code>format</code>은 기본 값으로 정의된 <code>time_format</code>를 사용합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 13:05:12</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 1:05:12 pm</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"full-date\"><a href=\"#full-date\" class=\"headerlink\" title=\"full_date\"></a>full_date</h3><p>형식이 정의된 날짜와 시간을 삽입합니다. <code>date</code>는 unix time, ISO string, date object, <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 객체를 사용할 수 있습니다. <code>format</code>은 기본 값으로 정의된 <code>date_format + time_format</code>를 사용합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1, 2013 0:00:00</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(), <span class=\"string\">'dddd, MMMM Do YYYY, h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Tuesday, January 1st 2013, 12:00:00 am</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"moment\"><a href=\"#moment\" class=\"headerlink\" title=\"moment\"></a>moment</h3><p><a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> 라이브러리 입니다.</p>\n<h2 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h2><h3 id=\"list-categories\"><a href=\"#list-categories\" class=\"headerlink\" title=\"list_categories\"></a>list_categories</h3><p>모든 카테고리의 목록을 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_categories([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>카테고리 정렬 기준</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>정렬 방식. <code>1</code>, <code>asc</code>은 오름차순; <code>-1</code>, <code>desc</code>은 내림차순</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>각 카테고리 별 포스트의 번호를 표시합니다.</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>카테고리 목록 표시의 스타일. <code>list</code>는 카테고리 목록을 순서없이 표시합니다.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>카테고리 별 구분자. (<code>style</code>이 <code>list</code>가 아닐 때만 동작합니다.)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>depth</code></td>\n<td>카테고리의 계층을 표시합니다. <code>0</code>은 모든 카테고리 및 하위 카테고리를 표시합니다.; <code>-1</code>은 <code>0</code>과 비슷하지만 flat하게 표시합니다.; <code>1</code>은 최상위 계층의 카테고리들만 표시합니다.</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>카테고리 목록의 Class명.</td>\n<td>category</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>카테고리 이름의 표시 방식을 변경하는 기능.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>링크에 접미사를 붙입니다.</td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-tags\"><a href=\"#list-tags\" class=\"headerlink\" title=\"list_tags\"></a>list_tags</h3><p>모든 태그의 목록을 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_tags([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>태그 정렬 기준</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>정렬 방식. <code>1</code>, <code>asc</code>은 오름차순; <code>-1</code>, <code>desc</code>은 내림차순</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>각 태그 별 포스트의 번호를 표시합니다.</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>태그 목록 표시의 스타일. <code>list</code>는 태그 목록을 순서없이 표시합니다.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>태그 별 구분자. (<code>style</code>이 <code>list</code>가 아닐 때만 동작합니다.)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>태그 목록의 Class명.</td>\n<td>tag</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>태그 이름의 표시 방식을 변경하는 기능.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>표시되는 태그의 개수. (0 = 무한대)</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>링크에 접미사를 붙입니다.</td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-archives\"><a href=\"#list-archives\" class=\"headerlink\" title=\"list_archives\"></a>list_archives</h3><p>아카이브 목록을 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_archives([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>type</code></td>\n<td>형식. 이 값은 <code>yearly</code> 또는 <code>monthly</code>입니다.</td>\n<td>monthly</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>정렬 방식. <code>1</code>, <code>asc</code>은 오름차순; <code>-1</code>, <code>desc</code>은 내림차순</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>각 아카이브에 대한 포스트의 개수를 표시합니다.</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>날짜 형태</td>\n<td>MMMM YYYY</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>아카이브 목록 표시의 스타일. <code>list</code>는 아카이브 목록을 순서없이 표시합니다.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>아카이브 간 구분자. (<code>style</code>이 <code>list</code>가 아닐 때만 동작합니다.)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>아카이브 목록의 Class명.</td>\n<td>archive</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>아카이브 이름의 표시 방식을 변경하는 기능.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-posts\"><a href=\"#list-posts\" class=\"headerlink\" title=\"list_posts\"></a>list_posts</h3><p>포스트의 목록을 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_posts([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>포스트 정렬 기준</td>\n<td>date</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>정렬 방식. <code>1</code>, <code>asc</code>은 오름차순; <code>-1</code>, <code>desc</code>은 내림차순</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>포스트 목록 표시의 스타일. <code>list</code>는 포스트 목록을 순서없이 표시합니다.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>포스트 간 구분자. (<code>style</code>이 <code>list</code>각 아닐 때만 동작하빈다.)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>포스트 목록의 Class명.</td>\n<td>post</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>표시되는 포스트의 개수. (0 = 무한대)</td>\n<td>6</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>포스트 이름의 표시 방식을 변경하는 기능.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tagcloud\"><a href=\"#tagcloud\" class=\"headerlink\" title=\"tagcloud\"></a>tagcloud</h3><p>태그 클라우드를 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- tagcloud([tags], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>min_font</code></td>\n<td>최소 폰트 크기</td>\n<td>10</td>\n</tr>\n<tr>\n<td><code>max_font</code></td>\n<td>최대 폰트 크기</td>\n<td>20</td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td>폰트 크기의 단위</td>\n<td>px</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>태그의 총 개수</td>\n<td>40</td>\n</tr>\n<tr>\n<td><code>orderby</code></td>\n<td>태그의 정렬 기준</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>정렬 방식. <code>1</code>, <code>asc</code>은 오름차순; <code>-1</code>, <code>desc</code>은 내림차순</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>태그 클라우드에 색상을 입힙니다.</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>start_color</code></td>\n<td>시작 색상. 16진수 색상 (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>), <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">color keywords</a>을 사용할 수 있습니다. 이 옵션은 <code>color</code>가 true일 때만 동작합니다.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>end_color</code></td>\n<td>종료 색상. 16진수 색상 (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>), <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">color keywords</a>. 이 옵션은 <code>color</code>가 true일 때만 동작합니다.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Miscellaneous\"><a href=\"#Miscellaneous\" class=\"headerlink\" title=\"Miscellaneous\"></a>Miscellaneous</h2><h3 id=\"paginator\"><a href=\"#paginator\" class=\"headerlink\" title=\"paginator\"></a>paginator</h3><p>Paginator를 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- paginator(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>base</code></td>\n<td>기준 URL</td>\n<td>/</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>URL 형식</td>\n<td>page/%d/</td>\n</tr>\n<tr>\n<td><code>total</code></td>\n<td>페이지의 총 개수</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>current</code></td>\n<td>현재 페이지의 번호</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>prev_text</code></td>\n<td>이전 페이지의 링크 텍스트. <code>prev_next</code>가 true일 때만 동작합니다.</td>\n<td>Prev</td>\n</tr>\n<tr>\n<td><code>next_text</code></td>\n<td>다음 페이지의 링크 텍스트. <code>prev_next</code>가 true일 때만 동작합니다.</td>\n<td>Next</td>\n</tr>\n<tr>\n<td><code>space</code></td>\n<td>빈 공간을 나타내는 텍스트</td>\n<td>&hellp;</td>\n</tr>\n<tr>\n<td><code>prev_next</code></td>\n<td>이전, 다음 링크를 표시합니다.</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>end_size</code></td>\n<td>시작/종료 측에 페이지의 개수를 표시합니다.</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>mid_size</code></td>\n<td>현재 페이지의 양쪽에 페이지의 개수를 표시합니다. 현재 페이지는 포함하지 않은 개수입니다.</td>\n<td>2</td>\n</tr>\n<tr>\n<td><code>show_all</code></td>\n<td>모든 페이지를 표시합니다. true로 설정되어있다면, <code>end_size</code>와 <code>mid_size</code>는 동작하지 않습니다.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"search-form\"><a href=\"#search-form\" class=\"headerlink\" title=\"search_form\"></a>search_form</h3><p>Google 검색 form을 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- search_form(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Form의 Class명</td>\n<td>search-form</td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>검색의 hint에 들어갈 문장</td>\n<td>Search</td>\n</tr>\n<tr>\n<td><code>button</code></td>\n<td>검색 버튼을 표시합니다. boolean 또는 string 값을 가질 수 있습니다. 이 값이 string이면 해당 문자열은 버튼에 표시됩니다.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"number-format\"><a href=\"#number-format\" class=\"headerlink\" title=\"number_format\"></a>number_format</h3><p>숫자의 형식을 지정합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(number, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>precision</code></td>\n<td>수의 정밀도. <code>false</code> 또는 음수가 아닌 정수 값을 가집니다.</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>delimiter</code></td>\n<td>1000 단위의 구분자.</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>분수와 정수의 구분자.</td>\n<td>.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">1</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.68</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">4</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.6700</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">0</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">delimiter</span>: <span class=\"string\">''</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12345.67</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">separator</span>: <span class=\"string\">'/'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345/67</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"open-graph\"><a href=\"#open-graph\" class=\"headerlink\" title=\"open_graph\"></a>open_graph</h3><p><a href=\"http://ogp.me/\" target=\"_blank\" rel=\"noopener\">Open Graph</a> 데이터를 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- open_graph([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>페이지 제목 (<code>og:title</code>)</td>\n<td><code>page.title</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>페이지 형태 (<code>og:type</code>)</td>\n<td>blog</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>페이지 URL (<code>og:url</code>)</td>\n<td><code>url</code></td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>페이지 커버 (<code>og:image</code>)</td>\n<td>First image in the content</td>\n</tr>\n<tr>\n<td><code>site_name</code></td>\n<td>사이트 이름 (<code>og:site_name</code>)</td>\n<td><code>config.title</code></td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>페이지 설명 (<code>og:desription</code>)</td>\n<td>Page excerpt or first 200 characters of the content</td>\n</tr>\n<tr>\n<td><code>twitter_card</code></td>\n<td>Twitter card type (<code>twitter:card</code>)</td>\n<td>summary</td>\n</tr>\n<tr>\n<td><code>twitter_id</code></td>\n<td>Twitter ID (<code>twitter:creator</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>twitter_site</code></td>\n<td>Twitter Site (<code>twitter:site</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>google_plus</code></td>\n<td>Google+ profile link</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_admins</code></td>\n<td>Facebook admin ID</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_app_id</code></td>\n<td>Facebook App ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"toc\"><a href=\"#toc\" class=\"headerlink\" title=\"toc\"></a>toc</h3><p>헤딩 태그(h1~h6)를 파싱하여 목차(Table of Content)를 삽입합니다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(str, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n<th>기본 값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class명</td>\n<td>toc</td>\n</tr>\n<tr>\n<td><code>list_number</code></td>\n<td>목록 번호를 표시합니다.</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<p><strong>예시:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(page.content) %&gt;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6bc0080koeoci9vcn3g",
				"title": "Помощники",
				"markdown": "Помощники используются в шаблонах, чтобы быстро вставлять фрагменты. Помощники не могут быть использованы в исходных файлах .\n\n## URL\n\n### url_for\n\nВозвращает URL-адрес корневого пути с префиксом. Нужно использовать этот помощник вместо `config.root + path`, начиная с Hexo версии 2.7.\n\n``` js\n<%- url_for(path) %>\n```\n\n### relative_url\n\nВозвращает относительный URL путь от `from` до `to`.\n\n``` js\n<%- relative_url(from, to) %>\n```\n\n### gravatar\n\nВставка изображения с Gravatar.\nЕсли не указать в параметрах будет применена опция по умолчанию. Иначе можно установить число, которое будет передаваться в качестве параметра размера изображения, получаемого с Gravatar. Наконец, если установить его ссылкой на объект, он будет преобразован в строку запроса параметров для Gravatar.\n\n``` js\n<%- gravatar(email, [options]);\n```\n\n**Примеры:**\n\n``` js\n<%- gravatar('a@abc.com') %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787\n\n<%- gravatar('a@abc.com', 40) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40\n\n<%- gravatar('a@abc.com' {s: 40, d: 'http://example.com/image.png'}) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&d=http%3A%2F%2Fexample.com%2Fimage.png\n```\n\n## HTML тэги\n\n### css\n\nЗагружает CSS-файлы. `path` может быть массивом или строкой. Если путь не начинается префиксом `/` или любым протоколом, то будет начинаться с корневого URL-адреса. Если не добавить `.css`, в конце пути, он будет подставлен автоматически.\n\n``` js\n<%- css(path, ...) %>\n```\n\n**Примеры:**\n\n``` js\n<%- css('style.css') %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n\n<%- css(['style.css', 'screen.css']) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n// <link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\">\n```\n\n### js\n\nЗагружает JavaScript файлы. `path` может быть массивом или строкой. Если путь не начинается префиксом `/` или любым протоколом, то будет начинаться с корневого URL-адреса. Если не добавить `.js`, в конце пути, он будет подставлен автоматически.\n\n``` js\n<%- js(path, ...) %>\n```\n\n**Примеры:**\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n\n<%- js(['script.js', 'gallery.js']) %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n// <script type=\"text/javascript\" src=\"/gallery.js\"></script>\n```\n\n### link_to\n\nВставляет ссылку.\n\n``` js\n<%- link_to(path, [text], [options]) %>\n```\n\nОпции | Описание | Умолчание\n--- | --- | ---\n`external` | Открывает ссылку в новой вкладке | false\n`class` | Имя класса |\n`id` | ID |\n\n**Примеры:**\n\n``` js\n<%- link_to('http://www.google.com') %>\n// <a href=\"http://www.google.com\" title=\"http://www.google.com\">http://www.google.com</a>\n\n<%- link_to('http://www.google.com', 'Google') %>\n// <a href=\"http://www.google.com\" title=\"Google\">Google</a>\n\n<%- link_to('http://www.google.com', 'Google', {external: true}) %>\n// <a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\">Google</a>\n```\n\n### mail_to\n\nВставка почтовой ссылки.\n\n``` js\n<%- mail_to(path, [text], [options]) %>\n```\n\nОпция | Описание\n--- | ---\n`class` | Имя класса\n`id` | ID\n`subject` | Тема письма\n`cc` | Копия\n`bcc` | Скрытая копия\n`body` | Содержание сообщения\n\n**Примеры:**\n\n``` js\n<%- mail_to('a@abc.com') %>\n// <a href=\"mailto:a@abc.com\" title=\"a@abc.com\">a@abc.com</a>\n\n<%- mail_to('a@abc.com', 'Email') %>\n// <a href=\"mailto:a@abc.com\" title=\"Email\">Email</a>\n```\n\n### image_tag\n\nВставка изображения.\n\n``` js\n<%- image_tag(path, [options]) %>\n```\n\nОпция | Описание\n--- | ---\n`alt` | Альтернативный текст изображения\n`class` | Имя класса\n`id` | ID\n`width` | Ширина изображения\n`height` | Высота изображения\n\n### favicon_tag\n\nВставка иконки сайта (favicon).\n\n``` js\n<%- favicon_tag(path) %>\n```\n\n### feed_tag\n\nВставка ссылки на канал.\n\n``` js\n<%- feed_tag(path, [options]) %>\n```\n\nОпции | Описание | Умолчание\n--- | --- | ---\n`title` | Имя канала |\n`type` | Тип канала | atom\n\n### Условные теги\n\n### is_current\n\nПроверить, соответствует ли `path` URL-адресу текущей страницы. Используйте `strict` для обеспечения строгого соответствия.\n\n``` js\n<%- is_current(path, [strict]) %>\n```\n\n### is_home\n\nПроверить, является ли текущая страница главной.\n\n``` js\n<%- is_home() %>\n```\n\n### is_post\n\nПроверить, является ли текущая страница постом.\n\n``` js\n<%- is_post() %>\n```\n\n### is_archive\n\nПроверить, является ли текущая страница архивом.\n\n``` js\n<%- is_archive() %>\n```\n\n### is_year\n\nПроверить, является ли текущая страница годовым архивом.\n\n``` js\n<%- is_year() %>\n```\n\n### is_month\n\nПроверить, является ли текущая страница месячным архивом.\n\n``` js\n<%- is_month() %>\n```\n\n### is_category\n\nПроверить, является ли текущая страница страницей категории.\nЕсли строка содержит параметр, проверяется, соответствует ли текущая страница заданной категории.\n\n``` js\n<%- is_category() %>\n<%- is_category('hobby') %>\n```\n\n### is_tag\n\nПроверить, является ли текущая страница страницей тэга. Если строка содержит параметр, проверяется, соответствует ли текущая страница заданному тэгу.\n\n``` js\n<%- is_tag() %>\n<%- is_tag('hobby') %>\n```\n\n## Работа со строками\n\n### trim\n\nУдаляет префиксы и конечные пробелы из строки.\n\n``` js\n<%- trim(string) %>\n```\n\n### strip_html\n\nСанирует(sanitizes) все HTML-теги в строку.\n\n``` js\n<%- strip_html(string) %>\n```\n\n**Примеры:**\n\n``` js\n<%- strip_html('It's not <b>important</b> anymore!') %>\n// It's not important anymore!\n```\n\n### titlecase\n\nПравильно расставляет заглавные буквы в строке заголовка.\n\n``` js\n<%- titlecase(string) %>\n```\n\n**Примеры:**\n\n``` js\n<%- titlecase('this is an apple') %>\n# This is an Apple\n```\n\n### markdown\n\nПреобразует строку с помощью Markdown.\n\n``` js\n<%- markdown(str) %>\n```\n\n**Примеры:**\n\n``` js\n<%- markdown('make me **strong**') %>\n// make me <strong>strong</strong>\n```\n\n### render\n\nОбрабатывает строку.\n\n``` js\n<%- render(str, engine, [options]) %>\n```\n\n### word_wrap\n\nПереносит строки длиннее указанного в `length` количества символов. `length` равняется 80 по умолчанию.\n\n``` js\n<%- word_wrap(str, [length]) %>\n```\n\n**Примеры:**\n\n``` js\n<%- word_wrap('Once upon a time', 8) %>\n// Once upon\\n a time\n```\n\n### truncate\n\nОбрезает текст после определённого в `length` количества символов. По умолчанию `length` 30 символов.\n\n``` js\n<%- truncate(text, [options]) %>\n```\n\n**Примеры:**\n\n``` js\n<%- truncate('Once upon a time in a world far far away', {length: 17}) %>\n// Once upon a ti...\n\n<%- truncate('Once upon a time in a world far far away', {length: 17, separator: ' '}) %>\n// Once upon a...\n\n<%- truncate('And they found that many people were sleeping better.', {length: 25, omission: '... (continued)'}) %>\n// And they f... (continued)\n```\n\n## Шаблоны\n\n### partial\n\nЗагружает другие файлы шаблонов. Можно назначить локальные переменные в `locals`.\n\n``` js\n<%- partial(layout, [locals], [options]) %>\n```\n\nОпция | Описание | Умолчание\n--- | --- | ---\n`cache` | Кэшировать содержимое (Использовать кэш фрагментов.) | `false`\n`only` | Строгие локальные переменные. Использовать только указанные в шаблоне переменные `locals`. | `false`\n\n### fragment_cache\n\nКэширует содержимое фрагмента. Сохраняет содержимое внутри фрагмента в кэш и при следующем запросе берет значения из него.\n\n``` js\n<%- fragment_cache(id, fn);\n```\n\n**Примеры:**\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}) %>\n```\n\n## Дата и время\n\n### date\n\nВставляет отформатированную дату. `date` может быть в формате времени Unix, строки ISO, объекта date, или [Moment.js] объекта. Параметр `format` по умолчанию равен  `date_format`.\n\n``` js\n<%- date(date, [format]) %>\n```\n\n**Примеры:**\n\n``` js\n<%- date(Date.now()) %>\n// 2013-01-01\n\n<%- date(Date.now(), 'YYYY/M/D') %>\n// Jan 1 2013\n```\n\n### date_xml\n\nВставляет дату в формате XML. `date` может быть в формате времени Unix, строки ISO, объекта date, или [Moment.js] объекта.\n\n``` js\n<%- date_xml(date) %>\n```\n\n**Примеры:**\n\n``` js\n<%- date_xml(Date.now()) %>\n// 2013-01-01T00:00:00.000Z\n```\n\n### time\n\nВставляет отформатированное время. `date` может быть в формате времени Unix, строки ISO, объекта date, или [Moment.js] объекта. Параметр `format` по умолчанию равен  `time_format`.\n\n``` js\n<%- time(date, [format]) %>\n```\n\n**Примеры:**\n\n``` js\n<%- time(Date.now()) %>\n// 13:05:12\n\n<%- time(Date.now(), 'h:mm:ss a') %>\n// 1:05:12 pm\n```\n\n### full_date\n\nВставляет отформатированные дату и время. `date` может быть в формате времени Unix, строки ISO, объекта date, или [Moment.js] объекта. Параметр `format` по умолчанию равен  `date_format + time_format`.\n\n``` js\n<%- full_date(date, [format]) %>\n```\n\n**Примеры:**\n\n``` js\n<%- full_date(new Date()) %>\n// Jan 1, 2013 0:00:00\n\n<%- full_date(new Date(), 'dddd, MMMM Do YYYY, h:mm:ss a') %>\n// Tuesday, January 1st 2013, 12:00:00 am\n```\n\n### moment\n\nБиблиотека [Moment.js].\n\n## Списки\n\n### list_categories\n\nВставляет список всех категорий.\n\n``` js\n<%- list_categories([options]) %>\n```\n\nОпция | Описание | Умолчание\n--- | --- | ---\n`orderby` | Упорядочивание категорий | name\n`order` | Порядок сортировки. `1`, `asc` для сортировки по увеличению; `-1`, `desc` для сортировки по уменьшению | 1\n`show_count` | Отображать количество постов для каждой категории | true\n`style` | Стиль показа списка категорий. `list` отображает категории в неупорядоченном списке.  | list\n`separator` | Разделитель категорий. (Работает если только стиль `style` не задан как `list`) | ,\n`depth` | Глубина вложенных категорий для отображения. `0` отображает все категории и подкатегории; `-1` похож на `0` но отображается в плоскости; `1` отображает только разделы верхнего уровня. | 0\n`class` | Имя класса списка категорий. | category\n`transform` | Функция, позволяющая изменить отображаемое имя категории. |\n\n### list_tags\n\nВставка списка всех тэгов.\n\n``` js\n<%- list_tags([options]) %>\n```\n\nОпция | Описание | Умолчание\n--- | --- | ---\n`orderby` | Сортировать по категориям | name\n`order` | Порядок сортировки. `1`, `asc` по увеличению; `-1`, `desc` по уменьшению | 1\n`show_count` | Отображать количество постов для каждого тэга. | true\n`style` | Стиль показа списка тэгов. `list` отображает категории в неупорядоченном списке. | list\n`separator` | Разделитель тэгов. (Работает если только стиль `style` не задан как `list`) | ,\n`class` | Имя класса списка тэгов. | tag\n`transform` | Функция, позволяющая изменить отображаемое имя категории. |\n`amount` | Ограничение количества отображаемых тэгов (0 = неограниченно) | 0\n\n### list_archives\n\nВставка списка архивов.\n\n``` js\n<%- list_archives([options]) %>\n```\n\nОпция | Описание | Умолчание\n--- | --- | ---\n`type` | Тип. Значение может быть года `yearly` или месяца `monthly`. | monthly\n`order` | Порядок сортировки. `1`, `asc` по увеличению; `-1`, `desc` по уменьшению | 1\n`show_count` | Отобразить количество сообщений для каждого архива | true\n`format` | Формат даты | MMMM YYYY\n`style` | Стиль показа списка архивов. `list` отображает категории в неупорядоченном списке.  | list\n`separator` | Разделитель архивов. (Работает если только стиль `style` не задан как `list`) | ,\n`class` | Имя класса списка архивов. | archive\n`transform` | Функция, позволяющая изменить отображаемое имя архива. |\n\n### list_posts\n\nСписок постов.\n\n``` js\n<%- list_posts([options]) %>\n```\n\nОпция | Описание | Умолчание\n--- | --- | ---\n`orderby` | Сортировка постов | date\n`order` | Порядок сортировки. `1`, `asc` по увеличению; `-1`, `desc` по убыванию | 1\n`style` | Стиль показа списка постов. `list` отображает категории в неупорядоченном списке.  | list\n`separator` | Разделитель постов. (Работает если только стиль `style` не задан как `list`) | ,\n`class` | Имя класса списка постов. | post\n`amount` | Ограничени количества отображаемых постов (0 = неограниченно) | 6\n`transform` | Функция, позволяющая изменить отображаемое имя поста. |\n\n### tagcloud\n\nОблако тэгов.\n\n``` js\n<%- tagcloud([tags], [options]) %>\n```\n\nОпция | Описание | Умолчание\n--- | --- | ---\n`min_font` | Минимальный размер шрифта | 10\n`max_font` | Максимальный размер шрифта | 20\n`unit` | Единица измерения размера шрифта | px\n`amount` | Общая сумма тэгов | 40\n`orderby` | Упорядочить по тэгу | name\n`order` | Порядок сортировки. `1`, `asc` по увеличению; `-1`, `desc` по убыванию | 1\n`color` | Цветное облако тэгов | false\n`start_color` | Стартовый цвет. Можно использовать hex (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`) или [имена цветов]. Эта опция работает только если `color` установлен в `true`. |\n`end_color` | Конечный цвет. Можно использовать hex (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`) или [имена цветов]. Эта опция работает только если `color` установлен в `true`. |\n\n## Разное\n\n### paginator\n\nВставляет нумерацию страниц.\n\n``` js\n<%- paginator(options) %>\n```\n\nОпция | Описание | Умолчание\n--- | --- | ---\n`base` | Базовый URL-адрес | /\n`format` | Формат URL-адреса | page/%d/\n`total` | Количество страниц | 1\n`current` | Номер текущей страницы | 0\n`prev_text` | Ссылка на предыдущую страницу. Работает только если `prev_next` имеет значение `true`. | Prev\n`next_text` | Ссылка на следующую страницу. Работает только если `prev_next` имеет значение `true`. | Next\n`space` | Пространство в тексте | &hellp;\n`prev_next` | Отображает ссылки на предыдущую и следующую страницы | true\n`end_size` | Количество страниц, отображаемых с начало и конца. | 1\n`mid_size` | Количество страниц, отображаемых от текущей страницы. Текущая страница не включена. | 2\n`show_all` | Отобразить все страницы. Если установлено в `true`, `end_size` и `mid_size` не работают. | false\n\n### search_form\n\nВставляет форму поиска Google.\n\n``` js\n<%- search_form(options) %>\n```\n\nОпции | Описание | Умолчание\n--- | --- | ---\n`class` | Имя класса форма | search-form\n`text` | Подсказка поиска | Search\n`button` | Отображать кнопку поиска. Значение может быть логическим или строковым. Если значение - строка, тогда она подставится в текст кнопки. | false\n\n### number_format\n\nФормат чисел.\n\n``` js\n<%- number_format(number, [options]) %>\n```\n\nОпция | Описание | Умолчание\n--- | --- | ---\n`precision` | Точность чисел. Значение можно установить в `false` или неотрицательное целое число. | false\n`delimiter` | Разделитель тысяч | ,\n`separator` | Разделитель дробной части числа от целой. | .\n\n**Примеры:**\n\n``` js\n<%- number_format(12345.67, {precision: 1}) %>\n// 12,345.68\n\n<%- number_format(12345.67, {precision: 4}) %>\n// 12,345.6700\n\n<%- number_format(12345.67, {precision: 0}) %>\n// 12,345\n\n<%- number_format(12345.67, {delimiter: ''}) %>\n// 12345.67\n\n<%- number_format(12345.67, {separator: '/'}) %>\n// 12,345/67\n```\n\n### open_graph\n\nВставляет график [Open Graph].\n\n``` js\n<%- open_graph([options]) %>\n```\n\nОпция | Описание | Умолчание\n--- | --- | ---\n`title` | Заголовок страницы (`og:title`) | `page.title`\n`type` | Тип страницы (`og:type`) | blog\n`url` | URL-адрес страницы (`og:url`) | `url`\n`image` | Обложка страницы (`og:image`) | First image in the content\n`site_name` | Имя сайта (`og:site_name`) | `config.title`\n`description` | Описание страницы (`og:desription`) | Page excerpt or first 200 characters of the content\n`twitter_card` | Карточка Twitter (`twitter:card`) | summary\n`twitter_id` | Twitter ID (`twitter:creator`) |\n`twitter_site` | Сайт Twitter (`twitter:site`) |\n`google_plus` | Ссылка на профиль Google+ |\n`fb_admins` | Facebook ID администратора |\n`fb_app_id` | Facebook ID приложения |\n\n### toc\n\nАнализирует все теги заголовков (H1~н6) на странице и создаёт на их основе оглавление.\n\n``` js\n<%- toc(str, [options]) %>\n```\n\nОпция | Описание | Умолчание\n--- | --- | ---\n`class` | Имя класса | toc\n`list_number` | Отображать нумерацию | true\n\n**Примеры:**\n\n``` js\n<%- toc(page.content) %>\n```\n\n[имена цветов]: http://www.w3.org/TR/css3-color/#svg-color\n[Moment.js]: http://momentjs.com/\n[Open Graph]: http://ogp.me/\n",
				"html": "<p>Помощники используются в шаблонах, чтобы быстро вставлять фрагменты. Помощники не могут быть использованы в исходных файлах .</p>\n<h2 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h2><h3 id=\"url-for\"><a href=\"#url-for\" class=\"headerlink\" title=\"url_for\"></a>url_for</h3><p>Возвращает URL-адрес корневого пути с префиксом. Нужно использовать этот помощник вместо <code>config.root + path</code>, начиная с Hexo версии 2.7.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- url_for(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"relative-url\"><a href=\"#relative-url\" class=\"headerlink\" title=\"relative_url\"></a>relative_url</h3><p>Возвращает относительный URL путь от <code>from</code> до <code>to</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- relative_url(<span class=\"keyword\">from</span>, to) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"gravatar\"><a href=\"#gravatar\" class=\"headerlink\" title=\"gravatar\"></a>gravatar</h3><p>Вставка изображения с Gravatar.<br>Если не указать в параметрах будет применена опция по умолчанию. Иначе можно установить число, которое будет передаваться в качестве параметра размера изображения, получаемого с Gravatar. Наконец, если установить его ссылкой на объект, он будет преобразован в строку запроса параметров для Gravatar.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(email, [options]);</span><br></pre></td></tr></table></figure>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>, <span class=\"number\">40</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span> &#123;<span class=\"attr\">s</span>: <span class=\"number\">40</span>, <span class=\"attr\">d</span>: <span class=\"string\">'http://example.com/image.png'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&amp;d=http%3A%2F%2Fexample.com%2Fimage.png</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"HTML-тэги\"><a href=\"#HTML-тэги\" class=\"headerlink\" title=\"HTML тэги\"></a>HTML тэги</h2><h3 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h3><p>Загружает CSS-файлы. <code>path</code> может быть массивом или строкой. Если путь не начинается префиксом <code>/</code> или любым протоколом, то будет начинаться с корневого URL-адреса. Если не добавить <code>.css</code>, в конце пути, он будет подставлен автоматически.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(<span class=\"string\">'style.css'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- css([<span class=\"string\">'style.css'</span>, <span class=\"string\">'screen.css'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\"&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h3><p>Загружает JavaScript файлы. <code>path</code> может быть массивом или строкой. Если путь не начинается префиксом <code>/</code> или любым протоколом, то будет начинаться с корневого URL-адреса. Если не добавить <code>.js</code>, в конце пути, он будет подставлен автоматически.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- js([<span class=\"string\">'script.js'</span>, <span class=\"string\">'gallery.js'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/gallery.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"link-to\"><a href=\"#link-to\" class=\"headerlink\" title=\"link_to\"></a>link_to</h3><p>Вставляет ссылку.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опции</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>external</code></td>\n<td>Открывает ссылку в новой вкладке</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Имя класса</td>\n<td></td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"http://www.google.com\"&gt;http://www.google.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\"&gt;Google&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>, &#123;<span class=\"attr\">external</span>: <span class=\"literal\">true</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\"&gt;Google&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"mail-to\"><a href=\"#mail-to\" class=\"headerlink\" title=\"mail_to\"></a>mail_to</h3><p>Вставка почтовой ссылки.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Имя класса</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>subject</code></td>\n<td>Тема письма</td>\n</tr>\n<tr>\n<td><code>cc</code></td>\n<td>Копия</td>\n</tr>\n<tr>\n<td><code>bcc</code></td>\n<td>Скрытая копия</td>\n</tr>\n<tr>\n<td><code>body</code></td>\n<td>Содержание сообщения</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"a@abc.com\"&gt;a@abc.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>, <span class=\"string\">'Email'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"Email\"&gt;Email&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"image-tag\"><a href=\"#image-tag\" class=\"headerlink\" title=\"image_tag\"></a>image_tag</h3><p>Вставка изображения.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- image_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>alt</code></td>\n<td>Альтернативный текст изображения</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Имя класса</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>width</code></td>\n<td>Ширина изображения</td>\n</tr>\n<tr>\n<td><code>height</code></td>\n<td>Высота изображения</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"favicon-tag\"><a href=\"#favicon-tag\" class=\"headerlink\" title=\"favicon_tag\"></a>favicon_tag</h3><p>Вставка иконки сайта (favicon).</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- favicon_tag(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"feed-tag\"><a href=\"#feed-tag\" class=\"headerlink\" title=\"feed_tag\"></a>feed_tag</h3><p>Вставка ссылки на канал.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- feed_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опции</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Имя канала</td>\n<td></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Тип канала</td>\n<td>atom</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Условные-теги\"><a href=\"#Условные-теги\" class=\"headerlink\" title=\"Условные теги\"></a>Условные теги</h3><h3 id=\"is-current\"><a href=\"#is-current\" class=\"headerlink\" title=\"is_current\"></a>is_current</h3><p>Проверить, соответствует ли <code>path</code> URL-адресу текущей страницы. Используйте <code>strict</code> для обеспечения строгого соответствия.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_current(path, [strict]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-home\"><a href=\"#is-home\" class=\"headerlink\" title=\"is_home\"></a>is_home</h3><p>Проверить, является ли текущая страница главной.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_home() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-post\"><a href=\"#is-post\" class=\"headerlink\" title=\"is_post\"></a>is_post</h3><p>Проверить, является ли текущая страница постом.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_post() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-archive\"><a href=\"#is-archive\" class=\"headerlink\" title=\"is_archive\"></a>is_archive</h3><p>Проверить, является ли текущая страница архивом.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_archive() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-year\"><a href=\"#is-year\" class=\"headerlink\" title=\"is_year\"></a>is_year</h3><p>Проверить, является ли текущая страница годовым архивом.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_year() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-month\"><a href=\"#is-month\" class=\"headerlink\" title=\"is_month\"></a>is_month</h3><p>Проверить, является ли текущая страница месячным архивом.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_month() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-category\"><a href=\"#is-category\" class=\"headerlink\" title=\"is_category\"></a>is_category</h3><p>Проверить, является ли текущая страница страницей категории.<br>Если строка содержит параметр, проверяется, соответствует ли текущая страница заданной категории.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_category() %&gt;</span><br><span class=\"line\">&lt;%- is_category(<span class=\"string\">'hobby'</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-tag\"><a href=\"#is-tag\" class=\"headerlink\" title=\"is_tag\"></a>is_tag</h3><p>Проверить, является ли текущая страница страницей тэга. Если строка содержит параметр, проверяется, соответствует ли текущая страница заданному тэгу.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_tag() %&gt;</span><br><span class=\"line\">&lt;%- is_tag(<span class=\"string\">'hobby'</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Работа-со-строками\"><a href=\"#Работа-со-строками\" class=\"headerlink\" title=\"Работа со строками\"></a>Работа со строками</h2><h3 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\"trim\"></a>trim</h3><p>Удаляет префиксы и конечные пробелы из строки.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- trim(string) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"strip-html\"><a href=\"#strip-html\" class=\"headerlink\" title=\"strip_html\"></a>strip_html</h3><p>Санирует(sanitizes) все HTML-теги в строку.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(<span class=\"string\">'It'</span>s not &lt;b&gt;important&lt;<span class=\"regexp\">/b&gt; anymore!') %&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ It's not important anymore!</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"titlecase\"><a href=\"#titlecase\" class=\"headerlink\" title=\"titlecase\"></a>titlecase</h3><p>Правильно расставляет заглавные буквы в строке заголовка.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(<span class=\"string\">'this is an apple'</span>) %&gt;</span><br><span class=\"line\"># This is an Apple</span><br></pre></td></tr></table></figure>\n<h3 id=\"markdown\"><a href=\"#markdown\" class=\"headerlink\" title=\"markdown\"></a>markdown</h3><p>Преобразует строку с помощью Markdown.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(str) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(<span class=\"string\">'make me **strong**'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// make me &lt;strong&gt;strong&lt;/strong&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h3><p>Обрабатывает строку.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- render(str, engine, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"word-wrap\"><a href=\"#word-wrap\" class=\"headerlink\" title=\"word_wrap\"></a>word_wrap</h3><p>Переносит строки длиннее указанного в <code>length</code> количества символов. <code>length</code> равняется 80 по умолчанию.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(str, [length]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(<span class=\"string\">'Once upon a time'</span>, <span class=\"number\">8</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon\\n a time</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"truncate\"><a href=\"#truncate\" class=\"headerlink\" title=\"truncate\"></a>truncate</h3><p>Обрезает текст после определённого в <code>length</code> количества символов. По умолчанию <code>length</code> 30 символов.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(text, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon a ti...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>, <span class=\"attr\">separator</span>: <span class=\"string\">' '</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon a...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- truncate(<span class=\"string\">'And they found that many people were sleeping better.'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">25</span>, <span class=\"attr\">omission</span>: <span class=\"string\">'... (continued)'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// And they f... (continued)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Шаблоны\"><a href=\"#Шаблоны\" class=\"headerlink\" title=\"Шаблоны\"></a>Шаблоны</h2><h3 id=\"partial\"><a href=\"#partial\" class=\"headerlink\" title=\"partial\"></a>partial</h3><p>Загружает другие файлы шаблонов. Можно назначить локальные переменные в <code>locals</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(layout, [locals], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cache</code></td>\n<td>Кэшировать содержимое (Использовать кэш фрагментов.)</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>only</code></td>\n<td>Строгие локальные переменные. Использовать только указанные в шаблоне переменные <code>locals</code>.</td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fragment-cache\"><a href=\"#fragment-cache\" class=\"headerlink\" title=\"fragment_cache\"></a>fragment_cache</h3><p>Кэширует содержимое фрагмента. Сохраняет содержимое внутри фрагмента в кэш и при следующем запросе берет значения из него.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(id, fn);</span><br></pre></td></tr></table></figure>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;) %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Дата-и-время\"><a href=\"#Дата-и-время\" class=\"headerlink\" title=\"Дата и время\"></a>Дата и время</h2><h3 id=\"date\"><a href=\"#date\" class=\"headerlink\" title=\"date\"></a>date</h3><p>Вставляет отформатированную дату. <code>date</code> может быть в формате времени Unix, строки ISO, объекта date, или <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> объекта. Параметр <code>format</code> по умолчанию равен  <code>date_format</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'YYYY/M/D'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1 2013</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"date-xml\"><a href=\"#date-xml\" class=\"headerlink\" title=\"date_xml\"></a>date_xml</h3><p>Вставляет дату в формате XML. <code>date</code> может быть в формате времени Unix, строки ISO, объекта date, или <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> объекта.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(date) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01T00:00:00.000Z</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"time\"><a href=\"#time\" class=\"headerlink\" title=\"time\"></a>time</h3><p>Вставляет отформатированное время. <code>date</code> может быть в формате времени Unix, строки ISO, объекта date, или <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> объекта. Параметр <code>format</code> по умолчанию равен  <code>time_format</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 13:05:12</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 1:05:12 pm</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"full-date\"><a href=\"#full-date\" class=\"headerlink\" title=\"full_date\"></a>full_date</h3><p>Вставляет отформатированные дату и время. <code>date</code> может быть в формате времени Unix, строки ISO, объекта date, или <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> объекта. Параметр <code>format</code> по умолчанию равен  <code>date_format + time_format</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1, 2013 0:00:00</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(), <span class=\"string\">'dddd, MMMM Do YYYY, h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Tuesday, January 1st 2013, 12:00:00 am</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"moment\"><a href=\"#moment\" class=\"headerlink\" title=\"moment\"></a>moment</h3><p>Библиотека <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a>.</p>\n<h2 id=\"Списки\"><a href=\"#Списки\" class=\"headerlink\" title=\"Списки\"></a>Списки</h2><h3 id=\"list-categories\"><a href=\"#list-categories\" class=\"headerlink\" title=\"list_categories\"></a>list_categories</h3><p>Вставляет список всех категорий.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_categories([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Упорядочивание категорий</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Порядок сортировки. <code>1</code>, <code>asc</code> для сортировки по увеличению; <code>-1</code>, <code>desc</code> для сортировки по уменьшению</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Отображать количество постов для каждой категории</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Стиль показа списка категорий. <code>list</code> отображает категории в неупорядоченном списке.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Разделитель категорий. (Работает если только стиль <code>style</code> не задан как <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>depth</code></td>\n<td>Глубина вложенных категорий для отображения. <code>0</code> отображает все категории и подкатегории; <code>-1</code> похож на <code>0</code> но отображается в плоскости; <code>1</code> отображает только разделы верхнего уровня.</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Имя класса списка категорий.</td>\n<td>category</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>Функция, позволяющая изменить отображаемое имя категории.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-tags\"><a href=\"#list-tags\" class=\"headerlink\" title=\"list_tags\"></a>list_tags</h3><p>Вставка списка всех тэгов.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_tags([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Сортировать по категориям</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Порядок сортировки. <code>1</code>, <code>asc</code> по увеличению; <code>-1</code>, <code>desc</code> по уменьшению</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Отображать количество постов для каждого тэга.</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Стиль показа списка тэгов. <code>list</code> отображает категории в неупорядоченном списке.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Разделитель тэгов. (Работает если только стиль <code>style</code> не задан как <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Имя класса списка тэгов.</td>\n<td>tag</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>Функция, позволяющая изменить отображаемое имя категории.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>Ограничение количества отображаемых тэгов (0 = неограниченно)</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-archives\"><a href=\"#list-archives\" class=\"headerlink\" title=\"list_archives\"></a>list_archives</h3><p>Вставка списка архивов.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_archives([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>type</code></td>\n<td>Тип. Значение может быть года <code>yearly</code> или месяца <code>monthly</code>.</td>\n<td>monthly</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Порядок сортировки. <code>1</code>, <code>asc</code> по увеличению; <code>-1</code>, <code>desc</code> по уменьшению</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Отобразить количество сообщений для каждого архива</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>Формат даты</td>\n<td>MMMM YYYY</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Стиль показа списка архивов. <code>list</code> отображает категории в неупорядоченном списке.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Разделитель архивов. (Работает если только стиль <code>style</code> не задан как <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Имя класса списка архивов.</td>\n<td>archive</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>Функция, позволяющая изменить отображаемое имя архива.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-posts\"><a href=\"#list-posts\" class=\"headerlink\" title=\"list_posts\"></a>list_posts</h3><p>Список постов.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_posts([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Сортировка постов</td>\n<td>date</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Порядок сортировки. <code>1</code>, <code>asc</code> по увеличению; <code>-1</code>, <code>desc</code> по убыванию</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Стиль показа списка постов. <code>list</code> отображает категории в неупорядоченном списке.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Разделитель постов. (Работает если только стиль <code>style</code> не задан как <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Имя класса списка постов.</td>\n<td>post</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>Ограничени количества отображаемых постов (0 = неограниченно)</td>\n<td>6</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>Функция, позволяющая изменить отображаемое имя поста.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tagcloud\"><a href=\"#tagcloud\" class=\"headerlink\" title=\"tagcloud\"></a>tagcloud</h3><p>Облако тэгов.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- tagcloud([tags], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>min_font</code></td>\n<td>Минимальный размер шрифта</td>\n<td>10</td>\n</tr>\n<tr>\n<td><code>max_font</code></td>\n<td>Максимальный размер шрифта</td>\n<td>20</td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td>Единица измерения размера шрифта</td>\n<td>px</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>Общая сумма тэгов</td>\n<td>40</td>\n</tr>\n<tr>\n<td><code>orderby</code></td>\n<td>Упорядочить по тэгу</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Порядок сортировки. <code>1</code>, <code>asc</code> по увеличению; <code>-1</code>, <code>desc</code> по убыванию</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>Цветное облако тэгов</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>start_color</code></td>\n<td>Стартовый цвет. Можно использовать hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) или <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">имена цветов</a>. Эта опция работает только если <code>color</code> установлен в <code>true</code>.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>end_color</code></td>\n<td>Конечный цвет. Можно использовать hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) или <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">имена цветов</a>. Эта опция работает только если <code>color</code> установлен в <code>true</code>.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Разное\"><a href=\"#Разное\" class=\"headerlink\" title=\"Разное\"></a>Разное</h2><h3 id=\"paginator\"><a href=\"#paginator\" class=\"headerlink\" title=\"paginator\"></a>paginator</h3><p>Вставляет нумерацию страниц.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- paginator(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>base</code></td>\n<td>Базовый URL-адрес</td>\n<td>/</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>Формат URL-адреса</td>\n<td>page/%d/</td>\n</tr>\n<tr>\n<td><code>total</code></td>\n<td>Количество страниц</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>current</code></td>\n<td>Номер текущей страницы</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>prev_text</code></td>\n<td>Ссылка на предыдущую страницу. Работает только если <code>prev_next</code> имеет значение <code>true</code>.</td>\n<td>Prev</td>\n</tr>\n<tr>\n<td><code>next_text</code></td>\n<td>Ссылка на следующую страницу. Работает только если <code>prev_next</code> имеет значение <code>true</code>.</td>\n<td>Next</td>\n</tr>\n<tr>\n<td><code>space</code></td>\n<td>Пространство в тексте</td>\n<td>&hellp;</td>\n</tr>\n<tr>\n<td><code>prev_next</code></td>\n<td>Отображает ссылки на предыдущую и следующую страницы</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>end_size</code></td>\n<td>Количество страниц, отображаемых с начало и конца.</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>mid_size</code></td>\n<td>Количество страниц, отображаемых от текущей страницы. Текущая страница не включена.</td>\n<td>2</td>\n</tr>\n<tr>\n<td><code>show_all</code></td>\n<td>Отобразить все страницы. Если установлено в <code>true</code>, <code>end_size</code> и <code>mid_size</code> не работают.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"search-form\"><a href=\"#search-form\" class=\"headerlink\" title=\"search_form\"></a>search_form</h3><p>Вставляет форму поиска Google.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- search_form(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опции</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Имя класса форма</td>\n<td>search-form</td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>Подсказка поиска</td>\n<td>Search</td>\n</tr>\n<tr>\n<td><code>button</code></td>\n<td>Отображать кнопку поиска. Значение может быть логическим или строковым. Если значение - строка, тогда она подставится в текст кнопки.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"number-format\"><a href=\"#number-format\" class=\"headerlink\" title=\"number_format\"></a>number_format</h3><p>Формат чисел.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(number, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>precision</code></td>\n<td>Точность чисел. Значение можно установить в <code>false</code> или неотрицательное целое число.</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>delimiter</code></td>\n<td>Разделитель тысяч</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Разделитель дробной части числа от целой.</td>\n<td>.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">1</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.68</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">4</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.6700</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">0</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">delimiter</span>: <span class=\"string\">''</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12345.67</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">separator</span>: <span class=\"string\">'/'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345/67</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"open-graph\"><a href=\"#open-graph\" class=\"headerlink\" title=\"open_graph\"></a>open_graph</h3><p>Вставляет график <a href=\"http://ogp.me/\" target=\"_blank\" rel=\"noopener\">Open Graph</a>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- open_graph([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Заголовок страницы (<code>og:title</code>)</td>\n<td><code>page.title</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Тип страницы (<code>og:type</code>)</td>\n<td>blog</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>URL-адрес страницы (<code>og:url</code>)</td>\n<td><code>url</code></td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>Обложка страницы (<code>og:image</code>)</td>\n<td>First image in the content</td>\n</tr>\n<tr>\n<td><code>site_name</code></td>\n<td>Имя сайта (<code>og:site_name</code>)</td>\n<td><code>config.title</code></td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>Описание страницы (<code>og:desription</code>)</td>\n<td>Page excerpt or first 200 characters of the content</td>\n</tr>\n<tr>\n<td><code>twitter_card</code></td>\n<td>Карточка Twitter (<code>twitter:card</code>)</td>\n<td>summary</td>\n</tr>\n<tr>\n<td><code>twitter_id</code></td>\n<td>Twitter ID (<code>twitter:creator</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>twitter_site</code></td>\n<td>Сайт Twitter (<code>twitter:site</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>google_plus</code></td>\n<td>Ссылка на профиль Google+</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_admins</code></td>\n<td>Facebook ID администратора</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_app_id</code></td>\n<td>Facebook ID приложения</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"toc\"><a href=\"#toc\" class=\"headerlink\" title=\"toc\"></a>toc</h3><p>Анализирует все теги заголовков (H1~н6) на странице и создаёт на их основе оглавление.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(str, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Опция</th>\n<th>Описание</th>\n<th>Умолчание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Имя класса</td>\n<td>toc</td>\n</tr>\n<tr>\n<td><code>list_number</code></td>\n<td>Отображать нумерацию</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Примеры:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(page.content) %&gt;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6bd0081koeom1wy9hdw",
				"title": "Helpers",
				"markdown": "\nOs Helpers são usados em templates para ajudá-lo a inserir snippets (trechos de código) rapidamente. Os helpers não podem ser usados em arquivos de source (arquivos de postagem em Markdown por exemplo).\n\nVocê pode usar os helpers padrões do Hexo ou [criar seus próprios helpers personalizados](../api/helper.html).\n\n{% youtube Uc53pW0GJHU %}\n\n## URL\n\n### url_for\n\nRetorna uma url com o caminho raiz prefixado. Você deve usar esse helper em vez de `config.root + path` desde a versão 2.7 do Hexo.\n\n``` js\n<%- url_for(path) %>\n```\n\n### relative_url\n\nRetorna a URL relativa de `from` para `to`.\n\n``` js\n<%- relative_url(from, to) %>\n```\n\n### gravatar\n\nInsere uma imagem do Gravatar.\nSe você não especificar o parâmetro [options], as opções padrão serão aplicadas. Caso contrário, você pode configurá-lo para um número que será passado como parâmetro de tamanho para o Gravatar. Finalmente, se você configurá-lo para um objeto, ele será convertido em uma string de consulta de parâmetros para o Gravatar.\n\n``` js\n<%- gravatar(email, [options]);\n```\n\n**Exemplos:**\n\n``` js\n<%- gravatar('a@abc.com') %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787\n\n<%- gravatar('a@abc.com', 40) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40\n\n<%- gravatar('a@abc.com' {s: 40, d: 'http://example.com/image.png'}) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&d=http%3A%2F%2Fexample.com%2Fimage.png\n```\n\n## HTML Tags\n\n### css\n\nCarrega arquivos CSS. Onde `path` pode ser um array ou uma string. Se `path` não for prefixado com `/` ou com qualquer protocolo, ele será prefixado com a URL raiz. Se você não adicionar a extensão `.css` após `path`, ela será adicionada automaticamente.\n\n``` js\n<%- css(path, ...) %>\n```\n\n**Exemplos:**\n\n``` js\n<%- css('style.css') %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n\n<%- css(['style.css', 'screen.css']) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n// <link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\">\n```\n\n### js\n\nCarrega arquivos JavaScript. O `path` pode ser uma array ou uma string. Se `path` não for prefixado com `/` ou com qualquer protocolo, ele será prefixado com a URL raiz. Se você não adicionar a extensão `.js` após `path`, ela será adicionada automaticamente.\n\n``` js\n<%- js(path, ...) %>\n```\n\n**Exemplos:**\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n\n<%- js(['script.js', 'gallery.js']) %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n// <script type=\"text/javascript\" src=\"/gallery.js\"></script>\n```\n\n### link_to\n\nInsere um link.\n\n``` js\n<%- link_to(path, [text], [options]) %>\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`external` | Abre o link em uma nova aba | false\n`class` | Nome da classe |\n`id` | ID |\n\n**Exemplos:**\n\n``` js\n<%- link_to('http://www.google.com') %>\n// <a href=\"http://www.google.com\" title=\"http://www.google.com\">http://www.google.com</a>\n\n<%- link_to('http://www.google.com', 'Google') %>\n// <a href=\"http://www.google.com\" title=\"Google\">Google</a>\n\n<%- link_to('http://www.google.com', 'Google', {external: true}) %>\n// <a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\">Google</a>\n```\n\n### mail_to\n\nInsere um link de e-mail.\n\n``` js\n<%- mail_to(path, [text], [options]) %>\n```\n\nOpção | Descrição\n--- | ---\n`class` | Nome da classe\n`id` | ID\n`subject` | Assunto do e-mail\n`cc` | CC\n`bcc` | BCC\n`body` | Conteúdo do e-mail\n\n**Exemplos:**\n\n``` js\n<%- mail_to('a@abc.com') %>\n// <a href=\"mailto:a@abc.com\" title=\"a@abc.com\">a@abc.com</a>\n\n<%- mail_to('a@abc.com', 'Email') %>\n// <a href=\"mailto:a@abc.com\" title=\"Email\">Email</a>\n```\n\n### image_tag\n\nInsere uma imagem.\n\n``` js\n<%- image_tag(path, [options]) %>\n```\n\nOpção | Descrição\n--- | ---\n`alt` | Texto alternativo da imagem\n`class` | Nome da classe\n`id` | ID\n`width` | Largura da imagem\n`height` | Altura da imagem\n\n### favicon_tag\n\nInsere um favicon.\n\n``` js\n<%- favicon_tag(path) %>\n```\n\n### feed_tag\n\nInsere um link de feed.\n\n``` js\n<%- feed_tag(path, [options]) %>\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`title` | Título do feed |\n`type` | Tipo do feed | atom\n\n## Tags condicionais\n\n### is_current\n\nVerifica se `path` corresponde à URL da página atual. Use opções `strict` para habilitar um modo estrito de correspondência.\n\n``` js\n<%- is_current(path, [strict]) %>\n```\n\n### is_home\n\nVerifica se a página atual é a pagina home.\n\n``` js\n<%- is_home() %>\n```\n\n### is_post\n\nVerifica se a página atual é uma postagem.\n\n``` js\n<%- is_post() %>\n```\n\n### is_archive\n\nVerifica se a página atual é uma página de arquivo.\n\n``` js\n<%- is_archive() %>\n```\n\n### is_year\n\nVerifica se a página atual é uma página de arquivo anual.\n\n``` js\n<%- is_year() %>\n```\n\n### is_month\n\nVerifica se a página atual é uma página de arquivo mensal.\n\n``` js\n<%- is_month() %>\n```\n\n### is_category\n\nVerifica se a página atual é uma página de categoria.\nSe uma string for dada como parâmetro, também é verificado se a página atual corresponde à categoria dada.\n\n``` js\n<%- is_category() %>\n<%- is_category('hobby') %>\n```\n\n### is_tag\n\nVerifica se a página atual é uma página de tag.\nSe uma string for dada como parâmetro, também é verificado se a página atual corresponde à tag fornecida.\n\n``` js\n<%- is_tag() %>\n<%- is_tag('hobby') %>\n```\n\n## Manipulação de String\n\n### trim\n\nRemove espaços em branco no inicio e fim de uma string.\n\n``` js\n<%- trim(string) %>\n```\n\n### strip_html\n\nRemove as tags HTML de uma string.\n\n``` js\n<%- strip_html(string) %>\n```\n\n**Exemplo:**\n\n``` js\n<%- strip_html('It\\'s not <b>important</b> anymore!') %>\n// It's not important anymore!\n```\n\n### titlecase\n\nFormata um título com as primeiras letras de palavras importantes em maiúsculo.\n\n``` js\n<%- titlecase(string) %>\n```\n\n**Exemplos:**\n\n``` js\n<%- titlecase('this is an apple') %>\n# This is an Apple\n```\n\n### markdown\n\nRenderiza um conteúdo em Markdown.\n\n``` js\n<%- markdown(str) %>\n```\n\n**Exemplos:**\n\n``` js\n<%- markdown('make me **strong**') %>\n// make me <strong>strong</strong>\n```\n\n### render\n\nRenderiza uma string.\n\n``` js\n<%- render(str, engine, [options]) %>\n```\n\n### word_wrap\n\nColoca uma quebra de linha no texto a partir de um limite de caracteres, o limite é `length`. Por padrão, o valor de `length` é 80.\n\n``` js\n<%- word_wrap(str, [length]) %>\n```\n\n**Exemplos:**\n\n``` js\n<%- word_wrap('Once upon a time', 8) %>\n// Once upon\\n a time\n```\n\n### truncate\n\nOmite o texto após um certo valor de `length`. O valor padrão de `length` é 30 caracteres.\n\n``` js\n<%- truncate(text, [options]) %>\n```\n\n**Examples:**\n\n``` js\n<%- truncate('Once upon a time in a world far far away', {length: 17}) %>\n// Once upon a ti...\n\n<%- truncate('Once upon a time in a world far far away', {length: 17, separator: ' '}) %>\n// Once upon a...\n\n<%- truncate('And they found that many people were sleeping better.', {length: 25, omission: '... (continued)'}) %>\n// And they f... (continued)\n```\n\n## Templates\n\n### partial\n\nCarrega outros arquivos de template. Você pode definir variáveis locais em `locals`.\n\n``` js\n<%- partial(layout, [locals], [options]) %>\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`cache` | Conteúdo da cache (usa fragmento de cache) | `false`\n`only` | Variáveis locais estritas. Só usa variáveis definidas em `locals` dentro de templates. | `false`\n\n### fragment_cache\n\nCache do conteúdo em um fragmento. Salva o conteúdo dentro de um fragmento e serve o cache quando a próxima requisição chegar.\n\n``` js\n<%- fragment_cache(id, fn);\n```\n\n**Exemplos:**\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}) %>\n```\n\n## Date & Time\n\n### date\n\nInsere a data formatada. `date` pode ser data no padrão Unix, string ISO, objeto de data ou objeto [Moment.js]. A Opção `format` usa a definição `date_format` por padrão.\n\n``` js\n<%- date(date, [format]) %>\n```\n\n**Exemplos:**\n\n``` js\n<%- date(Date.now()) %>\n// 2013-01-01\n\n<%- date(Date.now(), 'YYYY/M/D') %>\n// Jan 1 2013\n```\n\n### date_xml\n\nInsere a data no formato XML. `date` pode ser data no padrão Unix, string ISO, objeto de data ou objeto [Moment.js].\n\n``` js\n<%- date_xml(date) %>\n```\n\n**Exemplos:**\n\n``` js\n<%- date_xml(Date.now()) %>\n// 2013-01-01T00:00:00.000Z\n```\n\n### time\n\nInsere a hora formatada. `date` pode ser data no padrão Unix, string ISO, objeto de data ou objeto [Moment.js]. A Opção `format` usa a definição `time_format` por padrão.\n\n``` js\n<%- time(date, [format]) %>\n```\n\n**Exemplo:**\n\n``` js\n<%- time(Date.now()) %>\n// 13:05:12\n\n<%- time(Date.now(), 'h:mm:ss a') %>\n// 1:05:12 pm\n```\n\n### full_date\n\nInsere a data e a hora formatadas. `date` pode ser data no padrão Unix, string ISO, objeto de data ou objeto [Moment.js]. A Opção `format` usa a definição `date_format + time_format` por padrão.\n\n``` js\n<%- full_date(date, [format]) %>\n```\n\n**Exemplos:**\n\n``` js\n<%- full_date(new Date()) %>\n// Jan 1, 2013 0:00:00\n\n<%- full_date(new Date(), 'dddd, MMMM Do YYYY, h:mm:ss a') %>\n// Tuesday, January 1st 2013, 12:00:00 am\n```\n\n### moment\n\nBiblioteca [Moment.js].\n\n## List\n\n### list_categories\n\nInsere uma lista de todas as categorias.\n\n``` js\n<%- list_categories([options]) %>\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`orderby` | Critério de ordenação das categorias | name\n`order` | Tipo de ordenação. `1`, `asc` para ascendente; `-1`, `desc` para descendente | 1\n`show_count` | Exibir o número de postagens para cada categoria | true\n`style` | Estilo para exibir a lista de categorias. `list` exibe as categorias em uma lista não ordenada. | list\n`separator` | Separador entre categorias. (Só funciona se `style` não for `list`). | ,\n`depth` | Níveis de categorias a serem exibidos. `0` exibe todas as categorias e suas categorias filhas; `-1` é semelhante a `0`, mas exibe as categorias e suas filhas em um mesmo nível hierárquico; `1` exibe apenas as categorias de nível superior. | 0\n`class` | Nome da classe da lista de categorias. | category\n`transform` | A função que altera a exibição do nome da categoria. |\n`suffix`| Adiciona um sufixo para o link. | None\n\n### list_tags\n\nInsere uma lista de tags.\n\n``` js\n<%- list_tags([options]) %>\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`orderby` | Critério de ordenação das tags | name\n`order` | Tipo de ordem. `1`, `asc` para ascendente; `-1`, `desc` para descendente | 1\n`show_count` | Exibir o número de postagens para cada tag | true\n`style` | Estilo para exibir a lista de tags. `list` exibe as tags em uma lista não ordenada. | list\n`separator`| Separador entre tags. (Só funciona se `style` não for `list`). | ,\n`class` | Nome da classe da lista de tags. | tag\n`transform` | A função que altera a exibição do nome da tag. |\n`amount` | O número de tags a exibir (0 = ilimitado) | 0\n`suffix` | Adiciona um sufixo para o link. | Nenhum\n\n### list_archives\n\nInsere uma lista de arquivos (archives).\n\n``` js\n<%- list_archives([options]) %>\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`type` | Tipo. Esse valor pode ser `yearly` ou `monthly`. | monthly\n`order` | Tipo de ordem. `1`, `asc` para ascendente; `-1`, `desc` para descendente | 1\n`show_count` | Exibir o número de postagens para cada arquivo | true\n`format` | Formato da data | MMMM YYYY\n`style` | Estilo para exibir a lista de arquivos. `list` exibe arquivos em uma lista não ordenada. | list\n`separator`| Separador entre arquivos. (Só funciona se `style` não for `list`) | ,\n`class` | Nome da classe da lista de arquivos. | archive\n`transform` | A função que altera a exibição do nome do archive. |\n\n### list_posts\n\nInsere uma lista de posts.\n\n``` js\n<%- list_posts([options]) %>\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`orderby` | Critério de ordenação de postagens | date\n`order` | Tipo de ordem. `1`, `asc` para ascendente; `-1`, `desc` para descendente | 1\n`style` | Estilo para exibir a lista de postagens. `list` exibe as postagens em uma lista não ordenada. | list\n`separator` | Separador entre postagens. (Só funciona se `style` não for `list`) | ,\n`class` | Nome da classe da lista de postagem. | post\n`amount` | O número de postagens a serem exibidas (0 = ilimitado) | 6\n`transform` | A função que altera a exibição do nome do post. |\n\n### tagcloud\n\nInsere uma nuvem de tags.\n\n``` js\n<%- tagcloud([tags], [options]) %>\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`min_font` | Tamanho mínimo da fonte | 10\n`max_font` | Tamanho máximo da fonte | 20\n`unit` | Unidade de tamanho de fonte | px\n`amount` | Quantidade total de tags | 40\n`orderby` | Critério de ordenação de tags | name\n`order` | Tipo de ordem. `1`, `asc` para ascendente; `-1`, `desc` para descendente | 1\n`color` | Colorizar a nuvem de tags? | false\n`start_color` | Cor inicial. Você pode usar o padrão hexadecimal (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`) ou [color keywords]. Esta opção só funciona quando `color` é `true`. |\n`end_color` | Cor final. Você pode usar o padrão hexadecimal (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`) ou [color keywords]. Esta opção só funciona quando `color` é `true`. |\n\n## Miscelânea\n\n### paginator\n\nInsere um paginador.\n\n``` js\n<%- paginator(options) %>\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`base` | URL base | /\n`format` | Formato da URL | page/%d/\n`total` | Número de páginas | 1\n`current` | Número da página atual | 0\n`prev_text` | O texto do link da página anterior. Funciona apenas se `prev_next` estiver definido como `true`. | Prev\n`next_text` | O texto do link da próxima página. Funciona apenas se `prev_next` estiver definido como `true`. | Next\n`space` | Espaço do texto | &hellp;\n`prev_next` | Exibir os links anteriores e seguintes | true\n`end_size` | O número de páginas exibidas no início e no final | 1\n`mid_size` | O número de páginas exibidas entre a página atual, mas não incluindo a página atual | 2\n`show_all` | Exibir todas as páginas. Se isso for definido como `true`, `end_size` e` mid_size` não irão funcionar. | false\n\n### search_form\n\nInsere o formulário de busca do Google.\n\n``` js\n<%- search_form(options) %>\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`class` | O nome da classe do formulário | search-form\n`text`| Palavra de sugestão de busca | Search\n`button`| Exibir o botão de busca. O valor pode ser um booleano ou uma string. Quando o valor é uma string, ele será o texto do botão. | false\n\n### number_format\n\nFormata um número.\n\n``` js\n<%- number_format(number, [options]) %>\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`precision` | A precisão do número. O valor pode ser `false` ou um número inteiro não negativo. | false\n`delimiter` | O delimitador de casa de milhares | ,\n`separator` | O separador entre os dígitos fracionários e inteiros. | .\n\n**Exemplos:**\n\n``` js\n<%- number_format(12345.67, {precision: 1}) %>\n// 12,345.68\n\n<%- number_format(12345.67, {precision: 4}) %>\n// 12,345.6700\n\n<%- number_format(12345.67, {precision: 0}) %>\n// 12,345\n\n<%- number_format(12345.67, {delimiter: ''}) %>\n// 12345.67\n\n<%- number_format(12345.67, {separator: '/'}) %>\n// 12,345/67\n```\n\n### open_graph\n\nInsere dados do [Open Graph].\n\n``` js\n<%- open_graph([options]) %>\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`title` | Título da página (`og:title`) | `page.title`\n`type` | Tipo de página (`og:type`) | blog\n`url` | URL da página (`og:url`) | `url`\n`image` | Capa da página (`og:image`) | Primeira imagem no conteúdo\n`site_name` | Nome do site (`og:site_name`) | `config.title`\n`description`| Descrição da página (`og:desription`) | Trecho da página ou os 200 primeiros caracteres do conteúdo\n`twitter_card` | Tipo de Twitter card (`twitter:card`) | summary\n`twitter_id` | Twitter ID (`twitter:creator`) |\n`twitter_site` | Site do Twitter (`twitter:site`) |\n`google_plus` | Link de perfil do Google+ |\n`fb_admins` | ID de administrador do Facebook |\n`fb_app_id` | ID da aplicação do Facebook |\n\n### toc\n\nAnalisa todas as tags de título (h1~h6) no conteúdo e insere um índice.\n\n``` js\n<%- toc(str, [options]) %>\n```\n\nOpção | Descrição | Padrão\n--- | --- | ---\n`class` | Nome da classe | toc\n`list_number` | Exibe o número da lista | true\n`max_depth` | Profundidade máxima do cabeçalho gerado | 6\n\n**Exemplos:**\n\n``` js\n<%- toc(page.content) %>\n```\n\n[color keywords]: http://www.w3.org/TR/css3-color/#svg-color\n[Moment.js]: http://momentjs.com/\n[Open Graph]: http://ogp.me/\n",
				"html": "<p>Os Helpers são usados em templates para ajudá-lo a inserir snippets (trechos de código) rapidamente. Os helpers não podem ser usados em arquivos de source (arquivos de postagem em Markdown por exemplo).</p>\n<p>Você pode usar os helpers padrões do Hexo ou <a href=\"../api/helper.html\">criar seus próprios helpers personalizados</a>.</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/Uc53pW0GJHU\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h2 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h2><h3 id=\"url-for\"><a href=\"#url-for\" class=\"headerlink\" title=\"url_for\"></a>url_for</h3><p>Retorna uma url com o caminho raiz prefixado. Você deve usar esse helper em vez de <code>config.root + path</code> desde a versão 2.7 do Hexo.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- url_for(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"relative-url\"><a href=\"#relative-url\" class=\"headerlink\" title=\"relative_url\"></a>relative_url</h3><p>Retorna a URL relativa de <code>from</code> para <code>to</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- relative_url(<span class=\"keyword\">from</span>, to) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"gravatar\"><a href=\"#gravatar\" class=\"headerlink\" title=\"gravatar\"></a>gravatar</h3><p>Insere uma imagem do Gravatar.<br>Se você não especificar o parâmetro [options], as opções padrão serão aplicadas. Caso contrário, você pode configurá-lo para um número que será passado como parâmetro de tamanho para o Gravatar. Finalmente, se você configurá-lo para um objeto, ele será convertido em uma string de consulta de parâmetros para o Gravatar.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(email, [options]);</span><br></pre></td></tr></table></figure>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>, <span class=\"number\">40</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span> &#123;<span class=\"attr\">s</span>: <span class=\"number\">40</span>, <span class=\"attr\">d</span>: <span class=\"string\">'http://example.com/image.png'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&amp;d=http%3A%2F%2Fexample.com%2Fimage.png</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"HTML-Tags\"><a href=\"#HTML-Tags\" class=\"headerlink\" title=\"HTML Tags\"></a>HTML Tags</h2><h3 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h3><p>Carrega arquivos CSS. Onde <code>path</code> pode ser um array ou uma string. Se <code>path</code> não for prefixado com <code>/</code> ou com qualquer protocolo, ele será prefixado com a URL raiz. Se você não adicionar a extensão <code>.css</code> após <code>path</code>, ela será adicionada automaticamente.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(<span class=\"string\">'style.css'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- css([<span class=\"string\">'style.css'</span>, <span class=\"string\">'screen.css'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\"&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h3><p>Carrega arquivos JavaScript. O <code>path</code> pode ser uma array ou uma string. Se <code>path</code> não for prefixado com <code>/</code> ou com qualquer protocolo, ele será prefixado com a URL raiz. Se você não adicionar a extensão <code>.js</code> após <code>path</code>, ela será adicionada automaticamente.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- js([<span class=\"string\">'script.js'</span>, <span class=\"string\">'gallery.js'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/gallery.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"link-to\"><a href=\"#link-to\" class=\"headerlink\" title=\"link_to\"></a>link_to</h3><p>Insere um link.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>external</code></td>\n<td>Abre o link em uma nova aba</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Nome da classe</td>\n<td></td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"http://www.google.com\"&gt;http://www.google.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\"&gt;Google&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>, &#123;<span class=\"attr\">external</span>: <span class=\"literal\">true</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\"&gt;Google&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"mail-to\"><a href=\"#mail-to\" class=\"headerlink\" title=\"mail_to\"></a>mail_to</h3><p>Insere um link de e-mail.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Nome da classe</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>subject</code></td>\n<td>Assunto do e-mail</td>\n</tr>\n<tr>\n<td><code>cc</code></td>\n<td>CC</td>\n</tr>\n<tr>\n<td><code>bcc</code></td>\n<td>BCC</td>\n</tr>\n<tr>\n<td><code>body</code></td>\n<td>Conteúdo do e-mail</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"a@abc.com\"&gt;a@abc.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>, <span class=\"string\">'Email'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"Email\"&gt;Email&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"image-tag\"><a href=\"#image-tag\" class=\"headerlink\" title=\"image_tag\"></a>image_tag</h3><p>Insere uma imagem.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- image_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>alt</code></td>\n<td>Texto alternativo da imagem</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Nome da classe</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>width</code></td>\n<td>Largura da imagem</td>\n</tr>\n<tr>\n<td><code>height</code></td>\n<td>Altura da imagem</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"favicon-tag\"><a href=\"#favicon-tag\" class=\"headerlink\" title=\"favicon_tag\"></a>favicon_tag</h3><p>Insere um favicon.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- favicon_tag(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"feed-tag\"><a href=\"#feed-tag\" class=\"headerlink\" title=\"feed_tag\"></a>feed_tag</h3><p>Insere um link de feed.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- feed_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Título do feed</td>\n<td></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Tipo do feed</td>\n<td>atom</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Tags-condicionais\"><a href=\"#Tags-condicionais\" class=\"headerlink\" title=\"Tags condicionais\"></a>Tags condicionais</h2><h3 id=\"is-current\"><a href=\"#is-current\" class=\"headerlink\" title=\"is_current\"></a>is_current</h3><p>Verifica se <code>path</code> corresponde à URL da página atual. Use opções <code>strict</code> para habilitar um modo estrito de correspondência.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_current(path, [strict]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-home\"><a href=\"#is-home\" class=\"headerlink\" title=\"is_home\"></a>is_home</h3><p>Verifica se a página atual é a pagina home.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_home() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-post\"><a href=\"#is-post\" class=\"headerlink\" title=\"is_post\"></a>is_post</h3><p>Verifica se a página atual é uma postagem.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_post() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-archive\"><a href=\"#is-archive\" class=\"headerlink\" title=\"is_archive\"></a>is_archive</h3><p>Verifica se a página atual é uma página de arquivo.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_archive() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-year\"><a href=\"#is-year\" class=\"headerlink\" title=\"is_year\"></a>is_year</h3><p>Verifica se a página atual é uma página de arquivo anual.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_year() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-month\"><a href=\"#is-month\" class=\"headerlink\" title=\"is_month\"></a>is_month</h3><p>Verifica se a página atual é uma página de arquivo mensal.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_month() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-category\"><a href=\"#is-category\" class=\"headerlink\" title=\"is_category\"></a>is_category</h3><p>Verifica se a página atual é uma página de categoria.<br>Se uma string for dada como parâmetro, também é verificado se a página atual corresponde à categoria dada.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_category() %&gt;</span><br><span class=\"line\">&lt;%- is_category(<span class=\"string\">'hobby'</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-tag\"><a href=\"#is-tag\" class=\"headerlink\" title=\"is_tag\"></a>is_tag</h3><p>Verifica se a página atual é uma página de tag.<br>Se uma string for dada como parâmetro, também é verificado se a página atual corresponde à tag fornecida.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_tag() %&gt;</span><br><span class=\"line\">&lt;%- is_tag(<span class=\"string\">'hobby'</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Manipulacao-de-String\"><a href=\"#Manipulacao-de-String\" class=\"headerlink\" title=\"Manipulação de String\"></a>Manipulação de String</h2><h3 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\"trim\"></a>trim</h3><p>Remove espaços em branco no inicio e fim de uma string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- trim(string) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"strip-html\"><a href=\"#strip-html\" class=\"headerlink\" title=\"strip_html\"></a>strip_html</h3><p>Remove as tags HTML de uma string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Exemplo:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(<span class=\"string\">'It\\'s not &lt;b&gt;important&lt;/b&gt; anymore!'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// It's not important anymore!</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"titlecase\"><a href=\"#titlecase\" class=\"headerlink\" title=\"titlecase\"></a>titlecase</h3><p>Formata um título com as primeiras letras de palavras importantes em maiúsculo.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(<span class=\"string\">'this is an apple'</span>) %&gt;</span><br><span class=\"line\"># This is an Apple</span><br></pre></td></tr></table></figure>\n<h3 id=\"markdown\"><a href=\"#markdown\" class=\"headerlink\" title=\"markdown\"></a>markdown</h3><p>Renderiza um conteúdo em Markdown.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(str) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(<span class=\"string\">'make me **strong**'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// make me &lt;strong&gt;strong&lt;/strong&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h3><p>Renderiza uma string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- render(str, engine, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"word-wrap\"><a href=\"#word-wrap\" class=\"headerlink\" title=\"word_wrap\"></a>word_wrap</h3><p>Coloca uma quebra de linha no texto a partir de um limite de caracteres, o limite é <code>length</code>. Por padrão, o valor de <code>length</code> é 80.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(str, [length]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(<span class=\"string\">'Once upon a time'</span>, <span class=\"number\">8</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon\\n a time</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"truncate\"><a href=\"#truncate\" class=\"headerlink\" title=\"truncate\"></a>truncate</h3><p>Omite o texto após um certo valor de <code>length</code>. O valor padrão de <code>length</code> é 30 caracteres.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(text, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon a ti...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>, <span class=\"attr\">separator</span>: <span class=\"string\">' '</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon a...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- truncate(<span class=\"string\">'And they found that many people were sleeping better.'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">25</span>, <span class=\"attr\">omission</span>: <span class=\"string\">'... (continued)'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// And they f... (continued)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Templates\"><a href=\"#Templates\" class=\"headerlink\" title=\"Templates\"></a>Templates</h2><h3 id=\"partial\"><a href=\"#partial\" class=\"headerlink\" title=\"partial\"></a>partial</h3><p>Carrega outros arquivos de template. Você pode definir variáveis locais em <code>locals</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(layout, [locals], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cache</code></td>\n<td>Conteúdo da cache (usa fragmento de cache)</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>only</code></td>\n<td>Variáveis locais estritas. Só usa variáveis definidas em <code>locals</code> dentro de templates.</td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fragment-cache\"><a href=\"#fragment-cache\" class=\"headerlink\" title=\"fragment_cache\"></a>fragment_cache</h3><p>Cache do conteúdo em um fragmento. Salva o conteúdo dentro de um fragmento e serve o cache quando a próxima requisição chegar.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(id, fn);</span><br></pre></td></tr></table></figure>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;) %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Date-amp-Time\"><a href=\"#Date-amp-Time\" class=\"headerlink\" title=\"Date &amp; Time\"></a>Date &amp; Time</h2><h3 id=\"date\"><a href=\"#date\" class=\"headerlink\" title=\"date\"></a>date</h3><p>Insere a data formatada. <code>date</code> pode ser data no padrão Unix, string ISO, objeto de data ou objeto <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a>. A Opção <code>format</code> usa a definição <code>date_format</code> por padrão.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'YYYY/M/D'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1 2013</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"date-xml\"><a href=\"#date-xml\" class=\"headerlink\" title=\"date_xml\"></a>date_xml</h3><p>Insere a data no formato XML. <code>date</code> pode ser data no padrão Unix, string ISO, objeto de data ou objeto <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(date) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01T00:00:00.000Z</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"time\"><a href=\"#time\" class=\"headerlink\" title=\"time\"></a>time</h3><p>Insere a hora formatada. <code>date</code> pode ser data no padrão Unix, string ISO, objeto de data ou objeto <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a>. A Opção <code>format</code> usa a definição <code>time_format</code> por padrão.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Exemplo:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 13:05:12</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 1:05:12 pm</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"full-date\"><a href=\"#full-date\" class=\"headerlink\" title=\"full_date\"></a>full_date</h3><p>Insere a data e a hora formatadas. <code>date</code> pode ser data no padrão Unix, string ISO, objeto de data ou objeto <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a>. A Opção <code>format</code> usa a definição <code>date_format + time_format</code> por padrão.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1, 2013 0:00:00</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(), <span class=\"string\">'dddd, MMMM Do YYYY, h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Tuesday, January 1st 2013, 12:00:00 am</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"moment\"><a href=\"#moment\" class=\"headerlink\" title=\"moment\"></a>moment</h3><p>Biblioteca <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a>.</p>\n<h2 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h2><h3 id=\"list-categories\"><a href=\"#list-categories\" class=\"headerlink\" title=\"list_categories\"></a>list_categories</h3><p>Insere uma lista de todas as categorias.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_categories([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Critério de ordenação das categorias</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Tipo de ordenação. <code>1</code>, <code>asc</code> para ascendente; <code>-1</code>, <code>desc</code> para descendente</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Exibir o número de postagens para cada categoria</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Estilo para exibir a lista de categorias. <code>list</code> exibe as categorias em uma lista não ordenada.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separador entre categorias. (Só funciona se <code>style</code> não for <code>list</code>).</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>depth</code></td>\n<td>Níveis de categorias a serem exibidos. <code>0</code> exibe todas as categorias e suas categorias filhas; <code>-1</code> é semelhante a <code>0</code>, mas exibe as categorias e suas filhas em um mesmo nível hierárquico; <code>1</code> exibe apenas as categorias de nível superior.</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Nome da classe da lista de categorias.</td>\n<td>category</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>A função que altera a exibição do nome da categoria.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>Adiciona um sufixo para o link.</td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-tags\"><a href=\"#list-tags\" class=\"headerlink\" title=\"list_tags\"></a>list_tags</h3><p>Insere uma lista de tags.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_tags([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Critério de ordenação das tags</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Tipo de ordem. <code>1</code>, <code>asc</code> para ascendente; <code>-1</code>, <code>desc</code> para descendente</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Exibir o número de postagens para cada tag</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Estilo para exibir a lista de tags. <code>list</code> exibe as tags em uma lista não ordenada.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separador entre tags. (Só funciona se <code>style</code> não for <code>list</code>).</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Nome da classe da lista de tags.</td>\n<td>tag</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>A função que altera a exibição do nome da tag.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>O número de tags a exibir (0 = ilimitado)</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>Adiciona um sufixo para o link.</td>\n<td>Nenhum</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-archives\"><a href=\"#list-archives\" class=\"headerlink\" title=\"list_archives\"></a>list_archives</h3><p>Insere uma lista de arquivos (archives).</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_archives([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>type</code></td>\n<td>Tipo. Esse valor pode ser <code>yearly</code> ou <code>monthly</code>.</td>\n<td>monthly</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Tipo de ordem. <code>1</code>, <code>asc</code> para ascendente; <code>-1</code>, <code>desc</code> para descendente</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Exibir o número de postagens para cada arquivo</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>Formato da data</td>\n<td>MMMM YYYY</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Estilo para exibir a lista de arquivos. <code>list</code> exibe arquivos em uma lista não ordenada.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separador entre arquivos. (Só funciona se <code>style</code> não for <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Nome da classe da lista de arquivos.</td>\n<td>archive</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>A função que altera a exibição do nome do archive.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-posts\"><a href=\"#list-posts\" class=\"headerlink\" title=\"list_posts\"></a>list_posts</h3><p>Insere uma lista de posts.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_posts([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Critério de ordenação de postagens</td>\n<td>date</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Tipo de ordem. <code>1</code>, <code>asc</code> para ascendente; <code>-1</code>, <code>desc</code> para descendente</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Estilo para exibir a lista de postagens. <code>list</code> exibe as postagens em uma lista não ordenada.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separador entre postagens. (Só funciona se <code>style</code> não for <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Nome da classe da lista de postagem.</td>\n<td>post</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>O número de postagens a serem exibidas (0 = ilimitado)</td>\n<td>6</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>A função que altera a exibição do nome do post.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tagcloud\"><a href=\"#tagcloud\" class=\"headerlink\" title=\"tagcloud\"></a>tagcloud</h3><p>Insere uma nuvem de tags.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- tagcloud([tags], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>min_font</code></td>\n<td>Tamanho mínimo da fonte</td>\n<td>10</td>\n</tr>\n<tr>\n<td><code>max_font</code></td>\n<td>Tamanho máximo da fonte</td>\n<td>20</td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td>Unidade de tamanho de fonte</td>\n<td>px</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>Quantidade total de tags</td>\n<td>40</td>\n</tr>\n<tr>\n<td><code>orderby</code></td>\n<td>Critério de ordenação de tags</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Tipo de ordem. <code>1</code>, <code>asc</code> para ascendente; <code>-1</code>, <code>desc</code> para descendente</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>Colorizar a nuvem de tags?</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>start_color</code></td>\n<td>Cor inicial. Você pode usar o padrão hexadecimal (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) ou <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">color keywords</a>. Esta opção só funciona quando <code>color</code> é <code>true</code>.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>end_color</code></td>\n<td>Cor final. Você pode usar o padrão hexadecimal (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) ou <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">color keywords</a>. Esta opção só funciona quando <code>color</code> é <code>true</code>.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Miscelanea\"><a href=\"#Miscelanea\" class=\"headerlink\" title=\"Miscelânea\"></a>Miscelânea</h2><h3 id=\"paginator\"><a href=\"#paginator\" class=\"headerlink\" title=\"paginator\"></a>paginator</h3><p>Insere um paginador.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- paginator(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>base</code></td>\n<td>URL base</td>\n<td>/</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>Formato da URL</td>\n<td>page/%d/</td>\n</tr>\n<tr>\n<td><code>total</code></td>\n<td>Número de páginas</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>current</code></td>\n<td>Número da página atual</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>prev_text</code></td>\n<td>O texto do link da página anterior. Funciona apenas se <code>prev_next</code> estiver definido como <code>true</code>.</td>\n<td>Prev</td>\n</tr>\n<tr>\n<td><code>next_text</code></td>\n<td>O texto do link da próxima página. Funciona apenas se <code>prev_next</code> estiver definido como <code>true</code>.</td>\n<td>Next</td>\n</tr>\n<tr>\n<td><code>space</code></td>\n<td>Espaço do texto</td>\n<td>&hellp;</td>\n</tr>\n<tr>\n<td><code>prev_next</code></td>\n<td>Exibir os links anteriores e seguintes</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>end_size</code></td>\n<td>O número de páginas exibidas no início e no final</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>mid_size</code></td>\n<td>O número de páginas exibidas entre a página atual, mas não incluindo a página atual</td>\n<td>2</td>\n</tr>\n<tr>\n<td><code>show_all</code></td>\n<td>Exibir todas as páginas. Se isso for definido como <code>true</code>, <code>end_size</code> e<code>mid_size</code> não irão funcionar.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"search-form\"><a href=\"#search-form\" class=\"headerlink\" title=\"search_form\"></a>search_form</h3><p>Insere o formulário de busca do Google.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- search_form(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>O nome da classe do formulário</td>\n<td>search-form</td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>Palavra de sugestão de busca</td>\n<td>Search</td>\n</tr>\n<tr>\n<td><code>button</code></td>\n<td>Exibir o botão de busca. O valor pode ser um booleano ou uma string. Quando o valor é uma string, ele será o texto do botão.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"number-format\"><a href=\"#number-format\" class=\"headerlink\" title=\"number_format\"></a>number_format</h3><p>Formata um número.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(number, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>precision</code></td>\n<td>A precisão do número. O valor pode ser <code>false</code> ou um número inteiro não negativo.</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>delimiter</code></td>\n<td>O delimitador de casa de milhares</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>O separador entre os dígitos fracionários e inteiros.</td>\n<td>.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">1</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.68</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">4</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.6700</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">0</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">delimiter</span>: <span class=\"string\">''</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12345.67</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">separator</span>: <span class=\"string\">'/'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345/67</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"open-graph\"><a href=\"#open-graph\" class=\"headerlink\" title=\"open_graph\"></a>open_graph</h3><p>Insere dados do <a href=\"http://ogp.me/\" target=\"_blank\" rel=\"noopener\">Open Graph</a>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- open_graph([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Título da página (<code>og:title</code>)</td>\n<td><code>page.title</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Tipo de página (<code>og:type</code>)</td>\n<td>blog</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>URL da página (<code>og:url</code>)</td>\n<td><code>url</code></td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>Capa da página (<code>og:image</code>)</td>\n<td>Primeira imagem no conteúdo</td>\n</tr>\n<tr>\n<td><code>site_name</code></td>\n<td>Nome do site (<code>og:site_name</code>)</td>\n<td><code>config.title</code></td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>Descrição da página (<code>og:desription</code>)</td>\n<td>Trecho da página ou os 200 primeiros caracteres do conteúdo</td>\n</tr>\n<tr>\n<td><code>twitter_card</code></td>\n<td>Tipo de Twitter card (<code>twitter:card</code>)</td>\n<td>summary</td>\n</tr>\n<tr>\n<td><code>twitter_id</code></td>\n<td>Twitter ID (<code>twitter:creator</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>twitter_site</code></td>\n<td>Site do Twitter (<code>twitter:site</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>google_plus</code></td>\n<td>Link de perfil do Google+</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_admins</code></td>\n<td>ID de administrador do Facebook</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_app_id</code></td>\n<td>ID da aplicação do Facebook</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"toc\"><a href=\"#toc\" class=\"headerlink\" title=\"toc\"></a>toc</h3><p>Analisa todas as tags de título (h1~h6) no conteúdo e insere um índice.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(str, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Opção</th>\n<th>Descrição</th>\n<th>Padrão</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Nome da classe</td>\n<td>toc</td>\n</tr>\n<tr>\n<td><code>list_number</code></td>\n<td>Exibe o número da lista</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>max_depth</code></td>\n<td>Profundidade máxima do cabeçalho gerado</td>\n<td>6</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Exemplos:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(page.content) %&gt;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			},
			{
				"id": "cjqt5y6bd0082koeo4jp82uj6",
				"title": "Helpers",
				"markdown": "\nhelper จะถูกใช้ใน template เพื่อช่วยเสียบ snippet ได้รวดเร็ว แต่ helper \nนั้นไม่สามารถใช้ในไฟล์ source ได้ คุณสามารถ[write your own custom helper](https://hexo.io/api/helper.html)\nได้ง่ายๆ หรือใช้ helper ท่ีเตรียมไว้ให้ได้\n\n{% youtube Uc53pW0GJHU %}\n\n## URL\n\n### url_for\n\nส่งกลับ url ท่ีมี root path ตั้งขึ้นไว้  คุณต้องใช้ helper นี้แทน `config\n.root + path` ของ hexo 2.7\n\n``` js\n<%- url_for(path) %>\n```\n\n### relative_url\n\nส่งกลับ relative URL จาก `from` ไปเป็น `to`\n\n``` js\n<%- relative_url(from, to) %>\n```\n\n### gravatar\n\nเสียบรูปภาพ Gravatar เข้า:\n\nถ้าคุณไม่ได้ป่งชี้ parameter ของ [options] ให้ชัดเจน จะมีการตั้งค่าให้  by \ndefault  แล้วคุณก็สามารถตั้งค่า option ด้วยตนเอง ถ้าคุณตั้งค่านี้เป็น object \nobject นั้นจะถูกเปลี่ยนไปเป็น query string\n\n``` js\n<%- gravatar(email, [options]);\n```\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- gravatar('a@abc.com') %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787\n\n<%- gravatar('a@abc.com', 40) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40\n\n<%- gravatar('a@abc.com' {s: 40, d: 'http://example.com/image.png'}) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&d=http%3A%2F%2Fexample.com%2Fimage.png\n```\n\n## HTML Tags\n\n### css\n\nโหลดไฟล์ CSS  `path` นั้นเป็น array หรือ string ได้  ถ้า `path` นั้นไม่มี `/`\n  หรือ protocol ใดๆ เป็นคำนำหน้า มันจะมี root URL เป็นคำนำหน้า \n  ถ้าคุณไม่ได้เพิ่ม extension ท่ีเป็น `.css`  หลัง `path`  extension \n  นั้นจะถูกเพิ่มให้ไฟล์โดยอัตโนมัติ\n\n``` js\n<%- css(path, ...) %>\n```\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- css('style.css') %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n\n<%- css(['style.css', 'screen.css']) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n// <link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\">\n```\n\n### js\n\nโหลดไฟล์ JavaScript  `path` นั้นเป็น array หรือ string ได้  ถ้า `path` \nนั้นไม่มี `/` หรือ protocol ใดๆ เป็นคำนำหน้า มันจะมี root URL เป็นคำนำหน้า \nถ้าคุณไม่ได้เพิ่ม extension ท่ีเป็น `.js`  หลัง `path`  extension \nนั้นจะถูกเพิ่มให้ไฟล์โดยอัตโนมัติ\n\n``` js\n<%- js(path, ...) %>\n```\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n\n<%- js(['script.js', 'gallery.js']) %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n// <script type=\"text/javascript\" src=\"/gallery.js\"></script>\n```\n\n### link_to\n\nเสียบลิงก์เข้า:\n\n``` js\n<%- link_to(path, [text], [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`external` | Opens the link in a new tab | false\n`class` | Class name |\n`id` | ID |\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- link_to('http://www.google.com') %>\n// <a href=\"http://www.google.com\" title=\"http://www.google.com\">http://www.google.com</a>\n\n<%- link_to('http://www.google.com', 'Google') %>\n// <a href=\"http://www.google.com\" title=\"Google\">Google</a>\n\n<%- link_to('http://www.google.com', 'Google', {external: true}) %>\n// <a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\">Google</a>\n```\n\n### mail_to\n\nเสียบลิงก์ของเมล์เข้า:\n\n``` js\n<%- mail_to(path, [text], [options]) %>\n```\n\nOption | Description\n--- | ---\n`class` | Class name\n`id` | ID\n`subject` | Mail subject\n`cc` | CC\n`bcc` | BCC\n`body` | Mail content\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- mail_to('a@abc.com') %>\n// <a href=\"mailto:a@abc.com\" title=\"a@abc.com\">a@abc.com</a>\n\n<%- mail_to('a@abc.com', 'Email') %>\n// <a href=\"mailto:a@abc.com\" title=\"Email\">Email</a>\n```\n\n### image_tag\n\nเสียบรูปภาพเข้า:\n\n``` js\n<%- image_tag(path, [options]) %>\n```\n\nOption | Description\n--- | ---\n`alt` | Alternative text of the image\n`class` | Class name\n`id` | ID\n`width` | Image width\n`height` | Image height\n\n### favicon_tag\n\nเสียบ favicon เข้า:\n\n\n``` js\n<%- favicon_tag(path) %>\n```\n\n### feed_tag\n\nเสียบลิงก์ฟีดเข้า:\n\n``` js\n<%- feed_tag(path, [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`title` | Feed title |\n`type` | Feed type | atom\n\n## Conditional Tags\n\n### is_current\n\nตรวจได้ว่า `path` นั้นเหมาะกับ URL ของเพจปัจจุบันหรือไม่  คุณใช้ตัวเลือก \n`strict` ไปเปิด strict matching ได้\n\n``` js\n<%- is_current(path, [strict]) %>\n```\n\n### is_home\n\nตรวจได้ว่าเพจปัจจุบันเป็นหน้าหลักหรือไม่ \n\n``` js\n<%- is_home() %>\n```\n\n### is_post\n\nตรวจได้ว่าเพจปัจจุบันเป็นโพสต์หรือไม่ \n\n``` js\n<%- is_post() %>\n```\n\n### is_archive\n\nตรวจได้ว่าเพจปัจจุบันเป็นเพจ archive หรือไม่ \n\n``` js\n<%- is_archive() %>\n```\n\n### is_year\n\nตรวจได้ว่าเพจปัจจุบันเป็นเพจ archive ต่อปีหรือไม่ \n\n``` js\n<%- is_year() %>\n```\n\n### is_month\n\nตรวจได้ว่าเพจปัจจุบันเป็นเพจ archive ต่อเดือนหรือไม่ \n\n``` js\n<%- is_month() %>\n```\n\n### is_category\n\nตรวจได้ว่าเพจปัจจุบันเป็นเพจ category หรือไม่ \nถ้า parameter นั้นเป็น string  จะตรวจได้ว่าเพจปัจจุบันอยู่ใน category \nนั้นหรือไม่\n\n``` js\n<%- is_category() %>\n<%- is_category('hobby') %>\n```\n\n### is_tag\n\nตรวจได้ว่าเพจปัจจุบันเป็นเพจแท็กหรือไม่ \nถ้า parameter นั้นเป็น string จะตรวจได้ว่าเพจปัจจุบันเหมาะกับแท็กนั้นหรือไม่\n\n\n``` js\n<%- is_tag() %>\n<%- is_tag('hobby') %>\n```\n\n## String Manipulation\n\n### trim\n\nลบ space ท่ีอยู่ข้่างต้นหรือระหว่างตัวอักษรต่างๆของ string\n\n``` js\n<%- trim(string) %>\n```\n\n### strip_html\n\nลบแท็ก HTML ทั้งหมดของ string\n\n``` js\n<%- strip_html(string) %>\n```\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- strip_html('It's not <b>important</b> anymore!') %>\n// It's not important anymore!\n```\n\n### titlecase\n\nเปลี่ยน string ไปเป็นตัวอักษรท่ีถูกต้อง\n\n``` js\n<%- titlecase(string) %>\n```\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- titlecase('this is an apple') %>\n# This is an Apple\n```\n\n### markdown\n\nrender string ด้วย Markdown\n\n``` js\n<%- markdown(str) %>\n```\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- markdown('make me **strong**') %>\n// make me <strong>strong</strong>\n```\n\n### render\n\nRenders a string.\n\n``` js\n<%- render(str, engine, [options]) %>\n```\n\n### word_wrap\n\nทุกบรรทัดของ text จะไม่ยาวเกิน  `length` ค่า  `length` นั้นจะเป็น 80 ตัวอักษร\n by default\n\n``` js\n<%- word_wrap(str, [length]) %>\n```\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- word_wrap('Once upon a time', 8) %>\n// Once upon\\n a time\n```\n\n### truncate\n\nตัด text ให้สั้นตามการตั้งค่าของ `length` การตั้งค่า `length` default \nเป็นตัวอักษร 30 ตัว\n\n``` js\n<%- truncate(text, [options]) %>\n```\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- truncate('Once upon a time in a world far far away', {length: 17}) %>\n// Once upon a ti...\n\n<%- truncate('Once upon a time in a world far far away', {length: 17, separator: ' '}) %>\n// Once upon a...\n\n<%- truncate('And they found that many people were sleeping better.', {length: 25, omission: '... (continued)'}) %>\n// And they f... (continued)\n```\n\n## Templates\n\n### partial\n\nโหลดไฟล์ template อื่นๆ คุณสามารถตั้งค่า local variable ใน `locals`\n\n``` js\n<%- partial(layout, [locals], [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`cache` | Cache contents (Use fragment cache) | `false`\n`only` | Strict local variables. Only use variables set in `locals` in templates. | `false`\n\n### fragment_cache\n\ncache เนื้อหาอยู่ใน fragment มันจะบันทึกเนื้อหาอยู่ใน fragment และ cache \nนั้นจะทำให้ request ท่ีเกี่ยวข้องนั้นมีการตอบรับเร็วขึ้น\n\n``` js\n<%- fragment_cache(id, fn);\n```\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}) %>\n```\n\n## Date & Time\n\n### date\n\nเสียบวันเดือนปีท่ีได้จัดรูปแบบแล้วเข้า: \n\n`date` นั้นจะเป็น unix time, ISO string, date object, หรือ [Moment.js] object\n ได้ `format` นั้นถูกตั้งค่าเป็น `date_format` อยู่แล้ว by default\n\n\n\n``` js\n<%- date(date, [format]) %>\n```\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- date(Date.now()) %>\n// 2013-01-01\n\n<%- date(Date.now(), 'YYYY/M/D') %>\n// Jan 1 2013\n```\n\n### date_xml\n\nเสียบวันเดือนปีเข้าในรูปแบบ XML :\n\n`date` นั้นจะเป็น unix time, ISO string, date object, หรือ [Moment.js] object\n ได้ \n\n``` js\n<%- date_xml(date) %>\n```\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- date_xml(Date.now()) %>\n// 2013-01-01T00:00:00.000Z\n```\n\n### time\n\nเสียบกาลเวลาท่ีได้จัดรูปแบบแล้วเข้า: \n\n`date` นั้นเป็น unix time, ISO string, date object, หรือ [Moment.js] object ได้\n`format` นั้นถูกตั้งค่าเป็น `time_format` อยู่แล้ว by default\n\n``` js\n<%- time(date, [format]) %>\n```\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- time(Date.now()) %>\n// 13:05:12\n\n<%- time(Date.now(), 'h:mm:ss a') %>\n// 1:05:12 pm\n```\n\n### full_date\n\nเสียบวันเดือนปีและกาลเวลาท่ีได้จัดรูปแบบแล้วเข้า:\n\n`date` นั้นเป็น unix time, ISO string, date object, หรือ [Moment.js] object ได้\n`format` นั้นถูกตั้งค่าเป็น `date_format + time_format` อยู่แล้ว by default\n\n\n``` js\n<%- full_date(date, [format]) %>\n```\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- full_date(new Date()) %>\n// Jan 1, 2013 0:00:00\n\n<%- full_date(new Date(), 'dddd, MMMM Do YYYY, h:mm:ss a') %>\n// Tuesday, January 1st 2013, 12:00:00 am\n```\n\n### moment\n\n[Moment.js] library.\n\n## List\n\n### list_categories\n\nเสียบรายชื่อของ category ทั้งหมดเข้า:\n\n``` js\n<%- list_categories([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of categories | name\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each category | true\n`style` | Style to display the category list. `list` displays categories in an unordered list.  | list\n`separator` | Separator between categories. (Only works if `style` is not `list`) | ,\n`depth` | Levels of categories to be displayed. `0` displays all categories and child categories; `-1` is similar to `0` but displayed in flat; `1` displays only top level categories. | 0\n`class` | Class name of category list. | category\n`transform` | The function that changes the display of category name. |\n`suffix` | Add a suffix to link. | None\n\n### list_tags\n\nเสียบรายชื่อของแท็กทั้งหมดเข้า:\n\n\n``` js\n<%- list_tags([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of categories | name\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each tag | true\n`style` | Style to display the tag list. `list` displays tags in an unordered list.  | list\n`separator` | Separator between categories. (Only works if `style` is not `list`) | ,\n`class` | Class name of tag list. | tag\n`transform` | The function that changes the display of tag name. |\n`amount` | The number of tags to display (0 = unlimited) | 0\n`suffix` | Add a suffix to link. | None\n\n### list_archives\n\nเสียบรายชื่อ archive เข้า:\n\n``` js\n<%- list_archives([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`type` | Type. This value can be `yearly` or `monthly`. | monthly\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each archive | true\n`format` | Date format | MMMM YYYY\n`style` | Style to display the archive list. `list` displays archives in an unordered list.  | list\n`separator` | Separator between archives. (Only works if `style` is not `list`) | ,\n`class` | Class name of archive list. | archive\n`transform` | The function that changes the display of archive name. |\n\n### list_posts\n\nเสียบรายชื่อโพสต์เข้า:\n\n``` js\n<%- list_posts([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of posts | date\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`style` | Style to display the post list. `list` displays posts in an unordered list.  | list\n`separator` | Separator between posts. (Only works if `style` is not `list`) | ,\n`class` | Class name of post list. | post\n`amount` | The number of posts to display (0 = unlimited) | 6\n`transform` | The function that changes the display of post name. |\n\n### tagcloud\n\nเสียบ tag cloud เข้า:\n\n``` js\n<%- tagcloud([tags], [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`min_font` | Minimal font size | 10\n`max_font` | Maximum font size | 20\n`unit` | Unit of font size | px\n`amount` | Total amount of tags | 40\n`orderby` | Order of tags | name\n`order` | Sort order. `1`, `sac` as ascending; `-1`, `desc` as descending | 1\n`color` | Colorizes the tag cloud | false\n`start_color` | Start color. You can use hex (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`) or [color keywords]. This option only works when `color` is true. |\n`end_color` | End color. You can use hex (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`) or [color keywords]. This option only works when `color` is true. |\n\n## Miscellaneous\n\n### paginator\n\nเสียบ paginator เข้า:\n\n``` js\n<%- paginator(options) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`base` | Base URL | /\n`format` | URL format | page/%d/\n`total` | The number of pages | 1\n`current` | Current page number | 0\n`prev_text` | The link text of previous page. Works only if `prev_next` is set to true. | Prev\n`next_text` | The link text of next page. Works only if `prev_next` is set to true. | Next\n`space` | The space text | &hellp;\n`prev_next` | Display previous and next links | true\n`end_size` | The number of pages displayed on the start and the end side | 1\n`mid_size` | The number of pages displayed between current page, but not including current page | 2\n`show_all` | Display all pages. If this is set true, `end_size` and `mid_size` will not works. | false\n\n### search_form\n\nเสียบฟอร์ม search ของ Google เข้า:\n\n``` js\n<%- search_form(options) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`class` | The class name of form | search-form\n`text` | Search hint word | Search\n`button` | Display search button. The value can be a boolean or a string. When the value is a string, it'll be the text of the button. | false\n\n### number_format\n\nจัดรูปแบบตัวเลข:\n\n``` js\n<%- number_format(number, [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`precision` | The precision of number. The value can be `false` or a nonnegative integer. | false\n`delimiter` | The thousands delimiter | ,\n`separator` | The separator between the fractional and integer digits. | .\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- number_format(12345.67, {precision: 1}) %>\n// 12,345.68\n\n<%- number_format(12345.67, {precision: 4}) %>\n// 12,345.6700\n\n<%- number_format(12345.67, {precision: 0}) %>\n// 12,345\n\n<%- number_format(12345.67, {delimiter: ''}) %>\n// 12345.67\n\n<%- number_format(12345.67, {separator: '/'}) %>\n// 12,345/67\n```\n\n### open_graph\n\nเสียบข้อมูล [Open Graph] เข้า:\n\n``` js\n<%- open_graph([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`title` | Page title (`og:title`) | `page.title`\n`type` | Page type (`og:type`) | blog\n`url` | Page URL (`og:url`) | `url`\n`image` | Page cover (`og:image`) | First image in the content\n`site_name` | Site name (`og:site_name`) | `config.title`\n`description` | Page description (`og:desription`) | Page excerpt or first 200 characters of the content\n`twitter_card` | Twitter card type (`twitter:card`) | summary\n`twitter_id` | Twitter ID (`twitter:creator`) |\n`twitter_site` | Twitter Site (`twitter:site`) |\n`google_plus` | Google+ profile link |\n`fb_admins` | Facebook admin ID |\n`fb_app_id` | Facebook App ID |\n\n### toc\n\nparse แท็ก heading (h1~h6) ในโพสต์และเสียบสารบัญเข้า:\n\n``` js\n<%- toc(str, [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`class` | Class name | toc\n`list_number` | Displays list number | true\n`max_depth` | Maximum heading depth of generated toc | 6\n\n**ยกตัวอย่างเช่น:**\n\n``` js\n<%- toc(page.content) %>\n```\n\n[color keywords]: http://www.w3.org/TR/css3-color/#svg-color\n[Moment.js]: http://momentjs.com/\n[Open Graph]: http://ogp.me/\n",
				"html": "<p>helper จะถูกใช้ใน template เพื่อช่วยเสียบ snippet ได้รวดเร็ว แต่ helper<br>นั้นไม่สามารถใช้ในไฟล์ source ได้ คุณสามารถ<a href=\"https://hexo.io/api/helper.html\">write your own custom helper</a><br>ได้ง่ายๆ หรือใช้ helper ท่ีเตรียมไว้ให้ได้</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/Uc53pW0GJHU\" frameborder=\"0\" allowfullscreen></iframe></div>\n<h2 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h2><h3 id=\"url-for\"><a href=\"#url-for\" class=\"headerlink\" title=\"url_for\"></a>url_for</h3><p>ส่งกลับ url ท่ีมี root path ตั้งขึ้นไว้  คุณต้องใช้ helper นี้แทน <code>config\n.root + path</code> ของ hexo 2.7</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- url_for(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"relative-url\"><a href=\"#relative-url\" class=\"headerlink\" title=\"relative_url\"></a>relative_url</h3><p>ส่งกลับ relative URL จาก <code>from</code> ไปเป็น <code>to</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- relative_url(<span class=\"keyword\">from</span>, to) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"gravatar\"><a href=\"#gravatar\" class=\"headerlink\" title=\"gravatar\"></a>gravatar</h3><p>เสียบรูปภาพ Gravatar เข้า:</p>\n<p>ถ้าคุณไม่ได้ป่งชี้ parameter ของ [options] ให้ชัดเจน จะมีการตั้งค่าให้  by<br>default  แล้วคุณก็สามารถตั้งค่า option ด้วยตนเอง ถ้าคุณตั้งค่านี้เป็น object<br>object นั้นจะถูกเปลี่ยนไปเป็น query string</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(email, [options]);</span><br></pre></td></tr></table></figure>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>, <span class=\"number\">40</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span> &#123;<span class=\"attr\">s</span>: <span class=\"number\">40</span>, <span class=\"attr\">d</span>: <span class=\"string\">'http://example.com/image.png'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&amp;d=http%3A%2F%2Fexample.com%2Fimage.png</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"HTML-Tags\"><a href=\"#HTML-Tags\" class=\"headerlink\" title=\"HTML Tags\"></a>HTML Tags</h2><h3 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h3><p>โหลดไฟล์ CSS  <code>path</code> นั้นเป็น array หรือ string ได้  ถ้า <code>path</code> นั้นไม่มี <code>/</code><br>  หรือ protocol ใดๆ เป็นคำนำหน้า มันจะมี root URL เป็นคำนำหน้า<br>  ถ้าคุณไม่ได้เพิ่ม extension ท่ีเป็น <code>.css</code>  หลัง <code>path</code>  extension<br>  นั้นจะถูกเพิ่มให้ไฟล์โดยอัตโนมัติ</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- css(<span class=\"string\">'style.css'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- css([<span class=\"string\">'style.css'</span>, <span class=\"string\">'screen.css'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\"&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h3><p>โหลดไฟล์ JavaScript  <code>path</code> นั้นเป็น array หรือ string ได้  ถ้า <code>path</code><br>นั้นไม่มี <code>/</code> หรือ protocol ใดๆ เป็นคำนำหน้า มันจะมี root URL เป็นคำนำหน้า<br>ถ้าคุณไม่ได้เพิ่ม extension ท่ีเป็น <code>.js</code>  หลัง <code>path</code>  extension<br>นั้นจะถูกเพิ่มให้ไฟล์โดยอัตโนมัติ</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(path, ...) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- js([<span class=\"string\">'script.js'</span>, <span class=\"string\">'gallery.js'</span>]) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/gallery.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"link-to\"><a href=\"#link-to\" class=\"headerlink\" title=\"link_to\"></a>link_to</h3><p>เสียบลิงก์เข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>external</code></td>\n<td>Opens the link in a new tab</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n<td></td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"http://www.google.com\"&gt;http://www.google.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\"&gt;Google&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>, &#123;<span class=\"attr\">external</span>: <span class=\"literal\">true</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\"&gt;Google&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"mail-to\"><a href=\"#mail-to\" class=\"headerlink\" title=\"mail_to\"></a>mail_to</h3><p>เสียบลิงก์ของเมล์เข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>subject</code></td>\n<td>Mail subject</td>\n</tr>\n<tr>\n<td><code>cc</code></td>\n<td>CC</td>\n</tr>\n<tr>\n<td><code>bcc</code></td>\n<td>BCC</td>\n</tr>\n<tr>\n<td><code>body</code></td>\n<td>Mail content</td>\n</tr>\n</tbody>\n</table>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"a@abc.com\"&gt;a@abc.com&lt;/a&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>, <span class=\"string\">'Email'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"Email\"&gt;Email&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"image-tag\"><a href=\"#image-tag\" class=\"headerlink\" title=\"image_tag\"></a>image_tag</h3><p>เสียบรูปภาพเข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- image_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>alt</code></td>\n<td>Alternative text of the image</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>width</code></td>\n<td>Image width</td>\n</tr>\n<tr>\n<td><code>height</code></td>\n<td>Image height</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"favicon-tag\"><a href=\"#favicon-tag\" class=\"headerlink\" title=\"favicon_tag\"></a>favicon_tag</h3><p>เสียบ favicon เข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- favicon_tag(path) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"feed-tag\"><a href=\"#feed-tag\" class=\"headerlink\" title=\"feed_tag\"></a>feed_tag</h3><p>เสียบลิงก์ฟีดเข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- feed_tag(path, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Feed title</td>\n<td></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Feed type</td>\n<td>atom</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Conditional-Tags\"><a href=\"#Conditional-Tags\" class=\"headerlink\" title=\"Conditional Tags\"></a>Conditional Tags</h2><h3 id=\"is-current\"><a href=\"#is-current\" class=\"headerlink\" title=\"is_current\"></a>is_current</h3><p>ตรวจได้ว่า <code>path</code> นั้นเหมาะกับ URL ของเพจปัจจุบันหรือไม่  คุณใช้ตัวเลือก<br><code>strict</code> ไปเปิด strict matching ได้</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_current(path, [strict]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-home\"><a href=\"#is-home\" class=\"headerlink\" title=\"is_home\"></a>is_home</h3><p>ตรวจได้ว่าเพจปัจจุบันเป็นหน้าหลักหรือไม่ </p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_home() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-post\"><a href=\"#is-post\" class=\"headerlink\" title=\"is_post\"></a>is_post</h3><p>ตรวจได้ว่าเพจปัจจุบันเป็นโพสต์หรือไม่ </p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_post() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-archive\"><a href=\"#is-archive\" class=\"headerlink\" title=\"is_archive\"></a>is_archive</h3><p>ตรวจได้ว่าเพจปัจจุบันเป็นเพจ archive หรือไม่ </p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_archive() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-year\"><a href=\"#is-year\" class=\"headerlink\" title=\"is_year\"></a>is_year</h3><p>ตรวจได้ว่าเพจปัจจุบันเป็นเพจ archive ต่อปีหรือไม่ </p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_year() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-month\"><a href=\"#is-month\" class=\"headerlink\" title=\"is_month\"></a>is_month</h3><p>ตรวจได้ว่าเพจปัจจุบันเป็นเพจ archive ต่อเดือนหรือไม่ </p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_month() %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-category\"><a href=\"#is-category\" class=\"headerlink\" title=\"is_category\"></a>is_category</h3><p>ตรวจได้ว่าเพจปัจจุบันเป็นเพจ category หรือไม่<br>ถ้า parameter นั้นเป็น string  จะตรวจได้ว่าเพจปัจจุบันอยู่ใน category<br>นั้นหรือไม่</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_category() %&gt;</span><br><span class=\"line\">&lt;%- is_category(<span class=\"string\">'hobby'</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"is-tag\"><a href=\"#is-tag\" class=\"headerlink\" title=\"is_tag\"></a>is_tag</h3><p>ตรวจได้ว่าเพจปัจจุบันเป็นเพจแท็กหรือไม่<br>ถ้า parameter นั้นเป็น string จะตรวจได้ว่าเพจปัจจุบันเหมาะกับแท็กนั้นหรือไม่</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- is_tag() %&gt;</span><br><span class=\"line\">&lt;%- is_tag(<span class=\"string\">'hobby'</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"String-Manipulation\"><a href=\"#String-Manipulation\" class=\"headerlink\" title=\"String Manipulation\"></a>String Manipulation</h2><h3 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\"trim\"></a>trim</h3><p>ลบ space ท่ีอยู่ข้่างต้นหรือระหว่างตัวอักษรต่างๆของ string</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- trim(string) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"strip-html\"><a href=\"#strip-html\" class=\"headerlink\" title=\"strip_html\"></a>strip_html</h3><p>ลบแท็ก HTML ทั้งหมดของ string</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- strip_html(<span class=\"string\">'It'</span>s not &lt;b&gt;important&lt;<span class=\"regexp\">/b&gt; anymore!') %&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ It's not important anymore!</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"titlecase\"><a href=\"#titlecase\" class=\"headerlink\" title=\"titlecase\"></a>titlecase</h3><p>เปลี่ยน string ไปเป็นตัวอักษรท่ีถูกต้อง</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(string) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- titlecase(<span class=\"string\">'this is an apple'</span>) %&gt;</span><br><span class=\"line\"># This is an Apple</span><br></pre></td></tr></table></figure>\n<h3 id=\"markdown\"><a href=\"#markdown\" class=\"headerlink\" title=\"markdown\"></a>markdown</h3><p>render string ด้วย Markdown</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(str) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- markdown(<span class=\"string\">'make me **strong**'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// make me &lt;strong&gt;strong&lt;/strong&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h3><p>Renders a string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- render(str, engine, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"word-wrap\"><a href=\"#word-wrap\" class=\"headerlink\" title=\"word_wrap\"></a>word_wrap</h3><p>ทุกบรรทัดของ text จะไม่ยาวเกิน  <code>length</code> ค่า  <code>length</code> นั้นจะเป็น 80 ตัวอักษร<br> by default</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(str, [length]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- word_wrap(<span class=\"string\">'Once upon a time'</span>, <span class=\"number\">8</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon\\n a time</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"truncate\"><a href=\"#truncate\" class=\"headerlink\" title=\"truncate\"></a>truncate</h3><p>ตัด text ให้สั้นตามการตั้งค่าของ <code>length</code> การตั้งค่า <code>length</code> default<br>เป็นตัวอักษร 30 ตัว</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(text, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon a ti...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>, <span class=\"attr\">separator</span>: <span class=\"string\">' '</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Once upon a...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- truncate(<span class=\"string\">'And they found that many people were sleeping better.'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">25</span>, <span class=\"attr\">omission</span>: <span class=\"string\">'... (continued)'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// And they f... (continued)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Templates\"><a href=\"#Templates\" class=\"headerlink\" title=\"Templates\"></a>Templates</h2><h3 id=\"partial\"><a href=\"#partial\" class=\"headerlink\" title=\"partial\"></a>partial</h3><p>โหลดไฟล์ template อื่นๆ คุณสามารถตั้งค่า local variable ใน <code>locals</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(layout, [locals], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cache</code></td>\n<td>Cache contents (Use fragment cache)</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>only</code></td>\n<td>Strict local variables. Only use variables set in <code>locals</code> in templates.</td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fragment-cache\"><a href=\"#fragment-cache\" class=\"headerlink\" title=\"fragment_cache\"></a>fragment_cache</h3><p>cache เนื้อหาอยู่ใน fragment มันจะบันทึกเนื้อหาอยู่ใน fragment และ cache<br>นั้นจะทำให้ request ท่ีเกี่ยวข้องนั้นมีการตอบรับเร็วขึ้น</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(id, fn);</span><br></pre></td></tr></table></figure>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;) %&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Date-amp-Time\"><a href=\"#Date-amp-Time\" class=\"headerlink\" title=\"Date &amp; Time\"></a>Date &amp; Time</h2><h3 id=\"date\"><a href=\"#date\" class=\"headerlink\" title=\"date\"></a>date</h3><p>เสียบวันเดือนปีท่ีได้จัดรูปแบบแล้วเข้า: </p>\n<p><code>date</code> นั้นจะเป็น unix time, ISO string, date object, หรือ <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object<br> ได้ <code>format</code> นั้นถูกตั้งค่าเป็น <code>date_format</code> อยู่แล้ว by default</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'YYYY/M/D'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1 2013</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"date-xml\"><a href=\"#date-xml\" class=\"headerlink\" title=\"date_xml\"></a>date_xml</h3><p>เสียบวันเดือนปีเข้าในรูปแบบ XML :</p>\n<p><code>date</code> นั้นจะเป็น unix time, ISO string, date object, หรือ <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object<br> ได้ </p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(date) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- date_xml(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 2013-01-01T00:00:00.000Z</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"time\"><a href=\"#time\" class=\"headerlink\" title=\"time\"></a>time</h3><p>เสียบกาลเวลาท่ีได้จัดรูปแบบแล้วเข้า: </p>\n<p><code>date</code> นั้นเป็น unix time, ISO string, date object, หรือ <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object ได้<br><code>format</code> นั้นถูกตั้งค่าเป็น <code>time_format</code> อยู่แล้ว by default</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 13:05:12</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 1:05:12 pm</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"full-date\"><a href=\"#full-date\" class=\"headerlink\" title=\"full_date\"></a>full_date</h3><p>เสียบวันเดือนปีและกาลเวลาท่ีได้จัดรูปแบบแล้วเข้า:</p>\n<p><code>date</code> นั้นเป็น unix time, ISO string, date object, หรือ <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> object ได้<br><code>format</code> นั้นถูกตั้งค่าเป็น <code>date_format + time_format</code> อยู่แล้ว by default</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(date, [format]) %&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Jan 1, 2013 0:00:00</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(), <span class=\"string\">'dddd, MMMM Do YYYY, h:mm:ss a'</span>) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// Tuesday, January 1st 2013, 12:00:00 am</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"moment\"><a href=\"#moment\" class=\"headerlink\" title=\"moment\"></a>moment</h3><p><a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js</a> library.</p>\n<h2 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h2><h3 id=\"list-categories\"><a href=\"#list-categories\" class=\"headerlink\" title=\"list_categories\"></a>list_categories</h3><p>เสียบรายชื่อของ category ทั้งหมดเข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_categories([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of categories</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Display the number of posts for each category</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the category list. <code>list</code> displays categories in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between categories. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>depth</code></td>\n<td>Levels of categories to be displayed. <code>0</code> displays all categories and child categories; <code>-1</code> is similar to <code>0</code> but displayed in flat; <code>1</code> displays only top level categories.</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of category list.</td>\n<td>category</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of category name.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>Add a suffix to link.</td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-tags\"><a href=\"#list-tags\" class=\"headerlink\" title=\"list_tags\"></a>list_tags</h3><p>เสียบรายชื่อของแท็กทั้งหมดเข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_tags([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of categories</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Display the number of posts for each tag</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the tag list. <code>list</code> displays tags in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between categories. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of tag list.</td>\n<td>tag</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of tag name.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>The number of tags to display (0 = unlimited)</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>Add a suffix to link.</td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-archives\"><a href=\"#list-archives\" class=\"headerlink\" title=\"list_archives\"></a>list_archives</h3><p>เสียบรายชื่อ archive เข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_archives([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>type</code></td>\n<td>Type. This value can be <code>yearly</code> or <code>monthly</code>.</td>\n<td>monthly</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Display the number of posts for each archive</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>Date format</td>\n<td>MMMM YYYY</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the archive list. <code>list</code> displays archives in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between archives. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of archive list.</td>\n<td>archive</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of archive name.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-posts\"><a href=\"#list-posts\" class=\"headerlink\" title=\"list_posts\"></a>list_posts</h3><p>เสียบรายชื่อโพสต์เข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- list_posts([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of posts</td>\n<td>date</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the post list. <code>list</code> displays posts in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between posts. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of post list.</td>\n<td>post</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>The number of posts to display (0 = unlimited)</td>\n<td>6</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of post name.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tagcloud\"><a href=\"#tagcloud\" class=\"headerlink\" title=\"tagcloud\"></a>tagcloud</h3><p>เสียบ tag cloud เข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- tagcloud([tags], [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>min_font</code></td>\n<td>Minimal font size</td>\n<td>10</td>\n</tr>\n<tr>\n<td><code>max_font</code></td>\n<td>Maximum font size</td>\n<td>20</td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td>Unit of font size</td>\n<td>px</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>Total amount of tags</td>\n<td>40</td>\n</tr>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of tags</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort order. <code>1</code>, <code>sac</code> as ascending; <code>-1</code>, <code>desc</code> as descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>Colorizes the tag cloud</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>start_color</code></td>\n<td>Start color. You can use hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) or <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">color keywords</a>. This option only works when <code>color</code> is true.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>end_color</code></td>\n<td>End color. You can use hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) or <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"noopener\">color keywords</a>. This option only works when <code>color</code> is true.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Miscellaneous\"><a href=\"#Miscellaneous\" class=\"headerlink\" title=\"Miscellaneous\"></a>Miscellaneous</h2><h3 id=\"paginator\"><a href=\"#paginator\" class=\"headerlink\" title=\"paginator\"></a>paginator</h3><p>เสียบ paginator เข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- paginator(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>base</code></td>\n<td>Base URL</td>\n<td>/</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>URL format</td>\n<td>page/%d/</td>\n</tr>\n<tr>\n<td><code>total</code></td>\n<td>The number of pages</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>current</code></td>\n<td>Current page number</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>prev_text</code></td>\n<td>The link text of previous page. Works only if <code>prev_next</code> is set to true.</td>\n<td>Prev</td>\n</tr>\n<tr>\n<td><code>next_text</code></td>\n<td>The link text of next page. Works only if <code>prev_next</code> is set to true.</td>\n<td>Next</td>\n</tr>\n<tr>\n<td><code>space</code></td>\n<td>The space text</td>\n<td>&hellp;</td>\n</tr>\n<tr>\n<td><code>prev_next</code></td>\n<td>Display previous and next links</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>end_size</code></td>\n<td>The number of pages displayed on the start and the end side</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>mid_size</code></td>\n<td>The number of pages displayed between current page, but not including current page</td>\n<td>2</td>\n</tr>\n<tr>\n<td><code>show_all</code></td>\n<td>Display all pages. If this is set true, <code>end_size</code> and <code>mid_size</code> will not works.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"search-form\"><a href=\"#search-form\" class=\"headerlink\" title=\"search_form\"></a>search_form</h3><p>เสียบฟอร์ม search ของ Google เข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- search_form(options) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>The class name of form</td>\n<td>search-form</td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>Search hint word</td>\n<td>Search</td>\n</tr>\n<tr>\n<td><code>button</code></td>\n<td>Display search button. The value can be a boolean or a string. When the value is a string, it’ll be the text of the button.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"number-format\"><a href=\"#number-format\" class=\"headerlink\" title=\"number_format\"></a>number_format</h3><p>จัดรูปแบบตัวเลข:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(number, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>precision</code></td>\n<td>The precision of number. The value can be <code>false</code> or a nonnegative integer.</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>delimiter</code></td>\n<td>The thousands delimiter</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>The separator between the fractional and integer digits.</td>\n<td>.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">1</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.68</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">4</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345.6700</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">0</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">delimiter</span>: <span class=\"string\">''</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12345.67</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">separator</span>: <span class=\"string\">'/'</span>&#125;) %&gt;</span><br><span class=\"line\"><span class=\"comment\">// 12,345/67</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"open-graph\"><a href=\"#open-graph\" class=\"headerlink\" title=\"open_graph\"></a>open_graph</h3><p>เสียบข้อมูล <a href=\"http://ogp.me/\" target=\"_blank\" rel=\"noopener\">Open Graph</a> เข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- open_graph([options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Page title (<code>og:title</code>)</td>\n<td><code>page.title</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Page type (<code>og:type</code>)</td>\n<td>blog</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>Page URL (<code>og:url</code>)</td>\n<td><code>url</code></td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>Page cover (<code>og:image</code>)</td>\n<td>First image in the content</td>\n</tr>\n<tr>\n<td><code>site_name</code></td>\n<td>Site name (<code>og:site_name</code>)</td>\n<td><code>config.title</code></td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>Page description (<code>og:desription</code>)</td>\n<td>Page excerpt or first 200 characters of the content</td>\n</tr>\n<tr>\n<td><code>twitter_card</code></td>\n<td>Twitter card type (<code>twitter:card</code>)</td>\n<td>summary</td>\n</tr>\n<tr>\n<td><code>twitter_id</code></td>\n<td>Twitter ID (<code>twitter:creator</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>twitter_site</code></td>\n<td>Twitter Site (<code>twitter:site</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>google_plus</code></td>\n<td>Google+ profile link</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_admins</code></td>\n<td>Facebook admin ID</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_app_id</code></td>\n<td>Facebook App ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"toc\"><a href=\"#toc\" class=\"headerlink\" title=\"toc\"></a>toc</h3><p>parse แท็ก heading (h1~h6) ในโพสต์และเสียบสารบัญเข้า:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(str, [options]) %&gt;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n<td>toc</td>\n</tr>\n<tr>\n<td><code>list_number</code></td>\n<td>Displays list number</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>max_depth</code></td>\n<td>Maximum heading depth of generated toc</td>\n<td>6</td>\n</tr>\n</tbody>\n</table>\n<p><strong>ยกตัวอย่างเช่น:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- toc(page.content) %&gt;</span><br></pre></td></tr></table></figure>\n",
				"image": null,
				"featured": 0,
				"page": 1,
				"status": "draft",
				"language": "",
				"meta_title": null,
				"meta_description": null,
				"author_id": 2,
				"created_at": 1546941759000,
				"created_by": 2,
				"updated_at": 1546941759000,
				"updated_by": 2,
				"published_at": 1546941759000,
				"published_by": 2
			}
		],
		"tags": [],
		"posts_tags": [],
		"categories": [],
		"posts_categories": [],
		"users": [
			{
				"id": 2,
				"slug": "W0ng.Unic0rn",
				"name": "W0ng.Unic0rn",
				"email": "admin@admin.com"
			}
		],
		"role_users": [
			{
				"user_id": 2,
				"role_id": 3
			}
		]
	}
}